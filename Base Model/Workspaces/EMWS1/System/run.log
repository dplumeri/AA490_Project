NOTE: PROCEDURE PRINTTO used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

Traverser: Traverser invoked.  MPCONNECT command is !sascmdv -nosyntaxcheck -noasynchio -noobjectserver. 
Traverser: Beginning flow traversal 
17153      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17154      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17155      put '<Node Id="Ids4" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids4" Event="Run" Pid="22600" Gridid=""/>';
17156      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      

17157      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Ids4 : Beginning update before running 
* datetime : 19NOV2019:15:55:43 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Ids4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17159      %let _HPDMGRIDHOST=;
17160      %let _HPDMGRIDINSTALLLOC=;
17161      %let _HPDMGRIDDATASERVER=;
17162      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Ids4 : End update 
* datetime : 19NOV2019:15:55:43 
* 
*------------------------------------------------------------* 
17163      %em_getactionstatus(emlib =EMWS1, nodeid=Ids4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17164      %let em_Train = N;
17165      %let em_Score = N;
17166      %let em_Report = N;
17167      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Ids4" has already run. 
Node "Ids4" succeeded. 
17168      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17169      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17170      put '<Node Id="Ids4" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Ids4" Event="Complete" Pid="22600" Gridid=""/>';
17171      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.03 seconds
      

Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "PART4" 
Traverser: WaitingNode "CNTRL3" 
Traverser: WaitingNode "NEURAL2" 
Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
17172      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17173      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17174      put '<Node Id="Stat7" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Stat7" Event="Run" Pid="22600" Gridid=""/>';
17175      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

17176      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Stat7 : Beginning update before running 
* datetime : 19NOV2019:15:55:44 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Stat7_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids4_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Stat7\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17197      %let _HPDMGRIDHOST=;
17198      %let _HPDMGRIDINSTALLLOC=;
17199      %let _HPDMGRIDDATASERVER=;
17200      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Stat7 : End update 
* datetime : 19NOV2019:15:55:44 
* 
*------------------------------------------------------------* 
17201      %em_getactionstatus(emlib =EMWS1, nodeid=Stat7);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17202      %let em_filemodtime=;
17203      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17204      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17205      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17206      where fileref eq "#LN00141";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00141";
17207      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17208      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00141';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

17209      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17210      %let em_Train = N;
17211      %let em_Score = N;
17212      %let em_Report = N;
17213      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Stat7" has already run. 
Node "Stat7" succeeded. 
17214      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17215      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17216      put '<Node Id="Stat7" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Stat7" Event="Complete" Pid="22600" Gridid=""/>';
17217      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
      

Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "CNTRL3" 
Traverser: WaitingNode "NEURAL2" 
Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
17218      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17219      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17220      put '<Node Id="Part4" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part4" Event="Run" Pid="22600" Gridid=""/>';
17221      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

17222      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Part4 : Beginning update before running 
* datetime : 19NOV2019:15:55:45 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Part4_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat7_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "DOCUMENT" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Part4\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17241      %let _HPDMGRIDHOST=;
17242      %let _HPDMGRIDINSTALLLOC=;
17243      %let _HPDMGRIDDATASERVER=;
17244      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Part4 : End update 
* datetime : 19NOV2019:15:55:45 
* 
*------------------------------------------------------------* 
17245      %em_getactionstatus(emlib =EMWS1, nodeid=Part4);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17246      %let em_Train = N;
17247      %let em_Score = N;
17248      %let em_Report = N;
17249      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Part4" has already run. 
Node "Part4" succeeded. 
17250      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17251      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17252      put '<Node Id="Part4" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Part4" Event="Complete" Pid="22600" Gridid=""/>';
17253      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

Traverser: WaitingNode "REG2" 
Traverser: WaitingNode "TREE3" 
Traverser: WaitingNode "BOOST2" 
Traverser: WaitingNode "NEURAL2" 
Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
Node "CNTRL3" succeeded. 
17254      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17255      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17256      put '<Node Id="CNTRL3" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="CNTRL3" Event="Complete" Pid="22600" Gridid=""/>';
17257      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
17258      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17259      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17260      put '<Node Id="Neural2" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Neural2" Event="Run" Pid="22600" Gridid=""/>';
17261      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 54.
      The maximum record length was 54.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

17262      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Neural2 : Beginning update before running 
* datetime : 19NOV2019:15:55:46 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Neural2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part4_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Neural2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17282      %let _HPDMGRIDHOST=;
17283      %let _HPDMGRIDINSTALLLOC=;
17284      %let _HPDMGRIDDATASERVER=;
17285      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Neural2 : End update 
* datetime : 19NOV2019:15:55:46 
* 
*------------------------------------------------------------* 
17286      %em_getactionstatus(emlib =EMWS1, nodeid=Neural2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17287      %let em_Train = N;
17288      %let em_Score = N;
17289      %let em_Report = N;
17290      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Neural2" has already run. 
Node "Neural2" succeeded. 
17291      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17292      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17293      put '<Node Id="Neural2" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Neural2" Event="Complete" Pid="22600" Gridid=""/>';
17294      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 59.
      The maximum record length was 59.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
traverser_readyNode_note 
traverser_readyNode_note 
17295      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17296      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17297      put '<Node Id="Reg2" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg2" Event="Run" Pid="22600" Gridid=""/>';
17298      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 51.
      The maximum record length was 51.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
      

17299      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Reg2 : Beginning update before running 
* datetime : 19NOV2019:15:55:47 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Reg2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part4_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Reg2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17319      %let _HPDMGRIDHOST=;
17320      %let _HPDMGRIDINSTALLLOC=;
17321      %let _HPDMGRIDDATASERVER=;
17322      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Reg2 : End update 
* datetime : 19NOV2019:15:55:47 
* 
*------------------------------------------------------------* 
17323      %em_getactionstatus(emlib =EMWS1, nodeid=Reg2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17324      %let em_Train = N;
17325      %let em_Score = N;
17326      %let em_Report = N;
17327      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

Node "Reg2" has already run. 
Node "Reg2" succeeded. 
17328      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17329      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17330      put '<Node Id="Reg2" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Reg2" Event="Complete" Pid="22600" Gridid=""/>';
17331      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 56.
      The maximum record length was 56.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
traverser_readyNode_note 
17332      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17333      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17334      put '<Node Id="Tree3" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree3" Event="Run" Pid="22600" Gridid=""/>';
17335      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 52.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
      

17336      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Tree3 : Beginning update before running 
* datetime : 19NOV2019:15:55:48 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Tree3_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part4_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree3: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Base Model';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Base Model';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Tree3: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Sum_Labor_Force_Pop(label="Sum_Labor_Force_Pop");
MPRINT(EM_DECDATA):   length Sum_Labor_Force_Pop 8 ;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=225000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=25077000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=12651000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
17729      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
17730      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
17731      TARGET="Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   TARGET="Sum_Labor_Force_Pop";
17732      DECDATA="EMWS1.Ids4_Sum_Labor_Force__DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids4_Sum_Labor_Force__DD";
17733      DECMETA="EMWS1.Ids4_Sum_Labor_Force__DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids4_Sum_Labor_Force__DM";
17734      output;
MPRINT(EM_DIAGRAM):   output;
17735      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17736      %let emexceptionString =;
17737      %let EMEXCEPTIONSTRING=;
17738      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17739      * UPDATE: Tree3;
MPRINT(EM_DIAGRAM):   * UPDATE: Tree3;
17740      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17741      %let EM_ACTION = UPDATE;
17742      %let syscc = 0;
17743      %macro main;
17744      
17745        %if %upcase(&EM_ACTION) = CREATE %then %do;
17746          filename temp catalog 'sashelp.emmodl.tree_create.source';
17747          %include temp;
17748          filename temp;
17749      
17750          %em_tree_create;
17751        %end;
17752      
17753         %else
17754         %if %upcase(&EM_ACTION) = TRAIN %then %do;
17755      
17756             filename temp catalog 'sashelp.emmodl.tree_train.source';
17757             %include temp;
17758             filename temp;
17759             %em_tree_train;
17760         %end;
17761      
17762        %else
17763        %if %upcase(&EM_ACTION) = SCORE %then %do;
17764          filename temp catalog 'sashelp.emmodl.tree_score.source';
17765          %include temp;
17766          filename temp;
17767      
17768          %em_tree_score;
17769      
17770        %end;
17771      
17772        %else
17773        %if %upcase(&EM_ACTION) = REPORT %then %do;
17774      
17775             filename temp catalog 'sashelp.emmodl.tree_report.source';
17776             %include temp;
17777             filename temp;
17778      
17779             %em_tree_report;
17780         %end;
17781      
17782        %else
17783        %if %upcase(&EM_ACTION) = OPENINT %then %do;
17784      
17785             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17786             %include temp;
17787             filename temp;
17788             %EM_TREE_OPENTREEVIEWER;
17789      
17790         %end;
17791      
17792        %else
17793        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
17794      
17795             filename temp catalog 'sashelp.emmodl.tree_actions.source';
17796             %include temp;
17797             filename temp;
17798             %EM_TREE_CLOSETREEVIEWER;
17799      
17800         %end;
17801      
17802      
17803         %doendm:
17804      %mend main;
17805      
17806      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(EM_DIAGRAM):  ;
17807      
17808      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17809      * End UPDATE: Tree3;
MPRINT(EM_DIAGRAM):   * End UPDATE: Tree3;
17810      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

17811      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree3\PROPERTIES.xml' encoding="UTF-8" NOBOM;
17813      %let _HPDMGRIDHOST=;
17814      %let _HPDMGRIDINSTALLLOC=;
17815      %let _HPDMGRIDDATASERVER=;
17816      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Tree3 : End update 
* datetime : 19NOV2019:15:55:48 
* 
*------------------------------------------------------------* 
17817      %em_getactionstatus(emlib =EMWS1, nodeid=Tree3);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

17818      %let em_filemodtime=;
17819      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
17820      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
17821      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
17822      where fileref eq "#LN00242";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00242";
17823      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
17824      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00242';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

17825      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
17826      %let em_Train = N;
17827      %let em_Score = N;
17828      %let em_Report = N;
17829      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Tree3" has already run. 
Node "Tree3" succeeded. 
17830      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17831      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17832      put '<Node Id="Tree3" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Tree3" Event="Complete" Pid="22600" Gridid=""/>';
17833      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 57.
      The maximum record length was 57.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "CNTRL4" 
Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
17834      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
17835      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
17836      put '<Node Id="Boost2" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost2" Event="Run" Pid="22600" Gridid=""/>';
17837      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 53.
      The maximum record length was 53.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

17838      %let emloopmode =;
*------------------------------------------------------------* 
* 
* Boost2 : Beginning update before running 
* datetime : 19NOV2019:15:55:49 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.Boost2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT;
MPRINT(EM_DIAGRAM):   set EMWS1.Part4_exportSet ;
MPRINT(EM_DIAGRAM):   PORT = '';
MPRINT(EM_DIAGRAM):   USE = '';
MPRINT(EM_DIAGRAM):   where role in( "RAW" "TRAIN" "VALIDATE" "TEST" "SCORE" "TRANSACTION" "DOCUMENT" "RULES" "REPORTFIT" "RANK" "SCOREDIST" "ESTIMATE" "TREE" "CLUSSTAT" "CLUSMEAN" "VARMAP" ) and EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Base Model';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Base Model';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost2: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Sum_Labor_Force_Pop(label="Sum_Labor_Force_Pop");
MPRINT(EM_DECDATA):   length Sum_Labor_Force_Pop 8 ;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=225000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=25077000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=12651000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids4_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
18173      data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):    data EM_TARGETDECINFO;
18174      length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
18175      TARGET="Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   TARGET="Sum_Labor_Force_Pop";
18176      DECDATA="EMWS1.Ids4_Sum_Labor_Force__DD";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids4_Sum_Labor_Force__DD";
18177      DECMETA="EMWS1.Ids4_Sum_Labor_Force__DM";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids4_Sum_Labor_Force__DM";
18178      output;
MPRINT(EM_DIAGRAM):   output;
18179      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.EM_TARGETDECINFO has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

18180      %let emexceptionString =;
18181      %let EMEXCEPTIONSTRING=;
18182      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18183      * UPDATE: Boost2;
MPRINT(EM_DIAGRAM):   * UPDATE: Boost2;
18184      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18185      %let EM_ACTION = UPDATE;
18186      %let syscc = 0;
18187      %macro main;
18188      
18189        filename temp catalog 'sashelp.emmodl.boost_macros.source';
18190        %include temp;
18191        filename temp;
18192      
18193        %setProperties;
18194      
18195        %if %upcase(&EM_ACTION) = CREATE %then %do;
18196          filename temp catalog 'sashelp.emmodl.boost_create.source';
18197          %include temp;
18198          filename temp;
18199      
18200          %create;
18201        %end;
18202      
18203         %else
18204         %if %upcase(&EM_ACTION) = TRAIN %then %do;
18205      
18206             filename temp catalog 'sashelp.emmodl.boost_train.source';
18207             %include temp;
18208             filename temp;
18209             %train;
18210         %end;
18211      
18212        %else
18213        %if %upcase(&EM_ACTION) = SCORE %then %do;
18214          filename temp catalog 'sashelp.emmodl.boost_score.source';
18215          %include temp;
18216          filename temp;
18217      
18218          %score;
18219      
18220        %end;
18221      
18222        %else
18223        %if %upcase(&EM_ACTION) = REPORT %then %do;
18224      
18225             filename temp catalog 'sashelp.emmodl.boost_report.source';
18226             %include temp;
18227             filename temp;
18228      
18229             %report;
18230         %end;
18231      
18232         %doendm:
18233      %mend main;
18234      
18235      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
18236     +
18237     +%macro SetProperties;
18238     +
18239     +     /* boost options */
18240     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
18241     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
18242     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
18243     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
18244     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
18245     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
18246     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
18247     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
18248     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
18249     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
18250     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
18251     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
18252     +
18253     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
18254     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
18255     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
18256     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
18257     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
18258     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
18259     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
18260     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
18261     +
18262     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
18263     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
18264     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
18265     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
18266     +
18267     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
18268     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
18269     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
18270     +
18271     +%mend SetProperties;
18272     +
18273     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End UPDATE: Boost2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
18274      
18275      *------------------------------------------------------------*;
18276      * End UPDATE: Boost2;
18277      *------------------------------------------------------------*;

18278      %em_delMacro;
MPRINT(EM_DIAGRAM):   
MPRINT(EM_DIAGRAM):  ;

MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Boost2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18280      %let _HPDMGRIDHOST=;
18281      %let _HPDMGRIDINSTALLLOC=;
18282      %let _HPDMGRIDDATASERVER=;
18283      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* Boost2 : End update 
* datetime : 19NOV2019:15:55:49 
* 
*------------------------------------------------------------* 
18284      %em_getactionstatus(emlib =EMWS1, nodeid=Boost2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18285      %let em_filemodtime=;
18286      data _null_;
MPRINT(EM_GETACTIONSTATUS):   data _null_;
18287      format modate best.;
MPRINT(EM_GETACTIONSTATUS):   format modate best.;
18288      set sashelp.Vextfl;
MPRINT(EM_GETACTIONSTATUS):   set sashelp.Vextfl;
18289      where fileref eq "#LN00271";
MPRINT(EM_GETACTIONSTATUS):   where fileref eq "#LN00271";
18290      call symput('EM_FILEMODTIME', put(modate, best.));
MPRINT(EM_GETACTIONSTATUS):   call symput('EM_FILEMODTIME', put(modate, best.));
18291      run;
MPRINT(EM_GETACTIONSTATUS):   run;

NOTE: There were 1 observations read from the data set SASHELP.VEXTFL.
      WHERE fileref='#LN00271';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

18292      %symdel em_filemodtime;
WARNING: Attempt to delete macro variable EM_FILEMODTIME failed. Variable not found.
18293      %let em_Train = N;
18294      %let em_Score = N;
18295      %let em_Report = N;
18296      %let em_Run = N;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):     
MPRINT(EM_DIAGRAM):  ;

Node "Boost2" has already run. 
Node "Boost2" succeeded. 
18297      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18298      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18299      put '<Node Id="Boost2" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="Boost2" Event="Complete" Pid="22600" Gridid=""/>';
18300      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

Traverser: WaitingNode "MDLCOMP2" 
Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
Node "CNTRL4" succeeded. 
18301      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18302      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18303      put '<Node Id="CNTRL4" Event="Complete" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="CNTRL4" Event="Complete" Pid="22600" Gridid=""/>';
18304      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 58.
      The maximum record length was 58.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
      

Traverser: WaitingNode "SCORE5" 
traverser_readyNode_note 
18305      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
18306      file emwipmsg;
MPRINT(EM_DIAGRAM):   file emwipmsg;
18307      put '<Node Id="MdlComp2" Event="Run" Pid="22600" Gridid=""/>';
MPRINT(EM_DIAGRAM):   put '<Node Id="MdlComp2" Event="Run" Pid="22600" Gridid=""/>';
18308      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file EMWIPMSG is:
      Local Host Name=830-5CG9310VLM,
      Local Host IP addr=fe80::5138:e67e:d937:38d%7,
      Peer Hostname Name=830-5CG9310VLM,
      Peer IP addr=127.0.0.1,Peer Name=N/A,
      Peer Portno=57136,Lrecl=32767,Recfm=Variable

NOTE: 1 record was written to the file EMWIPMSG.
      The minimum record length was 55.
      The maximum record length was 55.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

18309      %let emloopmode =;
*------------------------------------------------------------* 
* 
* MdlComp2 : Beginning update before running 
* datetime : 19NOV2019:15:55:51 
* 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):     data WORK.MdlComp2_FILTERSET;
MPRINT(EM_DIAGRAM):   length PORT $32 USE $1;
MPRINT(EM_DIAGRAM):   DROP DELTACODE APPLYDELTA APPLYSCORE IMPORTPORT export needupdate;
MPRINT(EM_DIAGRAM):   set EMWS1.Reg2_exportSet EMWS1.Tree3_exportSet EMWS1.Boost2_exportSet EMWS1.Neural2_exportSet ;
MPRINT(EM_DIAGRAM):   where EXPORT = 'Y' ;
MPRINT(EM_DIAGRAM):   drop export needupdate;
MPRINT(EM_DIAGRAM):   port = upcase(trim(NODELABEL)!!'_'!!left(NODEPORT));
MPRINT(EM_DIAGRAM):   if port = upcase("REG2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("REG2_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("TREE3_TREE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("BOOST2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("NEURAL2_TRAIN") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("NEURAL2_VALIDATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else if port = upcase("NEURAL2_ESTIMATE") then USE="Y";
MPRINT(EM_DIAGRAM):   else USE="Y";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sql;
MPRINT(EM_DIAGRAM):   create view work._base2ZD_2YT as select * from WORK.M2DR17MO order by PORT;
MPRINT(EM_DIAGRAM):   create view work._comp2ZD_2YT as select * from WORK.M1BNAQAP order by PORT;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    proc compare data=work._base2ZD_2YT compare=work._comp2ZD_2YT out=WORK._DIFF23W_NB_ noprint outnoequal outbase outcomp outdiff;
MPRINT(EM_DIAGRAM):   id PORT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp2\PROPERTIES.xml' encoding="UTF-8" NOBOM;
18356      %let _HPDMGRIDHOST=;
18357      %let _HPDMGRIDINSTALLLOC=;
18358      %let _HPDMGRIDDATASERVER=;
18359      %hpdm_gridSetOPtions;
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_GRIDSETOPTIONS):   data _null_;
MPRINT(HPDM_GRIDSETOPTIONS):   length optionString string $2000;
MPRINT(HPDM_GRIDSETOPTIONS):   optionString = reverse(getoption('SET'));
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDHOST'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   host = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDHOST', strip(host));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDINSTALLLOC'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   install = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDINSTALLLOC', strip(install));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   index = index(optionString, reverse('GRIDDATASERVER'));
MPRINT(HPDM_GRIDSETOPTIONS):   if index then do;
MPRINT(HPDM_GRIDSETOPTIONS):   string = reverse(substr(optionString, 1, index-4));
MPRINT(HPDM_GRIDSETOPTIONS):   server = '"'!!strip(tranwrd(scan(string, 1, ']'), '"', ''))!!'"';
MPRINT(HPDM_GRIDSETOPTIONS):   call symput('_HPDMGRIDDATASERVER', strip(server));
MPRINT(HPDM_GRIDSETOPTIONS):   end;
MPRINT(HPDM_GRIDSETOPTIONS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):  ;

*------------------------------------------------------------* 
* 
* MdlComp2 : End update 
* datetime : 19NOV2019:15:55:51 
* 
*------------------------------------------------------------* 
18360      %em_getactionstatus(emlib =EMWS1, nodeid=MdlComp2);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;

18361      %let em_Train = Y;
18362      %let em_Report = Y;
18363      %let em_Score = Y;
18364      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETACTIONSTATUS):   
MPRINT(EM_DIAGRAM):  ;

18365      %let emloopmode =;
18366      %let emloopnumber =0;
18367      %let emloopId =MdlComp2;
*------------------------------------------------------------* 
* 
* MdlComp2 : Running 
* datetime : 19NOV2019:15:55:51 
* 
*------------------------------------------------------------* 
18368      %let SYSCC =0;
18369      %let EMGROUPMODE =;
18370      %let EMGROUPID =;
MPRINT(EM_DIAGRAM):      filename temp catalog 'sashelp.emutil.em_vardist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_classdist.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checksetinit.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_checkerror.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odsliston.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_odslistoff.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_getvarname.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    filename L21718BK "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto log=L21718BK new;
MPRINT(EM_DIAGRAM):   run;
