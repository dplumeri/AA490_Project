*------------------------------------------------------------*
User:                student
Date:                November 19, 2019
Time:                15:56:00
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:55:55" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 19, 2019
Time:                15:55:55
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2ZJZO5G "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2ZJZO5G new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:55:55" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:55:55" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
29740      proc freq data=EMWS1.Score5_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Score5_VariableSet noprint;
29741      table ROLE*LEVEL/out=WORK.Score5META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Score5META;
29742      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.SCORE5_VARIABLESET.
NOTE: The data set WORK.SCORE5META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
29743      proc print data=WORK.Score5META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Score5META label noobs;
29744      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
29745      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
29746      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
29747      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
29748      run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE5META.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29749      title10;
MPRINT(EM_DIAGRAM):   title10;
29750      %let groupid =;
29751      %let endGroupid =;
29752      %let prescoreid =;
29753      %let idsTable =;
29754      %let hpdmTable =;
29755      %let lasthptm =;
29756      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
29757      set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
29758      where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
29759      select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
29760      when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
29761      when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
29762      when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
29763      when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
29764      when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
29765      otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
29766      end;
MPRINT(EM_DIAGRAM):   end;
29767      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29768      %let lastModelid =;
29769      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
29770      set EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_EMINFO;
29771      where upcase(key) = 'MODEL' and TARGET = "Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   where upcase(key) = 'MODEL' and TARGET = "Sum_Labor_Force_Pop";
29772      call symput('lastModelID', DATA);
MPRINT(EM_DIAGRAM):   call symput('lastModelID', DATA);
29773      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (UPCASE(key)='MODEL') and (TARGET='Sum_Labor_Force_Pop');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (TARGET='Sum_Labor_Force_Pop') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO406EGLNV has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS1.NEURAL2_EMINFO.
      WHERE (TARGET='Sum_Labor_Force_Pop') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO42K7AXRH has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
29774      %let em_rootkey=;
29775      %let em_keytype=;
29776      %let em_keylen=;
29777      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
29778      set EMWS1.Ids4_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids4_cmeta_data;
29779      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
29780      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
29781      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
29782      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
29783      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.IDS4_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:55:56" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 19, 2019
Time:                15:55:56
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O03WVQ4W "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O03WVQ4W new;
MPRINT(EM_DIAGRAM):   run;
29885      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29886      *------------------------------------------------------------*;
29887      * Score5: Scoring DATA data;
29888      *------------------------------------------------------------*;
29889      data EMWS1.Score5_TRAIN
29890      / view=EMWS1.Score5_TRAIN
29891      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score5_TRAIN / view=EMWS1.Score5_TRAIN ;
29892      set EMWS1.MdlComp2_TRAIN
29893      ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp2_TRAIN ;
29894      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMFLOWSCORE.sas.
29895     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29896     +* Score5: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score5: Creating Fixed Names;
29897     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29898     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
29899     +EM_SEGMENT = b_Population_in_th;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Population_in_th;
29900     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
29901     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
29902     +LABEL = 'Target Variable: Sum_Labor_Force_Pop';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Sum_Labor_Force_Pop';
29903     +EM_VALUETARGET = Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
29904      run;
 
NOTE: DATA STEP view saved on file EMWS1.SCORE5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
29905      quit;
29906      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
29907      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29908      *------------------------------------------------------------*;
29909      * Score5: Scoring VALIDATE data;
29910      *------------------------------------------------------------*;
29911      data EMWS1.Score5_VALIDATE
29912      / view=EMWS1.Score5_VALIDATE
29913      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Score5_VALIDATE / view=EMWS1.Score5_VALIDATE ;
29914      set EMWS1.MdlComp2_VALIDATE
29915      ;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp2_VALIDATE ;
29916      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMFLOWSCORE.sas.
29917     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29918     +* Score5: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score5: Creating Fixed Names;
29919     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29920     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
29921     +EM_SEGMENT = b_Population_in_th;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Population_in_th;
29922     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
29923     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
29924     +LABEL = 'Target Variable: Sum_Labor_Force_Pop';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Sum_Labor_Force_Pop';
29925     +EM_VALUETARGET = Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
29926      run;
 
NOTE: DATA STEP view saved on file EMWS1.SCORE5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
29927      quit;
29928      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
29929      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29930      * Score5: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score5: Creating Publish Score Variables Table;
29931      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29932      proc sort data=EMWS1.MdlComp2_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp2_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
29933      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29934      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.MDLCOMP2_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29935      proc sort data=EMWS1.Ids4_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids4_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
29936      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29937      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.IDS4_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29938      data EMWS1.Score5_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score5_EMINPUTVARS;
29939      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
29940      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29941      length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
29942      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
29943         "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
29944         "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
29945      if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
29946      if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
29947      if upcase(NAME) = "DATE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DATE" then HIDE = "N";
29948      if upcase(NAME) = "GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "GENDER" then HIDE = "N";
29949      if upcase(NAME) = "INDUSTRY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "INDUSTRY" then HIDE = "N";
29950      if upcase(NAME) = "P_POPULATION_IN_THOUSANDS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_POPULATION_IN_THOUSANDS" then HIDE = "N";
29951      if upcase(NAME) = "P_SUM_LABOR_FORCE_POP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_SUM_LABOR_FORCE_POP" then HIDE = "N";
29952      if upcase(NAME) = "POPULATION_IN_THOUSANDS" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "POPULATION_IN_THOUSANDS" then delete;
29953      if upcase(NAME) = "R_POPULATION_IN_THOUSANDS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_POPULATION_IN_THOUSANDS" then HIDE = "N";
29954      if upcase(NAME) = "R_SUM_LABOR_FORCE_POP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_SUM_LABOR_FORCE_POP" then HIDE = "N";
29955      if upcase(NAME) = "SUM_LABOR_FORCE_POP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SUM_LABOR_FORCE_POP" then HIDE = "N";
29956      if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
29957      if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
29958      if upcase(NAME) = "B_POPULATION_IN_TH" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_POPULATION_IN_TH" then HIDE = "N";
29959      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 13 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS1.SCORE5_EMINPUTVARS has 11 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
29960      proc sort data=EMWS1.Score5_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score5_EMINPUTVARS nodupkey;
29961      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29962      where CREATOR='' or (NAME="SUM_LABOR_FORCE_POP" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="SUM_LABOR_FORCE_POP" and CREATOR='');
29963      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.SCORE5_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='SUM_LABOR_FORCE_POP') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS1.SCORE5_EMINPUTVARS has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29964      %let em_rootkey=;
29965      %let em_keytype=;
29966      %let em_keylen=;
29967      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
29968      set EMWS1.Ids4_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids4_cmeta_data;
29969      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
29970      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
29971      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
29972      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
29973      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.IDS4_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29974      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMPUBLISHSCORE.sas";
29975      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
29976      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
29977      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMPUBLISHSCORE.sas.
29978     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29979     +* Score5: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score5: Creating Fixed Names;
29980     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29981     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
29982     +EM_SEGMENT = b_Population_in_th;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Population_in_th;
29983     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
29984     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
29985      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29986      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
29987      quit;
29988      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
29989      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
29990      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
29991      retain ID 1 Node "Score5";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score5";
29992      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
29993      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29994      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
29995      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29996      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29997      proc sort data=EMWS1.MdlComp2_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp2_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
29998      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29999      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.MDLCOMP2_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30000      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
30001      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
30002      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
30003      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30004      proc contents data=EMWS1.Score5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Score5_train out=_meta(keep=NAME) noprint;
30005      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 17 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
30006      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
30007      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30008      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 17 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30009      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
30010      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
30011      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30012      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 17 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 17 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30013      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
30014      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
30015      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30016      proc append base=EMWS1.Score5_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score5_FCMP data=_tempx;
30017      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE5_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS1.SCORE5_FCMP has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30018      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp2\EMFLOWSCORE.sas";
30019      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
30020      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
30021      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp2\EMFLOWSCORE.sas.
30022     +if (P_Population_in_thousands ge 73345.5958813221) then do;
MPRINT(EM_DIAGRAM):   if (P_Population_in_thousands ge 73345.5958813221) then do;
30023     +b_Population_in_th = 1;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 1;
30024     +end;
MPRINT(EM_DIAGRAM):   end;
30025     +else
30026     +if (P_Population_in_thousands ge 63549.9703592953) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 63549.9703592953) then do;
30027     +b_Population_in_th = 2;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 2;
30028     +end;
MPRINT(EM_DIAGRAM):   end;
30029     +else
30030     +if (P_Population_in_thousands ge 59513.896483804) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 59513.896483804) then do;
30031     +b_Population_in_th = 3;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 3;
30032     +end;
MPRINT(EM_DIAGRAM):   end;
30033     +else
30034     +if (P_Population_in_thousands ge 56139.4932157775) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 56139.4932157775) then do;
30035     +b_Population_in_th = 4;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 4;
30036     +end;
MPRINT(EM_DIAGRAM):   end;
30037     +else
30038     +if (P_Population_in_thousands ge 54199.6523007248) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 54199.6523007248) then do;
30039     +b_Population_in_th = 5;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 5;
30040     +end;
MPRINT(EM_DIAGRAM):   end;
30041     +else
30042     +if (P_Population_in_thousands ge 51699.0387624403) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 51699.0387624403) then do;
30043     +b_Population_in_th = 6;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 6;
30044     +end;
MPRINT(EM_DIAGRAM):   end;
30045     +else
30046     +if (P_Population_in_thousands ge 46484.7601404305) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 46484.7601404305) then do;
30047     +b_Population_in_th = 7;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 7;
30048     +end;
MPRINT(EM_DIAGRAM):   end;
30049     +else
30050     +if (P_Population_in_thousands ge 43279.4996245372) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 43279.4996245372) then do;
30051     +b_Population_in_th = 8;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 8;
30052     +end;
MPRINT(EM_DIAGRAM):   end;
30053     +else
30054     +if (P_Population_in_thousands ge 41442.7961529277) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 41442.7961529277) then do;
30055     +b_Population_in_th = 9;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 9;
30056     +end;
MPRINT(EM_DIAGRAM):   end;
30057     +else
30058     +if (P_Population_in_thousands ge 38995.5279012171) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 38995.5279012171) then do;
30059     +b_Population_in_th = 10;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 10;
30060     +end;
MPRINT(EM_DIAGRAM):   end;
30061     +else
30062     +if (P_Population_in_thousands ge 36482.2536953926) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 36482.2536953926) then do;
30063     +b_Population_in_th = 11;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 11;
30064     +end;
MPRINT(EM_DIAGRAM):   end;
30065     +else
30066     +if (P_Population_in_thousands ge 29154.4120203551) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 29154.4120203551) then do;
30067     +b_Population_in_th = 12;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 12;
30068     +end;
MPRINT(EM_DIAGRAM):   end;
30069     +else
30070     +if (P_Population_in_thousands ge 28724.0283181155) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 28724.0283181155) then do;
30071     +b_Population_in_th = 13;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 13;
30072     +end;
MPRINT(EM_DIAGRAM):   end;
30073     +else
30074     +if (P_Population_in_thousands ge 24354.96245556) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 24354.96245556) then do;
30075     +b_Population_in_th = 14;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 14;
30076     +end;
MPRINT(EM_DIAGRAM):   end;
30077     +else
30078     +if (P_Population_in_thousands ge 23953.9530595373) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 23953.9530595373) then do;
30079     +b_Population_in_th = 15;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 15;
30080     +end;
MPRINT(EM_DIAGRAM):   end;
30081     +else
30082     +if (P_Population_in_thousands ge 22102.788540459) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 22102.788540459) then do;
30083     +b_Population_in_th = 16;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 16;
30084     +end;
MPRINT(EM_DIAGRAM):   end;
30085     +else
30086     +if (P_Population_in_thousands ge 9424.27590782892) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 9424.27590782892) then do;
30087     +b_Population_in_th = 17;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 17;
30088     +end;
MPRINT(EM_DIAGRAM):   end;
30089     +else
30090     +if (P_Population_in_thousands ge 8267.9987442528) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 8267.9987442528) then do;
30091     +b_Population_in_th = 18;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 18;
30092     +end;
MPRINT(EM_DIAGRAM):   end;
30093     +else
30094     +if (P_Population_in_thousands ge 3751.11686117438) then do;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 3751.11686117438) then do;
30095     +b_Population_in_th = 19;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 19;
30096     +end;
MPRINT(EM_DIAGRAM):   end;
30097     +else
30098     +do;
MPRINT(EM_DIAGRAM):   else do;
30099     +b_Population_in_th = 20;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 20;
30100     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
30101      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
30102      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
30103      quit;
30104      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
30105      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
30106      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
30107      retain ID 2 Node "MdlComp2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp2";
30108      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
30109      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30110      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
30111      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30112      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30113      proc sort data=EMWS1.Neural2_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Neural2_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
30114      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30115      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 12 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30116      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
30117      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
30118      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
30119      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 12 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30120      proc contents data=EMWS1.MdlComp2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp2_train out=_meta(keep=NAME) noprint;
30121      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 13 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
30122      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
30123      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30124      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 13 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30125      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
30126      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
30127      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30128      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 13 observations read from the data set WORK._META.
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30129      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
30130      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1 rows and 5 columns.
 
30131      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30132      proc append base=EMWS1.Score5_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score5_FCMP data=_tempx;
30133      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE5_FCMP.
NOTE: There were 1 observations read from the data set WORK._TEMPX.
NOTE: 1 observations added.
NOTE: The data set EMWS1.SCORE5_FCMP has 3 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30134      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas";
30135      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
30136      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
30137      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Neural2\EMPUBLISHSCORE.sas.
30138     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
30139     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
30140     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
30141     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
30142     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
30143     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
30144     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
30145     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
30146     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
30147     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
30148     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
30149     +LENGTH _WARN_ $4
30150     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
30151     +      label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
MPRINT(EM_DIAGRAM):   label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
30152     +
30153     +      label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
30154     +
30155     +      label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
30156     +
30157     +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
30158     +
30159     +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
30160     +
30161     +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
30162     +
30163     +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
30164     +
30165     +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
30166     +
30167     +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
30168     +
30169     +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
30170     +
30171     +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
30172     +
30173     +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
30174     +
30175     +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
30176     +
30177     +      label Date2010 = 'Dummy: Date=2010' ;
MPRINT(EM_DIAGRAM):   label Date2010 = 'Dummy: Date=2010' ;
30178     +
30179     +      label Date2011 = 'Dummy: Date=2011' ;
MPRINT(EM_DIAGRAM):   label Date2011 = 'Dummy: Date=2011' ;
30180     +
30181     +      label Date2012 = 'Dummy: Date=2012' ;
MPRINT(EM_DIAGRAM):   label Date2012 = 'Dummy: Date=2012' ;
30182     +
30183     +      label Genderboth_sexes = 'Dummy: Gender=both sexes' ;
MPRINT(EM_DIAGRAM):   label Genderboth_sexes = 'Dummy: Gender=both sexes' ;
30184     +
30185     +      label Genderfemale = 'Dummy: Gender=female' ;
MPRINT(EM_DIAGRAM):   label Genderfemale = 'Dummy: Gender=female' ;
30186     +
30187     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
30188     +
30189     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
30190     +
30191     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
30192     +
30193     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
30194     +
30195     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
30196     +
30197     +      label P_Population_in_thousands = 'Predicted: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label P_Population_in_thousands = 'Predicted: Population_in_thousands' ;
30198     +
30199     +      label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
30200     +
30201     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
30202     +
30203     +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
30204     +drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
MPRINT(EM_DIAGRAM):   drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
30205     +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
30206     +   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
30207     +   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
30208     +   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
30209     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
30210     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
30211     +end;
MPRINT(EM_DIAGRAM):   end;
30212     +else do;
MPRINT(EM_DIAGRAM):   else do;
30213     +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
30214     +   %DMNORMCP( Age_group , _dm19 )
MPRINT(EM_DIAGRAM):   /*-------------------------------------------------------------- * * name: dmnormcp.sas * update: 03Sep2002 * reference: * purpose: normalize category levels for EM scoring code *
--------------------------------------------------------------*/
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   if _dm19 = '65+' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   end;
30215     +   if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25 TO 44' then do;
30216     +      Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
30217     +      Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 1;
30218     +      Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
30219     +   end;
MPRINT(EM_DIAGRAM):   end;
30220     +   else if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
30221     +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
30222     +      Age_group25_to_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
30223     +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 1;
30224     +   end;
MPRINT(EM_DIAGRAM):   end;
30225     +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
30226     +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 1;
30227     +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
30228     +      Age_group45_to_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
30229     +   end;
MPRINT(EM_DIAGRAM):   end;
30230     +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else do;
30231     +      Age_group16_to_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
30232     +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
30233     +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
30234     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
30235     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
30236     +      Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   end;
30237     +      Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   end;
30238     +      Age_group45_to_64 = .;
30239     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
30240     +      _DM_BAD = 1;
30241     +   end;
MPRINT(EM_DIAGRAM):   drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 Date2010 Date2011 Date2012 ;
30242     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
30243     +
MPRINT(EM_DIAGRAM):   Date2000 = 0;
30244     +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
30245     +drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007
MPRINT(EM_DIAGRAM):   Date2002 = 0;
30246     +        Date2008 Date2009 Date2010 Date2011 Date2012 ;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
30247     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
30248     +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
30249     +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
30250     +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
30251     +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
30252     +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
30253     +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2010 = 0;
30254     +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2011 = 0;
30255     +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2012 = 0;
30256     +Date2008 = 0;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
30257     +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = .;
30258     +Date2010 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = .;
30259     +Date2011 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = .;
30260     +Date2012 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = .;
30261     +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   Date2004 = .;
30262     +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
30263     +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
30264     +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
30265     +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
30266     +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
30267     +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
30268     +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
30269     +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
30270     +   Date2008 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
30271     +   Date2009 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
30272     +   Date2010 = .;
MPRINT(EM_DIAGRAM):   end;
30273     +   Date2011 = .;
MPRINT(EM_DIAGRAM):   else do;
30274     +   Date2012 = .;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
30275     +   substr(_warn_,1,1) = 'M';
30276     +   _DM_BAD = 1;
30277     +end;
30278     +else do;
30279     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
30280     +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
30281     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
30282     +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30283     +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   end;
30284     +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   else do;
30285     +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
30286     +               Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
30287     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30288     +            end;
MPRINT(EM_DIAGRAM):   end;
30289     +            else do;
MPRINT(EM_DIAGRAM):   end;
30290     +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   end;
30291     +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   else do;
30292     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
30293     +               end;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
30294     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30295     +         end;
MPRINT(EM_DIAGRAM):   end;
30296     +         else do;
MPRINT(EM_DIAGRAM):   else do;
30297     +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
30298     +               Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
30299     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30300     +            end;
MPRINT(EM_DIAGRAM):   end;
30301     +            else do;
MPRINT(EM_DIAGRAM):   end;
30302     +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   end;
30303     +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   end;
30304     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
30305     +               end;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
30306     +            end;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
30307     +         end;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
30308     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30309     +      else do;
MPRINT(EM_DIAGRAM):   end;
30310     +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   else do;
30311     +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
30312     +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
30313     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30314     +            end;
MPRINT(EM_DIAGRAM):   end;
30315     +            else do;
MPRINT(EM_DIAGRAM):   end;
30316     +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   end;
30317     +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   else do;
30318     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
30319     +               end;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
30320     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30321     +         end;
MPRINT(EM_DIAGRAM):   end;
30322     +         else do;
MPRINT(EM_DIAGRAM):   end;
30323     +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   end;
30324     +               Date2006 = 1;
MPRINT(EM_DIAGRAM):   end;
30325     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
30326     +            end;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
30327     +         end;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
30328     +      end;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
30329     +   end;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
30330     +   else do;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30331     +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   end;
30332     +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   else do;
30333     +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
30334     +               Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
30335     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30336     +            end;
MPRINT(EM_DIAGRAM):   end;
30337     +            else do;
MPRINT(EM_DIAGRAM):   end;
30338     +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   end;
30339     +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   else do;
30340     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
30341     +               end;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
30342     +            end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30343     +         end;
MPRINT(EM_DIAGRAM):   end;
30344     +         else do;
MPRINT(EM_DIAGRAM):   else do;
30345     +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
30346     +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2010 = 1;
30347     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30348     +            end;
MPRINT(EM_DIAGRAM):   end;
30349     +            else do;
MPRINT(EM_DIAGRAM):   end;
30350     +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   end;
30351     +                  Date2010 = 1;
MPRINT(EM_DIAGRAM):   end;
30352     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   else do;
30353     +               end;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
30354     +            end;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
30355     +         end;
MPRINT(EM_DIAGRAM):   Date2011 = 1;
30356     +      end;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30357     +      else do;
MPRINT(EM_DIAGRAM):   end;
30358     +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   else do;
30359     +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
30360     +               Date2011 = 1;
MPRINT(EM_DIAGRAM):   Date2012 = 1;
30361     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30362     +            end;
MPRINT(EM_DIAGRAM):   end;
30363     +            else do;
MPRINT(EM_DIAGRAM):   end;
30364     +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   end;
30365     +                  Date2012 = 1;
MPRINT(EM_DIAGRAM):   else do;
30366     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
30367     +               end;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
30368     +            end;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
30369     +         end;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
30370     +         else do;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
30371     +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
30372     +               Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
30373     +               Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
30374     +               Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
30375     +               Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
30376     +               Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
30377     +               Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2010 = -1;
30378     +               Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2011 = -1;
30379     +               Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2012 = -1;
30380     +               Date2008 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
30381     +               Date2009 = -1;
MPRINT(EM_DIAGRAM):   end;
30382     +               Date2010 = -1;
MPRINT(EM_DIAGRAM):   end;
30383     +               Date2011 = -1;
MPRINT(EM_DIAGRAM):   end;
30384     +               Date2012 = -1;
MPRINT(EM_DIAGRAM):   end;
30385     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
30386     +            end;
MPRINT(EM_DIAGRAM):   Date2000 = .;
30387     +         end;
MPRINT(EM_DIAGRAM):   Date2001 = .;
30388     +      end;
MPRINT(EM_DIAGRAM):   Date2002 = .;
30389     +   end;
MPRINT(EM_DIAGRAM):   Date2003 = .;
30390     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Date2004 = .;
30391     +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
30392     +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
30393     +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
30394     +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
30395     +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
30396     +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
30397     +      Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
30398     +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
30399     +      Date2008 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
30400     +      Date2009 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
30401     +      Date2010 = .;
MPRINT(EM_DIAGRAM):   end;
30402     +      Date2011 = .;
MPRINT(EM_DIAGRAM):   end;
30403     +      Date2012 = .;
30404     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
30405     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop Genderboth_sexes Genderfemale ;
30406     +   end;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
30407     +end;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = .;
30408     +
MPRINT(EM_DIAGRAM):   Genderfemale = .;
30409     +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
30410     +drop Genderboth_sexes Genderfemale ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
30411     +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   end;
30412     +   Genderboth_sexes = .;
MPRINT(EM_DIAGRAM):   else do;
30413     +   Genderfemale = .;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
30414     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
30415     +   _DM_BAD = 1;
30416     +end;
30417     +else do;
30418     +   length _dm10 $ 10; drop _dm10 ;
30419     +   _dm10 = put( Gender , $CHAR10. );
30420     +   %DMNORMIP( _dm10 )
MPRINT(EM_DIAGRAM):   /*-------------------------------------------------------------- * * * name: dmnormip.sas * update: 03Sep2002 * reference: * purpose: normalize category levels for EM scoring code *
--------------------------------------------------------------*/
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = 0;
MPRINT(EM_DIAGRAM):   Genderfemale = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
30421     +   if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = -1;
30422     +      Genderboth_sexes = 0;
MPRINT(EM_DIAGRAM):   Genderfemale = -1;
30423     +      Genderfemale = 1;
MPRINT(EM_DIAGRAM):   end;
30424     +   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BOTH SEXES' then do;
30425     +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = 1;
30426     +      Genderboth_sexes = -1;
MPRINT(EM_DIAGRAM):   Genderfemale = 0;
30427     +      Genderfemale = -1;
MPRINT(EM_DIAGRAM):   end;
30428     +   end;
MPRINT(EM_DIAGRAM):   else do;
30429     +   else if _dm10 = 'BOTH SEXES'  then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = .;
30430     +      Genderboth_sexes = 1;
MPRINT(EM_DIAGRAM):   Genderfemale = .;
30431     +      Genderfemale = 0;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
30432     +   end;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
30433     +   else do;
MPRINT(EM_DIAGRAM):   end;
30434     +      Genderboth_sexes = .;
MPRINT(EM_DIAGRAM):   end;
30435     +      Genderfemale = .;
MPRINT(EM_DIAGRAM):   *** *************************;
30436     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
30437     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   *** *************************;
30438     +   end;
MPRINT(EM_DIAGRAM):   *** *************************;
30439     +end;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
30440     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
30441     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
30442     +*** *************************;
30443     +*** *************************;
30444     +*** Writing the Node H1 ;
30445     +*** *************************;
30446     +IF _DM_BAD EQ 0 THEN DO;
30447     +   H11  =     2.80451581665555 * Age_group16_to_24  +     2.66257618857886 *
30448     +        Age_group25_to_44  +     2.27428042621142 * Age_group45_to_64
30449     +          +     0.47125292322736 * Date2000  +     0.23311851428843 * Date2001
30450     +          +     0.54902464433691 * Date2002  +    -0.15346735222469 * Date2003
30451     +          +     0.46944685861628 * Date2004  +     0.37604954513678 * Date2005
MPRINT(EM_DIAGRAM):   H11 = 2.80451581665555 * Age_group16_to_24 + 2.66257618857886 * Age_group25_to_44 + 2.27428042621142 * Age_group45_to_64 + 0.47125292322736 * Date2000 + 0.23311851428843 * Date2001 + 0.54902464433691 * Date2002 + -0.15346735222469 *
Date2003 + 0.46944685861628 * Date2004 + 0.37604954513678 * Date2005 + 0.39061416762273 * Date2006 + -0.24695161265506 * Date2007 + -0.0940988910836 * Date2008 + 0.0228204870683 * Date2009 + 0.61252140974112 * Date2010 + 0.16504723185446 * Date2011 +
0.23086005632781 * Date2012 + -0.5597343477957 * Genderboth_sexes + -0.52754157640117 * Genderfemale ;
30452     +          +     0.39061416762273 * Date2006  +    -0.24695161265506 * Date2007
30453     +          +     -0.0940988910836 * Date2008  +      0.0228204870683 * Date2009
30454     +          +     0.61252140974112 * Date2010  +     0.16504723185446 * Date2011
30455     +          +     0.23086005632781 * Date2012  +     -0.5597343477957 *
30456     +        Genderboth_sexes  +    -0.52754157640117 * Genderfemale ;
30457     +   H12  =    -6.52971491740447 * Age_group16_to_24  +     0.28569861827114 *
30458     +        Age_group25_to_44  +    -0.00982281623129 * Age_group45_to_64
30459     +          +    -0.30625236358766 * Date2000  +    -1.21137798020402 * Date2001
30460     +          +    -1.51645564020364 * Date2002  +     0.86299496720353 * Date2003
30461     +          +    -0.93498774344571 * Date2004  +      0.6242111488688 * Date2005
MPRINT(EM_DIAGRAM):   H12 = -6.52971491740447 * Age_group16_to_24 + 0.28569861827114 * Age_group25_to_44 + -0.00982281623129 * Age_group45_to_64 + -0.30625236358766 * Date2000 + -1.21137798020402 * Date2001 + -1.51645564020364 * Date2002 +
0.86299496720353 * Date2003 + -0.93498774344571 * Date2004 + 0.6242111488688 * Date2005 + -2.36836348342809 * Date2006 + 1.12449399595682 * Date2007 + 1.85047727439571 * Date2008 + 1.70776212926759 * Date2009 + -1.41962995460536 * Date2010 +
1.62083296703886 * Date2011 + 1.4873652063756 * Date2012 + -0.03519221005738 * Genderboth_sexes + -2.3955157311532 * Genderfemale ;
30462     +          +    -2.36836348342809 * Date2006  +     1.12449399595682 * Date2007
30463     +          +     1.85047727439571 * Date2008  +     1.70776212926759 * Date2009
30464     +          +    -1.41962995460536 * Date2010  +     1.62083296703886 * Date2011
30465     +          +      1.4873652063756 * Date2012  +    -0.03519221005738 *
30466     +        Genderboth_sexes  +     -2.3955157311532 * Genderfemale ;
30467     +   H13  =     7.06158999344795 * Age_group16_to_24  +     0.57048096601117 *
30468     +        Age_group25_to_44  +     2.63895819015121 * Age_group45_to_64
30469     +          +    -0.16828253491725 * Date2000  +    -1.28332184684902 * Date2001
30470     +          +     0.50133567355546 * Date2002  +    -0.77559399613047 * Date2003
30471     +          +     0.78813284182853 * Date2004  +     0.41238962207276 * Date2005
MPRINT(EM_DIAGRAM):   H13 = 7.06158999344795 * Age_group16_to_24 + 0.57048096601117 * Age_group25_to_44 + 2.63895819015121 * Age_group45_to_64 + -0.16828253491725 * Date2000 + -1.28332184684902 * Date2001 + 0.50133567355546 * Date2002 + -0.77559399613047
* Date2003 + 0.78813284182853 * Date2004 + 0.41238962207276 * Date2005 + -0.5968396858171 * Date2006 + -0.66033245840418 * Date2007 + -1.37018067368506 * Date2008 + 0.08381409125405 * Date2009 + -0.75540384347548 * Date2010 + -0.02835506626351 * Date2011
+ -0.49849084530149 * Date2012 + 1.13117701174471 * Genderboth_sexes + 1.64736127034363 * Genderfemale ;
30472     +          +     -0.5968396858171 * Date2006  +    -0.66033245840418 * Date2007
30473     +          +    -1.37018067368506 * Date2008  +     0.08381409125405 * Date2009
30474     +          +    -0.75540384347548 * Date2010  +    -0.02835506626351 * Date2011
30475     +          +    -0.49849084530149 * Date2012  +     1.13117701174471 *
30476     +        Genderboth_sexes  +     1.64736127034363 * Genderfemale ;
30477     +   H14  =      3.4630872113265 * Age_group16_to_24  +     4.47136694021352 *
30478     +        Age_group25_to_44  +     2.72605263191296 * Age_group45_to_64
30479     +          +     0.74703333016594 * Date2000  +     0.56768441734246 * Date2001
30480     +          +      1.1194903343746 * Date2002  +     0.35057468036228 * Date2003
30481     +          +     0.81946953762189 * Date2004  +     0.72110714351831 * Date2005
MPRINT(EM_DIAGRAM):   H14 = 3.4630872113265 * Age_group16_to_24 + 4.47136694021352 * Age_group25_to_44 + 2.72605263191296 * Age_group45_to_64 + 0.74703333016594 * Date2000 + 0.56768441734246 * Date2001 + 1.1194903343746 * Date2002 + 0.35057468036228 *
Date2003 + 0.81946953762189 * Date2004 + 0.72110714351831 * Date2005 + 0.88434900503026 * Date2006 + -0.06920733547316 * Date2007 + -0.15761719875234 * Date2008 + 0.58373614901827 * Date2009 + 0.52761282361936 * Date2010 + 0.59835393969457 * Date2011 +
-0.03571345430143 * Date2012 + -1.59476884959088 * Genderboth_sexes + -1.01398015589094 * Genderfemale ;
30482     +          +     0.88434900503026 * Date2006  +    -0.06920733547316 * Date2007
30483     +          +    -0.15761719875234 * Date2008  +     0.58373614901827 * Date2009
30484     +          +     0.52761282361936 * Date2010  +     0.59835393969457 * Date2011
30485     +          +    -0.03571345430143 * Date2012  +    -1.59476884959088 *
30486     +        Genderboth_sexes  +    -1.01398015589094 * Genderfemale ;
30487     +   H15  =    -8.58338025897798 * Age_group16_to_24  +     1.73431130182411 *
30488     +        Age_group25_to_44  +    -2.50959190344774 * Age_group45_to_64
30489     +          +    -2.01062257249017 * Date2000  +    -1.65707328817157 * Date2001
30490     +          +    -0.45538932981411 * Date2002  +    -1.16471188125424 * Date2003
30491     +          +    -3.28879121393757 * Date2004  +    -0.47862384065246 * Date2005
MPRINT(EM_DIAGRAM):   H15 = -8.58338025897798 * Age_group16_to_24 + 1.73431130182411 * Age_group25_to_44 + -2.50959190344774 * Age_group45_to_64 + -2.01062257249017 * Date2000 + -1.65707328817157 * Date2001 + -0.45538932981411 * Date2002 +
-1.16471188125424 * Date2003 + -3.28879121393757 * Date2004 + -0.47862384065246 * Date2005 + -1.01023576957189 * Date2006 + 1.29345923113314 * Date2007 + 3.00513118567611 * Date2008 + -0.0493540201805 * Date2009 + 0.59692696836937 * Date2010 +
0.58089574713768 * Date2011 + 1.85854307287315 * Date2012 + -0.84076518654861 * Genderboth_sexes + 1.94410703586789 * Genderfemale ;
30492     +          +    -1.01023576957189 * Date2006  +     1.29345923113314 * Date2007
MPRINT(EM_DIAGRAM):   H11 = 2.48053561642249 + H11 ;
30493     +          +     3.00513118567611 * Date2008  +     -0.0493540201805 * Date2009
MPRINT(EM_DIAGRAM):   H12 = 1.79073624896972 + H12 ;
30494     +          +     0.59692696836937 * Date2010  +     0.58089574713768 * Date2011
MPRINT(EM_DIAGRAM):   H13 = 2.85387370456884 + H13 ;
30495     +          +     1.85854307287315 * Date2012  +    -0.84076518654861 *
MPRINT(EM_DIAGRAM):   H14 = 3.49449374745814 + H14 ;
30496     +        Genderboth_sexes  +     1.94410703586789 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H15 = 1.94199856063024 + H15 ;
30497     +   H11  =     2.48053561642249 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
30498     +   H12  =     1.79073624896972 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
30499     +   H13  =     2.85387370456884 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
30500     +   H14  =     3.49449374745814 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
30501     +   H15  =     1.94199856063024 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
30502     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   END;
30503     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   ELSE DO;
30504     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H11 = .;
30505     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H12 = .;
30506     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H13 = .;
30507     +END;
MPRINT(EM_DIAGRAM):   H14 = .;
30508     +ELSE DO;
MPRINT(EM_DIAGRAM):   H15 = .;
30509     +   H11  = .;
MPRINT(EM_DIAGRAM):   END;
30510     +   H12  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
30511     +   H13  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
30512     +   H14  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
30513     +   H15  = .;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
30514     +END;
30515     +*** *************************;
30516     +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 1205.29793130634 * H11 + 1161.95461367712 * H12 + -3343.15103184733 * H13 + -2016.50607171174 * H14 + 5915.28044708513 * H15 ;
30517     +*** *************************;
30518     +IF _DM_BAD EQ 0 THEN DO;
30519     +   P_Population_in_thousands  =     1205.29793130634 * H11
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = -295059.596508757 * H11 + 1200951.00495338 * H12 + -622386.835301285 * H13 + -467275.30556996 * H14 + 1356666.24875043 * H15 ;
30520     +          +     1161.95461367712 * H12  +    -3343.15103184733 * H13
30521     +          +    -2016.50607171174 * H14  +     5915.28044708513 * H15 ;
30522     +   P_Sum_Labor_Force_Pop  =    -295059.596508757 * H11
30523     +          +     1200951.00495338 * H12  +    -622386.835301285 * H13
30524     +          +     -467275.30556996 * H14  +     1356666.24875043 * H15 ;
30525     +   P_Population_in_thousands  = P_Population_in_thousands
30526     +          +     728.718562311591 * Age_group16_to_24
30527     +          +     13881.1646508779 * Age_group25_to_44
30528     +          +     11891.1993266939 * Age_group45_to_64
30529     +          +    -734.876069986509 * Date2000  +    -1005.44966893069 * Date2001
30530     +          +    -196.729378741228 * Date2002  +    -548.124329064577 * Date2003
30531     +          +    -706.153079137373 * Date2004  +    -393.473056965343 * Date2005
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = P_Population_in_thousands + 728.718562311591 * Age_group16_to_24 + 13881.1646508779 * Age_group25_to_44 + 11891.1993266939 * Age_group45_to_64 + -734.876069986509 * Date2000 + -1005.44966893069 * Date2001
+ -196.729378741228 * Date2002 + -548.124329064577 * Date2003 + -706.153079137373 * Date2004 + -393.473056965343 * Date2005 + -450.137223833081 * Date2006 + -554.78332702273 * Date2007 + -258.442730517595 * Date2008 + -103.62092126527 * Date2009 +
-200.510083639569 * Date2010 + 406.714770016742 * Date2011 + -474.646386339079 * Date2012 + 18344.9984154323 * Genderboth_sexes + 1012.85516998176 * Genderfemale ;
30532     +          +    -450.137223833081 * Date2006  +     -554.78332702273 * Date2007
30533     +          +    -258.442730517595 * Date2008  +     -103.62092126527 * Date2009
30534     +          +    -200.510083639569 * Date2010  +     406.714770016742 * Date2011
30535     +          +    -474.646386339079 * Date2012  +     18344.9984154323 *
30536     +        Genderboth_sexes  +     1012.85516998176 * Genderfemale ;
30537     +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     1381575.51824344 *
30538     +        Age_group16_to_24  +     5606191.01745719 * Age_group25_to_44
30539     +          +     4011210.80381704 * Age_group45_to_64
30540     +          +    -25961.8994106242 * Date2000  +    -119891.686127416 * Date2001
30541     +          +     59716.3277166119 * Date2002  +     104896.712470764 * Date2003
30542     +          +    -71742.1586759904 * Date2004  +     71167.8765069561 * Date2005
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 1381575.51824344 * Age_group16_to_24 + 5606191.01745719 * Age_group25_to_44 + 4011210.80381704 * Age_group45_to_64 + -25961.8994106242 * Date2000 + -119891.686127416 * Date2001 +
59716.3277166119 * Date2002 + 104896.712470764 * Date2003 + -71742.1586759904 * Date2004 + 71167.8765069561 * Date2005 + -29647.3704495667 * Date2006 + 186857.778701065 * Date2007 + 121123.726203765 * Date2008 + 106127.807854169 * Date2009 +
-10559.2515420828 * Date2010 + 129158.867206917 * Date2011 + 76664.9084844277 * Date2012 + 226995.438713328 * Genderboth_sexes + -3400.00464106612 * Genderfemale ;
30543     +          +    -29647.3704495667 * Date2006  +     186857.778701065 * Date2007
30544     +          +     121123.726203765 * Date2008  +     106127.807854169 * Date2009
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 38841.2806487802 + P_Population_in_thousands ;
30545     +          +    -10559.2515420828 * Date2010  +     129158.867206917 * Date2011
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6927309.52378857 + P_Sum_Labor_Force_Pop ;
30546     +          +     76664.9084844277 * Date2012  +     226995.438713328 *
MPRINT(EM_DIAGRAM):   END;
30547     +        Genderboth_sexes  +    -3400.00464106612 * Genderfemale ;
MPRINT(EM_DIAGRAM):   ELSE DO;
30548     +   P_Population_in_thousands  =     38841.2806487802 +
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = .;
30549     +        P_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = .;
30550     +   P_Sum_Labor_Force_Pop  =     6927309.52378857 + P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   END;
30551     +END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
30552     +ELSE DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 38841.2806488095;
30553     +   P_Population_in_thousands  = .;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6927309.52380952;
30554     +   P_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   END;
30555     +END;
MPRINT(EM_DIAGRAM):   ********************************;
30556     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
30557     +   P_Population_in_thousands  =     38841.2806488095;
MPRINT(EM_DIAGRAM):   ********************************;
30558     +   P_Sum_Labor_Force_Pop  =     6927309.52380952;
30559     +END;
30560     +********************************;
30561     +*** End Scoring Code for Neural;
30562     +********************************;
30563     +drop
30564     +H11
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
30565     +H12
30566     +H13
30567     +H14
30568     +H15
30569     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
30570      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
30571      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
30572      quit;
30573      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
30574      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
30575      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
30576      retain ID 3 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Neural2";
30577      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
30578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 500 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 500 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30579      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
30580      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30581      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 500 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 500 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30582      proc sort data=EMWS1.Part4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part4_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
30583      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30584      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.PART4_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30585      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
30586      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
30587      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
30588      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
30589      proc contents data=EMWS1.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Neural2_train out=_meta(keep=NAME) noprint;
30590      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 12 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
30591      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
30592      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30593      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 12 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30594      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
30595      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
30596      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
30597      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 12 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 12 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30598      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
30599      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 90 rows and 5 columns.
 
30600      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30601      proc append base=EMWS1.Score5_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score5_FCMP data=_tempx;
30602      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS1.SCORE5_FCMP.
NOTE: There were 90 observations read from the data set WORK._TEMPX.
NOTE: 90 observations added.
NOTE: The data set EMWS1.SCORE5_FCMP has 93 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
30603      %macro varDept(fcmpdata=,id=);
30604      %global nobs&id scoreFlag&id;
30605      %let scoreFlag&id = 0;
30606      %if &id=1 or ^&fcmpStart %then %do;
30607      proc sort data=&fcmpdata out=_temp&id nodupkey;
30608      by NAME;
30609      %if EM_SEGMENT EM_PREDICTION ne %then %do;
30610      where id=&id and (LHS in( %let j=1;
30611      %do %while(%scan(EM_SEGMENT EM_PREDICTION, &j) ne );
30612      %let var = %scan(EM_SEGMENT EM_PREDICTION, &j);
30613      "&var" %let j = %eval(&j+1);
30614      %end;
30615      ) or substr(LHS, 1, 3)='EM_');
30616      %end;
30617      %else %do;
30618      where id=&id and substr(LHS, 1, 3)='EM_';
30619      %end;
30620      run;
30621      %let dsid = %sysfunc(open(_temp&id));
30622      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
30623      %let dsid = %sysfunc(close(&dsid));
30624      %if &&nobs&id %then %do;
30625      %let scoreFlag&id = 1;
30626      %let fcmpStart = 1;
30627      %end;
30628      %else %let fcmpStart = 0;
30629      %end;
30630      %else %do;
30631      proc sort data=&fcmpdata out=_tempid;
30632      where id=&id;
30633      by LHS;
30634      run;
30635      %let dsid = %sysfunc(open(_tempid));
30636      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
30637      %let dsid = %sysfunc(close(&dsid));
30638      %if ^&&nobs&id %then %do;
30639      proc datasets lib=work nolist;
30640      delete _tempid;
30641      run;
30642      quit;
30643      %end;
30644      %else %do;
30645      data _tempAll;
30646      set %let j=%eval(&id-1);
30647      %do x=1 %to &j;
30648      %if &&nobs&x %then %do;
30649      _temp&x %end;
30650      %end;
30651      ;
30652      run;
30653      proc sql;
30654      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
30655      quit;
30656      data _temp&id;
30657      set _temp&id;
30658      where LHS ne '' and NAME ne '' and Node ne '';
30659      run;
30660      proc datasets lib=work nolist;
30661      delete _tempAll;
30662      run;
30663      %let dsid = %sysfunc(open(_temp&id));
30664      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
30665      %let dsid = %sysfunc(close(&dsid));
30666      %if ^&&nobs&id %then %do;
30667      proc datasets lib=work nolist;
30668      delete _temp&id;
30669      run;
30670      quit;
30671      %end;
30672      %else %do;
30673      %let scoreFlag&id = 1;
30674      data _temp&id;
30675      set _temp&id;
30676      where LHS ne NAME and node ne '';
30677      run;
30678      %let dsid = %sysfunc(open(_temp&id));
30679      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
30680      %let dsid = %sysfunc(close(&dsid));
30681      %if ^&&nobs&id %then %do;
30682      proc datasets lib=work nolist;
30683      delete _temp&id;
30684      run;
30685      quit;
30686      %end;
30687      %else %do;
30688      proc sort data=_temp&id nodupkey;
30689      by LHS NAME;
30690      run;
30691      %end;
30692      %end;
30693      %end;
30694      %end;
30695      %mend varDept;
30696      %macro optCode(outdata=);
30697      %global fcmpStart;
30698      %let fcmpStart = 0;
30699      %let outputVars = EM_SEGMENT EM_PREDICTION;
30700      %let NumNodes=6;
30701      %do k=1 %to &NumNodes;
30702      %vardept(fcmpdata=&outdata, id=&k);
30703      %end;
30704      %mend optCode;
30705      %optcode(outData=EMWS1.Score5_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS1.Score5_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_PREDICTION" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS1.SCORE5_FCMP.
      WHERE (id=1) and (LHS in ('EM_PREDICTION', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score5_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.SCORE5_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score5_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 90 observations read from the data set EMWS1.SCORE5_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 90 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 8 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score5_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE5_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score5_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE5_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS1.Score5_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS1.SCORE5_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 19NOV2019:15:55:57;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
MPRINT(EM_DIAGRAM):   label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
MPRINT(EM_DIAGRAM):   label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2010 = 'Dummy: Date=2010' ;
MPRINT(EM_DIAGRAM):   label Date2011 = 'Dummy: Date=2011' ;
MPRINT(EM_DIAGRAM):   label Date2012 = 'Dummy: Date=2012' ;
MPRINT(EM_DIAGRAM):   label Genderboth_sexes = 'Dummy: Gender=both sexes' ;
MPRINT(EM_DIAGRAM):   label Genderfemale = 'Dummy: Gender=female' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label P_Population_in_thousands = 'Predicted: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '65+' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25 TO 44' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 Date2010 Date2011 Date2012 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2010 = 0;
MPRINT(EM_DIAGRAM):   Date2011 = 0;
MPRINT(EM_DIAGRAM):   Date2012 = 0;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
MPRINT(EM_DIAGRAM):   Date2010 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
MPRINT(EM_DIAGRAM):   Date2011 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
MPRINT(EM_DIAGRAM):   Date2012 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2010 = -1;
MPRINT(EM_DIAGRAM):   Date2011 = -1;
MPRINT(EM_DIAGRAM):   Date2012 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop Genderboth_sexes Genderfemale ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = .;
MPRINT(EM_DIAGRAM):   Genderfemale = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = 0;
MPRINT(EM_DIAGRAM):   Genderfemale = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = -1;
MPRINT(EM_DIAGRAM):   Genderfemale = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BOTH SEXES' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = 1;
MPRINT(EM_DIAGRAM):   Genderfemale = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = .;
MPRINT(EM_DIAGRAM):   Genderfemale = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = 2.80451581665555 * Age_group16_to_24 + 2.66257618857886 * Age_group25_to_44 + 2.27428042621142 * Age_group45_to_64 + 0.47125292322736 * Date2000 + 0.23311851428843 * Date2001 + 0.54902464433691 * Date2002 + -0.15346735222469 *
Date2003 + 0.46944685861628 * Date2004 + 0.37604954513678 * Date2005 + 0.39061416762273 * Date2006 + -0.24695161265506 * Date2007 + -0.0940988910836 * Date2008 + 0.0228204870683 * Date2009 + 0.61252140974112 * Date2010 + 0.16504723185446 * Date2011 +
0.23086005632781 * Date2012 + -0.5597343477957 * Genderboth_sexes + -0.52754157640117 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H12 = -6.52971491740447 * Age_group16_to_24 + 0.28569861827114 * Age_group25_to_44 + -0.00982281623129 * Age_group45_to_64 + -0.30625236358766 * Date2000 + -1.21137798020402 * Date2001 + -1.51645564020364 * Date2002 +
0.86299496720353 * Date2003 + -0.93498774344571 * Date2004 + 0.6242111488688 * Date2005 + -2.36836348342809 * Date2006 + 1.12449399595682 * Date2007 + 1.85047727439571 * Date2008 + 1.70776212926759 * Date2009 + -1.41962995460536 * Date2010 +
1.62083296703886 * Date2011 + 1.4873652063756 * Date2012 + -0.03519221005738 * Genderboth_sexes + -2.3955157311532 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H13 = 7.06158999344795 * Age_group16_to_24 + 0.57048096601117 * Age_group25_to_44 + 2.63895819015121 * Age_group45_to_64 + -0.16828253491725 * Date2000 + -1.28332184684902 * Date2001 + 0.50133567355546 * Date2002 + -0.77559399613047
* Date2003 + 0.78813284182853 * Date2004 + 0.41238962207276 * Date2005 + -0.5968396858171 * Date2006 + -0.66033245840418 * Date2007 + -1.37018067368506 * Date2008 + 0.08381409125405 * Date2009 + -0.75540384347548 * Date2010 + -0.02835506626351 * Date2011
+ -0.49849084530149 * Date2012 + 1.13117701174471 * Genderboth_sexes + 1.64736127034363 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H14 = 3.4630872113265 * Age_group16_to_24 + 4.47136694021352 * Age_group25_to_44 + 2.72605263191296 * Age_group45_to_64 + 0.74703333016594 * Date2000 + 0.56768441734246 * Date2001 + 1.1194903343746 * Date2002 + 0.35057468036228 *
Date2003 + 0.81946953762189 * Date2004 + 0.72110714351831 * Date2005 + 0.88434900503026 * Date2006 + -0.06920733547316 * Date2007 + -0.15761719875234 * Date2008 + 0.58373614901827 * Date2009 + 0.52761282361936 * Date2010 + 0.59835393969457 * Date2011 +
-0.03571345430143 * Date2012 + -1.59476884959088 * Genderboth_sexes + -1.01398015589094 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H15 = -8.58338025897798 * Age_group16_to_24 + 1.73431130182411 * Age_group25_to_44 + -2.50959190344774 * Age_group45_to_64 + -2.01062257249017 * Date2000 + -1.65707328817157 * Date2001 + -0.45538932981411 * Date2002 +
-1.16471188125424 * Date2003 + -3.28879121393757 * Date2004 + -0.47862384065246 * Date2005 + -1.01023576957189 * Date2006 + 1.29345923113314 * Date2007 + 3.00513118567611 * Date2008 + -0.0493540201805 * Date2009 + 0.59692696836937 * Date2010 +
0.58089574713768 * Date2011 + 1.85854307287315 * Date2012 + -0.84076518654861 * Genderboth_sexes + 1.94410703586789 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H11 = 2.48053561642249 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = 1.79073624896972 + H12 ;
MPRINT(EM_DIAGRAM):   H13 = 2.85387370456884 + H13 ;
MPRINT(EM_DIAGRAM):   H14 = 3.49449374745814 + H14 ;
MPRINT(EM_DIAGRAM):   H15 = 1.94199856063024 + H15 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   H13 = .;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 1205.29793130634 * H11 + 1161.95461367712 * H12 + -3343.15103184733 * H13 + -2016.50607171174 * H14 + 5915.28044708513 * H15 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = -295059.596508757 * H11 + 1200951.00495338 * H12 + -622386.835301285 * H13 + -467275.30556996 * H14 + 1356666.24875043 * H15 ;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = P_Population_in_thousands + 728.718562311591 * Age_group16_to_24 + 13881.1646508779 * Age_group25_to_44 + 11891.1993266939 * Age_group45_to_64 + -734.876069986509 * Date2000 + -1005.44966893069 * Date2001
+ -196.729378741228 * Date2002 + -548.124329064577 * Date2003 + -706.153079137373 * Date2004 + -393.473056965343 * Date2005 + -450.137223833081 * Date2006 + -554.78332702273 * Date2007 + -258.442730517595 * Date2008 + -103.62092126527 * Date2009 +
-200.510083639569 * Date2010 + 406.714770016742 * Date2011 + -474.646386339079 * Date2012 + 18344.9984154323 * Genderboth_sexes + 1012.85516998176 * Genderfemale ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 1381575.51824344 * Age_group16_to_24 + 5606191.01745719 * Age_group25_to_44 + 4011210.80381704 * Age_group45_to_64 + -25961.8994106242 * Date2000 + -119891.686127416 * Date2001 +
59716.3277166119 * Date2002 + 104896.712470764 * Date2003 + -71742.1586759904 * Date2004 + 71167.8765069561 * Date2005 + -29647.3704495667 * Date2006 + 186857.778701065 * Date2007 + 121123.726203765 * Date2008 + 106127.807854169 * Date2009 +
-10559.2515420828 * Date2010 + 129158.867206917 * Date2011 + 76664.9084844277 * Date2012 + 226995.438713328 * Genderboth_sexes + -3400.00464106612 * Genderfemale ;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 38841.2806487802 + P_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6927309.52378857 + P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 38841.2806488095;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6927309.52380952;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Population_in_thousands ge 73345.5958813221) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 63549.9703592953) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 59513.896483804) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 56139.4932157775) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 54199.6523007248) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 51699.0387624403) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 46484.7601404305) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 43279.4996245372) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 41442.7961529277) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 38995.5279012171) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 36482.2536953926) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 29154.4120203551) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 28724.0283181155) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 24354.96245556) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 23953.9530595373) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 22102.788540459) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 9424.27590782892) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 8267.9987442528) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 3751.11686117438) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Population_in_th;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
31287      %let validvarany = 0;
31288      data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
31289      set EMWS1.Score5_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS1.Score5_EMINPUTVARS;
31290      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
31291      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
31292      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS1.SCORE5_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31293      proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
31294      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
31295      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 5 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31296      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31297      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
31298      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
31299      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
31300      length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
31301      label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
31302      SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
31303      if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
31304      else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
31305      if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
31306      if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
31307      call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
31308      end;
MPRINT(EM_DIAGRAM):   end;
31309      output;
MPRINT(EM_DIAGRAM):   output;
31310      end;
MPRINT(EM_DIAGRAM):   end;
31311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 40 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31312      proc sort data=_temp2 out=EMWS1.Score5_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS1.Score5_EMINPUTVARS;
31313      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31314      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS1.SCORE5_EMINPUTVARS has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=DATASET.OG_LABOR_JOIN noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22600_830-5CG9310VLM_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22600_830-5CG9310VLM_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('DATASET.OG_LABOR_JOIN');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Score5_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set DATASET.OG_LABOR_JOIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS1;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 19NOV2019:15:55:57;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat7;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part4;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ***********************************;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
MPRINT(EM_DIAGRAM):   label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
MPRINT(EM_DIAGRAM):   label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
MPRINT(EM_DIAGRAM):   label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2010 = 'Dummy: Date=2010' ;
MPRINT(EM_DIAGRAM):   label Date2011 = 'Dummy: Date=2011' ;
MPRINT(EM_DIAGRAM):   label Date2012 = 'Dummy: Date=2012' ;
MPRINT(EM_DIAGRAM):   label Genderboth_sexes = 'Dummy: Gender=both sexes' ;
MPRINT(EM_DIAGRAM):   label Genderfemale = 'Dummy: Gender=female' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label P_Population_in_thousands = 'Predicted: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '65+' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25 TO 44' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 Date2010 Date2011 Date2012 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2010 = 0;
MPRINT(EM_DIAGRAM):   Date2011 = 0;
MPRINT(EM_DIAGRAM):   Date2012 = 0;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
MPRINT(EM_DIAGRAM):   Date2010 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
MPRINT(EM_DIAGRAM):   Date2011 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
MPRINT(EM_DIAGRAM):   Date2012 = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2010 = -1;
MPRINT(EM_DIAGRAM):   Date2011 = -1;
MPRINT(EM_DIAGRAM):   Date2012 = -1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop Genderboth_sexes Genderfemale ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = .;
MPRINT(EM_DIAGRAM):   Genderfemale = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = 0;
MPRINT(EM_DIAGRAM):   Genderfemale = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = -1;
MPRINT(EM_DIAGRAM):   Genderfemale = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BOTH SEXES' then do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = 1;
MPRINT(EM_DIAGRAM):   Genderfemale = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Genderboth_sexes = .;
MPRINT(EM_DIAGRAM):   Genderfemale = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H11 = 2.80451581665555 * Age_group16_to_24 + 2.66257618857886 * Age_group25_to_44 + 2.27428042621142 * Age_group45_to_64 + 0.47125292322736 * Date2000 + 0.23311851428843 * Date2001 + 0.54902464433691 * Date2002 + -0.15346735222469 *
Date2003 + 0.46944685861628 * Date2004 + 0.37604954513678 * Date2005 + 0.39061416762273 * Date2006 + -0.24695161265506 * Date2007 + -0.0940988910836 * Date2008 + 0.0228204870683 * Date2009 + 0.61252140974112 * Date2010 + 0.16504723185446 * Date2011 +
0.23086005632781 * Date2012 + -0.5597343477957 * Genderboth_sexes + -0.52754157640117 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H12 = -6.52971491740447 * Age_group16_to_24 + 0.28569861827114 * Age_group25_to_44 + -0.00982281623129 * Age_group45_to_64 + -0.30625236358766 * Date2000 + -1.21137798020402 * Date2001 + -1.51645564020364 * Date2002 +
0.86299496720353 * Date2003 + -0.93498774344571 * Date2004 + 0.6242111488688 * Date2005 + -2.36836348342809 * Date2006 + 1.12449399595682 * Date2007 + 1.85047727439571 * Date2008 + 1.70776212926759 * Date2009 + -1.41962995460536 * Date2010 +
1.62083296703886 * Date2011 + 1.4873652063756 * Date2012 + -0.03519221005738 * Genderboth_sexes + -2.3955157311532 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H13 = 7.06158999344795 * Age_group16_to_24 + 0.57048096601117 * Age_group25_to_44 + 2.63895819015121 * Age_group45_to_64 + -0.16828253491725 * Date2000 + -1.28332184684902 * Date2001 + 0.50133567355546 * Date2002 + -0.77559399613047
* Date2003 + 0.78813284182853 * Date2004 + 0.41238962207276 * Date2005 + -0.5968396858171 * Date2006 + -0.66033245840418 * Date2007 + -1.37018067368506 * Date2008 + 0.08381409125405 * Date2009 + -0.75540384347548 * Date2010 + -0.02835506626351 * Date2011
+ -0.49849084530149 * Date2012 + 1.13117701174471 * Genderboth_sexes + 1.64736127034363 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H14 = 3.4630872113265 * Age_group16_to_24 + 4.47136694021352 * Age_group25_to_44 + 2.72605263191296 * Age_group45_to_64 + 0.74703333016594 * Date2000 + 0.56768441734246 * Date2001 + 1.1194903343746 * Date2002 + 0.35057468036228 *
Date2003 + 0.81946953762189 * Date2004 + 0.72110714351831 * Date2005 + 0.88434900503026 * Date2006 + -0.06920733547316 * Date2007 + -0.15761719875234 * Date2008 + 0.58373614901827 * Date2009 + 0.52761282361936 * Date2010 + 0.59835393969457 * Date2011 +
-0.03571345430143 * Date2012 + -1.59476884959088 * Genderboth_sexes + -1.01398015589094 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H15 = -8.58338025897798 * Age_group16_to_24 + 1.73431130182411 * Age_group25_to_44 + -2.50959190344774 * Age_group45_to_64 + -2.01062257249017 * Date2000 + -1.65707328817157 * Date2001 + -0.45538932981411 * Date2002 +
-1.16471188125424 * Date2003 + -3.28879121393757 * Date2004 + -0.47862384065246 * Date2005 + -1.01023576957189 * Date2006 + 1.29345923113314 * Date2007 + 3.00513118567611 * Date2008 + -0.0493540201805 * Date2009 + 0.59692696836937 * Date2010 +
0.58089574713768 * Date2011 + 1.85854307287315 * Date2012 + -0.84076518654861 * Genderboth_sexes + 1.94410703586789 * Genderfemale ;
MPRINT(EM_DIAGRAM):   H11 = 2.48053561642249 + H11 ;
MPRINT(EM_DIAGRAM):   H12 = 1.79073624896972 + H12 ;
MPRINT(EM_DIAGRAM):   H13 = 2.85387370456884 + H13 ;
MPRINT(EM_DIAGRAM):   H14 = 3.49449374745814 + H14 ;
MPRINT(EM_DIAGRAM):   H15 = 1.94199856063024 + H15 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   H11 = .;
MPRINT(EM_DIAGRAM):   H12 = .;
MPRINT(EM_DIAGRAM):   H13 = .;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 1205.29793130634 * H11 + 1161.95461367712 * H12 + -3343.15103184733 * H13 + -2016.50607171174 * H14 + 5915.28044708513 * H15 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = -295059.596508757 * H11 + 1200951.00495338 * H12 + -622386.835301285 * H13 + -467275.30556996 * H14 + 1356666.24875043 * H15 ;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = P_Population_in_thousands + 728.718562311591 * Age_group16_to_24 + 13881.1646508779 * Age_group25_to_44 + 11891.1993266939 * Age_group45_to_64 + -734.876069986509 * Date2000 + -1005.44966893069 * Date2001
+ -196.729378741228 * Date2002 + -548.124329064577 * Date2003 + -706.153079137373 * Date2004 + -393.473056965343 * Date2005 + -450.137223833081 * Date2006 + -554.78332702273 * Date2007 + -258.442730517595 * Date2008 + -103.62092126527 * Date2009 +
-200.510083639569 * Date2010 + 406.714770016742 * Date2011 + -474.646386339079 * Date2012 + 18344.9984154323 * Genderboth_sexes + 1012.85516998176 * Genderfemale ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 1381575.51824344 * Age_group16_to_24 + 5606191.01745719 * Age_group25_to_44 + 4011210.80381704 * Age_group45_to_64 + -25961.8994106242 * Date2000 + -119891.686127416 * Date2001 +
59716.3277166119 * Date2002 + 104896.712470764 * Date2003 + -71742.1586759904 * Date2004 + 71167.8765069561 * Date2005 + -29647.3704495667 * Date2006 + 186857.778701065 * Date2007 + 121123.726203765 * Date2008 + 106127.807854169 * Date2009 +
-10559.2515420828 * Date2010 + 129158.867206917 * Date2011 + 76664.9084844277 * Date2012 + 226995.438713328 * Genderboth_sexes + -3400.00464106612 * Genderfemale ;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 38841.2806487802 + P_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6927309.52378857 + P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = .;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_Population_in_thousands = 38841.2806488095;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6927309.52380952;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   ********************************;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Population_in_thousands ge 73345.5958813221) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 63549.9703592953) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 59513.896483804) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 56139.4932157775) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 54199.6523007248) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 51699.0387624403) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 46484.7601404305) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 43279.4996245372) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 41442.7961529277) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 38995.5279012171) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 36482.2536953926) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 29154.4120203551) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 28724.0283181155) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 24354.96245556) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 23953.9530595373) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 22102.788540459) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 9424.27590782892) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 8267.9987442528) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Population_in_thousands ge 3751.11686117438) then do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Population_in_th = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Population_in_th;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   drop 'Age_group'n 'Date'n 'Gender'n 'Industry'n 'Population_in_thousands'n 'Sum_Labor_Force_Pop'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS1.Score5_EMOUTPUTVARS noprint out=EMWS1.Score5_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
31938      data EMWS1.Score5_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS1.Score5_EMOUTPUTVARS;
31939      set EMWS1.Score5_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS1.Score5_EMOUTPUTVARS(keep=name type label rename=(type=itype));
31940      length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
31941      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
31942      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
31943      drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
31944      if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
31945      else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
31946      else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
31947      else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
31948      else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
31949      ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
31950      else do;
MPRINT(EM_DIAGRAM):   else do;
31951      name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
31952      if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
31953      else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
31954      else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
31955      else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
31956      else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
31957      else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
31958      end;
MPRINT(EM_DIAGRAM):   end;
31959      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.SCORE5_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE5_EMOUTPUTVARS has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31960      proc sort data=EMWS1.MdlComp2_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.MdlComp2_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
31961      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31962      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.MDLCOMP2_CMETA_TRAIN.
NOTE: The data set WORK.META has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31963      proc sort data=EMWS1.Score5_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Score5_EMOUTPUTVARS;
31964      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31965      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.SCORE5_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE5_EMOUTPUTVARS has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31966      data EMWS1.Score5_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS1.Score5_EMOUTPUTVARS;
31967      merge WORK.META EMWS1.Score5_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS1.Score5_EMOUTPUTVARS(in=_a);
31968      label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
31969      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31970      if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score5";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score5";
31971      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
31972      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.META.
NOTE: There were 6 observations read from the data set EMWS1.SCORE5_EMOUTPUTVARS.
NOTE: The data set EMWS1.SCORE5_EMOUTPUTVARS has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
31973      %let _cn = %sysfunc(getoption(CENTER));
31974      %let _nb = %sysfunc(getoption(NUMBER));
31975      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
31976      title;
MPRINT(EM_DIAGRAM):   title;
31977      proc print data=EMWS1.Score5_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score5_EMINPUTVARS noobs label;
31978      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
31979      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
31980      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
31981      run;
 
NOTE: There were 4 observations read from the data set EMWS1.SCORE5_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31982      title10;
MPRINT(EM_DIAGRAM):   title10;
31983      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
31984      %let _cn = %sysfunc(getoption(CENTER));
31985      %let _nb = %sysfunc(getoption(NUMBER));
31986      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
31987      title;
MPRINT(EM_DIAGRAM):   title;
31988      proc print data=EMWS1.Score5_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Score5_EMOUTPUTVARS noobs label;
31989      var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
31990      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
31991         "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
31992      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
31993      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
31994      run;
 
NOTE: There were 6 observations read from the data set EMWS1.SCORE5_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31995      title10;
MPRINT(EM_DIAGRAM):   title10;
31996      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
31997      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
31998      * Score5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score5: Computing metadata for TRAIN data;
31999      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.SCORE5_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Score5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Score5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Score5_TRAIN out=WORK.M1_BAHWG noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_BAHWG;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_BAHWG(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_BAHWG;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_BAHWG;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2BFJJ2L NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KO2WMD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BFJJ2L;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.MdlComp2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.MdlComp2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Score5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score5";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Sum_Labor_Force_Pop" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.SCORE5_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS1.SCORE5_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 19, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:55:58" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                November 19, 2019
Time:                15:55:58
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2DDBLFM "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Score5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2DDBLFM new;
MPRINT(EM_DIAGRAM):   run;
32370      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
32371      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32372      NAME="b_Population_in_th";
MPRINT(EM_DIAGRAM):   NAME="b_Population_in_th";
32373      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32374      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
32375      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32376      output;
MPRINT(EM_DIAGRAM):   output;
32377      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32378      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
32379      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32380      NAME="P_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   NAME="P_Sum_Labor_Force_Pop";
32381      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32382      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
32383      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32384      output;
MPRINT(EM_DIAGRAM):   output;
32385      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS1.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
32386      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
32387      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
32388      proc freq data = EMWS1.MdlComp2_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.MdlComp2_TRAIN order=formatted addnames;
32389      table b_Population_in_th / missing;
MPRINT(EM_DIAGRAM):   table b_Population_in_th / missing;
32390      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 504 observations read from the data set EMWS1.PART4_TRAIN.
NOTE: View EMWS1.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
NOTE: There were 504 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 504 observations read from the data set EMWS1.MDLCOMP2_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32391      quit;
32392      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
32393      data WORK.Score5_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score5_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
32394      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
32395         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
32396      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
32397      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
32398      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
32399      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
32400      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
32401      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
32402      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
32403      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
32404      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
32405      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
32406      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
32407      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
32408      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
32409      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
32410      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
32411      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
32412      output;
MPRINT(EM_DIAGRAM):   output;
32413      end;
MPRINT(EM_DIAGRAM):   end;
32414      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
32415      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32416      proc sort data=WORK.Score5_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score5_BAR NOTHREADS;
32417      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
32418      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32419      proc sort data=WORK.M29S82LE;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M29S82LE;
32420      by Name;
MPRINT(EM_DIAGRAM):   by Name;
32421      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M29S82LE.
NOTE: The data set WORK.M29S82LE has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32422      data WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score5_BAR;
32423      merge WORK.Score5_BAR(in=_a) WORK.M29S82LE(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score5_BAR(in=_a) WORK.M29S82LE(keep=Name Role rename=(Name=_Variable_));
32424      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
32425      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
32426      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
32427      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: There were 1 observations read from the data set WORK.M29S82LE.
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32428      data WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score5_BAR;
32429      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32430      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
32431      set WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score5_BAR;
32432      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32433      proc append base=EMWS1.Score5_BAR data=WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score5_BAR data=WORK.Score5_BAR;
32434      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE5_BAR to EMWS1.SCORE5_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: The data set EMWS1.SCORE5_BAR has 20 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32435      %var_profile(DATA=EMWS1.MdlComp2_TRAIN, OUTPUT=work.Score5_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score5_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score5: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 19, 2019 03:55:58 PM,
      Last Modified=Tue, Nov 19, 2019 03:55:58 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22600_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
32436     +%macro _vars;
32437     +P_Sum_Labor_Force_Pop
32438     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.MdlComp2_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 504   Memory used = 511K.
NOTE: There were 504 observations read from the data set EMWS1.PART4_TRAIN.
NOTE: View EMWS1.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 504 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: There were 504 observations read from the data set EMWS1.MDLCOMP2_TRAIN.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.MdlComp2_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_Sum_Labor_Force_Pop obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score5_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 504 observations read from the data set EMWS1.PART4_TRAIN.
NOTE: There were 504 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 504 observations read from the data set EMWS1.MDLCOMP2_TRAIN.
NOTE: There were 504 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE5_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score5_SUMDATA out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE5_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 1 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 19, 2019 03:55:59 PM,
      Last Modified=Tue, Nov 19, 2019 03:55:59 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22600_830-5CG9310VLM_\Prc2\em.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 20 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
32439     +proc format;
MPRINT(VAR_PROFILE):   proc format;
32440     +value F1_
32441     +LOW -21825.102064 ="-464510.8008 "
32442     +21825.102064 -994496.90779 ="508161.00493 "
32443     +994496.90779 -1967168.7135 ="1480832.8107 "
32444     +1967168.7135 -2939840.5192 ="2453504.6164 "
32445     +2939840.5192 -3912512.325 ="3426176.4221 "
32446     +3912512.325 -4885184.1307 ="4398848.2278 "
32447     +4885184.1307 -5857855.9364 ="5371520.0336 "
32448     +5857855.9364 -6830527.7422 ="6344191.8393 "
32449     +6830527.7422 -7803199.5479 ="7316863.645 "
32450     +7803199.5479 -8775871.3536 ="8289535.4507 "
32451     +8775871.3536 -9748543.1593 ="9262207.2565 "
32452     +9748543.1593 -10721214.965 ="10234879.062 "
32453     +10721214.965 -11693886.771 ="11207550.868 "
32454     +11693886.771 -12666558.577 ="12180222.674 "
32455     +12666558.577 -13639230.382 ="13152894.479 "
32456     +13639230.382 -HIGH="14125566.285 "
32457     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -21825.102064 ="-464510.8008 " 21825.102064 -994496.90779 ="508161.00493 " 994496.90779 -1967168.7135 ="1480832.8107 " 1967168.7135 -2939840.5192 ="2453504.6164 " 2939840.5192 -3912512.325 ="3426176.4221 " 3912512.325
-4885184.1307 ="4398848.2278 " 4885184.1307 -5857855.9364 ="5371520.0336 " 5857855.9364 -6830527.7422 ="6344191.8393 " 6830527.7422 -7803199.5479 ="7316863.645 " 7803199.5479 -8775871.3536 ="8289535.4507 " 8775871.3536 -9748543.1593 ="9262207.2565 "
9748543.1593 -10721214.965 ="10234879.062 " 10721214.965 -11693886.771 ="11207550.868 " 11693886.771 -12666558.577 ="12180222.674 " 12666558.577 -13639230.382 ="13152894.479 " 13639230.382 -HIGH="14125566.285 " ;
NOTE: Format F1_ has been output.
MPRINT(VAR_PROFILE):   run;
32458     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.MdlComp2_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Sum_Labor_Force_Pop F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 504   Memory used = 511K.
NOTE: There were 504 observations read from the data set EMWS1.PART4_TRAIN.
NOTE: There were 504 observations read from the data set EMWS1.NEURAL2_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: There were 504 observations read from the data set EMWS1.MDLCOMP2_TRAIN.
NOTE: There were 504 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 13 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score5_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE5_VARHIST has 13 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
32459      data work.Score5_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score5_VARHIST;
32460      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32461      retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
32462      set work.Score5_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score5_VARHIST(rename=(VALUE=X));
32463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.SCORE5_VARHIST.
NOTE: The data set WORK.SCORE5_VARHIST has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32464      proc append base=work.Score5_HIST data=work.Score5_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score5_HIST data=work.Score5_VARHIST;
32465      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE5_VARHIST to WORK.SCORE5_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 13 observations read from the data set WORK.SCORE5_VARHIST.
NOTE: The data set WORK.SCORE5_HIST has 13 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32466      proc transpose data=work.Score5_SUMDATA out=work.Score5_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score5_SUMDATA out=work.Score5_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
32467      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
32468      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
32469      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE5_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE5_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32470      data work.Score5_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score5_SUMDATA;
32471      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32472      retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
32473      set work.Score5_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score5_SUMDATA;
32474      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE5_SUMDATA.
NOTE: The data set WORK.SCORE5_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32475      proc append base=WORK.Score5STAT data=work.Score5_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score5STAT data=work.Score5_SUMDATA;
32476      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE5_SUMDATA to WORK.SCORE5STAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK.SCORE5_SUMDATA.
NOTE: The data set WORK.SCORE5STAT has 1 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32477      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
32478      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32479      NAME="b_Population_in_th";
MPRINT(EM_DIAGRAM):   NAME="b_Population_in_th";
32480      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32481      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
32482      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32483      output;
MPRINT(EM_DIAGRAM):   output;
32484      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32485      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
32486      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32487      NAME="P_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   NAME="P_Sum_Labor_Force_Pop";
32488      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32489      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
32490      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32491      output;
MPRINT(EM_DIAGRAM):   output;
32492      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
32493      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
32494      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
32495      proc freq data = EMWS1.MdlComp2_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS1.MdlComp2_VALIDATE order=formatted addnames;
32496      table b_Population_in_th / missing;
MPRINT(EM_DIAGRAM):   table b_Population_in_th / missing;
32497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS1.PART4_VALIDATE.
NOTE: View EMWS1.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 336 observations read from the data set EMWS1.NEURAL2_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 336 observations read from the data set EMWS1.MDLCOMP2_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32498      quit;
32499      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
32500      data WORK.Score5_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score5_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
32501      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
32502         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
32503      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
32504      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
32505      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
32506      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
32507      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
32508      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
32509      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
32510      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
32511      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
32512      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
32513      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
32514      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
32515      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
32516      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
32517      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
32518      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
32519      output;
MPRINT(EM_DIAGRAM):   output;
32520      end;
MPRINT(EM_DIAGRAM):   end;
32521      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
32522      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32523      proc sort data=WORK.Score5_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score5_BAR NOTHREADS;
32524      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
32525      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32526      proc sort data=WORK.M0NQ9OYB;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0NQ9OYB;
32527      by Name;
MPRINT(EM_DIAGRAM):   by Name;
32528      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0NQ9OYB.
NOTE: The data set WORK.M0NQ9OYB has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
The SAS System
 
 
32529      data WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score5_BAR;
32530      merge WORK.Score5_BAR(in=_a) WORK.M0NQ9OYB(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score5_BAR(in=_a) WORK.M0NQ9OYB(keep=Name Role rename=(Name=_Variable_));
32531      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
32532      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
32533      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
32534      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: There were 1 observations read from the data set WORK.M0NQ9OYB.
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32535      data WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score5_BAR;
32536      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32537      retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
32538      set WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score5_BAR;
32539      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: The data set WORK.SCORE5_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32540      proc append base=EMWS1.Score5_BAR data=WORK.Score5_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Score5_BAR data=WORK.Score5_BAR;
32541      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE5_BAR to EMWS1.SCORE5_BAR.
NOTE: There were 20 observations read from the data set WORK.SCORE5_BAR.
NOTE: 20 observations added.
NOTE: The data set EMWS1.SCORE5_BAR has 40 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32542      %var_profile(DATA=EMWS1.MdlComp2_VALIDATE, OUTPUT=work.Score5_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score5_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score5: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 19, 2019 03:55:58 PM,
      Last Modified=Tue, Nov 19, 2019 03:55:58 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22600_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
32543     +%macro _vars;
32544     +P_Sum_Labor_Force_Pop
32545     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.MdlComp2_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Sum_Labor_Force_Pop F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 336   Memory used = 511K.
NOTE: There were 336 observations read from the data set EMWS1.PART4_VALIDATE.
NOTE: There were 336 observations read from the data set EMWS1.NEURAL2_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 336 observations read from the data set EMWS1.MDLCOMP2_VALIDATE.
NOTE: There were 336 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 13 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score5_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE5_VARHIST has 13 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
32546      data work.Score5_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score5_VARHIST;
32547      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32548      retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
32549      set work.Score5_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score5_VARHIST(rename=(VALUE=X));
32550      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.SCORE5_VARHIST.
NOTE: The data set WORK.SCORE5_VARHIST has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32551      proc append base=work.Score5_HIST data=work.Score5_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score5_HIST data=work.Score5_VARHIST;
32552      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE5_VARHIST to WORK.SCORE5_HIST.
NOTE: There were 13 observations read from the data set WORK.SCORE5_VARHIST.
NOTE: 13 observations added.
NOTE: The data set WORK.SCORE5_HIST has 26 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32553      proc stdize data=EMWS1.MdlComp2_VALIDATE(obs=1000000) outstat=work.Score5_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS1.MdlComp2_VALIDATE(obs=1000000) outstat=work.Score5_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
32554      var
32555      P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   var P_Sum_Labor_Force_Pop;
32556      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS1.PART4_VALIDATE.
NOTE: View EMWS1.MDLCOMP2_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: There were 336 observations read from the data set EMWS1.NEURAL2_VALIDATE.
NOTE: There were 336 observations read from the data set EMWS1.MDLCOMP2_VALIDATE.
NOTE: The data set WORK.SCORE5_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.13 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32557      quit;
 
32558      proc transpose data=work.Score5_SUMDATA out=work.Score5_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score5_SUMDATA out=work.Score5_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
32559      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
32560      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
32561      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE5_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE5_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32562      data work.Score5_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score5_SUMDATA;
32563      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32564      retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
32565      set work.Score5_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score5_SUMDATA;
32566      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE5_SUMDATA.
NOTE: The data set WORK.SCORE5_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32567      proc append base=WORK.Score5STAT data=work.Score5_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score5STAT data=work.Score5_SUMDATA;
32568      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE5_SUMDATA to WORK.SCORE5STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE5_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE5STAT has 2 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32569      data EMWS1.Score5_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS1.Score5_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
32570      set EMWS1.Score5_BAR;
MPRINT(EM_DIAGRAM):   set EMWS1.Score5_BAR;
32571      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type";
32572      select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
32573      when("b_Population_in_th") TYPE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Population_in_th") TYPE = 'SEGMENT';
32574      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
32575      end;
MPRINT(EM_DIAGRAM):   end;
32576      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 40 observations read from the data set EMWS1.SCORE5_BAR.
NOTE: The data set EMWS1.SCORE5_BAR has 40 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32577      proc sort data = EMWS1.Score5_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Score5_BAR NOTHREADS;
32578      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
32579      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 40 observations read from the data set EMWS1.SCORE5_BAR.
NOTE: The data set EMWS1.SCORE5_BAR has 40 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32580      %let _cn = %sysfunc(getoption(CENTER));
32581      %let _nb = %sysfunc(getoption(NUMBER));
32582      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
32583      title;
MPRINT(EM_DIAGRAM):   title;
32584      proc print data = EMWS1.Score5_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS1.Score5_BAR noobs label;
32585      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
32586      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32587      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
32588      run;
 
NOTE: There were 40 observations read from the data set EMWS1.SCORE5_BAR.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32589      title10;
MPRINT(EM_DIAGRAM):   title10;
32590      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
32591      data EMWS1.Score5_HIST;
MPRINT(EM_DIAGRAM):    data EMWS1.Score5_HIST;
32592      set work.Score5_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score5_HIST(rename=(Percent=Value));
32593      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
32594         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
32595      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
32596      when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
32597      when("b_Population_in_th") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Population_in_th") TYPE= 'SEGMENT';
32598      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
32599      end;
MPRINT(EM_DIAGRAM):   end;
32600      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK.SCORE5_HIST.
NOTE: The data set EMWS1.SCORE5_HIST has 26 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32601      data WORK.Score5STAT;
MPRINT(EM_DIAGRAM):    data WORK.Score5STAT;
32602      set WORK.Score5STAT;
MPRINT(EM_DIAGRAM):   set WORK.Score5STAT;
32603      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
32604         "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
32605         "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 = "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
32606         "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 = "25th Percentile" P75 = "75th Percentile";
32607      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
32608      when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
32609      when("b_Population_in_th") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Population_in_th") TYPE= 'SEGMENT';
32610      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
32611      end;
MPRINT(EM_DIAGRAM):   end;
32612      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE5STAT.
NOTE: The data set WORK.SCORE5STAT has 2 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
32613      proc sort data = WORK.Score5STAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.Score5STAT NOTHREADS;
32614      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
32615      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE5STAT.
NOTE: The data set WORK.SCORE5STAT has 2 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32616      proc transpose data = WORK.Score5STAT out=WORK.Score5STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.Score5STAT out=WORK.Score5STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
32617      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
32618      id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
32619      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE5STAT.
NOTE: The data set WORK.SCORE5STAT has 8 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32620      proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
32621      modify Score5STAT;
MPRINT(EM_DIAGRAM):   modify Score5STAT;
32622      label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,  NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL = "Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORE5STAT.
32623         "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
32624      run;
 
NOTE: MODIFY was successful for WORK.SCORE5STAT.DATA.
32625      %let _cn = %sysfunc(getoption(CENTER));
32626      %let _nb = %sysfunc(getoption(NUMBER));
32627      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
32628      title;
MPRINT(EM_DIAGRAM):   title;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
32629      proc print data = WORK.Score5STAT label noobs;
MPRINT(EM_DIAGRAM):   proc print data = WORK.Score5STAT label noobs;
32630      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
32631      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32632      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
32633      run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE5STAT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32634      title10;
MPRINT(EM_DIAGRAM):   title10;
32635      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
