MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 14, 
2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:52:56" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 14, 2019
Time:                15:52:56
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2XJYQ28 "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2XJYQ28 new;
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      
94981      /* Generate assessment metadata, which will be used to generate assessment data step
94981    !  */
94982      /* code, such as retrieving names of temporary variables and summary variables,
94982    !  */
94983      /* labels, etc.  It is used in almost all the assessment computations such as lift,
94983    !  */
94984      /* roc, index, scoreDist and could be thought as a global variable in assessment
94984    !  */
94985      /* computation.
94985    !  */
94986      data work.ASSESS_2U22CO8_assessMeta_78D_30;
MPRINT(EM_DIAGRAM):    data work.ASSESS_2U22CO8_assessMeta_78D_30;
94987      length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY $32
94987    ! MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32
94987    ! RESULT_MEAN_LABEL $100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32
94987    ! RESULT_MAX $32 RESULT_MAX_LABEL
94988         $100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE
94988    !  $32;
MPRINT(EM_DIAGRAM):   length VARIABLE $32 FORMAT $44 TYPE $32 PARENT $32 LEVEL $32 PROPERTY 
$32 MEASUREMENT $10 LAST_LEVEL $32 GEN_VAR_IN_TEMP_DATA $32 RESULT_MEAN $32 RESULT_MEAN_LABEL 
$100 RESULT_MIN $32 RESULT_MIN_LABEL $100 MIN_ADJUSTED $32 RESULT_MAX $32 RESULT_MAX_LABEL 
$100 MAX_ADJUSTED $32 RESULT_COUNT $32 RESULT_COUNT_LABEL $100 TEMPORARY_VARIABLE $32;
94989      VARIABLE = "Disease";
MPRINT(EM_DIAGRAM):   VARIABLE = "Disease";
94990      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
94991      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
94992      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
94993      LEVEL = '';
MPRINT(EM_DIAGRAM):   LEVEL = '';
94994      PROPERTY = "TARGET";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET";
94995      MEASUREMENT = "NOMINAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "NOMINAL";
94996      LAST_LEVEL = '';
MPRINT(EM_DIAGRAM):   LAST_LEVEL = '';
94997      GEN_VAR_IN_TEMP_DATA = "Disease";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "Disease";
94998      RESULT_MEAN = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "";
94999      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
95000      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
95001      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
95002      MIN_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "";
95003      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
95004      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
95005      MAX_ADJUSTED = "";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "";
95006      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
95007      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
95008      TEMPORARY_VARIABLE = "Disease_gaG2oIjj3wG2LtW";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "Disease_gaG2oIjj3wG2LtW";
95009      output;
MPRINT(EM_DIAGRAM):   output;
95010      VARIABLE = "F_Disease_SEPTICEMIA";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Disease_SEPTICEMIA";
95011      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95012      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95013      PARENT = "F_Disease";
MPRINT(EM_DIAGRAM):   PARENT = "F_Disease";
95014      LEVEL = "SEPTICEMIA";
MPRINT(EM_DIAGRAM):   LEVEL = "SEPTICEMIA";
95015      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
95016      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95017      LAST_LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "ASTHMA";
95018      GEN_VAR_IN_TEMP_DATA = "F_Disease_SEPTIC_bxoGj7EzDAdPtuI";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Disease_SEPTIC_bxoGj7EzDAdPtuI";
95019      RESULT_MEAN = "F_Disease__mean_gYCr3KeQoEdhYNE";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Disease__mean_gYCr3KeQoEdhYNE";
95020      /* adjust for tied cases */
95021      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
95022      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
95023      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
95024      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
95025      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
95026      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
95027      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
95027    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
95028      TEMPORARY_VARIABLE = "F_Disease_SEPTIC_t0i86WcnnQGMleR";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Disease_SEPTIC_t0i86WcnnQGMleR";
95029      output;
MPRINT(EM_DIAGRAM):   output;
95030      VARIABLE = "F_Disease_OSTEOARTHRITIS";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Disease_OSTEOARTHRITIS";
95031      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95032      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95033      PARENT = "F_Disease";
MPRINT(EM_DIAGRAM):   PARENT = "F_Disease";
95034      LEVEL = "OSTEOARTHRITIS";
MPRINT(EM_DIAGRAM):   LEVEL = "OSTEOARTHRITIS";
95035      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
95036      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95037      LAST_LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "ASTHMA";
95038      GEN_VAR_IN_TEMP_DATA = "F_Disease_OSTEOA_CK80ptb60YEf08Y";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Disease_OSTEOA_CK80ptb60YEf08Y";
95039      RESULT_MEAN = "F_Disease__mean_8X_owYhKBXTEW3c";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Disease__mean_8X_owYhKBXTEW3c";
95040      /* adjust for tied cases */
95041      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
95042      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
95043      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
95044      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
95045      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
95046      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
95047      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
95047    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
95048      TEMPORARY_VARIABLE = "F_Disease_OSTEOA_4FQ6LfvJEylXL9E";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Disease_OSTEOA_4FQ6LfvJEylXL9E";
95049      output;
MPRINT(EM_DIAGRAM):   output;
95050      VARIABLE = "F_Disease_DEMENTIA_AND_AL";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Disease_DEMENTIA_AND_AL";
95051      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95052      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95053      PARENT = "F_Disease";
MPRINT(EM_DIAGRAM):   PARENT = "F_Disease";
95054      LEVEL = "DEMENTIA AND ALZHEIMER'S DISEASE";
MPRINT(EM_DIAGRAM):   LEVEL = "DEMENTIA AND ALZHEIMER'S DISEASE";
95055      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
95056      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95057      LAST_LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "ASTHMA";
95058      GEN_VAR_IN_TEMP_DATA = "F_Disease_DEMENT_8sy96_L7h9oJuhS";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Disease_DEMENT_8sy96_L7h9oJuhS";
95059      RESULT_MEAN = "F_Disease__mean_P8Msttma8tWywhq";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Disease__mean_P8Msttma8tWywhq";
95060      /* adjust for tied cases */
95061      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
95062      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
95063      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
95064      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
95065      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
95066      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
95067      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
95067    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
95068      TEMPORARY_VARIABLE = "F_Disease_DEMENT_9b3KbY3TnfPQZG6";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Disease_DEMENT_9b3KbY3TnfPQZG6";
95069      output;
MPRINT(EM_DIAGRAM):   output;
95070      VARIABLE = "F_Disease_CANCER__ALL";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Disease_CANCER__ALL";
95071      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95072      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95073      PARENT = "F_Disease";
MPRINT(EM_DIAGRAM):   PARENT = "F_Disease";
95074      LEVEL = "CANCER, ALL";
MPRINT(EM_DIAGRAM):   LEVEL = "CANCER, ALL";
95075      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
95076      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95077      LAST_LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "ASTHMA";
95078      GEN_VAR_IN_TEMP_DATA = "F_Disease_CANCER_ZU6OYUfUOheLlTV";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Disease_CANCER_ZU6OYUfUOheLlTV";
95079      RESULT_MEAN = "F_Disease__mean_AJgyRNgMmHoHxuU";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Disease__mean_AJgyRNgMmHoHxuU";
95080      /* adjust for tied cases */
95081      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
95082      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
95083      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
95084      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
95085      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
95086      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
95087      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
95087    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
95088      TEMPORARY_VARIABLE = "F_Disease_CANCER_Qmj8NvphmZRRCZf";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Disease_CANCER_Qmj8NvphmZRRCZf";
95089      output;
MPRINT(EM_DIAGRAM):   output;
95090      VARIABLE = "F_Disease_ASTHMA";
MPRINT(EM_DIAGRAM):   VARIABLE = "F_Disease_ASTHMA";
95091      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95092      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95093      PARENT = "F_Disease";
MPRINT(EM_DIAGRAM):   PARENT = "F_Disease";
95094      LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LEVEL = "ASTHMA";
95095      PROPERTY = "TARGET_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "TARGET_LEVEL";
95096      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95097      LAST_LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "ASTHMA";
95098      GEN_VAR_IN_TEMP_DATA = "F_Disease_ASTHMA_5Zbobtcsfo3LIgj";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "F_Disease_ASTHMA_5Zbobtcsfo3LIgj";
95099      RESULT_MEAN = "F_Disease__mean_0UIhg3G_rusvKoJ";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "F_Disease__mean_0UIhg3G_rusvKoJ";
95100      /* adjust for tied cases */
95101      RESULT_MEAN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "";
95102      RESULT_MIN = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "";
95103      RESULT_MIN_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "";
95104      RESULT_MAX = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "";
95105      RESULT_MAX_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "";
95106      RESULT_COUNT = "NumberOfEvents";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "NumberOfEvents";
95107      RESULT_COUNT_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_NumEvent_vlabel,
95107    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "Number of Events";
95108      TEMPORARY_VARIABLE = "F_Disease_ASTHMA_obc5NYaI5TyP8bj";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "F_Disease_ASTHMA_obc5NYaI5TyP8bj";
95109      output;
MPRINT(EM_DIAGRAM):   output;
95110      VARIABLE = "P_DiseaseSepticemia";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DiseaseSepticemia";
95111      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95112      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95113      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
95114      LEVEL = "SEPTICEMIA";
MPRINT(EM_DIAGRAM):   LEVEL = "SEPTICEMIA";
95115      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
95116      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95117      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
95118      GEN_VAR_IN_TEMP_DATA = "P_DiseaseSepticemia";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DiseaseSepticemia";
95119      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
95120      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
95120    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
95121      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
95122      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
95123      MIN_ADJUSTED = "P_Diseas_minAdjusted_pqcjQY6No";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diseas_minAdjusted_pqcjQY6No";
95124      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
95125      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
95126      MAX_ADJUSTED = "P_Diseas_maxAdjusted_StLaylS25";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diseas_maxAdjusted_StLaylS25";
95127      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
95128      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
95129      TEMPORARY_VARIABLE = "P_DiseaseSeptice_1NjCLLpUf2xtGy1";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DiseaseSeptice_1NjCLLpUf2xtGy1";
95130      output;
MPRINT(EM_DIAGRAM):   output;
95131      VARIABLE = "P_DiseaseOsteoarthritis";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DiseaseOsteoarthritis";
95132      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95133      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95134      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
95135      LEVEL = "OSTEOARTHRITIS";
MPRINT(EM_DIAGRAM):   LEVEL = "OSTEOARTHRITIS";
95136      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
95137      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95138      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
95139      GEN_VAR_IN_TEMP_DATA = "P_DiseaseOsteoarthritis";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DiseaseOsteoarthritis";
95140      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
95141      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
95141    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
95142      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
95143      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
95144      MIN_ADJUSTED = "P_Diseas_minAdjusted_UNy_IA9uf";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diseas_minAdjusted_UNy_IA9uf";
95145      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
95146      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
95147      MAX_ADJUSTED = "P_Diseas_maxAdjusted_F6KGhJMW2";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diseas_maxAdjusted_F6KGhJMW2";
95148      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
95149      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
95150      TEMPORARY_VARIABLE = "P_DiseaseOsteoar_4Lo2lNMCYEZKshC";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DiseaseOsteoar_4Lo2lNMCYEZKshC";
95151      output;
MPRINT(EM_DIAGRAM):   output;
95152      VARIABLE = "P_DiseaseDementia_and_Alzheimer_";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DiseaseDementia_and_Alzheimer_";
95153      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95154      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95155      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
95156      LEVEL = "DEMENTIA AND ALZHEIMER'S DISEASE";
MPRINT(EM_DIAGRAM):   LEVEL = "DEMENTIA AND ALZHEIMER'S DISEASE";
95157      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
95158      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95159      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
95160      GEN_VAR_IN_TEMP_DATA = "P_DiseaseDementia_and_Alzheimer_";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DiseaseDementia_and_Alzheimer_";
95161      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
95162      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
95162    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
95163      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
95164      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
95165      MIN_ADJUSTED = "P_Diseas_minAdjusted_IMOHovn3Y";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diseas_minAdjusted_IMOHovn3Y";
95166      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
95167      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
95168      MAX_ADJUSTED = "P_Diseas_maxAdjusted_CWysP4HrL";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diseas_maxAdjusted_CWysP4HrL";
95169      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
95170      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
95171      TEMPORARY_VARIABLE = "P_DiseaseDementi_xhw5tmM9PI8clNy";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DiseaseDementi_xhw5tmM9PI8clNy";
95172      output;
MPRINT(EM_DIAGRAM):   output;
95173      VARIABLE = "P_DiseaseCancer__all";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DiseaseCancer__all";
95174      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95175      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95176      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
95177      LEVEL = "CANCER, ALL";
MPRINT(EM_DIAGRAM):   LEVEL = "CANCER, ALL";
95178      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
95179      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95180      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
95181      GEN_VAR_IN_TEMP_DATA = "P_DiseaseCancer__all";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DiseaseCancer__all";
95182      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
95183      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
95183    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
95184      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
95185      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
95186      MIN_ADJUSTED = "P_Diseas_minAdjusted_4sHsPfCON";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diseas_minAdjusted_4sHsPfCON";
95187      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
95188      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
95189      MAX_ADJUSTED = "P_Diseas_maxAdjusted_ru18xIhK6";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diseas_maxAdjusted_ru18xIhK6";
95190      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
95191      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
95192      TEMPORARY_VARIABLE = "P_DiseaseCancer__NroUEDG3iKRENJS";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DiseaseCancer__NroUEDG3iKRENJS";
95193      output;
MPRINT(EM_DIAGRAM):   output;
95194      VARIABLE = "P_DiseaseAsthma";
MPRINT(EM_DIAGRAM):   VARIABLE = "P_DiseaseAsthma";
95195      FORMAT = "";
MPRINT(EM_DIAGRAM):   FORMAT = "";
95196      TYPE = "";
MPRINT(EM_DIAGRAM):   TYPE = "";
95197      PARENT = "";
MPRINT(EM_DIAGRAM):   PARENT = "";
95198      LEVEL = "ASTHMA";
MPRINT(EM_DIAGRAM):   LEVEL = "ASTHMA";
95199      PROPERTY = "POSTERIOR_LEVEL";
MPRINT(EM_DIAGRAM):   PROPERTY = "POSTERIOR_LEVEL";
95200      MEASUREMENT = "INTERVAL";
MPRINT(EM_DIAGRAM):   MEASUREMENT = "INTERVAL";
95201      LAST_LEVEL = "";
MPRINT(EM_DIAGRAM):   LAST_LEVEL = "";
95202      GEN_VAR_IN_TEMP_DATA = "P_DiseaseAsthma";
MPRINT(EM_DIAGRAM):   GEN_VAR_IN_TEMP_DATA = "P_DiseaseAsthma";
95203      RESULT_MEAN = "_meanP_";
MPRINT(EM_DIAGRAM):   RESULT_MEAN = "_meanP_";
95204      RESULT_MEAN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMean_vlabel,
95204    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MEAN_LABEL = "Mean Posterior Probability";
95205      RESULT_MIN = "_minP_";
MPRINT(EM_DIAGRAM):   RESULT_MIN = "_minP_";
95206      RESULT_MIN_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMin_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MIN_LABEL = "Min Posterior Probability";
95207      MIN_ADJUSTED = "P_Diseas_minAdjusted_JpsPhl65M";
MPRINT(EM_DIAGRAM):   MIN_ADJUSTED = "P_Diseas_minAdjusted_JpsPhl65M";
95208      RESULT_MAX = "_maxP_";
MPRINT(EM_DIAGRAM):   RESULT_MAX = "_maxP_";
95209      RESULT_MAX_LABEL = "%sysfunc(sasmsg(sashelp.dmine, assmt_probMax_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   RESULT_MAX_LABEL = "Max Posterior Probability";
95210      MAX_ADJUSTED = "P_Diseas_maxAdjusted_mKG14XNHf";
MPRINT(EM_DIAGRAM):   MAX_ADJUSTED = "P_Diseas_maxAdjusted_mKG14XNHf";
95211      RESULT_COUNT = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT = "";
95212      RESULT_COUNT_LABEL = "";
MPRINT(EM_DIAGRAM):   RESULT_COUNT_LABEL = "";
95213      TEMPORARY_VARIABLE = "P_DiseaseAsthma_gYlwEW182zMMeGF";
MPRINT(EM_DIAGRAM):   TEMPORARY_VARIABLE = "P_DiseaseAsthma_gYlwEW182zMMeGF";
95214      output;
MPRINT(EM_DIAGRAM):   output;
95215      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.ASSESS_2U22CO8_ASSESSMETA_78D_30 has 11 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

95216      /* Generate temporary dataset and obtain summary statistics such as total number of
95216    !   */
95217      /* obserations, frequency of target.  However, summary statistics for class
95217    ! reporting */
95218      /* variabels are not computed here since if there exist class reporting variables,
95218    !   */
95219      /* then PROC DMDB will be called. And there is no need to compute interval reporting
95219    !   */
95220      /* summary statisitcs, if any.
95220    !   */
95221      data work.ASSESS_2U22CO8_normSD_is_j57(drop=
95222      _numberOfObservation_
95223      _levelFrequency_1
95224      _levelFrequency_2
95225      _levelFrequency_3
95226      _levelFrequency_4
95227      _levelFrequency_5
95228      )
95229      work.ASSESS_2U22CO8_meansAndTi_xbemIS (keep=
95230      _numberOfObservation_
95231      _levelFrequency_1
95232      _levelFrequency_2
95233      _levelFrequency_3
95234      _levelFrequency_4
95235      _levelFrequency_5
95236      );
MPRINT(EM_DIAGRAM):    data work.ASSESS_2U22CO8_normSD_is_j57(drop= _numberOfObservation_ 
_levelFrequency_1 _levelFrequency_2 _levelFrequency_3 _levelFrequency_4 _levelFrequency_5 ) 
work.ASSESS_2U22CO8_meansAndTi_xbemIS (keep= _numberOfObservation_ _levelFrequency_1 
_levelFrequency_2 _levelFrequency_3 _levelFrequency_4 _levelFrequency_5 );
95237      set EMWS1.Tree2_TRAIN(
95238      where=(
95239      (Disease ^= ' ')
95240      )
95241      ) end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_TRAIN( where=( (Disease ^= ' ') ) ) 
end=_lastObservation_;
95242      keep frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   keep frequency_jqlq0G;
95243      frequency_jqlq0G = 1;
MPRINT(EM_DIAGRAM):   frequency_jqlq0G = 1;
95244      keep I_Disease F_Disease;
MPRINT(EM_DIAGRAM):   keep I_Disease F_Disease;
95245      keep F_Disease_SEPTIC_bxoGj7EzDAdPtuI;
MPRINT(EM_DIAGRAM):   keep F_Disease_SEPTIC_bxoGj7EzDAdPtuI;
95246      if (F_Disease = 'SEPTICEMIA') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'SEPTICEMIA') then do;
95247      F_Disease_SEPTIC_bxoGj7EzDAdPtuI = 1;
MPRINT(EM_DIAGRAM):   F_Disease_SEPTIC_bxoGj7EzDAdPtuI = 1;
95248      end;
MPRINT(EM_DIAGRAM):   end;
95249      else do;
MPRINT(EM_DIAGRAM):   else do;
95250      F_Disease_SEPTIC_bxoGj7EzDAdPtuI = 0;
MPRINT(EM_DIAGRAM):   F_Disease_SEPTIC_bxoGj7EzDAdPtuI = 0;
95251      end;
MPRINT(EM_DIAGRAM):   end;
95252      keep F_Disease_OSTEOA_CK80ptb60YEf08Y;
MPRINT(EM_DIAGRAM):   keep F_Disease_OSTEOA_CK80ptb60YEf08Y;
95253      if (F_Disease = 'OSTEOARTHRITIS') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'OSTEOARTHRITIS') then do;
95254      F_Disease_OSTEOA_CK80ptb60YEf08Y = 1;
MPRINT(EM_DIAGRAM):   F_Disease_OSTEOA_CK80ptb60YEf08Y = 1;
95255      end;
MPRINT(EM_DIAGRAM):   end;
95256      else do;
MPRINT(EM_DIAGRAM):   else do;
95257      F_Disease_OSTEOA_CK80ptb60YEf08Y = 0;
MPRINT(EM_DIAGRAM):   F_Disease_OSTEOA_CK80ptb60YEf08Y = 0;
95258      end;
MPRINT(EM_DIAGRAM):   end;
95259      keep F_Disease_DEMENT_8sy96_L7h9oJuhS;
MPRINT(EM_DIAGRAM):   keep F_Disease_DEMENT_8sy96_L7h9oJuhS;
95260      if (F_Disease = 'DEMENTIA AND ALZHEIMER''S DISEASE') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'DEMENTIA AND ALZHEIMER''S DISEASE') then do;
95261      F_Disease_DEMENT_8sy96_L7h9oJuhS = 1;
MPRINT(EM_DIAGRAM):   F_Disease_DEMENT_8sy96_L7h9oJuhS = 1;
95262      end;
MPRINT(EM_DIAGRAM):   end;
95263      else do;
MPRINT(EM_DIAGRAM):   else do;
95264      F_Disease_DEMENT_8sy96_L7h9oJuhS = 0;
MPRINT(EM_DIAGRAM):   F_Disease_DEMENT_8sy96_L7h9oJuhS = 0;
95265      end;
MPRINT(EM_DIAGRAM):   end;
95266      keep F_Disease_CANCER_ZU6OYUfUOheLlTV;
MPRINT(EM_DIAGRAM):   keep F_Disease_CANCER_ZU6OYUfUOheLlTV;
95267      if (F_Disease = 'CANCER, ALL') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'CANCER, ALL') then do;
95268      F_Disease_CANCER_ZU6OYUfUOheLlTV = 1;
MPRINT(EM_DIAGRAM):   F_Disease_CANCER_ZU6OYUfUOheLlTV = 1;
95269      end;
MPRINT(EM_DIAGRAM):   end;
95270      else do;
MPRINT(EM_DIAGRAM):   else do;
95271      F_Disease_CANCER_ZU6OYUfUOheLlTV = 0;
MPRINT(EM_DIAGRAM):   F_Disease_CANCER_ZU6OYUfUOheLlTV = 0;
95272      end;
MPRINT(EM_DIAGRAM):   end;
95273      keep F_Disease_ASTHMA_5Zbobtcsfo3LIgj;
MPRINT(EM_DIAGRAM):   keep F_Disease_ASTHMA_5Zbobtcsfo3LIgj;
95274      if (F_Disease = 'ASTHMA') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'ASTHMA') then do;
95275      F_Disease_ASTHMA_5Zbobtcsfo3LIgj = 1;
MPRINT(EM_DIAGRAM):   F_Disease_ASTHMA_5Zbobtcsfo3LIgj = 1;
95276      end;
MPRINT(EM_DIAGRAM):   end;
95277      else do;
MPRINT(EM_DIAGRAM):   else do;
95278      F_Disease_ASTHMA_5Zbobtcsfo3LIgj = 0;
MPRINT(EM_DIAGRAM):   F_Disease_ASTHMA_5Zbobtcsfo3LIgj = 0;
95279      end;
MPRINT(EM_DIAGRAM):   end;
95280      keep P_DiseaseSepticemia;
MPRINT(EM_DIAGRAM):   keep P_DiseaseSepticemia;
95281      keep P_DiseaseOsteoarthritis;
MPRINT(EM_DIAGRAM):   keep P_DiseaseOsteoarthritis;
95282      keep P_DiseaseDementia_and_Alzheimer_;
MPRINT(EM_DIAGRAM):   keep P_DiseaseDementia_and_Alzheimer_;
95283      keep P_DiseaseCancer__all;
MPRINT(EM_DIAGRAM):   keep P_DiseaseCancer__all;
95284      keep P_DiseaseAsthma;
MPRINT(EM_DIAGRAM):   keep P_DiseaseAsthma;
95285      output work.ASSESS_2U22CO8_normSD_is_j57;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2U22CO8_normSD_is_j57;
95286      keep _numberOfObservation_;
MPRINT(EM_DIAGRAM):   keep _numberOfObservation_;
95287      retain _numberOfObservation_ 0;
MPRINT(EM_DIAGRAM):   retain _numberOfObservation_ 0;
95288      _numberOfObservation_ + frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   _numberOfObservation_ + frequency_jqlq0G;
95289      keep _levelFrequency_1;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_1;
95290      retain _levelFrequency_1 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_1 0;
95291      if (F_Disease = 'SEPTICEMIA') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'SEPTICEMIA') then do;
95292      _levelFrequency_1 + frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   _levelFrequency_1 + frequency_jqlq0G;
95293      end;
MPRINT(EM_DIAGRAM):   end;
95294      keep _levelFrequency_2;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_2;
95295      retain _levelFrequency_2 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_2 0;
95296      if (F_Disease = 'OSTEOARTHRITIS') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'OSTEOARTHRITIS') then do;
95297      _levelFrequency_2 + frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   _levelFrequency_2 + frequency_jqlq0G;
95298      end;
MPRINT(EM_DIAGRAM):   end;
95299      keep _levelFrequency_3;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_3;
95300      retain _levelFrequency_3 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_3 0;
95301      if (F_Disease = 'DEMENTIA AND ALZHEIMER''S DISEASE') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'DEMENTIA AND ALZHEIMER''S DISEASE') then do;
95302      _levelFrequency_3 + frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   _levelFrequency_3 + frequency_jqlq0G;
95303      end;
MPRINT(EM_DIAGRAM):   end;
95304      keep _levelFrequency_4;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_4;
95305      retain _levelFrequency_4 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_4 0;
95306      if (F_Disease = 'CANCER, ALL') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'CANCER, ALL') then do;
95307      _levelFrequency_4 + frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   _levelFrequency_4 + frequency_jqlq0G;
95308      end;
MPRINT(EM_DIAGRAM):   end;
95309      keep _levelFrequency_5;
MPRINT(EM_DIAGRAM):   keep _levelFrequency_5;
95310      retain _levelFrequency_5 0;
MPRINT(EM_DIAGRAM):   retain _levelFrequency_5 0;
95311      if (F_Disease = 'ASTHMA') then do;
MPRINT(EM_DIAGRAM):   if (F_Disease = 'ASTHMA') then do;
95312      _levelFrequency_5 + frequency_jqlq0G;
MPRINT(EM_DIAGRAM):   _levelFrequency_5 + frequency_jqlq0G;
95313      end;
MPRINT(EM_DIAGRAM):   end;
95314      if _lastObservation_ then do;
MPRINT(EM_DIAGRAM):   if _lastObservation_ then do;
95315      output work.ASSESS_2U22CO8_meansAndTi_xbemIS;
MPRINT(EM_DIAGRAM):   output work.ASSESS_2U22CO8_meansAndTi_xbemIS;
95316      end;
MPRINT(EM_DIAGRAM):   end;
95317      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: There were 945 observations read from the data set EMWS1.PART3_TRAIN.
NOTE: There were 945 observations read from the data set EMWS1.TREE2_TRAIN.
      WHERE Disease not = ' ';
NOTE: The data set WORK.ASSESS_2U22CO8_NORMSD_IS_J57 has 945 observations and 13 variables.
NOTE: The data set WORK.ASSESS_2U22CO8_MEANSANDTI_XBEMIS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

95318      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
95319      set EMWS1.MdlComp_EMRANK;
MPRINT(EM_DIAGRAM):   set EMWS1.MdlComp_EMRANK;
95320      where MODEL = "Tree2" and TARGET = "Disease" and dataRole="TRAIN";
MPRINT(EM_DIAGRAM):   where MODEL = "Tree2" and TARGET = "Disease" and dataRole="TRAIN";
95321      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set EMWS1.MDLCOMP_EMRANK.
      WHERE (MODEL='Tree2') and (TARGET='Disease') and (dataRole='TRAIN');
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

95322      data work._augment;
MPRINT(EM_DIAGRAM):    data work._augment;
95323      do BIN= 1 to 20;
MPRINT(EM_DIAGRAM):   do BIN= 1 to 20;
95324      DECILE = BIN*5;
MPRINT(EM_DIAGRAM):   DECILE = BIN*5;
95325      output;
MPRINT(EM_DIAGRAM):   output;
95326      end;
MPRINT(EM_DIAGRAM):   end;
95327      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._AUGMENT has 20 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

95328      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):   data WORK._EMRANK;
95329      merge WORK._AUGMENT WORK._EMRANK;
MPRINT(EM_DIAGRAM):   merge WORK._AUGMENT WORK._EMRANK;
95330      by BIN;
MPRINT(EM_DIAGRAM):   by BIN;
95331      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._AUGMENT.
NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

95332      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
95333      set WORK._EMRANK end=_lastObservation_;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK end=_lastObservation_;
95334      retain _previousMinP_ _previousMaxP_;
MPRINT(EM_DIAGRAM):   retain _previousMinP_ _previousMaxP_;
95335      retain _group_ 1;
MPRINT(EM_DIAGRAM):   retain _group_ 1;
95336      keep event;
MPRINT(EM_DIAGRAM):   keep event;
95337      keep bin _cutoff_ _group_;
MPRINT(EM_DIAGRAM):   keep bin _cutoff_ _group_;
95338      if (bin > 1) then do;
MPRINT(EM_DIAGRAM):   if (bin > 1) then do;
95339      bin = bin - 1;
MPRINT(EM_DIAGRAM):   bin = bin - 1;
95340      _cutoff_ = (_maxP_ + _previousMinP_) / 2;
MPRINT(EM_DIAGRAM):   _cutoff_ = (_maxP_ + _previousMinP_) / 2;
95341      if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_previousMaxP_ - _previousMinP_) < 1E-6) then do;
95342      /* tied */
95343      _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_/*-1E-6*/
95344      ));
MPRINT(EM_DIAGRAM):   _cutoff_ = max((_minP_ + _maxP_)/2, min(_cutoff_, _previousMinP_ ));
95345      end;
MPRINT(EM_DIAGRAM):   end;
95346      else if (abs(_maxP_ - _minP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _minP_) < 1E-6) then do;
95347      /* next tied */
95348      _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_/*+ 1E-6*/
95349      ));
MPRINT(EM_DIAGRAM):   _cutoff_ = min((_previousMinP_ + _previousMaxP_)/2, max(_cutoff_, _maxP_ 
));
95350      end;
MPRINT(EM_DIAGRAM):   end;
95351      output;
MPRINT(EM_DIAGRAM):   output;
95352      *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   *if ( abs((_maxP_ +_minP_)/2 - (_previousMaxP_ + _previousMinP_)/2) > 
1E-6) then do;
95353      * _group_ + 1;
MPRINT(EM_DIAGRAM):   * _group_ + 1;
95354      *end;
MPRINT(EM_DIAGRAM):   *end;
95355      if (_maxP_ le _previousMinP_ - 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (_maxP_ le _previousMinP_ - 1E-6) then do;
95356      _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
95357      end;
MPRINT(EM_DIAGRAM):   end;
95358      else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
MPRINT(EM_DIAGRAM):   else if (abs(_maxP_ - _previousMinP_) < 1E-6) then do;
95359      if (abs(_maxP_ - _minP_) > 1E-6) then do;
MPRINT(EM_DIAGRAM):   if (abs(_maxP_ - _minP_) > 1E-6) then do;
95360      _group_ + 1;
MPRINT(EM_DIAGRAM):   _group_ + 1;
95361      end;
MPRINT(EM_DIAGRAM):   end;
95362      end;
MPRINT(EM_DIAGRAM):   end;
95363      bin + 1;
MPRINT(EM_DIAGRAM):   bin + 1;
95364      /* correct the previous change */
95365      end;
MPRINT(EM_DIAGRAM):   end;
95366      if (_lastObservation_) then do;
MPRINT(EM_DIAGRAM):   if (_lastObservation_) then do;
95367      _cutoff_ = .;
MPRINT(EM_DIAGRAM):   _cutoff_ = .;
95368      output;
MPRINT(EM_DIAGRAM):   output;
95369      end;
MPRINT(EM_DIAGRAM):   end;
95370      _previousMinP_ = _minP_;
MPRINT(EM_DIAGRAM):   _previousMinP_ = _minP_;
95371      _previousMaxP_ = _maxP_;
MPRINT(EM_DIAGRAM):   _previousMaxP_ = _maxP_;
95372      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

95373      data WORK._EMRANK;
MPRINT(EM_DIAGRAM):    data WORK._EMRANK;
95374      set WORK._EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._EMRANK;
95375      by _group_;
MPRINT(EM_DIAGRAM):   by _group_;
95376      retain _start_;
MPRINT(EM_DIAGRAM):   retain _start_;
95377      if (first._group_) then do;
MPRINT(EM_DIAGRAM):   if (first._group_) then do;
95378      _start_ = _n_;
MPRINT(EM_DIAGRAM):   _start_ = _n_;
95379      end;
MPRINT(EM_DIAGRAM):   end;
95380      if (last._group_) then do;
MPRINT(EM_DIAGRAM):   if (last._group_) then do;
95381      _end_ = _n_;
MPRINT(EM_DIAGRAM):   _end_ = _n_;
95382      output;
MPRINT(EM_DIAGRAM):   output;
95383      end;
MPRINT(EM_DIAGRAM):   end;
95384      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 20 observations read from the data set WORK._EMRANK.
NOTE: The data set WORK._EMRANK has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

95385      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base
95385    ! Model\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring TREE2_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95386      *------------------------------------------------------------*;
95387      * MdlComp: Scoring TREE2_TRAIN data;
95388      *------------------------------------------------------------*;
95389      data EMWS1.MdlComp_TRAIN
95390      / view=EMWS1.MdlComp_TRAIN
95391      ;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_TRAIN / view=EMWS1.MdlComp_TRAIN ;
95392      set EMWS1.Tree2_TRAIN
95393      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_TRAIN ;
95394      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final 
      Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
95395     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
95396     +do;
MPRINT(EM_DIAGRAM):   do;
95397     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
95398     +b_Disease = floor(1 + 20*_temp_);
MPRINT(EM_DIAGRAM):   b_Disease = floor(1 + 20*_temp_);
95399     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
95400      run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
95401      quit;
95402      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
95403      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base
95403    ! Model\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * MdlComp: Scoring TREE2_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
95404      *------------------------------------------------------------*;
95405      * MdlComp: Scoring TREE2_VALIDATE data;
95406      *------------------------------------------------------------*;
95407      data EMWS1.MdlComp_VALIDATE
95408      / view=EMWS1.MdlComp_VALIDATE
95409      ;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_VALIDATE / view=EMWS1.MdlComp_VALIDATE ;
95410      set EMWS1.Tree2_VALIDATE
95411      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_VALIDATE ;
95412      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final 
      Project\AA490_Project\Base Model\Workspaces\EMWS1\MdlComp\EMFLOWSCORE.sas.
95413     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
95414     +do;
MPRINT(EM_DIAGRAM):   do;
95415     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
95416     +b_Disease = floor(1 + 20*_temp_);
MPRINT(EM_DIAGRAM):   b_Disease = floor(1 + 20*_temp_);
95417     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
95418      run;

NOTE: DATA STEP view saved on file EMWS1.MDLCOMP_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.TREE2_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
95419      quit;
95420      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
95421      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
95422      * MdlComp: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * MdlComp: Computing metadata for TRAIN data;
95423      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.MdlComp_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.MdlComp_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.MdlComp_TRAIN out=WORK.M3OK_11W noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OK_11W;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OK_11W(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OK_11W;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OK_11W;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1DEJ12T NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0Z9VJX4(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 
'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then 
do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 
'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   set WORK.M1DEJ12T;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Tree2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Tree2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.MdlComp_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "MdlComp";
MPRINT(EM_DIAGRAM):   run;
NOTE: View EMWS1.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS1.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
