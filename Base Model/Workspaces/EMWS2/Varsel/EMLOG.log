*------------------------------------------------------------*
User:                student
Date:                December 09, 2019
Time:                16:19:38
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:35" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 09, 2019
Time:                16:19:35
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QKBCBV "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QKBCBV new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:35" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:35" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
196383     proc freq data=EMWS2.Varsel_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Varsel_VariableSet noprint;
196384     table ROLE*LEVEL/out=WORK.VarselMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.VarselMETA;
196385     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.VARSEL_VARIABLESET.
NOTE: The data set WORK.VARSELMETA has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
196386     proc print data=WORK.VarselMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.VarselMETA label noobs;
196387     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
196388     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
196389     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
196390     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
196391     run;
 
NOTE: There were 2 observations read from the data set WORK.VARSELMETA.
NOTE: The PROCEDURE PRINT printed page 51.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
196392     title10;
MPRINT(EM_DIAGRAM):   title10;
196393     data WORK.M0E_Y5E5;
MPRINT(EM_DIAGRAM):    data WORK.M0E_Y5E5;
196394     set WORK.M0E_Y5E5;
MPRINT(EM_DIAGRAM):   set WORK.M0E_Y5E5;
196395     if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
196396     role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
196397     output;
MPRINT(EM_DIAGRAM):   output;
196398     end;
MPRINT(EM_DIAGRAM):   end;
196399     if role = 'INPUT' and use in ('Y','D','N') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D','N') then do;
196400     role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
196401     output;
MPRINT(EM_DIAGRAM):   output;
196402     end;
MPRINT(EM_DIAGRAM):   end;
196403     if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
196404     role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
196405     output;
MPRINT(EM_DIAGRAM):   output;
196406     end;
MPRINT(EM_DIAGRAM):   end;
196407     if role = 'FREQ' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' and use in ('Y', 'D') then do;
196408     role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
196409     output;
MPRINT(EM_DIAGRAM):   output;
196410     end;
MPRINT(EM_DIAGRAM):   end;
196411     if role = 'REJECTED' and use in ('N', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then do;
196412     role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
196413     output;
MPRINT(EM_DIAGRAM):   output;
196414     end;
MPRINT(EM_DIAGRAM):   end;
196415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M0E_Y5E5.
NOTE: The data set WORK.M0E_Y5E5 has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196416     /*by pass cmeta */
196417     data WORK.M0E_Y5E5;
MPRINT(EM_DIAGRAM):    data WORK.M0E_Y5E5;
196418     set WORK.M0E_Y5E5;
MPRINT(EM_DIAGRAM):   set WORK.M0E_Y5E5;
196419     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M0E_Y5E5.
NOTE: The data set WORK.M0E_Y5E5 has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196420     data WORK.M3RNDKLR;
MPRINT(EM_DIAGRAM):    data WORK.M3RNDKLR;
196421     set WORK.M3RNDKLR;
MPRINT(EM_DIAGRAM):   set WORK.M3RNDKLR;
196422     if role = 'INPUT' and use in ('N') then delete;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('N') then delete;
196423     if role = 'REJECTED' and use in ('N', 'D') then delete;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then delete;
196424     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M3RNDKLR.
NOTE: The data set WORK.M3RNDKLR has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: Run proc dmdb with the specified maxlevel criterion.
196425     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
196426     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
196427     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
196428     %macro DMDBClass;
196429         Age_group(ASC) Disease(ASC) Gender(ASC) OPT_Population_in_thousands(ASC)
196430     %mend DMDBClass;
196431     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
196432     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
196433     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
196434     %macro DMDBVar;
196435         Cases_in_1000s
196436     %mend DMDBVar;
196437     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
196438     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
196439     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
196440     libname _spdslib SPDE "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD1376_830-5CG9310VLM_\Prc2";
MPRINT(EM_DIAGRAM):   libname _spdslib SPDE "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD1376_830-5CG9310VLM_\Prc2";
NOTE: Libref _SPDSLIB was successfully assigned as follows:
      Engine:        SPDE
      Physical Name: C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD1376_830-5CG9310VLM_\Prc2\
196441     proc dmdb batch data=EMWS2.Trans_TRAIN
196442     dmdbcat=WORK.EM_DMDB
196443     maxlevel = 101
196444     out=_spdslib.EM_DMDB
196445     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Trans_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 101 out=_spdslib.EM_DMDB ;
MPRINT(EM_DIAGRAM):   class
196446     class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Disease(ASC) Gender(ASC) OPT_Population_in_thousands(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
196447     var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
196448     target
196449     Cases_in_1000s
196450     ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
196451     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 750   Memory used = 511K.
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: The data set _SPDSLIB.EM_DMDB has 750 observations and 5 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
196452     quit;
 
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS2.Trans_TRAIN;
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
196453     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
196454     * Varsel: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Varsel: Input Variables Macro ;
196455     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
196456     %macro INPUTS;
196457         AGE_GROUP DISEASE GENDER OPT_POPULATION_IN_THOUSANDS
196458     %mend INPUTS;
196459     proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB
196460     minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS2.Varsel_OUTGROUP outest=EMWS2.Varsel_OUTESTDMINE outeffect=EMWS2.Varsel_OUTEFFECT outrsquare =EMWS2.Varsel_OUTRSQUARE
196461     NOMONITOR
196462     PSHORT
196463     ;
MPRINT(EM_DIAGRAM):   proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS2.Varsel_OUTGROUP outest=EMWS2.Varsel_OUTESTDMINE outeffect=EMWS2.Varsel_OUTEFFECT outrsquare
=EMWS2.Varsel_OUTRSQUARE NOMONITOR PSHORT ;
MPRINT(EM_DIAGRAM):   var
196464     var %INPUTS;
MPRINT(INPUTS):   AGE_GROUP DISEASE GENDER OPT_POPULATION_IN_THOUSANDS
MPRINT(EM_DIAGRAM):  ;
196465     target Cases_in_1000s;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s;
196466     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
196467     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMPUBLISHSCORE.sas";
196468     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Checking database engine with sqluse...
NOTE: Number of threads reset to 1 because of fewer partitions.
 
Initial pass to compute R2s for all targets
750 records read
NOTE: The full X'X matrix has 15 rows and columns.
 
Building X'X  for target: Cases_in_1000s rows=16 memory=0.00 meg.
750 records read
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas opened.
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMPUBLISHSCORE.sas opened.
NOTE: There were 750 observations read from the data set _SPDSLIB.EM_DMDB.
NOTE: The data set EMWS2.VARSEL_OUTGROUP has 11 observations and 8 variables.
NOTE: The data set EMWS2.VARSEL_OUTESTDMINE has 7 observations and 23 variables.
NOTE: The data set EMWS2.VARSEL_OUTEFFECT has 4 observations and 6 variables.
NOTE: The data set EMWS2.VARSEL_OUTRSQUARE has 18 observations and 4 variables.
NOTE: The PROCEDURE DMINE printed pages 52-54.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   run;
196469     quit;
196470     /*      proc print data =EMWS2.Varsel_OUTEFFECT;      proc print data =EMWS2.Varsel_OUTRSQUARE;      */
196471     run;
 
196472     data EMWS2.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_OUTESTDMINE;
196473     set EMWS2.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTESTDMINE;
196474     _uname_=upcase(_name_);
MPRINT(EM_DIAGRAM):   _uname_=upcase(_name_);
196475     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.VARSEL_OUTESTDMINE.
NOTE: The data set EMWS2.VARSEL_OUTESTDMINE has 7 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
196476     proc sql;
MPRINT(EM_DIAGRAM):    proc sql;
196477     create table _tmpoutgroup as select distinct VARIABLE from EMWS2.Varsel_OUTGROUP where VARTYPE='GROUP';
MPRINT(EM_DIAGRAM):   create table _tmpoutgroup as select distinct VARIABLE from EMWS2.Varsel_OUTGROUP where VARTYPE='GROUP';
NOTE: Table WORK._TMPOUTGROUP created, with 2 rows and 1 columns.
 
196478     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
196479     run;
 
196480     data EMWS2.Varsel_OUTAOV16;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_OUTAOV16;
196481     set EMWS2.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTGROUP;
196482     if STRIP(VARTYPE) eq 'AOV16' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'AOV16' then output;
196483     DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
196484     label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
196485     label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
196486     label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
196487     label BIN = "Bin Cutoff";
MPRINT(EM_DIAGRAM):   label BIN = "Bin Cutoff";
196488     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.VARSEL_OUTGROUP.
NOTE: The data set EMWS2.VARSEL_OUTAOV16 has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
196489     data EMWS2.Varsel_OUTGINT;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_OUTGINT;
196490     set EMWS2.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTGROUP;
196491     if STRIP(VARTYPE) eq 'GINTER' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GINTER' then output;
196492     DROP VARTYPE BIN;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN;
196493     label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
196494     label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
196495     label VARIABLE = "Variable 1";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable 1";
196496     label VARIABLE2 = "Variable 2";
MPRINT(EM_DIAGRAM):   label VARIABLE2 = "Variable 2";
196497     label LEVEL = "Level 1";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level 1";
196498     label LEVEL2 = "Level 2";
MPRINT(EM_DIAGRAM):   label LEVEL2 = "Level 2";
196499     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.VARSEL_OUTGROUP.
NOTE: The data set EMWS2.VARSEL_OUTGINT has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196500     data EMWS2.Varsel_OUTGVAR;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_OUTGVAR;
196501     set EMWS2.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTGROUP;
196502     if STRIP(VARTYPE) eq 'GROUP' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GROUP' then output;
196503     DROP VARTYPE BIN VARIABLE2 LEVEL2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN VARIABLE2 LEVEL2;
196504     label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
196505     label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
196506     label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
196507     label LEVEL = "Level";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level";
196508     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.VARSEL_OUTGROUP.
NOTE: The data set EMWS2.VARSEL_OUTGVAR has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
196509     quit;
 
196510     options nonotes nosource;
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file print;
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put "Summary of Variable Selection from Training";
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Target Name : Cases_in_1000s";
MPRINT(EM_DIAGRAM):   put "Target Level : INTERVAL";
MPRINT(EM_DIAGRAM):   put "Variable Selection Model : R-Square";
MPRINT(EM_DIAGRAM):   put '  ';
MPRINT(EM_DIAGRAM):   put "Total number of inputs : 4";
MPRINT(EM_DIAGRAM):   put "Total number of used inputs : 4";
MPRINT(EM_DIAGRAM):   put "Total number of unused inputs : 0";
MPRINT(EM_DIAGRAM):   put "Total number of rejected inputs : 2";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum missing percentage : 50";
MPRINT(EM_DIAGRAM):   put "NOTE: There is no rejected variable by maximum missing percentage";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum class level : 100";
MPRINT(EM_DIAGRAM):   put "NOTE:There is no rejected variable by maximum class level";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "NOTE: 2 group variables have been created";
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
196536     run;
 
NOTE: 15 lines were written to file PRINT.
NOTE: The DATA step printed page 55.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
196537     data EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_RESULTEDVARS;
196538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.VARSEL_RESULTEDVARS has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
196539     libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
NOTE: Libref _SPDSLIB has been deassigned.
196540     *;
MPRINT(EM_DIAGRAM):    *;
196541     data EMWS2.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_EMSCOREVAR;
196542     length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
196543     keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
196544     name = "G_Age_group";
MPRINT(EM_DIAGRAM):   name = "G_Age_group";
196545     file="VARSELCODE\G_Age_group.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Age_group.sas";
196546     output;
MPRINT(EM_DIAGRAM):   output;
196547     name = "G_Disease";
MPRINT(EM_DIAGRAM):   name = "G_Disease";
196548     file="VARSELCODE\G_Disease.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Disease.sas";
196549     output;
MPRINT(EM_DIAGRAM):   output;
196550     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: The data set EMWS2.VARSEL_EMSCOREVAR has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:36" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 09, 2019
Time:                16:19:36
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O347I2T7 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O347I2T7 new;
MPRINT(EM_DIAGRAM):   run;
196652     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
196653     *------------------------------------------------------------*;
196654     * Varsel: Scoring DATA data;
196655     *------------------------------------------------------------*;
196656     data EMWS2.Varsel_TRAIN
196657     / view=EMWS2.Varsel_TRAIN
196658     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_TRAIN / view=EMWS2.Varsel_TRAIN ;
196659     set EMWS2.Trans_TRAIN
196660     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TRAIN ;
196661     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas.
196662    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
196663    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
196664    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
196665    +
196666    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
196667    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
196668    +
196669    +
196670    +/*----G_Age_group begin----*/
196671    +length _NORM19 $ 19;
MPRINT(EM_DIAGRAM):   length _NORM19 $ 19;
196672    +%DMNORMCP( Age_group , _NORM19 )
MPRINT(DMNORMCP):   _NORM19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
196673    +drop _NORM19;
MPRINT(EM_DIAGRAM):   drop _NORM19;
196674    +select(_NORM19);
MPRINT(EM_DIAGRAM):   select(_NORM19);
196675    +  when('0-17' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('0-17' ) G_Age_group = 1;
196676    +  when('18-24' ) G_Age_group = 0;
MPRINT(EM_DIAGRAM):   when('18-24' ) G_Age_group = 0;
196677    +  when('25-44' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('25-44' ) G_Age_group = 1;
196678    +  when('45-64' ) G_Age_group = 2;
MPRINT(EM_DIAGRAM):   when('45-64' ) G_Age_group = 2;
196679    +  when('65-84' ) G_Age_group = 3;
MPRINT(EM_DIAGRAM):   when('65-84' ) G_Age_group = 3;
196680    +  when('85+' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('85+' ) G_Age_group = 1;
196681    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
196682    +end;
MPRINT(EM_DIAGRAM):   end;
196683    +label G_Age_group="Grouped Levels for  Age_group";
MPRINT(EM_DIAGRAM):   label G_Age_group= "Grouped Levels for  Age_group";
196684    +/*----Age_group end----*/
196685    +
196686    +/*----G_Disease begin----*/
196687    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
196688    +%DMNORMCP( Disease , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
196689    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
196690    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
196691    +  when('ASTHMA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('ASTHMA' ) G_Disease = 1;
196692    +  when('CANCER, ALL' ) G_Disease = 2;
MPRINT(EM_DIAGRAM):   when('CANCER, ALL' ) G_Disease = 2;
196693    +  when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
196694    +  when('OSTEOARTHRITIS' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('OSTEOARTHRITIS' ) G_Disease = 1;
196695    +  when('SEPTICEMIA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('SEPTICEMIA' ) G_Disease = 1;
196696    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
196697    +end;
MPRINT(EM_DIAGRAM):   end;
196698    +label G_Disease="Grouped Levels for  Disease";
MPRINT(EM_DIAGRAM):   label G_Disease= "Grouped Levels for  Disease";
196699    +/*----Disease end----*/
196700    +
196701    +
196702    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
196703    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
196704    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
196705     run;
 
NOTE: DATA STEP view saved on file EMWS2.VARSEL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
196706     quit;
196707     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
196708     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
196709     *------------------------------------------------------------*;
196710     * Varsel: Scoring VALIDATE data;
196711     *------------------------------------------------------------*;
196712     data EMWS2.Varsel_VALIDATE
196713     / view=EMWS2.Varsel_VALIDATE
196714     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_VALIDATE / view=EMWS2.Varsel_VALIDATE ;
196715     set EMWS2.Trans_VALIDATE
196716     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_VALIDATE ;
196717     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas.
196718    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
196719    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
196720    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
196721    +
196722    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
196723    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
196724    +
196725    +
196726    +/*----G_Age_group begin----*/
196727    +length _NORM19 $ 19;
MPRINT(EM_DIAGRAM):   length _NORM19 $ 19;
196728    +%DMNORMCP( Age_group , _NORM19 )
MPRINT(DMNORMCP):   _NORM19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
196729    +drop _NORM19;
MPRINT(EM_DIAGRAM):   drop _NORM19;
196730    +select(_NORM19);
MPRINT(EM_DIAGRAM):   select(_NORM19);
196731    +  when('0-17' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('0-17' ) G_Age_group = 1;
196732    +  when('18-24' ) G_Age_group = 0;
MPRINT(EM_DIAGRAM):   when('18-24' ) G_Age_group = 0;
196733    +  when('25-44' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('25-44' ) G_Age_group = 1;
196734    +  when('45-64' ) G_Age_group = 2;
MPRINT(EM_DIAGRAM):   when('45-64' ) G_Age_group = 2;
196735    +  when('65-84' ) G_Age_group = 3;
MPRINT(EM_DIAGRAM):   when('65-84' ) G_Age_group = 3;
196736    +  when('85+' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('85+' ) G_Age_group = 1;
196737    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
196738    +end;
MPRINT(EM_DIAGRAM):   end;
196739    +label G_Age_group="Grouped Levels for  Age_group";
MPRINT(EM_DIAGRAM):   label G_Age_group= "Grouped Levels for  Age_group";
196740    +/*----Age_group end----*/
196741    +
196742    +/*----G_Disease begin----*/
196743    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
196744    +%DMNORMCP( Disease , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
196745    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
196746    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
196747    +  when('ASTHMA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('ASTHMA' ) G_Disease = 1;
196748    +  when('CANCER, ALL' ) G_Disease = 2;
MPRINT(EM_DIAGRAM):   when('CANCER, ALL' ) G_Disease = 2;
196749    +  when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
196750    +  when('OSTEOARTHRITIS' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('OSTEOARTHRITIS' ) G_Disease = 1;
196751    +  when('SEPTICEMIA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('SEPTICEMIA' ) G_Disease = 1;
196752    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
196753    +end;
MPRINT(EM_DIAGRAM):   end;
196754    +label G_Disease="Grouped Levels for  Disease";
MPRINT(EM_DIAGRAM):   label G_Disease= "Grouped Levels for  Disease";
196755    +/*----Disease end----*/
196756    +
196757    +
196758    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
196759    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
196760    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
196761     run;
 
NOTE: DATA STEP view saved on file EMWS2.VARSEL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
196762     quit;
196763     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
196764     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
196765     *------------------------------------------------------------*;
196766     * Varsel: Scoring TEST data;
196767     *------------------------------------------------------------*;
196768     data EMWS2.Varsel_TEST
196769     / view=EMWS2.Varsel_TEST
196770     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_TEST / view=EMWS2.Varsel_TEST ;
196771     set EMWS2.Trans_TEST
196772     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TEST ;
196773     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas.
196774    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
196775    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
196776    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
196777    +
196778    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
196779    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
196780    +
196781    +
196782    +/*----G_Age_group begin----*/
196783    +length _NORM19 $ 19;
MPRINT(EM_DIAGRAM):   length _NORM19 $ 19;
196784    +%DMNORMCP( Age_group , _NORM19 )
MPRINT(DMNORMCP):   _NORM19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
196785    +drop _NORM19;
MPRINT(EM_DIAGRAM):   drop _NORM19;
196786    +select(_NORM19);
MPRINT(EM_DIAGRAM):   select(_NORM19);
196787    +  when('0-17' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('0-17' ) G_Age_group = 1;
196788    +  when('18-24' ) G_Age_group = 0;
MPRINT(EM_DIAGRAM):   when('18-24' ) G_Age_group = 0;
196789    +  when('25-44' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('25-44' ) G_Age_group = 1;
196790    +  when('45-64' ) G_Age_group = 2;
MPRINT(EM_DIAGRAM):   when('45-64' ) G_Age_group = 2;
196791    +  when('65-84' ) G_Age_group = 3;
MPRINT(EM_DIAGRAM):   when('65-84' ) G_Age_group = 3;
196792    +  when('85+' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('85+' ) G_Age_group = 1;
196793    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
196794    +end;
MPRINT(EM_DIAGRAM):   end;
196795    +label G_Age_group="Grouped Levels for  Age_group";
MPRINT(EM_DIAGRAM):   label G_Age_group= "Grouped Levels for  Age_group";
196796    +/*----Age_group end----*/
196797    +
196798    +/*----G_Disease begin----*/
196799    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
196800    +%DMNORMCP( Disease , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
196801    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
196802    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
196803    +  when('ASTHMA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('ASTHMA' ) G_Disease = 1;
196804    +  when('CANCER, ALL' ) G_Disease = 2;
MPRINT(EM_DIAGRAM):   when('CANCER, ALL' ) G_Disease = 2;
196805    +  when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
196806    +  when('OSTEOARTHRITIS' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('OSTEOARTHRITIS' ) G_Disease = 1;
196807    +  when('SEPTICEMIA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('SEPTICEMIA' ) G_Disease = 1;
196808    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
196809    +end;
MPRINT(EM_DIAGRAM):   end;
196810    +label G_Disease="Grouped Levels for  Disease";
MPRINT(EM_DIAGRAM):   label G_Disease= "Grouped Levels for  Disease";
196811    +/*----Disease end----*/
196812    +
196813    +
196814    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
196815    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
196816    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
196817     run;
 
NOTE: DATA STEP view saved on file EMWS2.VARSEL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TEST.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
196818     quit;
196819     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
196820     options nosource;
MPRINT(EM_DIAGRAM):    options nosource;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   label RSquare = "R-Square";
MPRINT(EM_DIAGRAM):   rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   if Type="AOV16" then delete;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS2.VARSEL_OUTRSQUARE.
NOTE: The data set EMWS2.VARSEL_R2DS has 18 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS2.VARSEL_R2DS.
NOTE: The data set EMWS2.VARSEL_R2DS has 18 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   label RSquare = "Sequential R-Square";
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   Rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.VARSEL_OUTEFFECT.
NOTE: The data set EMWS2.VARSEL_EFFECTDS has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS2.VARSEL_EFFECTDS.
NOTE: The data set EMWS2.VARSEL_EFFECTDS has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Varsel_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Varsel_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Varsel_TRAIN out=WORK.M29_T4PC noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29_T4PC;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M29_T4PC(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M29_T4PC;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M29_T4PC;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2915IJG NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1S0GT9B(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   set WORK.M2915IJG;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Varsel";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'AGE_GROUP' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DISEASE' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_AGE_GROUP" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_DISEASE" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS2.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS2.VARSEL_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_RESULTEDVARS(keep = NAME ROLE LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   length COMMENT $300;
MPRINT(EM_DIAGRAM):   label COMMENT = "Reasons for Rejection";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'AGE_GROUP' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DISEASE' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   if ROLE not in ('REJECTED' 'INPUT') then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_UNUSEDINPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
197214     run;
 
197215     data EMWS2.Varsel_CMETA_NONREJECTS EMWS2.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_CMETA_NONREJECTS EMWS2.Varsel_CMETA_REJECTS;
197216     set EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_TRAIN;
197217     if ROLE ='REJECTED' then output EMWS2.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):   if ROLE ='REJECTED' then output EMWS2.Varsel_CMETA_REJECTS;
197218     else output EMWS2.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   else output EMWS2.Varsel_CMETA_NONREJECTS;
197219     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS2.VARSEL_CMETA_TRAIN.
NOTE: The data set EMWS2.VARSEL_CMETA_NONREJECTS has 7 observations and 20 variables.
NOTE: The data set EMWS2.VARSEL_CMETA_REJECTS has 2 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
197220     data EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_CMETA_TRAIN;
197221     set EMWS2.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_NONREJECTS;
197222     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.VARSEL_CMETA_NONREJECTS.
NOTE: The data set EMWS2.VARSEL_CMETA_TRAIN has 7 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
197223     data WORK._tmp_meta_;
MPRINT(EM_DIAGRAM):    data WORK._tmp_meta_;
197224     set EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_TRAIN;
197225     if ROLE ^= 'INPUT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^= 'INPUT' then delete;
197226     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK._TMP_META_ has 4 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:38" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 09, 2019
Time:                16:19:38
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1FOTNF4 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1FOTNF4 new;
MPRINT(EM_DIAGRAM):   run;
197250     %em_getActionStatus(emlib=EMWS2, nodeid=Varsel);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
197251     %let em_Train = Y;
197252     %let em_Report = Y;
197253     %let em_Score = Y;
197254     %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
