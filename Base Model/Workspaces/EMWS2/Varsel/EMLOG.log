*------------------------------------------------------------*
User:                student
Date:                December 04, 2019
Time:                13:45:35
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:32" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 04, 2019
Time:                13:45:32
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3WW7BQ5 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3WW7BQ5 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:32" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:32" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
192011     proc freq data=EMWS2.Varsel_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Varsel_VariableSet noprint;
192012     table ROLE*LEVEL/out=WORK.VarselMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.VarselMETA;
192013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.VARSEL_VARIABLESET.
NOTE: The data set WORK.VARSELMETA has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
192014     proc print data=WORK.VarselMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.VarselMETA label noobs;
192015     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
192016     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
192017     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
192018     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
192019     run;
 
NOTE: There were 2 observations read from the data set WORK.VARSELMETA.
NOTE: The PROCEDURE PRINT printed page 51.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
192020     title10;
MPRINT(EM_DIAGRAM):   title10;
192021     data WORK.M0NWOT4J;
MPRINT(EM_DIAGRAM):    data WORK.M0NWOT4J;
192022     set WORK.M0NWOT4J;
MPRINT(EM_DIAGRAM):   set WORK.M0NWOT4J;
192023     if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
192024     role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
192025     output;
MPRINT(EM_DIAGRAM):   output;
192026     end;
MPRINT(EM_DIAGRAM):   end;
192027     if role = 'INPUT' and use in ('Y','D','N') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D','N') then do;
192028     role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
192029     output;
MPRINT(EM_DIAGRAM):   output;
192030     end;
MPRINT(EM_DIAGRAM):   end;
192031     if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
192032     role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
192033     output;
MPRINT(EM_DIAGRAM):   output;
192034     end;
MPRINT(EM_DIAGRAM):   end;
192035     if role = 'FREQ' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' and use in ('Y', 'D') then do;
192036     role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
192037     output;
MPRINT(EM_DIAGRAM):   output;
192038     end;
MPRINT(EM_DIAGRAM):   end;
192039     if role = 'REJECTED' and use in ('N', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then do;
192040     role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
192041     output;
MPRINT(EM_DIAGRAM):   output;
192042     end;
MPRINT(EM_DIAGRAM):   end;
192043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M0NWOT4J.
NOTE: The data set WORK.M0NWOT4J has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
192044     /*by pass cmeta */
192045     data WORK.M0NWOT4J;
MPRINT(EM_DIAGRAM):    data WORK.M0NWOT4J;
192046     set WORK.M0NWOT4J;
MPRINT(EM_DIAGRAM):   set WORK.M0NWOT4J;
192047     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M0NWOT4J.
NOTE: The data set WORK.M0NWOT4J has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
192048     data WORK.M0BS9Z3K;
MPRINT(EM_DIAGRAM):    data WORK.M0BS9Z3K;
192049     set WORK.M0BS9Z3K;
MPRINT(EM_DIAGRAM):   set WORK.M0BS9Z3K;
192050     if role = 'INPUT' and use in ('N') then delete;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('N') then delete;
192051     if role = 'REJECTED' and use in ('N', 'D') then delete;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then delete;
192052     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M0BS9Z3K.
NOTE: The data set WORK.M0BS9Z3K has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: Run proc dmdb with the specified maxlevel criterion.
192053     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
192054     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
192055     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
192056     %macro DMDBClass;
192057         Age_group(ASC) Date(ASC) Disease(ASC) Gender(ASC)
192058        OPT_Population_in_thousands(ASC)
192059     %mend DMDBClass;
192060     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
192061     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
192062     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
192063     %macro DMDBVar;
192064         Cases_in_1000s
192065     %mend DMDBVar;
192066     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192067     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
192068     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192069     libname _spdslib SPDE "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD29064_830-5CG9310VLM_\Prc2";
MPRINT(EM_DIAGRAM):   libname _spdslib SPDE "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD29064_830-5CG9310VLM_\Prc2";
NOTE: Libref _SPDSLIB was successfully assigned as follows:
      Engine:        SPDE
      Physical Name: C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD29064_830-5CG9310VLM_\Prc2\
192070     proc dmdb batch data=EMWS2.Trans_TRAIN
192071     dmdbcat=WORK.EM_DMDB
192072     maxlevel = 101
192073     out=_spdslib.EM_DMDB
192074     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Trans_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 101 out=_spdslib.EM_DMDB ;
MPRINT(EM_DIAGRAM):   class
192075     class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Date(ASC) Disease(ASC) Gender(ASC) OPT_Population_in_thousands(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
192076     var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
192077     target
192078     Cases_in_1000s
192079     ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
192080     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 378   Memory used = 511K.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: The data set _SPDSLIB.EM_DMDB has 378 observations and 6 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
192081     quit;
 
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS2.Trans_TRAIN;
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.IMPT_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
192082     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
192083     * Varsel: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Varsel: Input Variables Macro ;
192084     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
192085     %macro INPUTS;
192086         AGE_GROUP DATE DISEASE GENDER OPT_POPULATION_IN_THOUSANDS
192087     %mend INPUTS;
192088     proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB
192089     minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS2.Varsel_OUTGROUP outest=EMWS2.Varsel_OUTESTDMINE outeffect=EMWS2.Varsel_OUTEFFECT outrsquare =EMWS2.Varsel_OUTRSQUARE
192090     NOMONITOR
192091     PSHORT
192092     ;
MPRINT(EM_DIAGRAM):   proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS2.Varsel_OUTGROUP outest=EMWS2.Varsel_OUTESTDMINE outeffect=EMWS2.Varsel_OUTEFFECT outrsquare
=EMWS2.Varsel_OUTRSQUARE NOMONITOR PSHORT ;
MPRINT(EM_DIAGRAM):   var
192093     var %INPUTS;
MPRINT(INPUTS):   AGE_GROUP DATE DISEASE GENDER OPT_POPULATION_IN_THOUSANDS
MPRINT(EM_DIAGRAM):  ;
192094     target Cases_in_1000s;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s;
192095     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
192096     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMPUBLISHSCORE.sas";
192097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Checking database engine with sqluse...
NOTE: Number of threads reset to 1 because of fewer partitions.
 
Initial pass to compute R2s for all targets
378 records read
NOTE: The full X'X matrix has 17 rows and columns.
 
Building X'X  for target: Cases_in_1000s rows=18 memory=0.00 meg.
378 records read
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas opened.
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMPUBLISHSCORE.sas opened.
NOTE: There were 378 observations read from the data set _SPDSLIB.EM_DMDB.
NOTE: The data set EMWS2.VARSEL_OUTGROUP has 37 observations and 8 variables.
NOTE: The data set EMWS2.VARSEL_OUTESTDMINE has 12 observations and 23 variables.
NOTE: The data set EMWS2.VARSEL_OUTEFFECT has 5 observations and 6 variables.
NOTE: The data set EMWS2.VARSEL_OUTRSQUARE has 30 observations and 4 variables.
NOTE: The PROCEDURE DMINE printed pages 52-54.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   run;
192098     quit;
192099     /*      proc print data =EMWS2.Varsel_OUTEFFECT;      proc print data =EMWS2.Varsel_OUTRSQUARE;      */
192100     run;
 
192101     data EMWS2.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_OUTESTDMINE;
192102     set EMWS2.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTESTDMINE;
192103     _uname_=upcase(_name_);
MPRINT(EM_DIAGRAM):   _uname_=upcase(_name_);
192104     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.VARSEL_OUTESTDMINE.
NOTE: The data set EMWS2.VARSEL_OUTESTDMINE has 12 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
192105     proc sql;
MPRINT(EM_DIAGRAM):    proc sql;
192106     create table _tmpoutgroup as select distinct VARIABLE from EMWS2.Varsel_OUTGROUP where VARTYPE='GROUP';
MPRINT(EM_DIAGRAM):   create table _tmpoutgroup as select distinct VARIABLE from EMWS2.Varsel_OUTGROUP where VARTYPE='GROUP';
NOTE: Table WORK._TMPOUTGROUP created, with 5 rows and 1 columns.
 
192107     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
192108     run;
 
192109     data EMWS2.Varsel_OUTAOV16;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_OUTAOV16;
192110     set EMWS2.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTGROUP;
192111     if STRIP(VARTYPE) eq 'AOV16' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'AOV16' then output;
192112     DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
192113     label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
192114     label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
192115     label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
192116     label BIN = "Bin Cutoff";
MPRINT(EM_DIAGRAM):   label BIN = "Bin Cutoff";
192117     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set EMWS2.VARSEL_OUTGROUP.
NOTE: The data set EMWS2.VARSEL_OUTAOV16 has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
192118     data EMWS2.Varsel_OUTGINT;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_OUTGINT;
192119     set EMWS2.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTGROUP;
192120     if STRIP(VARTYPE) eq 'GINTER' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GINTER' then output;
192121     DROP VARTYPE BIN;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN;
192122     label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
192123     label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
192124     label VARIABLE = "Variable 1";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable 1";
192125     label VARIABLE2 = "Variable 2";
MPRINT(EM_DIAGRAM):   label VARIABLE2 = "Variable 2";
192126     label LEVEL = "Level 1";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level 1";
192127     label LEVEL2 = "Level 2";
MPRINT(EM_DIAGRAM):   label LEVEL2 = "Level 2";
192128     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set EMWS2.VARSEL_OUTGROUP.
NOTE: The data set EMWS2.VARSEL_OUTGINT has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
192129     data EMWS2.Varsel_OUTGVAR;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_OUTGVAR;
192130     set EMWS2.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTGROUP;
192131     if STRIP(VARTYPE) eq 'GROUP' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GROUP' then output;
192132     DROP VARTYPE BIN VARIABLE2 LEVEL2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN VARIABLE2 LEVEL2;
192133     label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
192134     label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
192135     label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
192136     label LEVEL = "Level";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level";
192137     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 37 observations read from the data set EMWS2.VARSEL_OUTGROUP.
NOTE: The data set EMWS2.VARSEL_OUTGVAR has 37 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
192138     quit;
 
192139     options nonotes nosource;
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file print;
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put "Summary of Variable Selection from Training";
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Target Name : Cases_in_1000s";
MPRINT(EM_DIAGRAM):   put "Target Level : INTERVAL";
MPRINT(EM_DIAGRAM):   put "Variable Selection Model : R-Square";
MPRINT(EM_DIAGRAM):   put '  ';
MPRINT(EM_DIAGRAM):   put "Total number of inputs : 5";
MPRINT(EM_DIAGRAM):   put "Total number of used inputs : 5";
MPRINT(EM_DIAGRAM):   put "Total number of unused inputs : 0";
MPRINT(EM_DIAGRAM):   put "Total number of rejected inputs : 5";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum missing percentage : 50";
MPRINT(EM_DIAGRAM):   put "NOTE: There is no rejected variable by maximum missing percentage";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum class level : 100";
MPRINT(EM_DIAGRAM):   put "NOTE:There is no rejected variable by maximum class level";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "NOTE: 5 group variables have been created";
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
192165     run;
 
NOTE: 15 lines were written to file PRINT.
NOTE: The DATA step printed page 55.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
192166     data EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_RESULTEDVARS;
192167     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.VARSEL_RESULTEDVARS has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
192168     libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
NOTE: Libref _SPDSLIB has been deassigned.
192169     *;
MPRINT(EM_DIAGRAM):    *;
192170     data EMWS2.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_EMSCOREVAR;
192171     length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
192172     keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
192173     name = "G_Age_group";
MPRINT(EM_DIAGRAM):   name = "G_Age_group";
192174     file="VARSELCODE\G_Age_group.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Age_group.sas";
192175     output;
MPRINT(EM_DIAGRAM):   output;
192176     name = "G_Date";
MPRINT(EM_DIAGRAM):   name = "G_Date";
192177     file="VARSELCODE\G_Date.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Date.sas";
192178     output;
MPRINT(EM_DIAGRAM):   output;
192179     name = "G_Disease";
MPRINT(EM_DIAGRAM):   name = "G_Disease";
192180     file="VARSELCODE\G_Disease.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Disease.sas";
192181     output;
MPRINT(EM_DIAGRAM):   output;
192182     name = "G_Gender";
MPRINT(EM_DIAGRAM):   name = "G_Gender";
192183     file="VARSELCODE\G_Gender.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_Gender.sas";
192184     output;
MPRINT(EM_DIAGRAM):   output;
192185     name = "G_OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   name = "G_OPT_Population_in_thousands";
192186     file="VARSELCODE\G_OPT_Population_in_thousands.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_OPT_Population_in_thousands.sas";
192187     output;
MPRINT(EM_DIAGRAM):   output;
192188     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: The data set EMWS2.VARSEL_EMSCOREVAR has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:34" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 04, 2019
Time:                13:45:34
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0GBUBOR "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0GBUBOR new;
MPRINT(EM_DIAGRAM):   run;
192290     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192291     *------------------------------------------------------------*;
192292     * Varsel: Scoring DATA data;
192293     *------------------------------------------------------------*;
192294     data EMWS2.Varsel_TRAIN
192295     / view=EMWS2.Varsel_TRAIN
192296     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_TRAIN / view=EMWS2.Varsel_TRAIN ;
192297     set EMWS2.Trans_TRAIN
192298     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TRAIN ;
192299     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas.
192300    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
192301    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
192302    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
192303    +
192304    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
192305    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
192306    +
192307    +
192308    +/*----G_OPT_Population_in_thousands begin----*/
192309    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
192310    +%DMNORMCP( OPT_Population_in_thousands , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(OPT_Population_in_thousands,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192311    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
192312    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
192313    +  when('01:LOW-8773.6505' ) G_OPT_Population_in_thousands = 1;
MPRINT(EM_DIAGRAM):   when('01:LOW-8773.6505' ) G_OPT_Population_in_thousands = 1;
192314    +  when('02:8773.6505-34177.5, MISSING' ) G_OPT_Population_in_thousands = 0;
MPRINT(EM_DIAGRAM):   when('02:8773.6505-34177.5, MISSING' ) G_OPT_Population_in_thousands = 0;
192315    +  when('03:34177.5-72628.5' ) G_OPT_Population_in_thousands = 1;
MPRINT(EM_DIAGRAM):   when('03:34177.5-72628.5' ) G_OPT_Population_in_thousands = 1;
192316    +  when('04:72628.5-HIGH' ) G_OPT_Population_in_thousands = 2;
MPRINT(EM_DIAGRAM):   when('04:72628.5-HIGH' ) G_OPT_Population_in_thousands = 2;
192317    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192318    +end;
MPRINT(EM_DIAGRAM):   end;
192319    +label G_OPT_Population_in_thousands="Grouped Levels for
192320    +        OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   label G_OPT_Population_in_thousands= "Grouped Levels for          OPT_Population_in_thousands";
192321    +/*----OPT_Population_in_thousands end----*/
192322    +
192323    +/*----G_Disease begin----*/
192324    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
192325    +%DMNORMCP( Disease , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192326    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
192327    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
192328    +  when('ASTHMA' ) G_Disease = 2;
MPRINT(EM_DIAGRAM):   when('ASTHMA' ) G_Disease = 2;
192329    +  when('CANCER, ALL' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('CANCER, ALL' ) G_Disease = 1;
192330    +  when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
192331    +  when('OSTEOARTHRITIS' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('OSTEOARTHRITIS' ) G_Disease = 0;
192332    +  when('SEPTICEMIA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('SEPTICEMIA' ) G_Disease = 1;
192333    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192334    +end;
MPRINT(EM_DIAGRAM):   end;
192335    +label G_Disease="Grouped Levels for  Disease";
MPRINT(EM_DIAGRAM):   label G_Disease= "Grouped Levels for  Disease";
192336    +/*----Disease end----*/
192337    +
192338    +/*----G_Age_group begin----*/
192339    +length _NORM19 $ 19;
MPRINT(EM_DIAGRAM):   length _NORM19 $ 19;
192340    +%DMNORMCP( Age_group , _NORM19 )
MPRINT(DMNORMCP):   _NORM19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192341    +drop _NORM19;
MPRINT(EM_DIAGRAM):   drop _NORM19;
192342    +select(_NORM19);
MPRINT(EM_DIAGRAM):   select(_NORM19);
192343    +  when('0-17' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('0-17' ) G_Age_group = 1;
192344    +  when('18-24' ) G_Age_group = 0;
MPRINT(EM_DIAGRAM):   when('18-24' ) G_Age_group = 0;
192345    +  when('25-44' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('25-44' ) G_Age_group = 1;
192346    +  when('85+' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('85+' ) G_Age_group = 1;
192347    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192348    +end;
MPRINT(EM_DIAGRAM):   end;
192349    +label G_Age_group="Grouped Levels for  Age_group";
MPRINT(EM_DIAGRAM):   label G_Age_group= "Grouped Levels for  Age_group";
192350    +/*----Age_group end----*/
192351    +
192352    +/*----G_Gender begin----*/
192353    +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
192354    +_NORM10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _NORM10 = put( Gender , $CHAR10. );
192355    +%DMNORMIP( _NORM10 )
MPRINT(DMNORMIP):   call dmnorm(_NORM10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
192356    +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
192357    +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
192358    +  when('ALL' ) G_Gender = 1;
MPRINT(EM_DIAGRAM):   when('ALL' ) G_Gender = 1;
192359    +  when('FEMALE' ) G_Gender = 0;
MPRINT(EM_DIAGRAM):   when('FEMALE' ) G_Gender = 0;
192360    +  when('MALE' ) G_Gender = 0;
MPRINT(EM_DIAGRAM):   when('MALE' ) G_Gender = 0;
192361    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192362    +end;
MPRINT(EM_DIAGRAM):   end;
192363    +label G_Gender="Grouped Levels for  Gender";
MPRINT(EM_DIAGRAM):   label G_Gender= "Grouped Levels for  Gender";
192364    +/*----Gender end----*/
192365    +
192366    +/*----G_Date begin----*/
192367    +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
192368    +%DMNORMCP( Date , _NORM10 )
MPRINT(DMNORMCP):   _NORM10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192369    +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
192370    +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
192371    +  when('1990' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1990' ) G_Date = 2;
192372    +  when('1991' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1991' ) G_Date = 2;
192373    +  when('1992' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1992' ) G_Date = 2;
192374    +  when('1993' ) G_Date = 4;
MPRINT(EM_DIAGRAM):   when('1993' ) G_Date = 4;
192375    +  when('1994' ) G_Date = 1;
MPRINT(EM_DIAGRAM):   when('1994' ) G_Date = 1;
192376    +  when('1995' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1995' ) G_Date = 3;
192377    +  when('1996' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1996' ) G_Date = 3;
192378    +  when('1997' ) G_Date = 4;
MPRINT(EM_DIAGRAM):   when('1997' ) G_Date = 4;
192379    +  when('1998' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1998' ) G_Date = 3;
192380    +  when('1999' ) G_Date = 0;
MPRINT(EM_DIAGRAM):   when('1999' ) G_Date = 0;
192381    +  when('2000' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2000' ) G_Date = 3;
192382    +  when('2001' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2001' ) G_Date = 3;
192383    +  when('2002' ) G_Date = 1;
MPRINT(EM_DIAGRAM):   when('2002' ) G_Date = 1;
192384    +  when('2003' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2003' ) G_Date = 5;
192385    +  when('2004' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2004' ) G_Date = 5;
192386    +  when('2005' ) G_Date = 0;
MPRINT(EM_DIAGRAM):   when('2005' ) G_Date = 0;
192387    +  when('2006' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2006' ) G_Date = 5;
192388    +  when('2007' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2007' ) G_Date = 5;
192389    +  when('2008' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('2008' ) G_Date = 2;
192390    +  when('2009' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2009' ) G_Date = 5;
192391    +  when('2010' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2010' ) G_Date = 3;
192392    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192393    +end;
MPRINT(EM_DIAGRAM):   end;
192394    +label G_Date="Grouped Levels for  Date";
MPRINT(EM_DIAGRAM):   label G_Date= "Grouped Levels for  Date";
192395    +/*----Date end----*/
192396    +
192397    +
192398    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
192399    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
192400    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
192401     run;
 
NOTE: DATA STEP view saved on file EMWS2.VARSEL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
192402     quit;
192403     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
192404     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192405     *------------------------------------------------------------*;
192406     * Varsel: Scoring VALIDATE data;
192407     *------------------------------------------------------------*;
192408     data EMWS2.Varsel_VALIDATE
192409     / view=EMWS2.Varsel_VALIDATE
192410     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_VALIDATE / view=EMWS2.Varsel_VALIDATE ;
192411     set EMWS2.Trans_VALIDATE
192412     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_VALIDATE ;
192413     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas.
192414    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
192415    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
192416    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
192417    +
192418    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
192419    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
192420    +
192421    +
192422    +/*----G_OPT_Population_in_thousands begin----*/
192423    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
192424    +%DMNORMCP( OPT_Population_in_thousands , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(OPT_Population_in_thousands,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192425    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
192426    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
192427    +  when('01:LOW-8773.6505' ) G_OPT_Population_in_thousands = 1;
MPRINT(EM_DIAGRAM):   when('01:LOW-8773.6505' ) G_OPT_Population_in_thousands = 1;
192428    +  when('02:8773.6505-34177.5, MISSING' ) G_OPT_Population_in_thousands = 0;
MPRINT(EM_DIAGRAM):   when('02:8773.6505-34177.5, MISSING' ) G_OPT_Population_in_thousands = 0;
192429    +  when('03:34177.5-72628.5' ) G_OPT_Population_in_thousands = 1;
MPRINT(EM_DIAGRAM):   when('03:34177.5-72628.5' ) G_OPT_Population_in_thousands = 1;
192430    +  when('04:72628.5-HIGH' ) G_OPT_Population_in_thousands = 2;
MPRINT(EM_DIAGRAM):   when('04:72628.5-HIGH' ) G_OPT_Population_in_thousands = 2;
192431    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192432    +end;
MPRINT(EM_DIAGRAM):   end;
192433    +label G_OPT_Population_in_thousands="Grouped Levels for
192434    +        OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   label G_OPT_Population_in_thousands= "Grouped Levels for          OPT_Population_in_thousands";
192435    +/*----OPT_Population_in_thousands end----*/
192436    +
192437    +/*----G_Disease begin----*/
192438    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
192439    +%DMNORMCP( Disease , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192440    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
192441    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
192442    +  when('ASTHMA' ) G_Disease = 2;
MPRINT(EM_DIAGRAM):   when('ASTHMA' ) G_Disease = 2;
192443    +  when('CANCER, ALL' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('CANCER, ALL' ) G_Disease = 1;
192444    +  when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
192445    +  when('OSTEOARTHRITIS' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('OSTEOARTHRITIS' ) G_Disease = 0;
192446    +  when('SEPTICEMIA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('SEPTICEMIA' ) G_Disease = 1;
192447    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192448    +end;
MPRINT(EM_DIAGRAM):   end;
192449    +label G_Disease="Grouped Levels for  Disease";
MPRINT(EM_DIAGRAM):   label G_Disease= "Grouped Levels for  Disease";
192450    +/*----Disease end----*/
192451    +
192452    +/*----G_Age_group begin----*/
192453    +length _NORM19 $ 19;
MPRINT(EM_DIAGRAM):   length _NORM19 $ 19;
192454    +%DMNORMCP( Age_group , _NORM19 )
MPRINT(DMNORMCP):   _NORM19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192455    +drop _NORM19;
MPRINT(EM_DIAGRAM):   drop _NORM19;
192456    +select(_NORM19);
MPRINT(EM_DIAGRAM):   select(_NORM19);
192457    +  when('0-17' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('0-17' ) G_Age_group = 1;
192458    +  when('18-24' ) G_Age_group = 0;
MPRINT(EM_DIAGRAM):   when('18-24' ) G_Age_group = 0;
192459    +  when('25-44' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('25-44' ) G_Age_group = 1;
192460    +  when('85+' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('85+' ) G_Age_group = 1;
192461    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192462    +end;
MPRINT(EM_DIAGRAM):   end;
192463    +label G_Age_group="Grouped Levels for  Age_group";
MPRINT(EM_DIAGRAM):   label G_Age_group= "Grouped Levels for  Age_group";
192464    +/*----Age_group end----*/
192465    +
192466    +/*----G_Gender begin----*/
192467    +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
192468    +_NORM10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _NORM10 = put( Gender , $CHAR10. );
192469    +%DMNORMIP( _NORM10 )
MPRINT(DMNORMIP):   call dmnorm(_NORM10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
192470    +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
192471    +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
192472    +  when('ALL' ) G_Gender = 1;
MPRINT(EM_DIAGRAM):   when('ALL' ) G_Gender = 1;
192473    +  when('FEMALE' ) G_Gender = 0;
MPRINT(EM_DIAGRAM):   when('FEMALE' ) G_Gender = 0;
192474    +  when('MALE' ) G_Gender = 0;
MPRINT(EM_DIAGRAM):   when('MALE' ) G_Gender = 0;
192475    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192476    +end;
MPRINT(EM_DIAGRAM):   end;
192477    +label G_Gender="Grouped Levels for  Gender";
MPRINT(EM_DIAGRAM):   label G_Gender= "Grouped Levels for  Gender";
192478    +/*----Gender end----*/
192479    +
192480    +/*----G_Date begin----*/
192481    +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
192482    +%DMNORMCP( Date , _NORM10 )
MPRINT(DMNORMCP):   _NORM10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192483    +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
192484    +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
192485    +  when('1990' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1990' ) G_Date = 2;
192486    +  when('1991' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1991' ) G_Date = 2;
192487    +  when('1992' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1992' ) G_Date = 2;
192488    +  when('1993' ) G_Date = 4;
MPRINT(EM_DIAGRAM):   when('1993' ) G_Date = 4;
192489    +  when('1994' ) G_Date = 1;
MPRINT(EM_DIAGRAM):   when('1994' ) G_Date = 1;
192490    +  when('1995' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1995' ) G_Date = 3;
192491    +  when('1996' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1996' ) G_Date = 3;
192492    +  when('1997' ) G_Date = 4;
MPRINT(EM_DIAGRAM):   when('1997' ) G_Date = 4;
192493    +  when('1998' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1998' ) G_Date = 3;
192494    +  when('1999' ) G_Date = 0;
MPRINT(EM_DIAGRAM):   when('1999' ) G_Date = 0;
192495    +  when('2000' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2000' ) G_Date = 3;
192496    +  when('2001' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2001' ) G_Date = 3;
192497    +  when('2002' ) G_Date = 1;
MPRINT(EM_DIAGRAM):   when('2002' ) G_Date = 1;
192498    +  when('2003' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2003' ) G_Date = 5;
192499    +  when('2004' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2004' ) G_Date = 5;
192500    +  when('2005' ) G_Date = 0;
MPRINT(EM_DIAGRAM):   when('2005' ) G_Date = 0;
192501    +  when('2006' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2006' ) G_Date = 5;
192502    +  when('2007' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2007' ) G_Date = 5;
192503    +  when('2008' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('2008' ) G_Date = 2;
192504    +  when('2009' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2009' ) G_Date = 5;
192505    +  when('2010' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2010' ) G_Date = 3;
192506    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192507    +end;
MPRINT(EM_DIAGRAM):   end;
192508    +label G_Date="Grouped Levels for  Date";
MPRINT(EM_DIAGRAM):   label G_Date= "Grouped Levels for  Date";
192509    +/*----Date end----*/
192510    +
192511    +
192512    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
192513    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
192514    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
192515     run;
 
NOTE: DATA STEP view saved on file EMWS2.VARSEL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
192516     quit;
192517     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
192518     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
192519     *------------------------------------------------------------*;
192520     * Varsel: Scoring TEST data;
192521     *------------------------------------------------------------*;
192522     data EMWS2.Varsel_TEST
192523     / view=EMWS2.Varsel_TEST
192524     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_TEST / view=EMWS2.Varsel_TEST ;
192525     set EMWS2.Trans_TEST
192526     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TEST ;
192527     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMFLOWSCORE.sas.
192528    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
192529    +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
192530    +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
192531    +
192532    +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
192533    +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
192534    +
192535    +
192536    +/*----G_OPT_Population_in_thousands begin----*/
192537    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
192538    +%DMNORMCP( OPT_Population_in_thousands , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(OPT_Population_in_thousands,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192539    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
192540    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
192541    +  when('01:LOW-8773.6505' ) G_OPT_Population_in_thousands = 1;
MPRINT(EM_DIAGRAM):   when('01:LOW-8773.6505' ) G_OPT_Population_in_thousands = 1;
192542    +  when('02:8773.6505-34177.5, MISSING' ) G_OPT_Population_in_thousands = 0;
MPRINT(EM_DIAGRAM):   when('02:8773.6505-34177.5, MISSING' ) G_OPT_Population_in_thousands = 0;
192543    +  when('03:34177.5-72628.5' ) G_OPT_Population_in_thousands = 1;
MPRINT(EM_DIAGRAM):   when('03:34177.5-72628.5' ) G_OPT_Population_in_thousands = 1;
192544    +  when('04:72628.5-HIGH' ) G_OPT_Population_in_thousands = 2;
MPRINT(EM_DIAGRAM):   when('04:72628.5-HIGH' ) G_OPT_Population_in_thousands = 2;
192545    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192546    +end;
MPRINT(EM_DIAGRAM):   end;
192547    +label G_OPT_Population_in_thousands="Grouped Levels for
192548    +        OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   label G_OPT_Population_in_thousands= "Grouped Levels for          OPT_Population_in_thousands";
192549    +/*----OPT_Population_in_thousands end----*/
192550    +
192551    +/*----G_Disease begin----*/
192552    +length _NORM32 $ 32;
MPRINT(EM_DIAGRAM):   length _NORM32 $ 32;
192553    +%DMNORMCP( Disease , _NORM32 )
MPRINT(DMNORMCP):   _NORM32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192554    +drop _NORM32;
MPRINT(EM_DIAGRAM):   drop _NORM32;
192555    +select(_NORM32);
MPRINT(EM_DIAGRAM):   select(_NORM32);
192556    +  when('ASTHMA' ) G_Disease = 2;
MPRINT(EM_DIAGRAM):   when('ASTHMA' ) G_Disease = 2;
192557    +  when('CANCER, ALL' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('CANCER, ALL' ) G_Disease = 1;
192558    +  when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('DEMENTIA AND ALZHEIMER''S DISEASE' ) G_Disease = 0;
192559    +  when('OSTEOARTHRITIS' ) G_Disease = 0;
MPRINT(EM_DIAGRAM):   when('OSTEOARTHRITIS' ) G_Disease = 0;
192560    +  when('SEPTICEMIA' ) G_Disease = 1;
MPRINT(EM_DIAGRAM):   when('SEPTICEMIA' ) G_Disease = 1;
192561    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192562    +end;
MPRINT(EM_DIAGRAM):   end;
192563    +label G_Disease="Grouped Levels for  Disease";
MPRINT(EM_DIAGRAM):   label G_Disease= "Grouped Levels for  Disease";
192564    +/*----Disease end----*/
192565    +
192566    +/*----G_Age_group begin----*/
192567    +length _NORM19 $ 19;
MPRINT(EM_DIAGRAM):   length _NORM19 $ 19;
192568    +%DMNORMCP( Age_group , _NORM19 )
MPRINT(DMNORMCP):   _NORM19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192569    +drop _NORM19;
MPRINT(EM_DIAGRAM):   drop _NORM19;
192570    +select(_NORM19);
MPRINT(EM_DIAGRAM):   select(_NORM19);
192571    +  when('0-17' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('0-17' ) G_Age_group = 1;
192572    +  when('18-24' ) G_Age_group = 0;
MPRINT(EM_DIAGRAM):   when('18-24' ) G_Age_group = 0;
192573    +  when('25-44' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('25-44' ) G_Age_group = 1;
192574    +  when('85+' ) G_Age_group = 1;
MPRINT(EM_DIAGRAM):   when('85+' ) G_Age_group = 1;
192575    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192576    +end;
MPRINT(EM_DIAGRAM):   end;
192577    +label G_Age_group="Grouped Levels for  Age_group";
MPRINT(EM_DIAGRAM):   label G_Age_group= "Grouped Levels for  Age_group";
192578    +/*----Age_group end----*/
192579    +
192580    +/*----G_Gender begin----*/
192581    +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
192582    +_NORM10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _NORM10 = put( Gender , $CHAR10. );
192583    +%DMNORMIP( _NORM10 )
MPRINT(DMNORMIP):   call dmnorm(_NORM10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
192584    +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
192585    +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
192586    +  when('ALL' ) G_Gender = 1;
MPRINT(EM_DIAGRAM):   when('ALL' ) G_Gender = 1;
192587    +  when('FEMALE' ) G_Gender = 0;
MPRINT(EM_DIAGRAM):   when('FEMALE' ) G_Gender = 0;
192588    +  when('MALE' ) G_Gender = 0;
MPRINT(EM_DIAGRAM):   when('MALE' ) G_Gender = 0;
192589    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192590    +end;
MPRINT(EM_DIAGRAM):   end;
192591    +label G_Gender="Grouped Levels for  Gender";
MPRINT(EM_DIAGRAM):   label G_Gender= "Grouped Levels for  Gender";
192592    +/*----Gender end----*/
192593    +
192594    +/*----G_Date begin----*/
192595    +length _NORM10 $ 10;
MPRINT(EM_DIAGRAM):   length _NORM10 $ 10;
192596    +%DMNORMCP( Date , _NORM10 )
MPRINT(DMNORMCP):   _NORM10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
192597    +drop _NORM10;
MPRINT(EM_DIAGRAM):   drop _NORM10;
192598    +select(_NORM10);
MPRINT(EM_DIAGRAM):   select(_NORM10);
192599    +  when('1990' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1990' ) G_Date = 2;
192600    +  when('1991' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1991' ) G_Date = 2;
192601    +  when('1992' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('1992' ) G_Date = 2;
192602    +  when('1993' ) G_Date = 4;
MPRINT(EM_DIAGRAM):   when('1993' ) G_Date = 4;
192603    +  when('1994' ) G_Date = 1;
MPRINT(EM_DIAGRAM):   when('1994' ) G_Date = 1;
192604    +  when('1995' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1995' ) G_Date = 3;
192605    +  when('1996' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1996' ) G_Date = 3;
192606    +  when('1997' ) G_Date = 4;
MPRINT(EM_DIAGRAM):   when('1997' ) G_Date = 4;
192607    +  when('1998' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('1998' ) G_Date = 3;
192608    +  when('1999' ) G_Date = 0;
MPRINT(EM_DIAGRAM):   when('1999' ) G_Date = 0;
192609    +  when('2000' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2000' ) G_Date = 3;
192610    +  when('2001' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2001' ) G_Date = 3;
192611    +  when('2002' ) G_Date = 1;
MPRINT(EM_DIAGRAM):   when('2002' ) G_Date = 1;
192612    +  when('2003' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2003' ) G_Date = 5;
192613    +  when('2004' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2004' ) G_Date = 5;
192614    +  when('2005' ) G_Date = 0;
MPRINT(EM_DIAGRAM):   when('2005' ) G_Date = 0;
192615    +  when('2006' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2006' ) G_Date = 5;
192616    +  when('2007' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2007' ) G_Date = 5;
192617    +  when('2008' ) G_Date = 2;
MPRINT(EM_DIAGRAM):   when('2008' ) G_Date = 2;
192618    +  when('2009' ) G_Date = 5;
MPRINT(EM_DIAGRAM):   when('2009' ) G_Date = 5;
192619    +  when('2010' ) G_Date = 3;
MPRINT(EM_DIAGRAM):   when('2010' ) G_Date = 3;
192620    +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
192621    +end;
MPRINT(EM_DIAGRAM):   end;
192622    +label G_Date="Grouped Levels for  Date";
MPRINT(EM_DIAGRAM):   label G_Date= "Grouped Levels for  Date";
192623    +/*----Date end----*/
192624    +
192625    +
192626    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
192627    +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
192628    +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
192629     run;
 
NOTE: DATA STEP view saved on file EMWS2.VARSEL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TEST.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
192630     quit;
192631     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
192632     options nosource;
MPRINT(EM_DIAGRAM):    options nosource;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   label RSquare = "R-Square";
MPRINT(EM_DIAGRAM):   rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   if Type="AOV16" then delete;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set EMWS2.VARSEL_OUTRSQUARE.
NOTE: The data set EMWS2.VARSEL_R2DS has 30 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set EMWS2.VARSEL_R2DS.
NOTE: The data set EMWS2.VARSEL_R2DS has 30 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   label RSquare = "Sequential R-Square";
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   Rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.VARSEL_OUTEFFECT.
NOTE: The data set EMWS2.VARSEL_EFFECTDS has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.VARSEL_EFFECTDS.
NOTE: The data set EMWS2.VARSEL_EFFECTDS has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Varsel_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Varsel_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Varsel_TRAIN out=WORK.M2V5DRFR noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V5DRFR;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V5DRFR(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2V5DRFR;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2V5DRFR;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M315QASU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QP7GO6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   set WORK.M315QASU;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Varsel";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'AGE_GROUP' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DATE' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DISEASE' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GENDER' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'OPT_POPULATION_IN_THOUSANDS' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_OPT_POPULATION_IN_THOUSANDS" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_DISEASE" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_AGE_GROUP" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_GENDER" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_DATE" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: View EMWS2.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS2.VARSEL_TEST.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_RESULTEDVARS(keep = NAME ROLE LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   length COMMENT $300;
MPRINT(EM_DIAGRAM):   label COMMENT = "Reasons for Rejection";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'AGE_GROUP' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DATE' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'DISEASE' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'GENDER' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'OPT_POPULATION_IN_THOUSANDS' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   if ROLE not in ('REJECTED' 'INPUT') then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_UNUSEDINPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
193047     run;
 
193048     data EMWS2.Varsel_CMETA_NONREJECTS EMWS2.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_CMETA_NONREJECTS EMWS2.Varsel_CMETA_REJECTS;
193049     set EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_TRAIN;
193050     if ROLE ='REJECTED' then output EMWS2.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):   if ROLE ='REJECTED' then output EMWS2.Varsel_CMETA_REJECTS;
193051     else output EMWS2.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   else output EMWS2.Varsel_CMETA_NONREJECTS;
193052     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS2.VARSEL_CMETA_TRAIN.
NOTE: The data set EMWS2.VARSEL_CMETA_NONREJECTS has 8 observations and 20 variables.
NOTE: The data set EMWS2.VARSEL_CMETA_REJECTS has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
193053     data EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS2.Varsel_CMETA_TRAIN;
193054     set EMWS2.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_NONREJECTS;
193055     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS2.VARSEL_CMETA_NONREJECTS.
NOTE: The data set EMWS2.VARSEL_CMETA_TRAIN has 8 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
193056     data WORK._tmp_meta_;
MPRINT(EM_DIAGRAM):    data WORK._tmp_meta_;
193057     set EMWS2.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Varsel_CMETA_TRAIN;
193058     if ROLE ^= 'INPUT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^= 'INPUT' then delete;
193059     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS2.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK._TMP_META_ has 5 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:35" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 04, 2019
Time:                13:45:35
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0U_RLWS "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0U_RLWS new;
MPRINT(EM_DIAGRAM):   run;
193083     %em_getActionStatus(emlib=EMWS2, nodeid=Varsel);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
193084     %let em_Train = Y;
193085     %let em_Report = Y;
193086     %let em_Score = Y;
193087     %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
