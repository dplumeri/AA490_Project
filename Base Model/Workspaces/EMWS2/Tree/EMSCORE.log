MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:44:53" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 04, 2019
Time:                13:44:53
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O37A_6QQ "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O37A_6QQ new;
MPRINT(EM_DIAGRAM):   run;
64644      %let EMEXCEPTIONSTRING=;
64645      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
64646      * SCORE: Tree;
MPRINT(EM_DIAGRAM):   * SCORE: Tree;
64647      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64648      %let EM_ACTION = SCORE;
64649      %let syscc = 0;
64650      %macro main;
64651      
64652        %if %upcase(&EM_ACTION) = CREATE %then %do;
64653          filename temp catalog 'sashelp.emmodl.tree_create.source';
64654          %include temp;
64655          filename temp;
64656      
64657          %em_tree_create;
64658        %end;
64659      
64660         %else
64661         %if %upcase(&EM_ACTION) = TRAIN %then %do;
64662      
64663             filename temp catalog 'sashelp.emmodl.tree_train.source';
64664             %include temp;
64665             filename temp;
64666             %em_tree_train;
64667         %end;
64668      
64669        %else
64670        %if %upcase(&EM_ACTION) = SCORE %then %do;
64671          filename temp catalog 'sashelp.emmodl.tree_score.source';
64672          %include temp;
64673          filename temp;
64674      
64675          %em_tree_score;
64676      
64677        %end;
64678      
64679        %else
64680        %if %upcase(&EM_ACTION) = REPORT %then %do;
64681      
64682             filename temp catalog 'sashelp.emmodl.tree_report.source';
64683             %include temp;
64684             filename temp;
64685      
64686             %em_tree_report;
64687         %end;
64688      
64689        %else
64690        %if %upcase(&EM_ACTION) = OPENINT %then %do;
64691      
64692             filename temp catalog 'sashelp.emmodl.tree_actions.source';
64693             %include temp;
64694             filename temp;
64695             %EM_TREE_OPENTREEVIEWER;
64696      
64697         %end;
64698      
64699        %else
64700        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
64701      
64702             filename temp catalog 'sashelp.emmodl.tree_actions.source';
64703             %include temp;
64704             filename temp;
64705             %EM_TREE_CLOSETREEVIEWER;
64706      
64707         %end;
64708      
64709      
64710         %doendm:
64711      %mend main;
64712      
64713      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
64715     +%macro em_tree_score;
64717     +   /* determine if multiple targets will be processed */
64718     +   %let em_tree_multipleTargets=N;
64719     +   %let em_tree_numTarget=1;
64720     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
64721     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
64722     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
64723     +         %let em_tree_multipleTargets=N;
64724     +      %end;
64725     +      %else %do;
64726     +         /* create macro array of targets  */
64727     +         data _null_;
64728     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
64729     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
64730     +           if eof then
64731     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
64732     +        run;
64734     +        %if &em_tree_numTarget gt 1 %then %do;
64735     +           %let em_tree_multipleTargets=Y;
64736     +        %end;
64737     +      %end;
64738     +   %end;
64740     +   /* build flow and publish scoring code */
64741     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
64742     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
64744     +   filename treeflow "&EM_USER_TREEFLOW";
64745     +   filename treepub "&EM_USER_TREEPUBLISH";
64747     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
64748     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
64750     +   %em_copyfile(infref=treeflow, outfref=flowref);
64751     +   %em_copyfile(infref=treepub, outfref=pubref);
64753     +   filename treeflow;
64754     +   filename treepub;
64756     +   /* if priors are used, add code to generate unadjusted residuals in export */
64757     +   %let useAdjPriors = N;
64758     +   data _null_;
64759     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
64760     +     if USE="Y" then call symput('useAdjPriors', 'Y');
64761     +   run;
64762     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
64763     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
64764     +      %include temp;
64765     +      filename temp;
64767     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
64768     +      filename adjref "&EM_USER_adjResidualCode";
64769     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
64771     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
64773     +      filename adjref;
64774     +   %end;
64776     +   /* LEAF */
64777     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
64778     +      data _null_;
64779     +        file flowref mod;
64780     +        put 'drop _LEAF_;';
64781     +      run;
64783     +      data _null_;
64784     +        file pubref mod;
64785     +        put 'drop _LEAF_;';
64786     +      run;
64788     +   %end;
64790     +   filename flowref;
64791     +   filename pubref;
64793     +   /* em_metachange code */
64794     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
64795     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
64796     +   %end;
64798     +   /* variable selection based on importance stat    */
64799     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
64800     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
64801     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
64802     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
64803     +     %let obs = %sysfunc(fetch(&dsid));
64804     +     %do %while(&obs=0);
64805     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
64806     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
64807     +       %EM_METACHANGE(name=&varname, role=REJECTED);
64808     +       %let obs = %sysfunc(fetch(&dsid));
64809     +     %end;
64810     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
64811     +   %end;
64813     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
64814     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
64815     +    %let tree_pred_vars = ;
64816     +    %let tree_pred_lvl =;
64817     +    %let numpred= 0;
64819     +    data _null_;
64820     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
64821     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
64822     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
64823     +     if eof then
64824     +       call symput('numpred', strip(put(_N_, BEST.)));
64825     +    run;
64826     +   %end;
64828     +   %if &numpred ne 0 %then %do;
64829     +    %do i=1 %to &numpred;
64830     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
64831     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
64832     +    %end;
64833     +   %end;
64835     +   /* determine if multiple targets will be processed */
64836     +   %let em_tree_multipleTargets=N;
64837     +   %let em_tree_numTarget=1;
64838     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
64839     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
64840     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
64841     +         %let em_tree_multipleTargets=N;
64842     +      %end;
64843     +      %else %do;
64844     +        data _null_;
64845     +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
64846     +          if eof then
64847     +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
64848     +        run;
64850     +        %if &em_tree_numTarget gt 1 %then %do;
64851     +           %let em_tree_multipleTargets=Y;
64852     +        %end;
64853     +     %end;
64854     +   %end;
64856     +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
64857     +   %if "&em_tree_multipleTargets" eq "N" %then %do;
64859     +      /* variable importance */
64860     +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
64861     +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
64863     +         %let validexist=0;
64864     +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
64865     +           %let validexist=1;
64866     +         %end;
64868     +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
64869     +         /* and the columns may not be generated                                                                                 */
64870     +         %let em_tree_cvexists=;
64871     +         %let em_tree_surrexists=.;
64872     +         data _null_;
64873     +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
64874     +            if eof then do ;
64875     +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
64876     +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
64877     +            end;
64878     +         run;
64880     +         data &EM_USER_OUTIMPORT;
64881     +            set &EM_USER_OUTIMPORT;
64883     +            /* format columns based on Precison value specified */
64884     +            format importance 15.&EM_PROPERTY_PRECISION
64885     +                 %if &validexist %then %do;
64886     +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
64887     +                 %end;
64888     +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
64889     +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
64890     +                 %end;
64891     +            ;
64892     +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
64893     +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
64894     +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
64895     +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
64896     +                 %if "&em_tree_surrexists" ne "" %then %do;
64897     +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
64898     +                 %end;
64899     +                 %if &validexist %then %do;
64900     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
64901     +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
64902     +                 %end;
64903     +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
64904     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
64905     +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
64906     +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
64907     +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
64908     +                 %end;
64909     +            ;
64910     +         run;
64912     +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
64913     +      %end;
64914     +   %end;
64916     +   %doendm:
64917     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=04Dec2019:13:44:53,
      Create Time=19Nov2019:15:57:35

NOTE: 294 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 74.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=04Dec2019:13:44:53,
      Create Time=19Nov2019:15:57:35

NOTE: 289 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 74.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS2.Ids_Cases_in_1000s_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 0 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10320,
      Last Modified=04Dec2019:13:44:53,
      Create Time=19Nov2019:15:57:35

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=10105,
      Last Modified=04Dec2019:13:44:53,
      Create Time=19Nov2019:15:57:35

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS2.Ids_Cases_in_1000s_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Cases_in_1000s");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS2.Tree_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: There were 2 observations read from the data set EMWS2.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS2.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS2.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 4 observations read from the data set EMWS2.TREE_OUTIMPORT.
NOTE: The data set EMWS2.TREE_OUTIMPORT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.76337444584973;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64918      
64919      *------------------------------------------------------------*;
64920      * End SCORE: Tree;
64921      *------------------------------------------------------------*;

64922      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
64923      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
64924      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

64925      filename x "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\CDELTA_TRAIN.sas";
64926      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
64927      file x;
MPRINT(EM_DIAGRAM):   file x;
64928      put 'if upcase(NAME) = "Q_CASES_IN_1000S" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_CASES_IN_1000S" then do;';
64929      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
64930      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
64931      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
64932      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
64933      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
64934      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
64935      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
64936      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=04Dec2019:13:44:53,
      Create Time=19Nov2019:15:57:35

NOTE: 8 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 45.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

64937      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
64938      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64939      *------------------------------------------------------------*;
64940      * Tree: Scoring DATA data;
64941      *------------------------------------------------------------*;
64942      data EMWS2.Tree_TRAIN
64943      / view=EMWS2.Tree_TRAIN
64944      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Tree_TRAIN / view=EMWS2.Tree_TRAIN ;
64945      set EMWS2.Part_TRAIN
64946      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN ;
64947      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas.
64948     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
64949     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
64950     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
64951     +
64952     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
64953     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
64954     +
64955     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
64956     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
64957     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
64958     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
64959     +label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
64960     +label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
64961     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
64962     +
64963     +
64964     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
64965     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
64966     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
64967     +LENGTH _ARBFMT_10 $     10; DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
64968     +_ARBFMT_10 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
64969     +LENGTH _ARBFMT_32 $     32; DROP _ARBFMT_32;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_32 $ 32;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_32;
64970     +_ARBFMT_32 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = ' ';
64971     +
64972     +
64973     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
64974     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
64975     + %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
64976     +IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
64977     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
64978     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
64979     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
64980     +    _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
64981     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
64982     +    IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
64983     +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
64984     +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
64985     +      P_Cases_in_1000s  =                 19.5;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 19.5;
64986     +      V_Cases_in_1000s  =                 20.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 20.2;
64987     +      END;
MPRINT(EM_DIAGRAM):   END;
64988     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64989     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
64990     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
64991     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
64992     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
64993     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
64994     +        P_Cases_in_1000s  =                6.125;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.125;
64995     +        V_Cases_in_1000s  =                  6.4;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 6.4;
64996     +        END;
MPRINT(EM_DIAGRAM):   END;
64997     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64998     +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
64999     +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
65000     +        P_Cases_in_1000s  =     12.7272727272727;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.7272727272727;
65001     +        V_Cases_in_1000s  =                 13.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2;
65002     +        END;
MPRINT(EM_DIAGRAM):   END;
65003     +      END;
MPRINT(EM_DIAGRAM):   END;
65004     +    END;
MPRINT(EM_DIAGRAM):   END;
65005     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65006     +    _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65007     +     %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65008     +    IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
65009     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65010     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65011     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65012     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
65013     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
65014     +        P_Cases_in_1000s  =     9.36363636363636;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 9.36363636363636;
65015     +        V_Cases_in_1000s  =                 8.75;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 8.75;
65016     +        END;
MPRINT(EM_DIAGRAM):   END;
65017     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65018     +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
65019     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
65020     +        P_Cases_in_1000s  =     4.44444444444444;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.44444444444444;
65021     +        V_Cases_in_1000s  =                  5.9;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 5.9;
65022     +        END;
MPRINT(EM_DIAGRAM):   END;
65023     +      END;
MPRINT(EM_DIAGRAM):   END;
65024     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65025     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
65026     +      _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
65027     +      P_Cases_in_1000s  =     0.41791044776119;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0.41791044776119;
65028     +      V_Cases_in_1000s  =     0.14545454545454;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0.14545454545454;
65029     +      END;
MPRINT(EM_DIAGRAM):   END;
65030     +    END;
MPRINT(EM_DIAGRAM):   END;
65031     +  END;
MPRINT(EM_DIAGRAM):   END;
65032     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65033     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65034     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65035     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
65036     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65037     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65038     +    IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
65039     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65040     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65041     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65042     +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
65043     +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
65044     +        P_Cases_in_1000s  =     178.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 178.888888888888;
65045     +        V_Cases_in_1000s  =                204.5;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 204.5;
65046     +        END;
MPRINT(EM_DIAGRAM):   END;
65047     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65048     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65049     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65050     +        IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
65051     +          _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
65052     +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
65053     +          P_Cases_in_1000s  =               66.625;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 66.625;
65054     +          V_Cases_in_1000s  =     62.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 62.3333333333333;
65055     +          END;
MPRINT(EM_DIAGRAM):   END;
65056     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65057     +          _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
65058     +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
65059     +          P_Cases_in_1000s  =     112.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 112.888888888888;
65060     +          V_Cases_in_1000s  =     110.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 110.888888888888;
65061     +          END;
MPRINT(EM_DIAGRAM):   END;
65062     +        END;
MPRINT(EM_DIAGRAM):   END;
65063     +      END;
MPRINT(EM_DIAGRAM):   END;
65064     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65065     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65066     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65067     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65068     +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
65069     +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
65070     +        P_Cases_in_1000s  =                 4.25;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.25;
65071     +        V_Cases_in_1000s  =     2.57142857142857;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 2.57142857142857;
65072     +        END;
MPRINT(EM_DIAGRAM):   END;
65073     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65074     +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
65075     +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
65076     +        P_Cases_in_1000s  =     12.5555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.5555555555555;
65077     +        V_Cases_in_1000s  =     10.6363636363636;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 10.6363636363636;
65078     +        END;
MPRINT(EM_DIAGRAM):   END;
65079     +      END;
MPRINT(EM_DIAGRAM):   END;
65080     +    END;
MPRINT(EM_DIAGRAM):   END;
65081     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65082     +
65083     +     DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
65084     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65085     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65086     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65087     +      IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
65088     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65089     +      END;
MPRINT(EM_DIAGRAM):   END;
65090     +      ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
65091     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65092     +      END;
MPRINT(EM_DIAGRAM):   END;
65093     +    IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
65094     +      _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
65095     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65096     +        IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' ,
65097     +        '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' , '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
65098     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65099     +        END;
MPRINT(EM_DIAGRAM):   END;
65100     +        ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' ,
65101     +        '2001' ,'2004' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' , '2001' ,'2004' ,'2009' ) THEN DO;
65102     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65103     +        END;
MPRINT(EM_DIAGRAM):   END;
65104     +      END;
MPRINT(EM_DIAGRAM):   END;
65105     +    IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65106     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65107     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65108     +        IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65109     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65110     +        END;
MPRINT(EM_DIAGRAM):   END;
65111     +        ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
65112     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65113     +        END;
MPRINT(EM_DIAGRAM):   END;
65114     +      END;
MPRINT(EM_DIAGRAM):   END;
65115     +    IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
65116     +
65117     +    IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
65118     +
65119     +      _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65120     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65121     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65122     +        IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
65123     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65124     +        END;
MPRINT(EM_DIAGRAM):   END;
65125     +        ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
65126     +        'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
65127     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65128     +        END;
MPRINT(EM_DIAGRAM):   END;
65129     +      IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65130     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65131     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65132     +          IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
65133     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65134     +          END;
MPRINT(EM_DIAGRAM):   END;
65135     +          ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65136     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65137     +          END;
MPRINT(EM_DIAGRAM):   END;
65138     +        END;
MPRINT(EM_DIAGRAM):   END;
65139     +      IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
65140     +
65141     +      IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
65142     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
65143     +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
65144     +        P_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0;
65145     +        V_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0;
65146     +        END;
MPRINT(EM_DIAGRAM):   END;
65147     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65148     +
65149     +        _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65150     +        _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65151     +         %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65152     +          IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
65153     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65154     +          END;
MPRINT(EM_DIAGRAM):   END;
65155     +          ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
65156     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65157     +          END;
MPRINT(EM_DIAGRAM):   END;
65158     +        IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65159     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65160     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65161     +            IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
65162     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65163     +            END;
MPRINT(EM_DIAGRAM):   END;
65164     +            ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65165     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65166     +            END;
MPRINT(EM_DIAGRAM):   END;
65167     +          END;
MPRINT(EM_DIAGRAM):   END;
65168     +        IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
65169     +
65170     +        IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
65171     +          _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
65172     +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
65173     +          P_Cases_in_1000s  =      8.8695652173913;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 8.8695652173913;
65174     +          V_Cases_in_1000s  =     13.2105263157894;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2105263157894;
65175     +          END;
MPRINT(EM_DIAGRAM):   END;
65176     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65177     +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
65178     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
65179     +          P_Cases_in_1000s  =     16.6521739130434;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 16.6521739130434;
65180     +          V_Cases_in_1000s  =     17.6842105263157;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 17.6842105263157;
65181     +          END;
MPRINT(EM_DIAGRAM):   END;
65182     +        END;
MPRINT(EM_DIAGRAM):   END;
65183     +      END;
MPRINT(EM_DIAGRAM):   END;
65184     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65185     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65186     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65187     +      IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
65188     +      'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
65189     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65190     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65191     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65192     +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
65193     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
65194     +          P_Cases_in_1000s  =               32.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 32.375;
65195     +          V_Cases_in_1000s  =     32.4285714285714;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 32.4285714285714;
65196     +          END;
MPRINT(EM_DIAGRAM):   END;
65197     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65198     +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
65199     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
65200     +          P_Cases_in_1000s  =     15.6896551724137;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 15.6896551724137;
65201     +          V_Cases_in_1000s  =     15.1111111111111;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 15.1111111111111;
65202     +          END;
MPRINT(EM_DIAGRAM):   END;
65203     +        END;
MPRINT(EM_DIAGRAM):   END;
65204     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65205     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65206     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65207     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65208     +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
65209     +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
65210     +          P_Cases_in_1000s  =                   73;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 73;
65211     +          V_Cases_in_1000s  =     89.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 89.3333333333333;
65212     +          END;
MPRINT(EM_DIAGRAM):   END;
65213     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65214     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65215     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65216     +          IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
65217     +            _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
65218     +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
65219     +            P_Cases_in_1000s  =               50.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 50.375;
65220     +            V_Cases_in_1000s  =     49.2941176470588;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 49.2941176470588;
65221     +            END;
MPRINT(EM_DIAGRAM):   END;
65222     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65223     +            _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
65224     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
65225     +            P_Cases_in_1000s  =     29.0555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 29.0555555555555;
65226     +            V_Cases_in_1000s  =      28.090909090909;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 28.090909090909;
65227     +            END;
MPRINT(EM_DIAGRAM):   END;
65228     +          END;
MPRINT(EM_DIAGRAM):   END;
65229     +        END;
MPRINT(EM_DIAGRAM):   END;
65230     +      END;
MPRINT(EM_DIAGRAM):   END;
65231     +    END;
MPRINT(EM_DIAGRAM):   END;
65232     +  END;
MPRINT(EM_DIAGRAM):   END;
65233     +
65234     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
65235     +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = .;
65236     +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
65237     +
65238     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65239     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
65240     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65241     +
65242     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
65243      run;

NOTE: DATA STEP view saved on file EMWS2.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
65244      quit;
65245      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
65246      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65247      *------------------------------------------------------------*;
65248      * Tree: Scoring VALIDATE data;
65249      *------------------------------------------------------------*;
65250      data EMWS2.Tree_VALIDATE
65251      / view=EMWS2.Tree_VALIDATE
65252      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Tree_VALIDATE / view=EMWS2.Tree_VALIDATE ;
65253      set EMWS2.Part_VALIDATE
65254      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_VALIDATE ;
65255      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas.
65256     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65257     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
65258     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65259     +
65260     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
65261     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
65262     +
65263     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
65264     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
65265     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
65266     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
65267     +label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
65268     +label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
65269     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
65270     +
65271     +
65272     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
65273     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
65274     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
65275     +LENGTH _ARBFMT_10 $     10; DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
65276     +_ARBFMT_10 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
65277     +LENGTH _ARBFMT_32 $     32; DROP _ARBFMT_32;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_32 $ 32;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_32;
65278     +_ARBFMT_32 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = ' ';
65279     +
65280     +
65281     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
65282     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65283     + %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65284     +IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
65285     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65286     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65287     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
65288     +    _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65289     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65290     +    IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65291     +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
65292     +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
65293     +      P_Cases_in_1000s  =                 19.5;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 19.5;
65294     +      V_Cases_in_1000s  =                 20.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 20.2;
65295     +      END;
MPRINT(EM_DIAGRAM):   END;
65296     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65297     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65298     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65299     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65300     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
65301     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
65302     +        P_Cases_in_1000s  =                6.125;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.125;
65303     +        V_Cases_in_1000s  =                  6.4;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 6.4;
65304     +        END;
MPRINT(EM_DIAGRAM):   END;
65305     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65306     +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
65307     +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
65308     +        P_Cases_in_1000s  =     12.7272727272727;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.7272727272727;
65309     +        V_Cases_in_1000s  =                 13.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2;
65310     +        END;
MPRINT(EM_DIAGRAM):   END;
65311     +      END;
MPRINT(EM_DIAGRAM):   END;
65312     +    END;
MPRINT(EM_DIAGRAM):   END;
65313     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65314     +    _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65315     +     %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65316     +    IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
65317     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65318     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65319     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65320     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
65321     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
65322     +        P_Cases_in_1000s  =     9.36363636363636;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 9.36363636363636;
65323     +        V_Cases_in_1000s  =                 8.75;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 8.75;
65324     +        END;
MPRINT(EM_DIAGRAM):   END;
65325     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65326     +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
65327     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
65328     +        P_Cases_in_1000s  =     4.44444444444444;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.44444444444444;
65329     +        V_Cases_in_1000s  =                  5.9;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 5.9;
65330     +        END;
MPRINT(EM_DIAGRAM):   END;
65331     +      END;
MPRINT(EM_DIAGRAM):   END;
65332     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65333     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
65334     +      _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
65335     +      P_Cases_in_1000s  =     0.41791044776119;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0.41791044776119;
65336     +      V_Cases_in_1000s  =     0.14545454545454;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0.14545454545454;
65337     +      END;
MPRINT(EM_DIAGRAM):   END;
65338     +    END;
MPRINT(EM_DIAGRAM):   END;
65339     +  END;
MPRINT(EM_DIAGRAM):   END;
65340     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65341     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65342     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65343     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
65344     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65345     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65346     +    IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
65347     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65348     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65349     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65350     +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
65351     +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
65352     +        P_Cases_in_1000s  =     178.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 178.888888888888;
65353     +        V_Cases_in_1000s  =                204.5;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 204.5;
65354     +        END;
MPRINT(EM_DIAGRAM):   END;
65355     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65356     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65357     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65358     +        IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
65359     +          _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
65360     +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
65361     +          P_Cases_in_1000s  =               66.625;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 66.625;
65362     +          V_Cases_in_1000s  =     62.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 62.3333333333333;
65363     +          END;
MPRINT(EM_DIAGRAM):   END;
65364     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65365     +          _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
65366     +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
65367     +          P_Cases_in_1000s  =     112.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 112.888888888888;
65368     +          V_Cases_in_1000s  =     110.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 110.888888888888;
65369     +          END;
MPRINT(EM_DIAGRAM):   END;
65370     +        END;
MPRINT(EM_DIAGRAM):   END;
65371     +      END;
MPRINT(EM_DIAGRAM):   END;
65372     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65373     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65374     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65375     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65376     +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
65377     +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
65378     +        P_Cases_in_1000s  =                 4.25;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.25;
65379     +        V_Cases_in_1000s  =     2.57142857142857;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 2.57142857142857;
65380     +        END;
MPRINT(EM_DIAGRAM):   END;
65381     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65382     +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
65383     +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
65384     +        P_Cases_in_1000s  =     12.5555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.5555555555555;
65385     +        V_Cases_in_1000s  =     10.6363636363636;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 10.6363636363636;
65386     +        END;
MPRINT(EM_DIAGRAM):   END;
65387     +      END;
MPRINT(EM_DIAGRAM):   END;
65388     +    END;
MPRINT(EM_DIAGRAM):   END;
65389     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65390     +
65391     +     DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
65392     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65393     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65394     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65395     +      IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
65396     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65397     +      END;
MPRINT(EM_DIAGRAM):   END;
65398     +      ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
65399     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65400     +      END;
MPRINT(EM_DIAGRAM):   END;
65401     +    IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
65402     +      _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
65403     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65404     +        IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' ,
65405     +        '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' , '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
65406     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65407     +        END;
MPRINT(EM_DIAGRAM):   END;
65408     +        ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' ,
65409     +        '2001' ,'2004' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' , '2001' ,'2004' ,'2009' ) THEN DO;
65410     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65411     +        END;
MPRINT(EM_DIAGRAM):   END;
65412     +      END;
MPRINT(EM_DIAGRAM):   END;
65413     +    IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65414     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65415     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65416     +        IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65417     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65418     +        END;
MPRINT(EM_DIAGRAM):   END;
65419     +        ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
65420     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65421     +        END;
MPRINT(EM_DIAGRAM):   END;
65422     +      END;
MPRINT(EM_DIAGRAM):   END;
65423     +    IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
65424     +
65425     +    IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
65426     +
65427     +      _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65428     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65429     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65430     +        IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
65431     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65432     +        END;
MPRINT(EM_DIAGRAM):   END;
65433     +        ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
65434     +        'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
65435     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65436     +        END;
MPRINT(EM_DIAGRAM):   END;
65437     +      IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65438     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65439     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65440     +          IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
65441     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65442     +          END;
MPRINT(EM_DIAGRAM):   END;
65443     +          ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65444     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65445     +          END;
MPRINT(EM_DIAGRAM):   END;
65446     +        END;
MPRINT(EM_DIAGRAM):   END;
65447     +      IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
65448     +
65449     +      IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
65450     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
65451     +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
65452     +        P_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0;
65453     +        V_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0;
65454     +        END;
MPRINT(EM_DIAGRAM):   END;
65455     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65456     +
65457     +        _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65458     +        _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65459     +         %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65460     +          IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
65461     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65462     +          END;
MPRINT(EM_DIAGRAM):   END;
65463     +          ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
65464     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65465     +          END;
MPRINT(EM_DIAGRAM):   END;
65466     +        IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65467     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65468     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65469     +            IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
65470     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65471     +            END;
MPRINT(EM_DIAGRAM):   END;
65472     +            ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65473     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65474     +            END;
MPRINT(EM_DIAGRAM):   END;
65475     +          END;
MPRINT(EM_DIAGRAM):   END;
65476     +        IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
65477     +
65478     +        IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
65479     +          _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
65480     +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
65481     +          P_Cases_in_1000s  =      8.8695652173913;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 8.8695652173913;
65482     +          V_Cases_in_1000s  =     13.2105263157894;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2105263157894;
65483     +          END;
MPRINT(EM_DIAGRAM):   END;
65484     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65485     +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
65486     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
65487     +          P_Cases_in_1000s  =     16.6521739130434;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 16.6521739130434;
65488     +          V_Cases_in_1000s  =     17.6842105263157;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 17.6842105263157;
65489     +          END;
MPRINT(EM_DIAGRAM):   END;
65490     +        END;
MPRINT(EM_DIAGRAM):   END;
65491     +      END;
MPRINT(EM_DIAGRAM):   END;
65492     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65493     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65494     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65495     +      IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
65496     +      'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
65497     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65498     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65499     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65500     +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
65501     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
65502     +          P_Cases_in_1000s  =               32.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 32.375;
65503     +          V_Cases_in_1000s  =     32.4285714285714;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 32.4285714285714;
65504     +          END;
MPRINT(EM_DIAGRAM):   END;
65505     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65506     +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
65507     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
65508     +          P_Cases_in_1000s  =     15.6896551724137;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 15.6896551724137;
65509     +          V_Cases_in_1000s  =     15.1111111111111;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 15.1111111111111;
65510     +          END;
MPRINT(EM_DIAGRAM):   END;
65511     +        END;
MPRINT(EM_DIAGRAM):   END;
65512     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65513     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65514     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65515     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65516     +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
65517     +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
65518     +          P_Cases_in_1000s  =                   73;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 73;
65519     +          V_Cases_in_1000s  =     89.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 89.3333333333333;
65520     +          END;
MPRINT(EM_DIAGRAM):   END;
65521     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65522     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65523     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65524     +          IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
65525     +            _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
65526     +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
65527     +            P_Cases_in_1000s  =               50.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 50.375;
65528     +            V_Cases_in_1000s  =     49.2941176470588;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 49.2941176470588;
65529     +            END;
MPRINT(EM_DIAGRAM):   END;
65530     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65531     +            _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
65532     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
65533     +            P_Cases_in_1000s  =     29.0555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 29.0555555555555;
65534     +            V_Cases_in_1000s  =      28.090909090909;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 28.090909090909;
65535     +            END;
MPRINT(EM_DIAGRAM):   END;
65536     +          END;
MPRINT(EM_DIAGRAM):   END;
65537     +        END;
MPRINT(EM_DIAGRAM):   END;
65538     +      END;
MPRINT(EM_DIAGRAM):   END;
65539     +    END;
MPRINT(EM_DIAGRAM):   END;
65540     +  END;
MPRINT(EM_DIAGRAM):   END;
65541     +
65542     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
65543     +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = .;
65544     +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
65545     +
65546     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65547     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
65548     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65549     +
65550     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
65551      run;

NOTE: DATA STEP view saved on file EMWS2.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
65552      quit;
65553      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
65554      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65555      *------------------------------------------------------------*;
65556      * Tree: Scoring TEST data;
65557      *------------------------------------------------------------*;
65558      data EMWS2.Tree_TEST
65559      / view=EMWS2.Tree_TEST
65560      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Tree_TEST / view=EMWS2.Tree_TEST ;
65561      set EMWS2.Part_TEST
65562      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TEST ;
65563      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMFLOWSCORE.sas.
65564     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65565     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
65566     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65567     +
65568     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
65569     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
65570     +
65571     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
65572     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
65573     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
65574     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
65575     +label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
65576     +label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
65577     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
65578     +
65579     +
65580     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
65581     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
65582     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
65583     +LENGTH _ARBFMT_10 $     10; DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
65584     +_ARBFMT_10 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
65585     +LENGTH _ARBFMT_32 $     32; DROP _ARBFMT_32;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_32 $ 32;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_32;
65586     +_ARBFMT_32 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = ' ';
65587     +
65588     +
65589     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
65590     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65591     + %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65592     +IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
65593     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65594     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65595     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
65596     +    _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65597     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65598     +    IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65599     +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
65600     +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
65601     +      P_Cases_in_1000s  =                 19.5;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 19.5;
65602     +      V_Cases_in_1000s  =                 20.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 20.2;
65603     +      END;
MPRINT(EM_DIAGRAM):   END;
65604     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65605     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65606     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65607     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65608     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
65609     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
65610     +        P_Cases_in_1000s  =                6.125;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.125;
65611     +        V_Cases_in_1000s  =                  6.4;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 6.4;
65612     +        END;
MPRINT(EM_DIAGRAM):   END;
65613     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65614     +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
65615     +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
65616     +        P_Cases_in_1000s  =     12.7272727272727;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.7272727272727;
65617     +        V_Cases_in_1000s  =                 13.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2;
65618     +        END;
MPRINT(EM_DIAGRAM):   END;
65619     +      END;
MPRINT(EM_DIAGRAM):   END;
65620     +    END;
MPRINT(EM_DIAGRAM):   END;
65621     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65622     +    _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65623     +     %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65624     +    IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
65625     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65626     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65627     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65628     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
65629     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
65630     +        P_Cases_in_1000s  =     9.36363636363636;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 9.36363636363636;
65631     +        V_Cases_in_1000s  =                 8.75;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 8.75;
65632     +        END;
MPRINT(EM_DIAGRAM):   END;
65633     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65634     +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
65635     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
65636     +        P_Cases_in_1000s  =     4.44444444444444;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.44444444444444;
65637     +        V_Cases_in_1000s  =                  5.9;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 5.9;
65638     +        END;
MPRINT(EM_DIAGRAM):   END;
65639     +      END;
MPRINT(EM_DIAGRAM):   END;
65640     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65641     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
65642     +      _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
65643     +      P_Cases_in_1000s  =     0.41791044776119;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0.41791044776119;
65644     +      V_Cases_in_1000s  =     0.14545454545454;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0.14545454545454;
65645     +      END;
MPRINT(EM_DIAGRAM):   END;
65646     +    END;
MPRINT(EM_DIAGRAM):   END;
65647     +  END;
MPRINT(EM_DIAGRAM):   END;
65648     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65649     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65650     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65651     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
65652     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65653     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65654     +    IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
65655     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65656     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65657     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65658     +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
65659     +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
65660     +        P_Cases_in_1000s  =     178.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 178.888888888888;
65661     +        V_Cases_in_1000s  =                204.5;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 204.5;
65662     +        END;
MPRINT(EM_DIAGRAM):   END;
65663     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65664     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65665     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65666     +        IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
65667     +          _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
65668     +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
65669     +          P_Cases_in_1000s  =               66.625;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 66.625;
65670     +          V_Cases_in_1000s  =     62.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 62.3333333333333;
65671     +          END;
MPRINT(EM_DIAGRAM):   END;
65672     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65673     +          _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
65674     +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
65675     +          P_Cases_in_1000s  =     112.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 112.888888888888;
65676     +          V_Cases_in_1000s  =     110.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 110.888888888888;
65677     +          END;
MPRINT(EM_DIAGRAM):   END;
65678     +        END;
MPRINT(EM_DIAGRAM):   END;
65679     +      END;
MPRINT(EM_DIAGRAM):   END;
65680     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65681     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65682     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65683     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65684     +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
65685     +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
65686     +        P_Cases_in_1000s  =                 4.25;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.25;
65687     +        V_Cases_in_1000s  =     2.57142857142857;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 2.57142857142857;
65688     +        END;
MPRINT(EM_DIAGRAM):   END;
65689     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65690     +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
65691     +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
65692     +        P_Cases_in_1000s  =     12.5555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.5555555555555;
65693     +        V_Cases_in_1000s  =     10.6363636363636;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 10.6363636363636;
65694     +        END;
MPRINT(EM_DIAGRAM):   END;
65695     +      END;
MPRINT(EM_DIAGRAM):   END;
65696     +    END;
MPRINT(EM_DIAGRAM):   END;
65697     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65698     +
65699     +     DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
65700     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65701     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
65702     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65703     +      IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
65704     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65705     +      END;
MPRINT(EM_DIAGRAM):   END;
65706     +      ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
65707     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65708     +      END;
MPRINT(EM_DIAGRAM):   END;
65709     +    IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
65710     +      _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
65711     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65712     +        IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' ,
65713     +        '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' , '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
65714     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65715     +        END;
MPRINT(EM_DIAGRAM):   END;
65716     +        ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' ,
65717     +        '2001' ,'2004' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' , '2001' ,'2004' ,'2009' ) THEN DO;
65718     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65719     +        END;
MPRINT(EM_DIAGRAM):   END;
65720     +      END;
MPRINT(EM_DIAGRAM):   END;
65721     +    IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65722     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65723     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65724     +        IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65725     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65726     +        END;
MPRINT(EM_DIAGRAM):   END;
65727     +        ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
65728     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65729     +        END;
MPRINT(EM_DIAGRAM):   END;
65730     +      END;
MPRINT(EM_DIAGRAM):   END;
65731     +    IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
65732     +
65733     +    IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
65734     +
65735     +      _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65736     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65737     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65738     +        IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
65739     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65740     +        END;
MPRINT(EM_DIAGRAM):   END;
65741     +        ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
65742     +        'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
65743     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65744     +        END;
MPRINT(EM_DIAGRAM):   END;
65745     +      IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65746     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65747     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65748     +          IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
65749     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65750     +          END;
MPRINT(EM_DIAGRAM):   END;
65751     +          ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
65752     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65753     +          END;
MPRINT(EM_DIAGRAM):   END;
65754     +        END;
MPRINT(EM_DIAGRAM):   END;
65755     +      IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
65756     +
65757     +      IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
65758     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
65759     +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
65760     +        P_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0;
65761     +        V_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0;
65762     +        END;
MPRINT(EM_DIAGRAM):   END;
65763     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65764     +
65765     +        _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
65766     +        _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65767     +         %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65768     +          IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
65769     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65770     +          END;
MPRINT(EM_DIAGRAM):   END;
65771     +          ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
65772     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65773     +          END;
MPRINT(EM_DIAGRAM):   END;
65774     +        IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
65775     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65776     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65777     +            IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
65778     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
65779     +            END;
MPRINT(EM_DIAGRAM):   END;
65780     +            ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65781     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
65782     +            END;
MPRINT(EM_DIAGRAM):   END;
65783     +          END;
MPRINT(EM_DIAGRAM):   END;
65784     +        IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
65785     +
65786     +        IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
65787     +          _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
65788     +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
65789     +          P_Cases_in_1000s  =      8.8695652173913;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 8.8695652173913;
65790     +          V_Cases_in_1000s  =     13.2105263157894;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2105263157894;
65791     +          END;
MPRINT(EM_DIAGRAM):   END;
65792     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65793     +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
65794     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
65795     +          P_Cases_in_1000s  =     16.6521739130434;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 16.6521739130434;
65796     +          V_Cases_in_1000s  =     17.6842105263157;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 17.6842105263157;
65797     +          END;
MPRINT(EM_DIAGRAM):   END;
65798     +        END;
MPRINT(EM_DIAGRAM):   END;
65799     +      END;
MPRINT(EM_DIAGRAM):   END;
65800     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65801     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
65802     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65803     +      IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
65804     +      'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
65805     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65806     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65807     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65808     +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
65809     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
65810     +          P_Cases_in_1000s  =               32.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 32.375;
65811     +          V_Cases_in_1000s  =     32.4285714285714;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 32.4285714285714;
65812     +          END;
MPRINT(EM_DIAGRAM):   END;
65813     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65814     +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
65815     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
65816     +          P_Cases_in_1000s  =     15.6896551724137;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 15.6896551724137;
65817     +          V_Cases_in_1000s  =     15.1111111111111;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 15.1111111111111;
65818     +          END;
MPRINT(EM_DIAGRAM):   END;
65819     +        END;
MPRINT(EM_DIAGRAM):   END;
65820     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65821     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65822     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65823     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
65824     +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
65825     +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
65826     +          P_Cases_in_1000s  =                   73;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 73;
65827     +          V_Cases_in_1000s  =     89.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 89.3333333333333;
65828     +          END;
MPRINT(EM_DIAGRAM):   END;
65829     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65830     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
65831     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
65832     +          IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
65833     +            _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
65834     +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
65835     +            P_Cases_in_1000s  =               50.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 50.375;
65836     +            V_Cases_in_1000s  =     49.2941176470588;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 49.2941176470588;
65837     +            END;
MPRINT(EM_DIAGRAM):   END;
65838     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65839     +            _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
65840     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
65841     +            P_Cases_in_1000s  =     29.0555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 29.0555555555555;
65842     +            V_Cases_in_1000s  =      28.090909090909;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 28.090909090909;
65843     +            END;
MPRINT(EM_DIAGRAM):   END;
65844     +          END;
MPRINT(EM_DIAGRAM):   END;
65845     +        END;
MPRINT(EM_DIAGRAM):   END;
65846     +      END;
MPRINT(EM_DIAGRAM):   END;
65847     +    END;
MPRINT(EM_DIAGRAM):   END;
65848     +  END;
MPRINT(EM_DIAGRAM):   END;
65849     +
65850     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
65851     +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = .;
65852     +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
65853     +
65854     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65855     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
65856     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
65857     +
65858     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
65859      run;

NOTE: DATA STEP view saved on file EMWS2.TREE_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
65860      quit;
65861      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS2.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
65863      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
65864      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
65865      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

65866      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
65867      * Tree: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree: Computing metadata for TRAIN data;
65868      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Tree_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Tree_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Tree_TRAIN out=WORK.M1S7NPMP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1S7NPMP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1S7NPMP(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1S7NPMP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1S7NPMP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0R_9FF_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1M8GOW3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
The SAS System

MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   set WORK.M0R_9FF_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Tree_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_CASES_IN_1000S") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("CASES_IN_1000S") model = "Tree";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_CASES_IN_1000S" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
66223      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
66224      set EMWS2.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Tree_EMINFO;
66225      where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
66226      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.TREE_EMINFO.
      WHERE (DATA='Tree') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

66227      data EMWS2.Tree_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Tree_EMINFO;
66228      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
66229      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
66230      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS2.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
66234      run;
66235      data EMWS2.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Tree_EMINFO;
66236      set EMWS2.Tree_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Tree_EMINFO WORK.MODELTEMP_INFO;
66237      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.TREE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

66238      proc sort data = EMWS2.Tree_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Tree_EMINFO NOTHREADS;
66239      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
66240      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.TREE_EMINFO.
NOTE: The data set EMWS2.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

66241      proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
66242      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
66243      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

66244      proc sort data = EMWS2.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
66245      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
66246      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

66247      data EMWS2.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Tree_EMINFO;
66248      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
66249      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
66250      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.TREE_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

66251      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
66252      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
66253      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
66254      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS2.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS2.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS2.TREE_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
