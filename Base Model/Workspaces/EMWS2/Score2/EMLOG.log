*------------------------------------------------------------*
User:                student
Date:                November 26, 2019
Time:                15:42:00
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 26, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:41:54" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 26, 2019
Time:                15:41:54
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1W9JJRD "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1W9JJRD new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 26, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:41:54" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 26, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:41:54" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
30987      proc freq data=EMWS2.Score2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Score2_VariableSet noprint;
30988      table ROLE*LEVEL/out=WORK.Score2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Score2META;
30989      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_VARIABLESET.
NOTE: The data set WORK.SCORE2META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
30990      proc print data=WORK.Score2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Score2META label noobs;
30991      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
30992      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
30993      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
30994      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
30995      run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE2META.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
30996      title10;
MPRINT(EM_DIAGRAM):   title10;
30997      %let groupid =;
30998      %let endGroupid =;
30999      %let prescoreid =;
31000      %let idsTable =;
31001      %let hpdmTable =;
31002      %let lasthptm =;
31003      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
31004      set EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMINFO;
31005      where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
31006      select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
31007      when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
31008      when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
31009      when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
31010      when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
31011      when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
31012      otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
31013      end;
MPRINT(EM_DIAGRAM):   end;
31014      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31015      %let lastModelid =;
31016      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
31017      set EMWS2.Reg_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg_EMINFO;
31018      where upcase(key) = 'MODEL' and TARGET = "Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   where upcase(key) = 'MODEL' and TARGET = "Sum_Labor_Force_Pop";
31019      call symput('lastModelID', DATA);
MPRINT(EM_DIAGRAM):   call symput('lastModelID', DATA);
31020      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG_EMINFO.
      WHERE (UPCASE(key)='MODEL') and (TARGET='Sum_Labor_Force_Pop');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.REG_EMINFO.
      WHERE (TARGET='Sum_Labor_Force_Pop') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO41S967RL has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.REG_EMINFO.
      WHERE (TARGET='Sum_Labor_Force_Pop') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO41LD3RQJ has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
31021      %let em_rootkey=;
31022      %let em_keytype=;
31023      %let em_keylen=;
31024      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
31025      set EMWS2.Ids_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_cmeta_data;
31026      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
31027      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
31028      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
31029      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
31030      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 26, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:41:54" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 26, 2019
Time:                15:41:54
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ZNZABJ "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ZNZABJ new;
MPRINT(EM_DIAGRAM):   run;
31132      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31133      *------------------------------------------------------------*;
31134      * Score2: Scoring DATA data;
31135      *------------------------------------------------------------*;
31136      data EMWS2.Score2_TRAIN
31137      / view=EMWS2.Score2_TRAIN
31138      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_TRAIN / view=EMWS2.Score2_TRAIN ;
31139      set EMWS2.MdlComp_TRAIN
31140      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_TRAIN ;
31141      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas.
31142     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31143     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
31144     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31145     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
31146     +EM_SEGMENT = b_Sum_Labor_Force_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Sum_Labor_Force_;
31147     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
31148     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
31149     +LABEL = 'Target Variable: Sum_Labor_Force_Pop';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Sum_Labor_Force_Pop';
31150     +EM_VALUETARGET = Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31151      run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
31152      quit;
31153      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
31154      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31155      *------------------------------------------------------------*;
31156      * Score2: Scoring VALIDATE data;
31157      *------------------------------------------------------------*;
31158      data EMWS2.Score2_VALIDATE
31159      / view=EMWS2.Score2_VALIDATE
31160      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_VALIDATE / view=EMWS2.Score2_VALIDATE ;
31161      set EMWS2.MdlComp_VALIDATE
31162      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_VALIDATE ;
31163      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas.
31164     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31165     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
31166     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31167     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
31168     +EM_SEGMENT = b_Sum_Labor_Force_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Sum_Labor_Force_;
31169     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
31170     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
31171     +LABEL = 'Target Variable: Sum_Labor_Force_Pop';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Sum_Labor_Force_Pop';
31172     +EM_VALUETARGET = Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31173      run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
31174      quit;
31175      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
31176      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31177      *------------------------------------------------------------*;
31178      * Score2: Scoring TEST data;
31179      *------------------------------------------------------------*;
31180      data EMWS2.Score2_TEST
31181      / view=EMWS2.Score2_TEST
31182      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_TEST / view=EMWS2.Score2_TEST ;
31183      set EMWS2.MdlComp_TEST
31184      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_TEST ;
31185      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas.
31186     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31187     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
31188     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31189     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
31190     +EM_SEGMENT = b_Sum_Labor_Force_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Sum_Labor_Force_;
31191     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
31192     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
31193     +LABEL = 'Target Variable: Sum_Labor_Force_Pop';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Sum_Labor_Force_Pop';
31194     +EM_VALUETARGET = Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31195      run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
31196      quit;
31197      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
31198      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
31199      * Score2: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score2: Creating Publish Score Variables Table;
31200      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31201      proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
31202      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31203      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
31204      proc sort data=EMWS2.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
31205      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31206      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
31207      data EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMINPUTVARS;
31208      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
31209      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31210      length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
31211      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
31212         "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
31213         "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
31214      if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
31215      if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
31216      if upcase(NAME) = "DATE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DATE" then HIDE = "N";
31217      if upcase(NAME) = "INDUSTRY" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "INDUSTRY" then HIDE = "N";
31218      if upcase(NAME) = "P_SUM_LABOR_FORCE_POP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_SUM_LABOR_FORCE_POP" then HIDE = "N";
31219      if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
31220      if upcase(NAME) = "R_SUM_LABOR_FORCE_POP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_SUM_LABOR_FORCE_POP" then HIDE = "N";
31221      if upcase(NAME) = "SUM_LABOR_FORCE_POP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "SUM_LABOR_FORCE_POP" then HIDE = "N";
31222      if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
31223      if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
31224      if upcase(NAME) = "B_SUM_LABOR_FORCE_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_SUM_LABOR_FORCE_" then HIDE = "N";
31225      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
31226      proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
31227      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31228      where CREATOR='' or (NAME="SUM_LABOR_FORCE_POP" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="SUM_LABOR_FORCE_POP" and CREATOR='');
31229      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='SUM_LABOR_FORCE_POP') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31230      %let em_rootkey=;
31231      %let em_keytype=;
31232      %let em_keylen=;
31233      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
31234      set EMWS2.Ids_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_cmeta_data;
31235      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
31236      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
31237      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
31238      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
31239      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31240      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
31241      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
31242      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
31243      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas.
31244     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31245     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
31246     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31247     +LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
31248     +EM_SEGMENT = b_Sum_Labor_Force_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Sum_Labor_Force_;
31249     +LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
31250     +EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31251      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
31252      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
31253      quit;
31254      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
31255      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
31256      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
31257      retain ID 1 Node "Score2";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score2";
31258      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
31259      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
31260      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
31261      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31262      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
31263      proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
31264      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31265      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
31266      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31267      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
31268      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
31269      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
31270      proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
31271      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 15 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
31272      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
31273      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31274      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 15 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31275      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31276      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
31277      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31278      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 15 observations read from the data set WORK._META.
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31279      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
31280      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
31281      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31282      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
31283      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS2.SCORE2_FCMP has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31284      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
31285      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
31286      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
31287      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas.
31288     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
31289     +if (P_Sum_Labor_Force_Pop ge 12847651.6853932) then do;
MPRINT(EM_DIAGRAM):   if (P_Sum_Labor_Force_Pop ge 12847651.6853932) then do;
31290     +b_Sum_Labor_Force_ = 1;
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = 1;
31291     +end;
MPRINT(EM_DIAGRAM):   end;
31292     +else
31293     +if (P_Sum_Labor_Force_Pop ge 9464919.99999999) then do;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 9464919.99999999) then do;
31294     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
31295     +b_Sum_Labor_Force_ = floor(5 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(5 + 2*_temp_);
31296     +end;
MPRINT(EM_DIAGRAM):   end;
31297     +else
31298     +if (P_Sum_Labor_Force_Pop ge 3744154.76190476) then do;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 3744154.76190476) then do;
31299     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
31300     +b_Sum_Labor_Force_ = floor(9 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(9 + 2*_temp_);
31301     +end;
MPRINT(EM_DIAGRAM):   end;
31302     +else
31303     +if (P_Sum_Labor_Force_Pop ge 1083534.09090907) then do;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 1083534.09090907) then do;
31304     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
31305     +b_Sum_Labor_Force_ = floor(14 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(14 + 2*_temp_);
31306     +end;
MPRINT(EM_DIAGRAM):   end;
31307     +else
31308     +do;
MPRINT(EM_DIAGRAM):   else do;
31309     +b_Sum_Labor_Force_ = 20;
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = 20;
31310     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31311      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
31312      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
31313      quit;
31314      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
31315      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
31316      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
31317      retain ID 2 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp";
31318      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
31319      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31320      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
31321      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31322      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31323      proc sort data=EMWS2.Reg_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Reg_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
31324      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31325      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS2.REG_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31326      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31327      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
31328      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
31329      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31330      proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
31331      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 11 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
31332      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
31333      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31334      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31335      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31336      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
31337      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31338      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 11 observations read from the data set WORK._META.
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 11 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31339      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
31340      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
31341      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31342      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
31343      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31344      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg\EMPUBLISHSCORE.sas";
31345      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
31346      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
31347      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg\EMPUBLISHSCORE.sas.
31348     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
31349     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
31350     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
31351     +
31352     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
31353     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
31354     +
31355     +
31356     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
31357     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
31358     +
31359     +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
31360     +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
31361     +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
31362     +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
31363     +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
31364     +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
31365     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
31366     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
31367     +end;
MPRINT(EM_DIAGRAM):   end;
31368     +else do;
MPRINT(EM_DIAGRAM):   else do;
31369     +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
31370     +   %DMNORMCP( Age_group , _dm19 )
MPRINT(EM_DIAGRAM):   /*-------------------------------------------------------------- * * name: dmnormcp.sas * update: 03Sep2002 * reference: * purpose: normalize category levels for EM scoring code *
--------------------------------------------------------------*/
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   end;
31371     +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
31372     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
31373     +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
31374     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
31375     +   end;
MPRINT(EM_DIAGRAM):   end;
31376     +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
31377     +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
31378     +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
31379     +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
31380     +   end;
MPRINT(EM_DIAGRAM):   end;
31381     +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
31382     +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
31383     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
31384     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
31385     +   end;
MPRINT(EM_DIAGRAM):   end;
31386     +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else do;
31387     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = .;
31388     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = .;
31389     +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = .;
31390     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
31391     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
31392     +      _0_0 = .;
MPRINT(EM_DIAGRAM):   end;
31393     +      _0_1 = .;
MPRINT(EM_DIAGRAM):   end;
31394     +      _0_2 = .;
31395     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
31396     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
31397     +   end;
MPRINT(EM_DIAGRAM):   _LP0 = 6735625;
31398     +end;
MPRINT(EM_DIAGRAM):   goto REGDR1;
31399     +
MPRINT(EM_DIAGRAM):   end;
31400     +*** If missing inputs, use averages;
31401     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
31402     +   _LP0 =              6735625;
MPRINT(EM_DIAGRAM):   drop _TEMP;
31403     +   goto REGDR1;
MPRINT(EM_DIAGRAM):   drop _LP0;
31404     +end;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
31405     +
31406     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
31407     +drop _TEMP;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
31408     +drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3040910.37264701) * _TEMP * _0_0;
31409     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6062586.55084148) * _TEMP * _0_1;
31410     +
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2679854.86544822) * _TEMP * _0_2;
31411     +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
31412     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6785065.13455177);
31413     +_LP0 = _LP0 + (   -3040910.37264701) * _TEMP * _0_0;
31414     +_LP0 = _LP0 + (    6062586.55084148) * _TEMP * _0_1;
31415     +_LP0 = _LP0 + (    2679854.86544822) * _TEMP * _0_2;
31416     +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   REGDR1: *** Predicted Value;
31417     +_LP0 = _LP0 + (    6785065.13455177);
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
31418     +
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _LP0;
31419     +REGDR1:
31420     +
31421     +*** Predicted Value;
MPRINT(EM_DIAGRAM):   *************************************;
31422     +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
31423     +P_Sum_Labor_Force_Pop = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
31424     +
31425     +
31426     +*************************************;
31427     +***** end scoring code for regression;
31428     +*************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
31429      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
31430      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
31431      quit;
31432      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
31433      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
31434      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
31435      retain ID 3 Node "Reg";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Reg";
31436      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
31437      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 38 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31438      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
31439      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31440      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 38 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31441      proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
31442      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31443      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31444      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31445      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
31446      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
31447      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31448      proc contents data=EMWS2.Reg_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Reg_train out=_meta(keep=NAME) noprint;
31449      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 10 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
31450      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
31451      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31452      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 10 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31453      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31454      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
31455      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31456      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 10 observations read from the data set WORK._META.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31457      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
31458      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 9 rows and 5 columns.
 
31459      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31460      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
31461      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 9 observations read from the data set WORK._TEMPX.
NOTE: 9 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 13 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31462      %macro varDept(fcmpdata=,id=);
31463      %global nobs&id scoreFlag&id;
31464      %let scoreFlag&id = 0;
31465      %if &id=1 or ^&fcmpStart %then %do;
31466      proc sort data=&fcmpdata out=_temp&id nodupkey;
31467      by NAME;
31468      %if EM_SEGMENT EM_PREDICTION ne %then %do;
31469      where id=&id and (LHS in( %let j=1;
31470      %do %while(%scan(EM_SEGMENT EM_PREDICTION, &j) ne );
31471      %let var = %scan(EM_SEGMENT EM_PREDICTION, &j);
31472      "&var" %let j = %eval(&j+1);
31473      %end;
31474      ) or substr(LHS, 1, 3)='EM_');
31475      %end;
31476      %else %do;
31477      where id=&id and substr(LHS, 1, 3)='EM_';
31478      %end;
31479      run;
31480      %let dsid = %sysfunc(open(_temp&id));
31481      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
31482      %let dsid = %sysfunc(close(&dsid));
31483      %if &&nobs&id %then %do;
31484      %let scoreFlag&id = 1;
31485      %let fcmpStart = 1;
31486      %end;
31487      %else %let fcmpStart = 0;
31488      %end;
31489      %else %do;
31490      proc sort data=&fcmpdata out=_tempid;
31491      where id=&id;
31492      by LHS;
31493      run;
31494      %let dsid = %sysfunc(open(_tempid));
31495      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
31496      %let dsid = %sysfunc(close(&dsid));
31497      %if ^&&nobs&id %then %do;
31498      proc datasets lib=work nolist;
31499      delete _tempid;
31500      run;
31501      quit;
31502      %end;
31503      %else %do;
31504      data _tempAll;
31505      set %let j=%eval(&id-1);
31506      %do x=1 %to &j;
31507      %if &&nobs&x %then %do;
31508      _temp&x %end;
31509      %end;
31510      ;
31511      run;
31512      proc sql;
31513      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
31514      quit;
31515      data _temp&id;
31516      set _temp&id;
31517      where LHS ne '' and NAME ne '' and Node ne '';
31518      run;
31519      proc datasets lib=work nolist;
31520      delete _tempAll;
31521      run;
31522      %let dsid = %sysfunc(open(_temp&id));
31523      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
31524      %let dsid = %sysfunc(close(&dsid));
31525      %if ^&&nobs&id %then %do;
31526      proc datasets lib=work nolist;
31527      delete _temp&id;
31528      run;
31529      quit;
31530      %end;
31531      %else %do;
31532      %let scoreFlag&id = 1;
31533      data _temp&id;
31534      set _temp&id;
31535      where LHS ne NAME and node ne '';
31536      run;
31537      %let dsid = %sysfunc(open(_temp&id));
31538      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
31539      %let dsid = %sysfunc(close(&dsid));
31540      %if ^&&nobs&id %then %do;
31541      proc datasets lib=work nolist;
31542      delete _temp&id;
31543      run;
31544      quit;
31545      %end;
31546      %else %do;
31547      proc sort data=_temp&id nodupkey;
31548      by LHS NAME;
31549      run;
31550      %end;
31551      %end;
31552      %end;
31553      %end;
31554      %mend varDept;
31555      %macro optCode(outdata=);
31556      %global fcmpStart;
31557      %let fcmpStart = 0;
31558      %let outputVars = EM_SEGMENT EM_PREDICTION;
31559      %let NumNodes=6;
31560      %do k=1 %to &NumNodes;
31561      %vardept(fcmpdata=&outdata, id=&k);
31562      %end;
31563      %mend optCode;
31564      %optcode(outData=EMWS2.Score2_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_PREDICTION" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE (id=1) and (LHS in ('EM_PREDICTION', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 9 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 9 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP3.
NOTE: 1 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 26NOV2019:15:41:56;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 6735625;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3040910.37264701) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6062586.55084148) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2679854.86544822) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6785065.13455177);
MPRINT(EM_DIAGRAM):   REGDR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_Sum_Labor_Force_Pop ge 12847651.6853932) then do;
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 9464919.99999999) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(5 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 3744154.76190476) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(9 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 1083534.09090907) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(14 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Sum_Labor_Force_;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
31739      %let validvarany = 0;
31740      data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
31741      set EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMINPUTVARS;
31742      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
31743      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
31744      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
31745      proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
31746      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
31747      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31748      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
31749      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
31750      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
31751      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
31752      length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
31753      label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
31754      SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
31755      if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
31756      else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
31757      if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
31758      if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
31759      call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
31760      end;
MPRINT(EM_DIAGRAM):   end;
31761      output;
MPRINT(EM_DIAGRAM):   output;
31762      end;
MPRINT(EM_DIAGRAM):   end;
31763      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 12 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
31764      proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
31765      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
31766      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 2 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=DATASET.OG_LABOR_JOIN noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD31604_830-5CG9310VLM_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD31604_830-5CG9310VLM_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('DATASET.OG_LABOR_JOIN');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set DATASET.OG_LABOR_JOIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 26NOV2019:15:41:56;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 6735625;
MPRINT(EM_DIAGRAM):   goto REGDR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3040910.37264701) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6062586.55084148) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2679854.86544822) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6785065.13455177);
MPRINT(EM_DIAGRAM):   REGDR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   drop _temp_;
MPRINT(EM_DIAGRAM):   if (P_Sum_Labor_Force_Pop ge 12847651.6853932) then do;
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 9464919.99999999) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(5 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 3744154.76190476) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(9 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Sum_Labor_Force_Pop ge 1083534.09090907) then do;
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = floor(14 + 2*_temp_);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Sum_Labor_Force_ = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Sum_Labor_Force_;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   drop 'Age_group'n 'Date'n 'Gender'n 'Industry'n 'Population'n 'Sum_Labor_Force_Pop'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS2.Score2_EMOUTPUTVARS noprint out=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
31983      data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
31984      set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
31985      length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
31986      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
31987      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
31988      drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
31989      if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
31990      else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
31991      else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
31992      else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
31993      else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
31994      ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
31995      else do;
MPRINT(EM_DIAGRAM):   else do;
31996      name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
31997      if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
31998      else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
31999      else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
32000      else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
32001      else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
32002      else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
32003      end;
MPRINT(EM_DIAGRAM):   end;
32004      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32005      proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
32006      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32007      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK.META has 10 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32008      proc sort data=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMOUTPUTVARS;
32009      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32010      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32011      data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMOUTPUTVARS;
32012      merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
32013      label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
32014      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
32015      if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
32016      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
32017      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.META.
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32018      %let _cn = %sysfunc(getoption(CENTER));
32019      %let _nb = %sysfunc(getoption(NUMBER));
32020      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
32021      title;
MPRINT(EM_DIAGRAM):   title;
32022      proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
32023      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
32024      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32025      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
32026      run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32027      title10;
MPRINT(EM_DIAGRAM):   title10;
32028      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
32029      %let _cn = %sysfunc(getoption(CENTER));
32030      %let _nb = %sysfunc(getoption(NUMBER));
32031      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
32032      title;
MPRINT(EM_DIAGRAM):   title;
32033      proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
32034      var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
32035      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
32036         "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
32037      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32038      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
32039      run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32040      title10;
MPRINT(EM_DIAGRAM):   title10;
32041      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
32042      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
32043      * Score2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score2: Computing metadata for TRAIN data;
32044      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score2_TRAIN out=WORK.M3QOQWPJ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QOQWPJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QOQWPJ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QOQWPJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3QOQWPJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2ZBPSU2 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2GBMNG2(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZBPSU2;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Sum_Labor_Force_Pop" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS2.SCORE2_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: View EMWS2.SCORE2_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 26, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:41:57" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                November 26, 2019
Time:                15:41:57
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1ALBAK2 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1ALBAK2 new;
MPRINT(EM_DIAGRAM):   run;
32415      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
32416      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32417      NAME="b_Sum_Labor_Force_";
MPRINT(EM_DIAGRAM):   NAME="b_Sum_Labor_Force_";
32418      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32419      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
32420      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32421      output;
MPRINT(EM_DIAGRAM):   output;
32422      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32423      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
32424      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32425      NAME="P_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   NAME="P_Sum_Labor_Force_Pop";
32426      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32427      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
32428      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32429      output;
MPRINT(EM_DIAGRAM):   output;
32430      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
32431      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
32432      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
32433      proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
32434      table b_Sum_Labor_Force_ / missing;
MPRINT(EM_DIAGRAM):   table b_Sum_Labor_Force_ / missing;
32435      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
NOTE: There were 336 observations read from the data set EMWS2.REG_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 7 observations and 8 variables.
NOTE: There were 336 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32436      quit;
32437      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
32438      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
32439      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
32440         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
32441      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
32442      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
32443      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
32444      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
32445      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
32446      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
32447      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
32448      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
32449      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
32450      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
32451      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
32452      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
32453      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
32454      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
32455      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
32456      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
32457      output;
MPRINT(EM_DIAGRAM):   output;
32458      end;
MPRINT(EM_DIAGRAM):   end;
32459      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
32460      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32461      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
32462      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
32463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32464      proc sort data=WORK.M0BLGSGG;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0BLGSGG;
32465      by Name;
MPRINT(EM_DIAGRAM):   by Name;
32466      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0BLGSGG.
NOTE: The data set WORK.M0BLGSGG has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32467      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
32468      merge WORK.Score2_BAR(in=_a) WORK.M0BLGSGG(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M0BLGSGG(keep=Name Role rename=(Name=_Variable_));
32469      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
32470      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
32471      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
32472      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M0BLGSGG.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
32473      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
32474      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32475      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
32476      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
32477      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32478      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
32479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 7 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32480      %var_profile(DATA=EMWS2.MdlComp_TRAIN, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 26, 2019 03:41:57 PM,
      Last Modified=Tue, Nov 26, 2019 03:41:57 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD31604_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
32481     +%macro _vars;
32482     +P_Sum_Labor_Force_Pop
32483     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS2.MdlComp_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 336   Memory used = 511K.
NOTE: There were 336 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 336 observations read from the data set EMWS2.REG_TRAIN.
NOTE: There were 336 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: The data set WORK._CLASSOUT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 1 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT4 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 1 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_Sum_Labor_Force_Pop obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 336 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 336 observations read from the data set EMWS2.REG_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: There were 336 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 336 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score2_SUMDATA out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 1 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 26, 2019 03:41:58 PM,
      Last Modified=Tue, Nov 26, 2019 03:41:58 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD31604_830-5CG9310VLM_\Prc2\em.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 9 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 29.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
32484     +proc format;
MPRINT(VAR_PROFILE):   proc format;
32485     +value F1_
32486     +1083534.0909 ="1083534.0909 "
32487     +3744154.7619 ="3744154.7619 "
32488     +9464920 ="9464920 "
32489     +12847651.685 ="12847651.685 "
32490     +;
MPRINT(VAR_PROFILE):   value F1_ 1083534.0909 ="1083534.0909 " 3744154.7619 ="3744154.7619 " 9464920 ="9464920 " 12847651.685 ="12847651.685 " ;
NOTE: Format F1_ has been output.
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
32491     +;
32492     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Sum_Labor_Force_Pop F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 336   Memory used = 511K.
NOTE: There were 336 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 336 observations read from the data set EMWS2.REG_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: There were 336 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 336 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
32493      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
32494      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32495      retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
32496      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
32497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32498      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
32499      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_HIST has 4 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32500      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
32501      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
32502      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
32503      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
32504      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
32505      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32506      retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
32507      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
32508      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32509      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
32510      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2STAT has 1 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32511      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
32512      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32513      NAME="b_Sum_Labor_Force_";
MPRINT(EM_DIAGRAM):   NAME="b_Sum_Labor_Force_";
32514      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32515      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
32516      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32517      output;
MPRINT(EM_DIAGRAM):   output;
32518      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32519      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
32520      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32521      NAME="P_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   NAME="P_Sum_Labor_Force_Pop";
32522      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32523      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
32524      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32525      output;
MPRINT(EM_DIAGRAM):   output;
32526      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
32527      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
32528      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
32529      proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
32530      table b_Sum_Labor_Force_ / missing;
MPRINT(EM_DIAGRAM):   table b_Sum_Labor_Force_ / missing;
32531      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 252 observations read from the data set EMWS2.REG_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 7 observations and 8 variables.
NOTE: There were 252 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32532      quit;
32533      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
32534      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
32535      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
32536         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
32537      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
32538      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
32539      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
32540      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
32541      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
32542      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
32543      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
32544      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
32545      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
32546      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
32547      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
32548      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
32549      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
32550      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
32551      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
32552      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
32553      output;
MPRINT(EM_DIAGRAM):   output;
32554      end;
MPRINT(EM_DIAGRAM):   end;
32555      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
32556      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32557      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
32558      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
32559      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32560      proc sort data=WORK.M2KCL76S;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2KCL76S;
32561      by Name;
MPRINT(EM_DIAGRAM):   by Name;
32562      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2KCL76S.
NOTE: The data set WORK.M2KCL76S has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32563      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
32564      merge WORK.Score2_BAR(in=_a) WORK.M2KCL76S(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M2KCL76S(keep=Name Role rename=(Name=_Variable_));
32565      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
32566      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
32567      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
32568      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M2KCL76S.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32569      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
32570      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32571      retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
32572      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
32573      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32574      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
32575      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: 7 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 14 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32576      %var_profile(DATA=EMWS2.MdlComp_VALIDATE, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 26, 2019 03:41:57 PM,
      Last Modified=Tue, Nov 26, 2019 03:41:57 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD31604_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
32577     +%macro _vars;
32578     +P_Sum_Labor_Force_Pop
32579     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Sum_Labor_Force_Pop F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 252   Memory used = 511K.
NOTE: There were 252 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 252 observations read from the data set EMWS2.REG_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: There were 252 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: There were 252 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
32580      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
32581      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32582      retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
32583      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
32584      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32585      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
32586      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 4 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 4 observations added.
NOTE: The data set WORK.SCORE2_HIST has 8 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32587      proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
32588      var
32589      P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   var P_Sum_Labor_Force_Pop;
32590      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: There were 252 observations read from the data set EMWS2.REG_VALIDATE.
NOTE: There were 252 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32591      quit;
 
32592      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
32593      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
32594      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
32595      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32596      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
32597      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32598      retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
32599      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
32600      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32601      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
32602      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 2 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32603      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
32604      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32605      NAME="b_Sum_Labor_Force_";
MPRINT(EM_DIAGRAM):   NAME="b_Sum_Labor_Force_";
32606      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32607      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
32608      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32609      output;
MPRINT(EM_DIAGRAM):   output;
32610      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32611      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
32612      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
32613      NAME="P_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   NAME="P_Sum_Labor_Force_Pop";
32614      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
32615      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
32616      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
32617      output;
MPRINT(EM_DIAGRAM):   output;
32618      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
32619      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
32620      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
32621      proc freq data = EMWS2.MdlComp_TEST order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_TEST order=formatted addnames;
32622      table b_Sum_Labor_Force_ / missing;
MPRINT(EM_DIAGRAM):   table b_Sum_Labor_Force_ / missing;
32623      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set EMWS2.PART_TEST.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 252 observations read from the data set EMWS2.REG_TEST.
NOTE: The data set WORK.TEMPFREQ has 7 observations and 8 variables.
NOTE: There were 252 observations read from the data set EMWS2.MDLCOMP_TEST.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32624      quit;
32625      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
32626      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
32627      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
32628         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
32629      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
32630      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
32631      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
32632      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
32633      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
32634      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
32635      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
32636      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
32637      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
32638      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
32639      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
32640      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
32641      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
32642      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
32643      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
32644      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
32645      output;
MPRINT(EM_DIAGRAM):   output;
32646      end;
MPRINT(EM_DIAGRAM):   end;
32647      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
32648      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32649      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
32650      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
32651      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32652      proc sort data=WORK.M3OGYUWA;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M3OGYUWA;
32653      by Name;
MPRINT(EM_DIAGRAM):   by Name;
32654      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3OGYUWA.
NOTE: The data set WORK.M3OGYUWA has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32655      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
32656      merge WORK.Score2_BAR(in=_a) WORK.M3OGYUWA(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M3OGYUWA(keep=Name Role rename=(Name=_Variable_));
32657      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
32658      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
32659      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
32660      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M3OGYUWA.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32661      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
32662      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32663      retain DATAROLE "TEST";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TEST";
32664      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
32665      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32666      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
32667      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 7 observations read from the data set WORK.SCORE2_BAR.
NOTE: 7 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 21 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32668      %var_profile(DATA=EMWS2.MdlComp_TEST, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 26, 2019 03:41:57 PM,
      Last Modified=Tue, Nov 26, 2019 03:41:58 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD31604_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 21.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
32669     +%macro _vars;
32670     +P_Sum_Labor_Force_Pop
32671     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TEST(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Sum_Labor_Force_Pop F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Sum_Labor_Force_Pop
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 252   Memory used = 511K.
NOTE: There were 252 observations read from the data set EMWS2.PART_TEST.
NOTE: There were 252 observations read from the data set EMWS2.REG_TEST.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 252 observations read from the data set EMWS2.MDLCOMP_TEST.
NOTE: There were 252 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
32672      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
32673      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32674      retain DATAROLE "TEST" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TEST" TYPE "";
32675      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
32676      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32677      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
32678      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 4 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 4 observations added.
NOTE: The data set WORK.SCORE2_HIST has 12 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32679      proc stdize data=EMWS2.MdlComp_TEST(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.MdlComp_TEST(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
32680      var
32681      P_Sum_Labor_Force_Pop;
MPRINT(EM_DIAGRAM):   var P_Sum_Labor_Force_Pop;
32682      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 252 observations read from the data set EMWS2.PART_TEST.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 252 observations read from the data set EMWS2.REG_TEST.
NOTE: There were 252 observations read from the data set EMWS2.MDLCOMP_TEST.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
32683      quit;
 
32684      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
32685      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
32686      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
32687      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
32688      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
32689      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
32690      retain DATAROLE "TEST" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TEST" Type "";
32691      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
32692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32693      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
32694      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32695      data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
32696      set EMWS2.Score2_BAR;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_BAR;
32697      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type";
32698      select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
32699      when("b_Sum_Labor_Force_") TYPE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Sum_Labor_Force_") TYPE = 'SEGMENT';
32700      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
32701      end;
MPRINT(EM_DIAGRAM):   end;
32702      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 21 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 21 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32703      proc sort data = EMWS2.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Score2_BAR NOTHREADS;
32704      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
32705      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32706      %let _cn = %sysfunc(getoption(CENTER));
32707      %let _nb = %sysfunc(getoption(NUMBER));
32708      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
32709      title;
MPRINT(EM_DIAGRAM):   title;
32710      proc print data = EMWS2.Score2_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Score2_BAR noobs label;
32711      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
32712      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32713      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
32714      run;
 
NOTE: There were 21 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32715      title10;
MPRINT(EM_DIAGRAM):   title10;
32716      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
32717      data EMWS2.Score2_HIST;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_HIST;
32718      set work.Score2_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score2_HIST(rename=(Percent=Value));
32719      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
32720         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
32721      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
32722      when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
32723      when("b_Sum_Labor_Force_") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Sum_Labor_Force_") TYPE= 'SEGMENT';
32724      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
32725      end;
MPRINT(EM_DIAGRAM):   end;
32726      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE2_HIST.
NOTE: The data set EMWS2.SCORE2_HIST has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
32727      data WORK.Score2STAT;
MPRINT(EM_DIAGRAM):    data WORK.Score2STAT;
32728      set WORK.Score2STAT;
MPRINT(EM_DIAGRAM):   set WORK.Score2STAT;
32729      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
32730         "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
32731         "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 = "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
32732         "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 = "25th Percentile" P75 = "75th Percentile";
32733      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
32734      when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Sum_Labor_Force_Pop") TYPE = 'PREDICTED';
32735      when("b_Sum_Labor_Force_") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Sum_Labor_Force_") TYPE= 'SEGMENT';
32736      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
32737      end;
MPRINT(EM_DIAGRAM):   end;
32738      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
32739      proc sort data = WORK.Score2STAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.Score2STAT NOTHREADS;
32740      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
32741      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
32742      proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
32743      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
32744      id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
32745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 8 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
32746      proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
32747      modify Score2STAT;
MPRINT(EM_DIAGRAM):   modify Score2STAT;
32748      label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,  NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL = "Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORE2STAT.
32749         "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
32750      run;
 
NOTE: MODIFY was successful for WORK.SCORE2STAT.DATA.
32751      %let _cn = %sysfunc(getoption(CENTER));
32752      %let _nb = %sysfunc(getoption(NUMBER));
32753      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
32754      title;
MPRINT(EM_DIAGRAM):   title;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
32755      proc print data = WORK.Score2STAT label noobs;
MPRINT(EM_DIAGRAM):   proc print data = WORK.Score2STAT label noobs;
32756      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
32757      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
32758      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
32759      run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2STAT.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
32760      title10;
MPRINT(EM_DIAGRAM):   title10;
32761      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
