*------------------------------------------------------------*
User:                student
Date:                December 11, 2019
Time:                14:11:24
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:11:18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 11, 2019
Time:                14:11:18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1P5ANFV "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1P5ANFV new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:11:18" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:11:18" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
137132     proc freq data=EMWS2.Score2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Score2_VariableSet noprint;
137133     table ROLE*LEVEL/out=WORK.Score2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Score2META;
137134     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_VARIABLESET.
NOTE: The data set WORK.SCORE2META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
137135     proc print data=WORK.Score2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Score2META label noobs;
137136     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
137137     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
137138     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
137139     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
137140     run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE2META.
NOTE: The PROCEDURE PRINT printed page 47.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137141     title10;
MPRINT(EM_DIAGRAM):   title10;
137142     %let groupid =;
137143     %let endGroupid =;
137144     %let prescoreid =;
137145     %let idsTable =;
137146     %let hpdmTable =;
137147     %let lasthptm =;
137148     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
137149     set EMWS2.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg5_EMINFO;
137150     where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
137151     select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
137152     when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
137153     when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
137154     when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
137155     when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
137156     when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
137157     otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
137158     end;
MPRINT(EM_DIAGRAM):   end;
137159     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137160     %let lastModelid =;
137161     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
137162     set EMWS2.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg5_EMINFO;
137163     where upcase(key) = 'MODEL' and TARGET = "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   where upcase(key) = 'MODEL' and TARGET = "Cases_in_1000s";
137164     call symput('lastModelID', DATA);
MPRINT(EM_DIAGRAM):   call symput('lastModelID', DATA);
137165     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE (UPCASE(key)='MODEL') and (TARGET='Cases_in_1000s');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE (TARGET='Cases_in_1000s') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO42SL8VXE has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE (TARGET='Cases_in_1000s') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO42CSG3LD has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
137166     %let em_rootkey=;
137167     %let em_keytype=;
137168     %let em_keylen=;
137169     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
137170     set EMWS2.Ids2_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_cmeta_data;
137171     where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
137172     call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
137173     call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
137174     call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
137175     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS2_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_SCORE / view = EMWS2.Score2_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 11DEC2019:14:11:18;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 40.5986013986014;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -49.4672921197793) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -21.7313427121025) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.6209888643958) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 102.502871018983) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.46131810261602) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 44.6018779092235) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -31.499567699561) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.74252562940894) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.83591864146778) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00198409149548 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 71.4273293508684) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.3097718606966) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.33786909487515) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -20.9612651485176) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.7796593988599) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -42.0138863118082) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 28.7461211911806) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23521994212167) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 19.7458398116809) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.9477828764849) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.72008672932023) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.7636065735945) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -88.5356337608595) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 132.966100156406) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.4014518863319) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 45.1384291109238) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.1862991950576) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.41662890780362) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.93242200068928) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.94278094282438) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.41400770960081) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16409809193528) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88206456532676) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.51528265380696) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.5407661803408);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 288.241624037156) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 122.61877930895) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 85.8827981030965) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 53.8465796159833) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 48.8668399322475) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 44.0420113544423) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 34.1568129202454) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 26.0130310901372) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.1554711498296) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 16.7982907718532) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.2270976562916) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 10.2930191652826) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.29799764770225) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 5.28642550062574) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 3.43753373559824) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.07666959146316) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.60569920481362) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -0.8359698163787) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -4.35749304688957) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:11:18" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 11, 2019
Time:                14:11:18
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3NP397S "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3NP397S new;
MPRINT(EM_DIAGRAM):   run;
137621     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
137622     *------------------------------------------------------------*;
137623     * Score2: Scoring DATA data;
137624     *------------------------------------------------------------*;
137625     data EMWS2.Score2_TRAIN
137626     / view=EMWS2.Score2_TRAIN
137627     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_TRAIN / view=EMWS2.Score2_TRAIN ;
137628     set EMWS2.MdlComp_TRAIN
137629     ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_TRAIN ;
137630     %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
137640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
137641     quit;
137642     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
137643     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
137644     *------------------------------------------------------------*;
137645     * Score2: Scoring VALIDATE data;
137646     *------------------------------------------------------------*;
137647     data EMWS2.Score2_VALIDATE
137648     / view=EMWS2.Score2_VALIDATE
137649     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_VALIDATE / view=EMWS2.Score2_VALIDATE ;
137650     set EMWS2.MdlComp_VALIDATE
137651     ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_VALIDATE ;
137652     %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
137662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
137663     quit;
137664     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
137665     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
137666     * Score2: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score2: Creating Publish Score Variables Table;
137667     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
137668     proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
137669     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137670     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
137671     proc sort data=EMWS2.Ids2_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids2_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
137672     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137673     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137674     data EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMINPUTVARS;
137675     merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
137676     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137677     length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
137678     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
137679        "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
137680        "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
137681     if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
137682     if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
137683     if upcase(NAME) = "CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CASES_IN_1000S" then HIDE = "N";
137684     if upcase(NAME) = "DISEASE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DISEASE" then HIDE = "N";
137685     if upcase(NAME) = "GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "GENDER" then HIDE = "N";
137686     if upcase(NAME) = "P_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_CASES_IN_1000S" then HIDE = "N";
137687     if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
137688     if upcase(NAME) = "R_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_CASES_IN_1000S" then HIDE = "N";
137689     if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
137690     if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
137691     if upcase(NAME) = "B_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_CASES_IN_1000S" then HIDE = "N";
137692     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
137693     proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
137694     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137695     where CREATOR='' or (NAME="CASES_IN_1000S" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="CASES_IN_1000S" and CREATOR='');
137696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='CASES_IN_1000S') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137697     %let em_rootkey=;
137698     %let em_keytype=;
137699     %let em_keylen=;
137700     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
137701     set EMWS2.Ids2_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_cmeta_data;
137702     where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
137703     call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
137704     call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
137705     call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
137706     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS2_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137707     filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
137708     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
137709     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137710     %INCLUDE _pref;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
137718     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
137719     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
137720     quit;
137721     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
137722     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
137723     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
137724     retain ID 1 Node "Score2";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score2";
137725     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
137726     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137727     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
137728     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137729     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137730     proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
137731     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137732     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137733     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137734     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
137735     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
137736     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137737     proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
137738     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 15 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
137739     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
137740     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137741     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 15 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137742     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137743     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
137744     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137745     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 15 observations read from the data set WORK._META.
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137746     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137747     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
137748     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
137749     proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
137750     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS2.SCORE2_FCMP has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137751     filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
137752     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
137753     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137754     %INCLUDE _pref;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 288.241624037156) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 122.61877930895) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 85.8827981030965) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 53.8465796159833) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 48.8668399322475) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 44.0420113544423) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 34.1568129202454) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 26.0130310901372) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.1554711498296) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 16.7982907718532) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.2270976562916) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 10.2930191652826) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.29799764770225) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 5.28642550062574) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 3.43753373559824) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.07666959146316) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.60569920481362) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -0.8359698163787) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -4.35749304688957) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
137834     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
137835     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
137836     quit;
137837     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
137838     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
137839     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
137840     retain ID 2 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp";
137841     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
137842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137843     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
137844     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137845     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137846     proc sort data=EMWS2.Reg5_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Reg5_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
137847     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137848     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS2.REG5_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
137849     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137850     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
137851     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
137852     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137853     proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
137854     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 11 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
137855     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
137856     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137857     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137858     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
137859     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
137860     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
137861     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 11 observations read from the data set WORK._META.
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 11 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137862     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
137863     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1 rows and 5 columns.
 
137864     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
137865     proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
137866     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 1 observations read from the data set WORK._TEMPX.
NOTE: 1 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 3 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
137867     filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg5\EMPUBLISHSCORE.sas";
137868     options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
137869     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
137870     %INCLUDE _pref;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 40.5986013986014;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -49.4672921197793) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -21.7313427121025) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.6209888643958) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 102.502871018983) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.46131810261602) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 44.6018779092235) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -31.499567699561) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.74252562940894) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.83591864146778) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00198409149548 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 71.4273293508684) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.3097718606966) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.33786909487515) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -20.9612651485176) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.7796593988599) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -42.0138863118082) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 28.7461211911806) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23521994212167) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 19.7458398116809) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.9477828764849) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.72008672932023) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.7636065735945) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -88.5356337608595) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 132.966100156406) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.4014518863319) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 45.1384291109238) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.1862991950576) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.41662890780362) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.93242200068928) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.94278094282438) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.41400770960081) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16409809193528) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88206456532676) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.51528265380696) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.5407661803408);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
138082     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
138083     options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
138084     quit;
138085     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
138086     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
138087     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
138088     retain ID 3 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Reg5";
138089     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
138090     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 96 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 96 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138091     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
138092     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 96 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 96 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
138094     proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
138095     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138096     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138097     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138098     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
138099     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
138100     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138101     proc contents data=EMWS2.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Reg5_train out=_meta(keep=NAME) noprint;
138102     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 10 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
138103     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
138104     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138105     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 10 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
138106     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138107     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
138108     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138109     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 10 observations read from the data set WORK._META.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138110     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
138111     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 33 rows and 5 columns.
 
138112     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138113     proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
138114     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 33 observations read from the data set WORK._TEMPX.
NOTE: 33 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 36 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
138115     %macro varDept(fcmpdata=,id=);
138116     %global nobs&id scoreFlag&id;
138117     %let scoreFlag&id = 0;
138118     %if &id=1 or ^&fcmpStart %then %do;
138119     proc sort data=&fcmpdata out=_temp&id nodupkey;
138120     by NAME;
138121     %if EM_SEGMENT EM_PREDICTION ne %then %do;
138122     where id=&id and (LHS in( %let j=1;
138123     %do %while(%scan(EM_SEGMENT EM_PREDICTION, &j) ne );
138124     %let var = %scan(EM_SEGMENT EM_PREDICTION, &j);
138125     "&var" %let j = %eval(&j+1);
138126     %end;
138127     ) or substr(LHS, 1, 3)='EM_');
138128     %end;
138129     %else %do;
138130     where id=&id and substr(LHS, 1, 3)='EM_';
138131     %end;
138132     run;
138133     %let dsid = %sysfunc(open(_temp&id));
138134     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138135     %let dsid = %sysfunc(close(&dsid));
138136     %if &&nobs&id %then %do;
138137     %let scoreFlag&id = 1;
138138     %let fcmpStart = 1;
138139     %end;
138140     %else %let fcmpStart = 0;
138141     %end;
138142     %else %do;
138143     proc sort data=&fcmpdata out=_tempid;
138144     where id=&id;
138145     by LHS;
138146     run;
138147     %let dsid = %sysfunc(open(_tempid));
138148     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138149     %let dsid = %sysfunc(close(&dsid));
138150     %if ^&&nobs&id %then %do;
138151     proc datasets lib=work nolist;
138152     delete _tempid;
138153     run;
138154     quit;
138155     %end;
138156     %else %do;
138157     data _tempAll;
138158     set %let j=%eval(&id-1);
138159     %do x=1 %to &j;
138160     %if &&nobs&x %then %do;
138161     _temp&x %end;
138162     %end;
138163     ;
138164     run;
138165     proc sql;
138166     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
138167     quit;
138168     data _temp&id;
138169     set _temp&id;
138170     where LHS ne '' and NAME ne '' and Node ne '';
138171     run;
138172     proc datasets lib=work nolist;
138173     delete _tempAll;
138174     run;
138175     %let dsid = %sysfunc(open(_temp&id));
138176     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138177     %let dsid = %sysfunc(close(&dsid));
138178     %if ^&&nobs&id %then %do;
138179     proc datasets lib=work nolist;
138180     delete _temp&id;
138181     run;
138182     quit;
138183     %end;
138184     %else %do;
138185     %let scoreFlag&id = 1;
138186     data _temp&id;
138187     set _temp&id;
138188     where LHS ne NAME and node ne '';
138189     run;
138190     %let dsid = %sysfunc(open(_temp&id));
138191     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
138192     %let dsid = %sysfunc(close(&dsid));
138193     %if ^&&nobs&id %then %do;
138194     proc datasets lib=work nolist;
138195     delete _temp&id;
138196     run;
138197     quit;
138198     %end;
138199     %else %do;
138200     proc sort data=_temp&id nodupkey;
138201     by LHS NAME;
138202     run;
138203     %end;
138204     %end;
138205     %end;
138206     %end;
138207     %mend varDept;
138208     %macro optCode(outdata=);
138209     %global fcmpStart;
138210     %let fcmpStart = 0;
138211     %let outputVars = EM_SEGMENT EM_PREDICTION;
138212     %let NumNodes=6;
138213     %do k=1 %to &NumNodes;
138214     %vardept(fcmpdata=&outdata, id=&k);
138215     %end;
138216     %mend optCode;
138217     %optcode(outData=EMWS2.Score2_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_PREDICTION" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE (id=1) and (LHS in ('EM_PREDICTION', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 33 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 8 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 11DEC2019:14:11:19;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 40.5986013986014;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -49.4672921197793) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -21.7313427121025) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.6209888643958) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 102.502871018983) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.46131810261602) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 44.6018779092235) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -31.499567699561) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.74252562940894) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.83591864146778) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00198409149548 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 71.4273293508684) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.3097718606966) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.33786909487515) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -20.9612651485176) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.7796593988599) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -42.0138863118082) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 28.7461211911806) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23521994212167) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 19.7458398116809) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.9477828764849) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.72008672932023) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.7636065735945) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -88.5356337608595) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 132.966100156406) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.4014518863319) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 45.1384291109238) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.1862991950576) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.41662890780362) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.93242200068928) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.94278094282438) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.41400770960081) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16409809193528) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88206456532676) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.51528265380696) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.5407661803408);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 288.241624037156) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 122.61877930895) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 85.8827981030965) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 53.8465796159833) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 48.8668399322475) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 44.0420113544423) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 34.1568129202454) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 26.0130310901372) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.1554711498296) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 16.7982907718532) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.2270976562916) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 10.2930191652826) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.29799764770225) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 5.28642550062574) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 3.43753373559824) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.07666959146316) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.60569920481362) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -0.8359698163787) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -4.35749304688957) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
138578     %let validvarany = 0;
138579     data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
138580     set EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMINPUTVARS;
138581     length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
138582     UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
138583     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138584     proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
138585     by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
138586     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138587     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
138588     merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
138589     by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
138590     drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
138591     length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
138592     label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
138593     SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
138594     if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
138595     else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
138596     if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
138597     if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
138598     call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
138599     end;
MPRINT(EM_DIAGRAM):   end;
138600     output;
MPRINT(EM_DIAGRAM):   output;
138601     end;
MPRINT(EM_DIAGRAM):   end;
138602     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 22 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
138603     proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
138604     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
138605     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=NEWDIS.DISEASE_HISTORIC_JOIN_1 noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22428_830-5CG9310VLM_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22428_830-5CG9310VLM_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('NEWDIS.DISEASE_HISTORIC_JOIN_1');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set NEWDIS.DISEASE_HISTORIC_JOIN_1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 11DEC2019:14:11:19;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 40.5986013986014;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -49.4672921197793) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -21.7313427121025) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.6209888643958) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 102.502871018983) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.46131810261602) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 44.6018779092235) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -31.499567699561) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.74252562940894) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.83591864146778) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00198409149548 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 71.4273293508684) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -53.3097718606966) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.33786909487515) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -20.9612651485176) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.7796593988599) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -42.0138863118082) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 28.7461211911806) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23521994212167) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 19.7458398116809) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -10.9477828764849) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.72008672932023) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.7636065735945) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -88.5356337608595) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 132.966100156406) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.4014518863319) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 45.1384291109238) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -8.1862991950576) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.41662890780362) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.93242200068928) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.94278094282438) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.41400770960081) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16409809193528) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88206456532676) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.51528265380696) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.5407661803408);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 288.241624037156) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 122.61877930895) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 85.8827981030965) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 53.8465796159833) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 48.8668399322475) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 44.0420113544423) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 34.1568129202454) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 26.0130310901372) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.1554711498296) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 16.7982907718532) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.2270976562916) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 10.2930191652826) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.29799764770225) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 5.28642550062574) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 3.43753373559824) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.07666959146316) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.60569920481362) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -0.8359698163787) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -4.35749304688957) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   drop 'Age_group'n 'Cases_in_1000s'n 'Date'n 'Disease'n 'Gender'n 'Population_in_thousands'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS2.Score2_EMOUTPUTVARS noprint out=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
139008     data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
139009     set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
139010     length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
139011     if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
139012     else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
139013     drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
139014     if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
139015     else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
139016     else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
139017     else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
139018     else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
139019     ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
139020     else do;
MPRINT(EM_DIAGRAM):   else do;
139021     name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
139022     if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
139023     else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
139024     else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
139025     else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
139026     else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
139027     else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
139028     end;
MPRINT(EM_DIAGRAM):   end;
139029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139030     proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
139031     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
139032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK.META has 10 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139033     proc sort data=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMOUTPUTVARS;
139034     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
139035     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139036     data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMOUTPUTVARS;
139037     merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
139038     label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
139039     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
139040     if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
139041     if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
139042     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.META.
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139043     %let _cn = %sysfunc(getoption(CENTER));
139044     %let _nb = %sysfunc(getoption(NUMBER));
139045     options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
139046     title;
MPRINT(EM_DIAGRAM):   title;
139047     proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
139048     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
139049     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
139050     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
139051     run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 48.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139052     title10;
MPRINT(EM_DIAGRAM):   title10;
139053     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
139054     %let _cn = %sysfunc(getoption(CENTER));
139055     %let _nb = %sysfunc(getoption(NUMBER));
139056     options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
139057     title;
MPRINT(EM_DIAGRAM):   title;
139058     proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
139059     var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
139060     label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
139061        "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
139062     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
139063     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
139064     run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 49.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139065     title10;
MPRINT(EM_DIAGRAM):   title10;
139066     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
139067     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
139068     * Score2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score2: Computing metadata for TRAIN data;
139069     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score2_TRAIN out=WORK.M3KXUB6U noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KXUB6U;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KXUB6U(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3KXUB6U;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3KXUB6U;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M28TCQNX NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3B4MSRB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   set WORK.M28TCQNX;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Cases_in_1000s" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: View EMWS2.SCORE2_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
139417     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
139418     * Score2: Computing metadata for SCORE data;
MPRINT(EM_DIAGRAM):   * Score2: Computing metadata for SCORE data;
139419     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for SCORE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score2_SCORE out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score2_SCORE');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score2_SCORE out=WORK.M1BZ74Q8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BZ74Q8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BZ74Q8(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BZ74Q8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BZ74Q8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0X30WSL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2DHWG7Z(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   set WORK.M0X30WSL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Ids_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_CMeta_SCORE;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Cases_in_1000s" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:11:21" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 11, 2019
Time:                14:11:21
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3P92R3E "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3P92R3E new;
MPRINT(EM_DIAGRAM):   run;
139790     data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
139791     length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
139792     NAME="b_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="b_Cases_in_1000s";
139793     ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
139794     LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
139795     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
139796     output;
MPRINT(EM_DIAGRAM):   output;
139797     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139798     data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
139799     length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
139800     NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
139801     ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
139802     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
139803     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
139804     output;
MPRINT(EM_DIAGRAM):   output;
139805     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
The SAS System
 
 
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
139806     ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
139807     ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
139808     proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
139809     table b_Cases_in_1000s / missing;
MPRINT(EM_DIAGRAM):   table b_Cases_in_1000s / missing;
139810     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 728 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 728 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 728 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
139811     quit;
139812     ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
139813     data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
139814     label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
139815        "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
139816     dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
139817     varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
139818     freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
139819     pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
139820     typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
139821     length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
139822     do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
139823     _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
139824     count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
139825     percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
139826     vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
139827     type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
139828     fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
139829     _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
139830     _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
139831     if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
139832     output;
MPRINT(EM_DIAGRAM):   output;
139833     end;
MPRINT(EM_DIAGRAM):   end;
139834     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
139835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139836     proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
139837     by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
139838     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139839     proc sort data=WORK.M0UDV4BO;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0UDV4BO;
139840     by Name;
MPRINT(EM_DIAGRAM):   by Name;
139841     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0UDV4BO.
NOTE: The data set WORK.M0UDV4BO has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139842     data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
139843     merge WORK.Score2_BAR(in=_a) WORK.M0UDV4BO(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M0UDV4BO(keep=Name Role rename=(Name=_Variable_));
139844     by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
139845     label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
139846     if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
139847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M0UDV4BO.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139848     data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
139849     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
139850     retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
139851     set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
139852     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139853     proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
139854     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 20 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139855     %var_profile(DATA=EMWS2.MdlComp_TRAIN, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* EM: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wed, Dec 11, 2019 02:11:21 PM,
      Last Modified=Wed, Dec 11, 2019 02:11:21 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22428_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS2.MdlComp_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 728   Memory used = 511K.
NOTE: There were 728 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.09 seconds
 
NOTE: There were 728 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: There were 728 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_Cases_in_1000s obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 728 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 728 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
NOTE: There were 728 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 728 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score2_SUMDATA out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 1 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wed, Dec 11, 2019 02:11:22 PM,
      Last Modified=Wed, Dec 11, 2019 02:11:22 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22428_830-5CG9310VLM_\Prc2\em.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 25 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc format;
MPRINT(VAR_PROFILE):   value F1_ LOW --1.971995853 ="-8.566650661 " -1.971995853 -11.217313764 ="4.6226589557 " 11.217313764 -24.406623381 ="17.811968572 " 24.406623381 -37.595932997 ="31.001278189 " 37.595932997 -50.785242614 ="44.190587806 "
50.785242614 -63.974552231 ="57.379897422 " 63.974552231 -77.163861848 ="70.569207039 " 77.163861848 -90.353171464 ="83.758516656 " 90.353171464 -103.54248108 ="96.947826273 " 103.54248108 -116.7317907 ="110.13713589 " 116.7317907 -129.92110031
="123.32644551 " 129.92110031 -143.11040993 ="136.51575512 " 143.11040993 -156.29971955 ="149.70506474 " 156.29971955 -169.48902916 ="162.89437436 " 169.48902916 -182.67833878 ="176.08368397 " 182.67833878 -195.8676484 ="189.27299359 " 195.8676484
-222.31467014 ="215.72001533 " 222.31467014 -248.76169188 ="242.16703708 " 248.76169188 -275.20871363 ="268.61405882 " 275.20871363 -301.65573537 ="295.06108056 " 301.65573537 -HIGH="321.5081023 " ;
NOTE: Format F1_ is already on the library WORK.FORMATS.
NOTE: Format F1_ has been output.
MPRINT(VAR_PROFILE):   run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 728   Memory used = 511K.
NOTE: There were 728 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 728 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 728 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 728 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 16 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 16 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
139884     data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
139885     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
139886     retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
139887     set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
139888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 16 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139889     proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
139890     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 16 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_HIST has 16 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139891     proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
139892     where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
139893     id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
139894     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139895     data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
139896     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
139897     retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
139898     set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
139899     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139900     proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
139901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2STAT has 1 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139902     data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
139903     length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
139904     NAME="b_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="b_Cases_in_1000s";
139905     ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
139906     LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
139907     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
139908     output;
MPRINT(EM_DIAGRAM):   output;
139909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139910     data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
139911     length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
139912     NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
139913     ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
139914     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
139915     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
139916     output;
MPRINT(EM_DIAGRAM):   output;
139917     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
139918     ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
139919     ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
139920     proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
139921     table b_Cases_in_1000s / missing;
MPRINT(EM_DIAGRAM):   table b_Cases_in_1000s / missing;
139922     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 312 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 312 observations read from the data set EMWS2.REG5_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 312 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
139923     quit;
139924     ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
139925     data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
139926     label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
139927        "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
139928     dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
139929     varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
139930     freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
139931     pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
139932     typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
139933     length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
139934     do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
139935     _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
139936     count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
139937     percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
139938     vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
139939     type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
139940     fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
139941     _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
139942     _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
139943     if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
139944     output;
MPRINT(EM_DIAGRAM):   output;
139945     end;
MPRINT(EM_DIAGRAM):   end;
139946     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
139947     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139948     proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
139949     by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
139950     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139951     proc sort data=WORK.M33MEJJD;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M33MEJJD;
139952     by Name;
MPRINT(EM_DIAGRAM):   by Name;
139953     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M33MEJJD.
NOTE: The data set WORK.M33MEJJD has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139954     data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
139955     merge WORK.Score2_BAR(in=_a) WORK.M33MEJJD(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M33MEJJD(keep=Name Role rename=(Name=_Variable_));
139956     by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
139957     label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
139958     if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
139959     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M33MEJJD.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
139960     data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
139961     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
139962     retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
139963     set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
139964     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139965     proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
139966     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: 20 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 40 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139967     %var_profile(DATA=EMWS2.MdlComp_VALIDATE, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* EM: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, Dec 11, 2019 02:11:21 PM,
      Last Modified=Wed, Dec 11, 2019 02:11:21 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22428_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 312   Memory used = 511K.
NOTE: There were 312 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 312 observations read from the data set EMWS2.REG5_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: There were 312 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: There were 312 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 15 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
139971     data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
139972     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
139973     retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
139974     set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
139975     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 15 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139976     proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
139977     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 15 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 15 observations added.
NOTE: The data set WORK.SCORE2_HIST has 31 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139978     proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
139979     var
139980     P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   var P_Cases_in_1000s;
139981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 312 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 312 observations read from the data set EMWS2.REG5_VALIDATE.
NOTE: There were 312 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
139982     quit;
 
139983     proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
139984     where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
139985     id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
139986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
139987     data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
139988     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
139989     retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
139990     set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
139991     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
139992     proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
139993     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 2 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
139994     data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
139995     length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
139996     NAME="b_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="b_Cases_in_1000s";
139997     ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
139998     LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
139999     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
140000     output;
MPRINT(EM_DIAGRAM):   output;
140001     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140002     data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
140003     length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
140004     NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
140005     ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
140006     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
140007     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
140008     output;
MPRINT(EM_DIAGRAM):   output;
140009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
140010     ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
140011     ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
140012     proc freq data = EMWS2.Score2_SCORE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.Score2_SCORE order=formatted addnames;
140013     table b_Cases_in_1000s / missing;
MPRINT(EM_DIAGRAM):   table b_Cases_in_1000s / missing;
140014     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 600 observations read from the data set NEWDIS.DISEASE_FUTURE_JOIN_1.
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 600 observations read from the data set EMWS2.IDS_DATA.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 600 observations read from the data set EMWS2.SCORE2_SCORE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
140015     quit;
140016     ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
140017     data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
140018     label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
140019        "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
140020     dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
140021     varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
140022     freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
140023     pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
140024     typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
140025     length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
140026     do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
140027     _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
140028     count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
140029     percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
140030     vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
140031     type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
140032     fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
140033     _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
140034     _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
140035     if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
140036     output;
MPRINT(EM_DIAGRAM):   output;
140037     end;
MPRINT(EM_DIAGRAM):   end;
140038     dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
140039     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
140040     proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
140041     by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
140042     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
140043     proc sort data=WORK.M0HETZUC;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M0HETZUC;
140044     by Name;
MPRINT(EM_DIAGRAM):   by Name;
140045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0HETZUC.
NOTE: The data set WORK.M0HETZUC has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140046     data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
140047     merge WORK.Score2_BAR(in=_a) WORK.M0HETZUC(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M0HETZUC(keep=Name Role rename=(Name=_Variable_));
140048     by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
140049     label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
140050     if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
140051     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M0HETZUC.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
140052     data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
140053     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
140054     retain DATAROLE "SCORE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE";
140055     set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
140056     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
140057     proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
140058     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: 20 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 60 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140059     %var_profile(DATA=EMWS2.Score2_SCORE, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* EM: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, Dec 11, 2019 02:11:21 PM,
      Last Modified=Wed, Dec 11, 2019 02:11:23 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD22428_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.Score2_SCORE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 600   Memory used = 511K.
NOTE: There were 600 observations read from the data set NEWDIS.DISEASE_FUTURE_JOIN_1.
NOTE: There were 600 observations read from the data set EMWS2.IDS_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 600 observations read from the data set EMWS2.SCORE2_SCORE.
NOTE: There were 600 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 19 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
140063     data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
140064     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
140065     retain DATAROLE "SCORE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" TYPE "";
140066     set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
140067     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140068     proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
140069     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 19 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 19 observations added.
NOTE: The data set WORK.SCORE2_HIST has 50 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140070     proc stdize data=EMWS2.Score2_SCORE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.Score2_SCORE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
140071     var
140072     P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   var P_Cases_in_1000s;
140073     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 600 observations read from the data set NEWDIS.DISEASE_FUTURE_JOIN_1.
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: There were 600 observations read from the data set EMWS2.IDS_DATA.
NOTE: There were 600 observations read from the data set EMWS2.SCORE2_SCORE.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
140074     quit;
 
140075     proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
140076     where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
140077     id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
140078     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
140079     data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
140080     length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
140081     retain DATAROLE "SCORE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" Type "";
140082     set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
140083     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
140084     proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
140085     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140086     data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
140087     set EMWS2.Score2_BAR;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_BAR;
140088     label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type";
140089     select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
140090     when("b_Cases_in_1000s") TYPE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Cases_in_1000s") TYPE = 'SEGMENT';
140091     otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
140092     end;
MPRINT(EM_DIAGRAM):   end;
140093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 60 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 60 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
140094     proc sort data = EMWS2.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Score2_BAR NOTHREADS;
140095     by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
140096     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 60 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
140097     %let _cn = %sysfunc(getoption(CENTER));
140098     %let _nb = %sysfunc(getoption(NUMBER));
140099     options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
140100     title;
MPRINT(EM_DIAGRAM):   title;
140101     proc print data = EMWS2.Score2_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Score2_BAR noobs label;
140102     by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
140103     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
140104     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
140105     run;
 
NOTE: There were 60 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The PROCEDURE PRINT printed page 50.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
140106     title10;
MPRINT(EM_DIAGRAM):   title10;
140107     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
140108     data EMWS2.Score2_HIST;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_HIST;
140109     set work.Score2_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score2_HIST(rename=(Percent=Value));
140110     label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
140111        "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
140112     select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
140113     when("P_Cases_in_1000s") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Cases_in_1000s") TYPE = 'PREDICTED';
140114     when("b_Cases_in_1000s") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Cases_in_1000s") TYPE= 'SEGMENT';
140115     otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
140116     end;
MPRINT(EM_DIAGRAM):   end;
140117     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK.SCORE2_HIST.
NOTE: The data set EMWS2.SCORE2_HIST has 50 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
140118     data WORK.Score2STAT;
MPRINT(EM_DIAGRAM):    data WORK.Score2STAT;
140119     set WORK.Score2STAT;
MPRINT(EM_DIAGRAM):   set WORK.Score2STAT;
140120     label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
140121        "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
140122        "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 = "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
140123        "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 = "25th Percentile" P75 = "75th Percentile";
140124     select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
140125     when("P_Cases_in_1000s") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Cases_in_1000s") TYPE = 'PREDICTED';
140126     when("b_Cases_in_1000s") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Cases_in_1000s") TYPE= 'SEGMENT';
140127     otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
140128     end;
MPRINT(EM_DIAGRAM):   end;
140129     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
140130     proc sort data = WORK.Score2STAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.Score2STAT NOTHREADS;
140131     by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
140132     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
140133     proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
140134     by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
140135     id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
140136     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 8 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
140137     proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
140138     modify Score2STAT;
MPRINT(EM_DIAGRAM):   modify Score2STAT;
140139     label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,  NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL = "Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORE2STAT.
140140        "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
140141     run;
 
NOTE: MODIFY was successful for WORK.SCORE2STAT.DATA.
140142     %let _cn = %sysfunc(getoption(CENTER));
140143     %let _nb = %sysfunc(getoption(NUMBER));
140144     options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
140145     title;
MPRINT(EM_DIAGRAM):   title;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
140146     proc print data = WORK.Score2STAT label noobs;
MPRINT(EM_DIAGRAM):   proc print data = WORK.Score2STAT label noobs;
140147     by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
140148     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
140149     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
140150     run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2STAT.
NOTE: The PROCEDURE PRINT printed page 51.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
140151     title10;
MPRINT(EM_DIAGRAM):   title10;
140152     options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
