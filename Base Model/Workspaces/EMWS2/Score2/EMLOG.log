*------------------------------------------------------------*
User:                student
Date:                December 04, 2019
Time:                13:49:34
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:28" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 04, 2019
Time:                13:49:28
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1E7PEQB "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1E7PEQB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:28" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:28" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
94130      proc freq data=EMWS2.Score2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Score2_VariableSet noprint;
94131      table ROLE*LEVEL/out=WORK.Score2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Score2META;
94132      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.SCORE2_VARIABLESET.
NOTE: The data set WORK.SCORE2META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
94133      proc print data=WORK.Score2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Score2META label noobs;
94134      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
94135      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
94136      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
94137      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
94138      run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE2META.
NOTE: The PROCEDURE PRINT printed page 28.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94139      title10;
MPRINT(EM_DIAGRAM):   title10;
94140      %let groupid =;
94141      %let endGroupid =;
94142      %let prescoreid =;
94143      %let idsTable =;
94144      %let hpdmTable =;
94145      %let lasthptm =;
94146      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
94147      set EMWS2.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Tree_EMINFO;
94148      where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
94149      select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
94150      when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
94151      when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
94152      when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
94153      when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
94154      when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
94155      otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
94156      end;
MPRINT(EM_DIAGRAM):   end;
94157      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TREE_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94158      %let lastModelid =;
94159      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
94160      set EMWS2.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Tree_EMINFO;
94161      where upcase(key) = 'MODEL' and TARGET = "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   where upcase(key) = 'MODEL' and TARGET = "Cases_in_1000s";
94162      call symput('lastModelID', DATA);
MPRINT(EM_DIAGRAM):   call symput('lastModelID', DATA);
94163      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TREE_EMINFO.
      WHERE (UPCASE(key)='MODEL') and (TARGET='Cases_in_1000s');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.TREE_EMINFO.
      WHERE (TARGET='Cases_in_1000s') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO40DOPGN5 has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.TREE_EMINFO.
      WHERE (TARGET='Cases_in_1000s') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO417_2P2L has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
94164      %let em_rootkey=;
94165      %let em_keytype=;
94166      %let em_keylen=;
94167      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
94168      set EMWS2.Ids_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_cmeta_data;
94169      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
94170      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
94171      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
94172      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
94173      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:28" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 04, 2019
Time:                13:49:28
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FEO01Q "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FEO01Q new;
MPRINT(EM_DIAGRAM):   run;
94275      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94276      *------------------------------------------------------------*;
94277      * Score2: Scoring DATA data;
94278      *------------------------------------------------------------*;
94279      data EMWS2.Score2_TRAIN
94280      / view=EMWS2.Score2_TRAIN
94281      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_TRAIN / view=EMWS2.Score2_TRAIN ;
94282      set EMWS2.MdlComp_TRAIN
94283      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_TRAIN ;
94284      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas.
94285     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94286     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
94287     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94288     +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
94289     +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
94290     +LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
94291     +EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
94292     +LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
94293     +EM_VALUETARGET = Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
94294      run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
94295      quit;
94296      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
94297      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94298      *------------------------------------------------------------*;
94299      * Score2: Scoring VALIDATE data;
94300      *------------------------------------------------------------*;
94301      data EMWS2.Score2_VALIDATE
94302      / view=EMWS2.Score2_VALIDATE
94303      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_VALIDATE / view=EMWS2.Score2_VALIDATE ;
94304      set EMWS2.MdlComp_VALIDATE
94305      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_VALIDATE ;
94306      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas.
94307     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94308     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
94309     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94310     +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
94311     +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
94312     +LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
94313     +EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
94314     +LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
94315     +EM_VALUETARGET = Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
94316      run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
94317      quit;
94318      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
94319      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94320      *------------------------------------------------------------*;
94321      * Score2: Scoring TEST data;
94322      *------------------------------------------------------------*;
94323      data EMWS2.Score2_TEST
94324      / view=EMWS2.Score2_TEST
94325      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_TEST / view=EMWS2.Score2_TEST ;
94326      set EMWS2.MdlComp_TEST
94327      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_TEST ;
94328      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas.
94329     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94330     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
94331     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94332     +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
94333     +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
94334     +LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
94335     +EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
94336     +LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
94337     +EM_VALUETARGET = Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
94338      run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
94339      quit;
94340      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
94341      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
94342      * Score2: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score2: Creating Publish Score Variables Table;
94343      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94344      proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
94345      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94346      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
94347      proc sort data=EMWS2.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
94348      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94349      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
94350      data EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMINPUTVARS;
94351      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
94352      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94353      length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
94354      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
94355         "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
94356         "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
94357      if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
94358      if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
94359      if upcase(NAME) = "CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CASES_IN_1000S" then HIDE = "N";
94360      if upcase(NAME) = "DATE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DATE" then HIDE = "N";
94361      if upcase(NAME) = "DISEASE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DISEASE" then HIDE = "N";
94362      if upcase(NAME) = "GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "GENDER" then HIDE = "N";
94363      if upcase(NAME) = "P_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_CASES_IN_1000S" then HIDE = "N";
94364      if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
94365      if upcase(NAME) = "R_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_CASES_IN_1000S" then HIDE = "N";
94366      if upcase(NAME) = "V_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "V_CASES_IN_1000S" then HIDE = "N";
94367      if upcase(NAME) = "_NODE_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_NODE_" then HIDE = "N";
94368      if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
94369      if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
94370      if upcase(NAME) = "B_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_CASES_IN_1000S" then HIDE = "N";
94371      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 13 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 12 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
94372      proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
94373      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94374      where CREATOR='' or (NAME="CASES_IN_1000S" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="CASES_IN_1000S" and CREATOR='');
94375      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='CASES_IN_1000S') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94376      %let em_rootkey=;
94377      %let em_keytype=;
94378      %let em_keylen=;
94379      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
94380      set EMWS2.Ids_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_cmeta_data;
94381      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
94382      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
94383      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
94384      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
94385      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94386      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
94387      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
94388      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
94389      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas.
94390     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94391     +* Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
94392     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
94393     +LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
94394     +EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
94395     +LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
94396     +EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
94397      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
94398      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
94399      quit;
94400      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
94401      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
94402      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
94403      retain ID 1 Node "Score2";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score2";
94404      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
94405      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94406      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
94407      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94408      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94409      proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
94410      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94411      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
94412      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
94413      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
94414      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
94415      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94416      proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
94417      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 17 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
94418      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
94419      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94420      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 17 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94421      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
94422      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
94423      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94424      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 17 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 17 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94425      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
94426      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
94427      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94428      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
94429      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS2.SCORE2_FCMP has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94430      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
94431      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
94432      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
94433      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas.
94434     +drop _temp_;
MPRINT(EM_DIAGRAM):   drop _temp_;
94435     +if (P_Cases_in_1000s ge 92.944444444444) then do;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 92.944444444444) then do;
94436     +b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
94437     +end;
MPRINT(EM_DIAGRAM):   end;
94438     +else
94439     +if (P_Cases_in_1000s ge 69.8125) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 69.8125) then do;
94440     +b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
94441     +end;
MPRINT(EM_DIAGRAM):   end;
94442     +else
94443     +if (P_Cases_in_1000s ge 41.375) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 41.375) then do;
94444     +b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
94445     +end;
MPRINT(EM_DIAGRAM):   end;
94446     +else
94447     +if (P_Cases_in_1000s ge 30.7152777777777) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 30.7152777777777) then do;
94448     +b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
94449     +end;
MPRINT(EM_DIAGRAM):   end;
94450     +else
94451     +if (P_Cases_in_1000s ge 24.2777777777777) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 24.2777777777777) then do;
94452     +b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
94453     +end;
MPRINT(EM_DIAGRAM):   end;
94454     +else
94455     +if (P_Cases_in_1000s ge 18.0760869565217) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 18.0760869565217) then do;
94456     +b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
94457     +end;
MPRINT(EM_DIAGRAM):   end;
94458     +else
94459     +if (P_Cases_in_1000s ge 14.2084639498432) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 14.2084639498432) then do;
94460     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
94461     +b_Cases_in_1000s = floor(7 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = floor(7 + 2*_temp_);
94462     +end;
MPRINT(EM_DIAGRAM):   end;
94463     +else
94464     +if (P_Cases_in_1000s ge 12.6414141414141) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.6414141414141) then do;
94465     +b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
94466     +end;
MPRINT(EM_DIAGRAM):   end;
94467     +else
94468     +if (P_Cases_in_1000s ge 10.9595959595959) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 10.9595959595959) then do;
94469     +b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
94470     +end;
MPRINT(EM_DIAGRAM):   end;
94471     +else
94472     +if (P_Cases_in_1000s ge 9.11660079051383) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 9.11660079051383) then do;
94473     +b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
94474     +end;
MPRINT(EM_DIAGRAM):   end;
94475     +else
94476     +if (P_Cases_in_1000s ge 5.28472222222222) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 5.28472222222222) then do;
94477     +b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
94478     +end;
MPRINT(EM_DIAGRAM):   end;
94479     +else
94480     +if (P_Cases_in_1000s ge 4.34722222222222) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 4.34722222222222) then do;
94481     +b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
94482     +end;
MPRINT(EM_DIAGRAM):   end;
94483     +else
94484     +if (P_Cases_in_1000s ge 2.33395522388059) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.33395522388059) then do;
94485     +b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
94486     +end;
MPRINT(EM_DIAGRAM):   end;
94487     +else
94488     +if (P_Cases_in_1000s ge 0.41791044776119) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.41791044776119) then do;
94489     +b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
94490     +end;
MPRINT(EM_DIAGRAM):   end;
94491     +else
94492     +if (P_Cases_in_1000s ge 0) then do;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0) then do;
94493     +_temp_ = dmran(1234);
MPRINT(EM_DIAGRAM):   _temp_ = dmran(1234);
94494     +b_Cases_in_1000s = floor(17 + 2*_temp_);
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = floor(17 + 2*_temp_);
94495     +end;
MPRINT(EM_DIAGRAM):   end;
94496     +else
94497     +do;
MPRINT(EM_DIAGRAM):   else do;
94498     +b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
94499     +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
94500      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
94501      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
94502      quit;
94503      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
94504      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
94505      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
94506      retain ID 2 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp";
94507      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
94508      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94509      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
94510      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94511      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 3 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94512      proc sort data=EMWS2.Tree_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Tree_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
94513      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94514      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set EMWS2.TREE_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 12 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94515      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
94516      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
94517      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
94518      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 12 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94519      proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
94520      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 13 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
94521      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
94522      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94523      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 13 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94524      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
94525      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
94526      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94527      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 13 observations read from the data set WORK._META.
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94528      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
94529      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
94530      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94531      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
94532      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: 2 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94533      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMPUBLISHSCORE.sas";
94534      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
94535      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
94536      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Tree\EMPUBLISHSCORE.sas.
94537     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
94538     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
94539     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
94540     +
94541     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
94542     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
94543     +
94544     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
94545     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
94546     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
94547     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
94548     +label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
94549     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
94550     +
94551     +
94552     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
94553     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
94554     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
94555     +LENGTH _ARBFMT_10 $     10; DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
94556     +_ARBFMT_10 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
94557     +LENGTH _ARBFMT_32 $     32; DROP _ARBFMT_32;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_32 $ 32;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_32;
94558     +_ARBFMT_32 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = ' ';
94559     +
94560     +
94561     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
94562     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
94563     + %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94564     +IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
94565     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
94566     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94567     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
94568     +    _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94569     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94570     +    IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
94571     +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
94572     +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
94573     +      P_Cases_in_1000s  =                 19.5;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 19.5;
94574     +      V_Cases_in_1000s  =                 20.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 20.2;
94575     +      END;
MPRINT(EM_DIAGRAM):   END;
94576     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94577     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94578     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94579     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
94580     +        _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
94581     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
94582     +        P_Cases_in_1000s  =                6.125;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.125;
94583     +        V_Cases_in_1000s  =                  6.4;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 6.4;
94584     +        END;
MPRINT(EM_DIAGRAM):   END;
94585     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94586     +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
94587     +        _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
94588     +        P_Cases_in_1000s  =     12.7272727272727;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.7272727272727;
94589     +        V_Cases_in_1000s  =                 13.2;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2;
94590     +        END;
MPRINT(EM_DIAGRAM):   END;
94591     +      END;
MPRINT(EM_DIAGRAM):   END;
94592     +    END;
MPRINT(EM_DIAGRAM):   END;
94593     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94594     +    _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
94595     +     %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94596     +    IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
94597     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94598     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94599     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
94600     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
94601     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
94602     +        P_Cases_in_1000s  =     9.36363636363636;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 9.36363636363636;
94603     +        V_Cases_in_1000s  =                 8.75;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 8.75;
94604     +        END;
MPRINT(EM_DIAGRAM):   END;
94605     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94606     +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
94607     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
94608     +        P_Cases_in_1000s  =     4.44444444444444;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.44444444444444;
94609     +        V_Cases_in_1000s  =                  5.9;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 5.9;
94610     +        END;
MPRINT(EM_DIAGRAM):   END;
94611     +      END;
MPRINT(EM_DIAGRAM):   END;
94612     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94613     +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
94614     +      _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
94615     +      P_Cases_in_1000s  =     0.41791044776119;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0.41791044776119;
94616     +      V_Cases_in_1000s  =     0.14545454545454;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0.14545454545454;
94617     +      END;
MPRINT(EM_DIAGRAM):   END;
94618     +    END;
MPRINT(EM_DIAGRAM):   END;
94619     +  END;
MPRINT(EM_DIAGRAM):   END;
94620     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94621     +  _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
94622     +   %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94623     +  IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
94624     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
94625     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94626     +    IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
94627     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94628     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94629     +      IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
94630     +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
94631     +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
94632     +        P_Cases_in_1000s  =     178.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 178.888888888888;
94633     +        V_Cases_in_1000s  =                204.5;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 204.5;
94634     +        END;
MPRINT(EM_DIAGRAM):   END;
94635     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94636     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94637     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94638     +        IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
94639     +          _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
94640     +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
94641     +          P_Cases_in_1000s  =               66.625;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 66.625;
94642     +          V_Cases_in_1000s  =     62.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 62.3333333333333;
94643     +          END;
MPRINT(EM_DIAGRAM):   END;
94644     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94645     +          _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
94646     +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
94647     +          P_Cases_in_1000s  =     112.888888888888;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 112.888888888888;
94648     +          V_Cases_in_1000s  =     110.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 110.888888888888;
94649     +          END;
MPRINT(EM_DIAGRAM):   END;
94650     +        END;
MPRINT(EM_DIAGRAM):   END;
94651     +      END;
MPRINT(EM_DIAGRAM):   END;
94652     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94653     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94654     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94655     +      IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
94656     +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
94657     +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
94658     +        P_Cases_in_1000s  =                 4.25;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.25;
94659     +        V_Cases_in_1000s  =     2.57142857142857;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 2.57142857142857;
94660     +        END;
MPRINT(EM_DIAGRAM):   END;
94661     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94662     +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
94663     +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
94664     +        P_Cases_in_1000s  =     12.5555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.5555555555555;
94665     +        V_Cases_in_1000s  =     10.6363636363636;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 10.6363636363636;
94666     +        END;
MPRINT(EM_DIAGRAM):   END;
94667     +      END;
MPRINT(EM_DIAGRAM):   END;
94668     +    END;
MPRINT(EM_DIAGRAM):   END;
94669     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94670     +
94671     +     DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
94672     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
94673     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
94674     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94675     +      IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
94676     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94677     +      END;
MPRINT(EM_DIAGRAM):   END;
94678     +      ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
94679     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94680     +      END;
MPRINT(EM_DIAGRAM):   END;
94681     +    IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
94682     +      _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
94683     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94684     +        IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' ,
94685     +        '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' , '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
94686     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94687     +        END;
MPRINT(EM_DIAGRAM):   END;
94688     +        ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' ,
94689     +        '2001' ,'2004' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' , '2001' ,'2004' ,'2009' ) THEN DO;
94690     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94691     +        END;
MPRINT(EM_DIAGRAM):   END;
94692     +      END;
MPRINT(EM_DIAGRAM):   END;
94693     +    IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
94694     +      _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94695     +       %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94696     +        IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
94697     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94698     +        END;
MPRINT(EM_DIAGRAM):   END;
94699     +        ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
94700     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94701     +        END;
MPRINT(EM_DIAGRAM):   END;
94702     +      END;
MPRINT(EM_DIAGRAM):   END;
94703     +    IF _BRANCH_ LT 0 THEN _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
94704     +
94705     +    IF _BRANCH_ EQ    1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
94706     +
94707     +      _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
94708     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
94709     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94710     +        IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
94711     +         _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94712     +        END;
MPRINT(EM_DIAGRAM):   END;
94713     +        ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
94714     +        'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
94715     +         _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94716     +        END;
MPRINT(EM_DIAGRAM):   END;
94717     +      IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
94718     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94719     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94720     +          IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
94721     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94722     +          END;
MPRINT(EM_DIAGRAM):   END;
94723     +          ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
94724     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94725     +          END;
MPRINT(EM_DIAGRAM):   END;
94726     +        END;
MPRINT(EM_DIAGRAM):   END;
94727     +      IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
94728     +
94729     +      IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
94730     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
94731     +        _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
94732     +        P_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0;
94733     +        V_Cases_in_1000s  =                    0;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0;
94734     +        END;
MPRINT(EM_DIAGRAM):   END;
94735     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94736     +
94737     +        _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
94738     +        _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
94739     +         %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94740     +          IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
94741     +           _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94742     +          END;
MPRINT(EM_DIAGRAM):   END;
94743     +          ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
94744     +           _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94745     +          END;
MPRINT(EM_DIAGRAM):   END;
94746     +        IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
94747     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94748     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94749     +            IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
94750     +             _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
94751     +            END;
MPRINT(EM_DIAGRAM):   END;
94752     +            ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
94753     +             _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
94754     +            END;
MPRINT(EM_DIAGRAM):   END;
94755     +          END;
MPRINT(EM_DIAGRAM):   END;
94756     +        IF _BRANCH_ LT 0 THEN _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
94757     +
94758     +        IF _BRANCH_ EQ    2 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
94759     +          _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
94760     +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
94761     +          P_Cases_in_1000s  =      8.8695652173913;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 8.8695652173913;
94762     +          V_Cases_in_1000s  =     13.2105263157894;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2105263157894;
94763     +          END;
MPRINT(EM_DIAGRAM):   END;
94764     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94765     +          _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
94766     +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
94767     +          P_Cases_in_1000s  =     16.6521739130434;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 16.6521739130434;
94768     +          V_Cases_in_1000s  =     17.6842105263157;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 17.6842105263157;
94769     +          END;
MPRINT(EM_DIAGRAM):   END;
94770     +        END;
MPRINT(EM_DIAGRAM):   END;
94771     +      END;
MPRINT(EM_DIAGRAM):   END;
94772     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94773     +      _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
94774     +       %DMNORMIP( _ARBFMT_32);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94775     +      IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' ,
94776     +      'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
94777     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94778     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94779     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
94780     +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
94781     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
94782     +          P_Cases_in_1000s  =               32.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 32.375;
94783     +          V_Cases_in_1000s  =     32.4285714285714;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 32.4285714285714;
94784     +          END;
MPRINT(EM_DIAGRAM):   END;
94785     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94786     +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
94787     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
94788     +          P_Cases_in_1000s  =     15.6896551724137;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 15.6896551724137;
94789     +          V_Cases_in_1000s  =     15.1111111111111;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 15.1111111111111;
94790     +          END;
MPRINT(EM_DIAGRAM):   END;
94791     +        END;
MPRINT(EM_DIAGRAM):   END;
94792     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94793     +        _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94794     +         %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94795     +        IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
94796     +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
94797     +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
94798     +          P_Cases_in_1000s  =                   73;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 73;
94799     +          V_Cases_in_1000s  =     89.3333333333333;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 89.3333333333333;
94800     +          END;
MPRINT(EM_DIAGRAM):   END;
94801     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94802     +          _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
94803     +           %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
94804     +          IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
94805     +            _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
94806     +            _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
94807     +            P_Cases_in_1000s  =               50.375;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 50.375;
94808     +            V_Cases_in_1000s  =     49.2941176470588;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 49.2941176470588;
94809     +            END;
MPRINT(EM_DIAGRAM):   END;
94810     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
94811     +            _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
94812     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
94813     +            P_Cases_in_1000s  =     29.0555555555555;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 29.0555555555555;
94814     +            V_Cases_in_1000s  =      28.090909090909;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 28.090909090909;
94815     +            END;
MPRINT(EM_DIAGRAM):   END;
94816     +          END;
MPRINT(EM_DIAGRAM):   END;
94817     +        END;
MPRINT(EM_DIAGRAM):   END;
94818     +      END;
MPRINT(EM_DIAGRAM):   END;
94819     +    END;
MPRINT(EM_DIAGRAM):   END;
94820     +  END;
MPRINT(EM_DIAGRAM):   END;
94821     +
94822     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
94823     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
94824     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
94825     +
94826     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
94827      run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
94828      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
94829      quit;
94830      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
94831      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
94832      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
94833      retain ID 3 Node "Tree";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Tree";
94834      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
94835      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 64 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94836      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
94837      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94838      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 64 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 64 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94839      proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
94840      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94841      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94842      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
94843      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
94844      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
94845      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94846      proc contents data=EMWS2.Tree_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Tree_train out=_meta(keep=NAME) noprint;
94847      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 12 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
94848      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
94849      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94850      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 12 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94851      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
94852      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
94853      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
94854      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 12 observations read from the data set WORK._META.
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 12 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94855      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
94856      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 32 rows and 5 columns.
 
94857      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
94858      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
94859      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 32 observations read from the data set WORK._TEMPX.
NOTE: 32 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 36 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
94860      %macro varDept(fcmpdata=,id=);
94861      %global nobs&id scoreFlag&id;
94862      %let scoreFlag&id = 0;
94863      %if &id=1 or ^&fcmpStart %then %do;
94864      proc sort data=&fcmpdata out=_temp&id nodupkey;
94865      by NAME;
94866      %if EM_SEGMENT EM_PREDICTION ne %then %do;
94867      where id=&id and (LHS in( %let j=1;
94868      %do %while(%scan(EM_SEGMENT EM_PREDICTION, &j) ne );
94869      %let var = %scan(EM_SEGMENT EM_PREDICTION, &j);
94870      "&var" %let j = %eval(&j+1);
94871      %end;
94872      ) or substr(LHS, 1, 3)='EM_');
94873      %end;
94874      %else %do;
94875      where id=&id and substr(LHS, 1, 3)='EM_';
94876      %end;
94877      run;
94878      %let dsid = %sysfunc(open(_temp&id));
94879      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
94880      %let dsid = %sysfunc(close(&dsid));
94881      %if &&nobs&id %then %do;
94882      %let scoreFlag&id = 1;
94883      %let fcmpStart = 1;
94884      %end;
94885      %else %let fcmpStart = 0;
94886      %end;
94887      %else %do;
94888      proc sort data=&fcmpdata out=_tempid;
94889      where id=&id;
94890      by LHS;
94891      run;
94892      %let dsid = %sysfunc(open(_tempid));
94893      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
94894      %let dsid = %sysfunc(close(&dsid));
94895      %if ^&&nobs&id %then %do;
94896      proc datasets lib=work nolist;
94897      delete _tempid;
94898      run;
94899      quit;
94900      %end;
94901      %else %do;
94902      data _tempAll;
94903      set %let j=%eval(&id-1);
94904      %do x=1 %to &j;
94905      %if &&nobs&x %then %do;
94906      _temp&x %end;
94907      %end;
94908      ;
94909      run;
94910      proc sql;
94911      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
94912      quit;
94913      data _temp&id;
94914      set _temp&id;
94915      where LHS ne '' and NAME ne '' and Node ne '';
94916      run;
94917      proc datasets lib=work nolist;
94918      delete _tempAll;
94919      run;
94920      %let dsid = %sysfunc(open(_temp&id));
94921      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
94922      %let dsid = %sysfunc(close(&dsid));
94923      %if ^&&nobs&id %then %do;
94924      proc datasets lib=work nolist;
94925      delete _temp&id;
94926      run;
94927      quit;
94928      %end;
94929      %else %do;
94930      %let scoreFlag&id = 1;
94931      data _temp&id;
94932      set _temp&id;
94933      where LHS ne NAME and node ne '';
94934      run;
94935      %let dsid = %sysfunc(open(_temp&id));
94936      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
94937      %let dsid = %sysfunc(close(&dsid));
94938      %if ^&&nobs&id %then %do;
94939      proc datasets lib=work nolist;
94940      delete _temp&id;
94941      run;
94942      quit;
94943      %end;
94944      %else %do;
94945      proc sort data=_temp&id nodupkey;
94946      by LHS NAME;
94947      run;
94948      %end;
94949      %end;
94950      %end;
94951      %end;
94952      %mend varDept;
94953      %macro optCode(outdata=);
94954      %global fcmpStart;
94955      %let fcmpStart = 0;
94956      %let outputVars = EM_SEGMENT EM_PREDICTION;
94957      %let NumNodes=6;
94958      %do k=1 %to &NumNodes;
94959      %vardept(fcmpdata=&outdata, id=&k);
94960      %end;
94961      %mend optCode;
94962      %optcode(outData=EMWS2.Score2_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_PREDICTION" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE (id=1) and (LHS in ('EM_PREDICTION', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp2;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP2 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 32 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 8 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 04DEC2019:13:49:29;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_32 $ 32;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_32;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = ' ';
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 19.5;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 20.2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.125;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 6.4;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.7272727272727;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 9.36363636363636;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 8.75;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.44444444444444;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 5.9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0.41791044776119;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0.14545454545454;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 178.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 204.5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 66.625;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 62.3333333333333;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 112.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 110.888888888888;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.25;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 2.57142857142857;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.5555555555555;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 10.6363636363636;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' , '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' , '2001' ,'2004' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 8.8695652173913;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2105263157894;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 16.6521739130434;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 17.6842105263157;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 32.375;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 32.4285714285714;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 15.6896551724137;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 15.1111111111111;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 73;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 89.3333333333333;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 50.375;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 49.2941176470588;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 29.0555555555555;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 28.090909090909;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
95323      %let validvarany = 0;
95324      data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
95325      set EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMINPUTVARS;
95326      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
95327      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
95328      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
95329      proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
95330      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
95331      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
95332      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
95333      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
95334      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
95335      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
95336      length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
95337      label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
95338      SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
95339      if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
95340      else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
95341      if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
95342      if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
95343      call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
95344      end;
MPRINT(EM_DIAGRAM):   end;
95345      output;
MPRINT(EM_DIAGRAM):   output;
95346      end;
MPRINT(EM_DIAGRAM):   end;
95347      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
95348      proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
95349      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
95350      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=DISEASE.DISEASE_FUTURE_JOIN noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD30376_830-5CG9310VLM_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD30376_830-5CG9310VLM_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('DISEASE.DISEASE_FUTURE_JOIN');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set DISEASE.DISEASE_FUTURE_JOIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 04DEC2019:13:49:29;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label V_Cases_in_1000s = 'Validated: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_32 $ 32;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_32;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = ' ';
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 19.5;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 20.2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.125;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 6.4;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.7272727272727;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 9.36363636363636;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 8.75;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.44444444444444;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 5.9;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0.41791044776119;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0.14545454545454;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('ASTHMA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 178.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 204.5;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 66.625;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 62.3333333333333;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 112.888888888888;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 110.888888888888;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 4.25;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 2.57142857142857;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 12.5555555555555;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 10.6363636363636;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('85+' ,'25-44' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Date ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('1990' ,'1991' ,'1992' ,'1997' ,'1998' ,'2000' , '2002' ,'2003' ,'2005' ,'2006' ,'2007' ,'2008' ,'2010' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('1993' ,'1994' ,'1995' ,'1996' ,'1999' , '2001' ,'2004' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ,'SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ,'ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 0;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 0;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('CANCER, ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_32 IN ('SEPTICEMIA' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 AND NOT MISSING(Gender ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('MALE' ,'FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ EQ 2 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 8.8695652173913;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 13.2105263157894;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 16.6521739130434;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 17.6842105263157;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_32 = PUT( Disease , $32.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_32,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_32 IN ('DEMENTIA AND ALZHEIMER''S DISEASE' , 'OSTEOARTHRITIS' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 32.375;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 32.4285714285714;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 15.6896551724137;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 15.1111111111111;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 73;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 89.3333333333333;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Gender , $CHAR10.);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 50.375;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 49.2941176470588;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ELSE DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 29.0555555555555;
MPRINT(EM_DIAGRAM):   V_Cases_in_1000s = 28.090909090909;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Node';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = _NODE_;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   drop 'Age_group'n 'Cases_in_1000s'n 'Date'n 'Disease'n 'Gender'n 'Population_in_thousands'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS2.Score2_EMOUTPUTVARS noprint out=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
95753      data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
95754      set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
95755      length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
95756      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
95757      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
95758      drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
95759      if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
95760      else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
95761      else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
95762      else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
95763      else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
95764      ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
95765      else do;
MPRINT(EM_DIAGRAM):   else do;
95766      name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
95767      if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
95768      else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
95769      else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
95770      else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
95771      else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
95772      else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
95773      end;
MPRINT(EM_DIAGRAM):   end;
95774      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
95775      proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
95776      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
95777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK.META has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
95778      proc sort data=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMOUTPUTVARS;
95779      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
95780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
95781      data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMOUTPUTVARS;
95782      merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
95783      label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
95784      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
95785      if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
95786      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
95787      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.META.
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
95788      %let _cn = %sysfunc(getoption(CENTER));
95789      %let _nb = %sysfunc(getoption(NUMBER));
95790      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
95791      title;
MPRINT(EM_DIAGRAM):   title;
95792      proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
95793      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
95794      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
95795      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
95796      run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 29.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
95797      title10;
MPRINT(EM_DIAGRAM):   title10;
95798      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
95799      %let _cn = %sysfunc(getoption(CENTER));
95800      %let _nb = %sysfunc(getoption(NUMBER));
95801      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
95802      title;
MPRINT(EM_DIAGRAM):   title;
95803      proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
95804      var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
95805      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
95806         "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
95807      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
95808      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
95809      run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 30.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
95810      title10;
MPRINT(EM_DIAGRAM):   title10;
95811      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
95812      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
95813      * Score2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score2: Computing metadata for TRAIN data;
95814      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score2_TRAIN out=WORK.M2U9_8V5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2U9_8V5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2U9_8V5(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2U9_8V5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2U9_8V5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3CFL2XV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M39390AL(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   set WORK.M3CFL2XV;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Cases_in_1000s" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: View EMWS2.SCORE2_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS2.SCORE2_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:31" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 04, 2019
Time:                13:49:31
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0J7GWD7 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0J7GWD7 new;
MPRINT(EM_DIAGRAM):   run;
96185      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
96186      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
96187      NAME="_NODE_";
MPRINT(EM_DIAGRAM):   NAME="_NODE_";
96188      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
96189      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
96190      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
96191      output;
MPRINT(EM_DIAGRAM):   output;
96192      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96193      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
96194      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
96195      NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
96196      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
96197      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
96198      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
96199      output;
MPRINT(EM_DIAGRAM):   output;
96200      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
96201      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
96202      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
96203      proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
96204      table _NODE_ / missing;
MPRINT(EM_DIAGRAM):   table _NODE_ / missing;
96205      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.TREE_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 19 observations and 8 variables.
NOTE: There were 378 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
96206      quit;
96207      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
96208      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
96209      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
96210         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
96211      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
96212      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
96213      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
96214      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
96215      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
96216      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
96217      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
96218      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
96219      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
96220      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
96221      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
96222      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
96223      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
96224      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
96225      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
96226      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
96227      output;
MPRINT(EM_DIAGRAM):   output;
96228      end;
MPRINT(EM_DIAGRAM):   end;
96229      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
96230      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
96231      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
96232      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
96233      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96234      proc sort data=WORK.M2Z9SRAB;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2Z9SRAB;
96235      by Name;
MPRINT(EM_DIAGRAM):   by Name;
96236      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2Z9SRAB.
NOTE: The data set WORK.M2Z9SRAB has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96237      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
96238      merge WORK.Score2_BAR(in=_a) WORK.M2Z9SRAB(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M2Z9SRAB(keep=Name Role rename=(Name=_Variable_));
96239      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
96240      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
96241      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
96242      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M2Z9SRAB.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96243      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
96244      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96245      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
96246      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
96247      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96248      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
96249      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 19 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96250      %var_profile(DATA=EMWS2.MdlComp_TRAIN, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wed, Dec  4, 2019 01:49:31 PM,
      Last Modified=Wed, Dec  4, 2019 01:49:31 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD30376_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
96251     +%macro _vars;
96252     +P_Cases_in_1000s
96253     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS2.MdlComp_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 378   Memory used = 511K.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.TREE_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_Cases_in_1000s obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.TREE_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 378 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score2_SUMDATA out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 1 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Wed, Dec  4, 2019 01:49:32 PM,
      Last Modified=Wed, Dec  4, 2019 01:49:32 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD30376_830-5CG9310VLM_\Prc2\em.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 25 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
96254     +proc format;
MPRINT(VAR_PROFILE):   proc format;
96255     +value F1_
96256     +LOW -4.5625 ="2.28125 "
96257     +4.5625 -9.125 ="6.84375 "
96258     +9.125 -13.6875 ="11.40625 "
96259     +13.6875 -18.25 ="15.96875 "
96260     +18.25 -22.8125 ="20.53125 "
96261     +22.8125 -27.375 ="25.09375 "
96262     +27.375 -31.9375 ="29.65625 "
96263     +31.9375 -36.5 ="34.21875 "
96264     +36.5 -41.0625 ="38.78125 "
96265     +41.0625 -45.625 ="43.34375 "
96266     +45.625 -50.1875 ="47.90625 "
96267     +50.1875 -54.75 ="52.46875 "
96268     +54.75 -59.3125 ="57.03125 "
96269     +59.3125 -63.875 ="61.59375 "
96270     +63.875 -68.4375 ="66.15625 "
96271     +68.4375 -73 ="70.71875 "
96272     +73 -94.177777778 ="91.896527778 "
96273     +94.177777778 -115.35555556 ="113.07430556 "
96274     +115.35555556 -136.53333333 ="134.25208333 "
96275     +136.53333333 -157.71111111 ="155.42986111 "
96276     +157.71111111 -HIGH="176.60763889 "
96277     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -4.5625 ="2.28125 " 4.5625 -9.125 ="6.84375 " 9.125 -13.6875 ="11.40625 " 13.6875 -18.25 ="15.96875 " 18.25 -22.8125 ="20.53125 " 22.8125 -27.375 ="25.09375 " 27.375 -31.9375 ="29.65625 " 31.9375 -36.5 ="34.21875 "
36.5 -41.0625 ="38.78125 " 41.0625 -45.625 ="43.34375 " 45.625 -50.1875 ="47.90625 " 50.1875 -54.75 ="52.46875 " 54.75 -59.3125 ="57.03125 " 59.3125 -63.875 ="61.59375 " 63.875 -68.4375 ="66.15625 " 68.4375 -73 ="70.71875 " 73 -94.177777778 ="91.896527778
" 94.177777778 -115.35555556 ="113.07430556 " 115.35555556 -136.53333333 ="134.25208333 " 136.53333333 -157.71111111 ="155.42986111 " 157.71111111 -HIGH="176.60763889 " ;
NOTE: Format F1_ has been output.
MPRINT(VAR_PROFILE):   run;
96278     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 378   Memory used = 511K.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.TREE_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 378 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 12 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
96279      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
96280      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96281      retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
96282      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
96283      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96284      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
96285      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 12 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_HIST has 12 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96286      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
96287      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
96288      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
96289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
96290      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
96291      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96292      retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
96293      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
96294      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96295      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
96296      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2STAT has 1 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96297      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
96298      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
96299      NAME="_NODE_";
MPRINT(EM_DIAGRAM):   NAME="_NODE_";
96300      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
96301      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
96302      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
96303      output;
MPRINT(EM_DIAGRAM):   output;
96304      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96305      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
96306      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
96307      NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
96308      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
96309      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
96310      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
96311      output;
MPRINT(EM_DIAGRAM):   output;
96312      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
96313      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
96314      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
96315      proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
96316      table _NODE_ / missing;
MPRINT(EM_DIAGRAM):   table _NODE_ / missing;
96317      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 284 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: There were 284 observations read from the data set EMWS2.TREE_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 19 observations and 8 variables.
NOTE: There were 284 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
96318      quit;
96319      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
96320      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
96321      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
96322         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
96323      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
96324      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
96325      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
96326      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
96327      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
96328      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
96329      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
96330      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
96331      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
96332      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
96333      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
96334      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
96335      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
96336      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
96337      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
96338      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
96339      output;
MPRINT(EM_DIAGRAM):   output;
96340      end;
MPRINT(EM_DIAGRAM):   end;
96341      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
96342      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
96343      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
96344      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
96345      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96346      proc sort data=WORK.M09Q_UT_;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M09Q_UT_;
96347      by Name;
MPRINT(EM_DIAGRAM):   by Name;
96348      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M09Q_UT_.
NOTE: The data set WORK.M09Q_UT_ has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96349      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
96350      merge WORK.Score2_BAR(in=_a) WORK.M09Q_UT_(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M09Q_UT_(keep=Name Role rename=(Name=_Variable_));
96351      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
96352      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
96353      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
96354      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M09Q_UT_.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96355      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
96356      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96357      retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
96358      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
96359      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96360      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
96361      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: 19 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 38 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96362      %var_profile(DATA=EMWS2.MdlComp_VALIDATE, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, Dec  4, 2019 01:49:31 PM,
      Last Modified=Wed, Dec  4, 2019 01:49:31 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD30376_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
96363     +%macro _vars;
96364     +P_Cases_in_1000s
96365     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 284   Memory used = 511K.
NOTE: There were 284 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 284 observations read from the data set EMWS2.TREE_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 284 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: There were 284 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 12 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
96366      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
96367      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96368      retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
96369      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
96370      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96371      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
96372      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 12 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 12 observations added.
NOTE: The data set WORK.SCORE2_HIST has 24 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96373      proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
96374      var
96375      P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   var P_Cases_in_1000s;
96376      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 284 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: There were 284 observations read from the data set EMWS2.TREE_VALIDATE.
NOTE: There were 284 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
96377      quit;
 
96378      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
96379      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
96380      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
96381      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
96382      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
96383      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96384      retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
96385      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
96386      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96387      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
96388      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 2 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96389      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
96390      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
96391      NAME="_NODE_";
MPRINT(EM_DIAGRAM):   NAME="_NODE_";
96392      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
96393      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
96394      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
96395      output;
MPRINT(EM_DIAGRAM):   output;
96396      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96397      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
96398      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
96399      NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
96400      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
96401      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
96402      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
96403      output;
MPRINT(EM_DIAGRAM):   output;
96404      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
96405      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
96406      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
96407      proc freq data = EMWS2.MdlComp_TEST order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_TEST order=formatted addnames;
96408      table _NODE_ / missing;
MPRINT(EM_DIAGRAM):   table _NODE_ / missing;
96409      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 283 observations read from the data set EMWS2.PART_TEST.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 283 observations read from the data set EMWS2.TREE_TEST.
NOTE: The data set WORK.TEMPFREQ has 19 observations and 8 variables.
NOTE: There were 283 observations read from the data set EMWS2.MDLCOMP_TEST.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
96410      quit;
96411      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
96412      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
96413      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
96414         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
96415      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
96416      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
96417      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
96418      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
96419      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
96420      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
96421      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
96422      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
96423      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
96424      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
96425      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
96426      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
96427      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
96428      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
96429      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
96430      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
96431      output;
MPRINT(EM_DIAGRAM):   output;
96432      end;
MPRINT(EM_DIAGRAM):   end;
96433      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
96434      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
96435      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
96436      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
96437      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96438      proc sort data=WORK.M3MGU7R4;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M3MGU7R4;
96439      by Name;
MPRINT(EM_DIAGRAM):   by Name;
96440      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3MGU7R4.
NOTE: The data set WORK.M3MGU7R4 has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96441      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
96442      merge WORK.Score2_BAR(in=_a) WORK.M3MGU7R4(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M3MGU7R4(keep=Name Role rename=(Name=_Variable_));
96443      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
96444      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
96445      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
96446      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M3MGU7R4.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96447      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
96448      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96449      retain DATAROLE "TEST";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TEST";
96450      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
96451      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 19 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96452      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
96453      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 19 observations read from the data set WORK.SCORE2_BAR.
NOTE: 19 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 57 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96454      %var_profile(DATA=EMWS2.MdlComp_TEST, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* Score2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Wed, Dec  4, 2019 01:49:31 PM,
      Last Modified=Wed, Dec  4, 2019 01:49:32 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD30376_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
96455     +%macro _vars;
96456     +P_Cases_in_1000s
96457     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TEST(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 283   Memory used = 511K.
NOTE: There were 283 observations read from the data set EMWS2.PART_TEST.
NOTE: There were 283 observations read from the data set EMWS2.TREE_TEST.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: There were 283 observations read from the data set EMWS2.MDLCOMP_TEST.
NOTE: There were 283 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 12 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
96458      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
96459      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96460      retain DATAROLE "TEST" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TEST" TYPE "";
96461      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
96462      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96463      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
96464      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 12 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 12 observations added.
NOTE: The data set WORK.SCORE2_HIST has 36 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96465      proc stdize data=EMWS2.MdlComp_TEST(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.MdlComp_TEST(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
96466      var
96467      P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   var P_Cases_in_1000s;
96468      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 283 observations read from the data set EMWS2.PART_TEST.
NOTE: View EMWS2.MDLCOMP_TEST.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 283 observations read from the data set EMWS2.TREE_TEST.
NOTE: There were 283 observations read from the data set EMWS2.MDLCOMP_TEST.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
96469      quit;
 
96470      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
96471      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
96472      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
96473      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
96474      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
96475      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
96476      retain DATAROLE "TEST" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TEST" Type "";
96477      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
96478      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96479      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
96480      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96481      data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
96482      set EMWS2.Score2_BAR;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_BAR;
96483      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type";
96484      select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
96485      when("_NODE_") TYPE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("_NODE_") TYPE = 'SEGMENT';
96486      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
96487      end;
MPRINT(EM_DIAGRAM):   end;
96488      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 57 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 57 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
96489      proc sort data = EMWS2.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Score2_BAR NOTHREADS;
96490      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
96491      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 57 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 57 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96492      %let _cn = %sysfunc(getoption(CENTER));
96493      %let _nb = %sysfunc(getoption(NUMBER));
96494      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
96495      title;
MPRINT(EM_DIAGRAM):   title;
96496      proc print data = EMWS2.Score2_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Score2_BAR noobs label;
96497      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
96498      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
96499      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
96500      run;
 
NOTE: There were 57 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The PROCEDURE PRINT printed page 31.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96501      title10;
MPRINT(EM_DIAGRAM):   title10;
96502      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
96503      data EMWS2.Score2_HIST;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_HIST;
96504      set work.Score2_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score2_HIST(rename=(Percent=Value));
96505      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
96506         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
96507      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
96508      when("P_Cases_in_1000s") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Cases_in_1000s") TYPE = 'PREDICTED';
96509      when("_NODE_") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("_NODE_") TYPE= 'SEGMENT';
96510      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
96511      end;
MPRINT(EM_DIAGRAM):   end;
96512      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK.SCORE2_HIST.
NOTE: The data set EMWS2.SCORE2_HIST has 36 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
96513      data WORK.Score2STAT;
MPRINT(EM_DIAGRAM):    data WORK.Score2STAT;
96514      set WORK.Score2STAT;
MPRINT(EM_DIAGRAM):   set WORK.Score2STAT;
96515      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
96516         "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
96517         "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 = "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
96518         "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 = "25th Percentile" P75 = "75th Percentile";
96519      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
96520      when("P_Cases_in_1000s") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Cases_in_1000s") TYPE = 'PREDICTED';
96521      when("_NODE_") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("_NODE_") TYPE= 'SEGMENT';
96522      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
96523      end;
MPRINT(EM_DIAGRAM):   end;
96524      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
96525      proc sort data = WORK.Score2STAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.Score2STAT NOTHREADS;
96526      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
96527      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
96528      proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
96529      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
96530      id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
96531      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 8 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
96532      proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
96533      modify Score2STAT;
MPRINT(EM_DIAGRAM):   modify Score2STAT;
96534      label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,  NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL = "Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORE2STAT.
96535         "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
96536      run;
 
NOTE: MODIFY was successful for WORK.SCORE2STAT.DATA.
96537      %let _cn = %sysfunc(getoption(CENTER));
96538      %let _nb = %sysfunc(getoption(NUMBER));
96539      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
96540      title;
MPRINT(EM_DIAGRAM):   title;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
96541      proc print data = WORK.Score2STAT label noobs;
MPRINT(EM_DIAGRAM):   proc print data = WORK.Score2STAT label noobs;
96542      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
96543      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
96544      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
96545      run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2STAT.
NOTE: The PROCEDURE PRINT printed page 32.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
96546      title10;
MPRINT(EM_DIAGRAM):   title10;
96547      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
