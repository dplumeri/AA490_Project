*------------------------------------------------------------*
User:                student
Date:                December 09, 2019
Time:                17:28:08
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:28:01" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 09, 2019
Time:                17:28:01
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35OU6B1 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35OU6B1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:28:01" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:28:01" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
50708      proc freq data=EMWS2.Score2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Score2_VariableSet noprint;
50709      table ROLE*LEVEL/out=WORK.Score2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Score2META;
50710      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_VARIABLESET.
NOTE: The data set WORK.SCORE2META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
50711      proc print data=WORK.Score2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Score2META label noobs;
50712      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
50713      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
50714      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
50715      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
50716      run;
 
NOTE: There were 2 observations read from the data set WORK.SCORE2META.
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
50717      title10;
MPRINT(EM_DIAGRAM):   title10;
50718      %let groupid =;
50719      %let endGroupid =;
50720      %let prescoreid =;
50721      %let idsTable =;
50722      %let hpdmTable =;
50723      %let lasthptm =;
50724      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
50725      set EMWS2.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg5_EMINFO;
50726      where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where upcase(key) in('LASTHPTM', 'IDSTABLE', 'HPDMSAMPLE', 'PRESCORECODE','ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO', 'INDEXINFO');
50727      select(upcase(key));
MPRINT(EM_DIAGRAM):   select(upcase(key));
50728      when('LASTHPTM') call symput('lasthptm', DATA);
MPRINT(EM_DIAGRAM):   when('LASTHPTM') call symput('lasthptm', DATA);
50729      when('IDSTABLE') call symput('idsTable', DATA);
MPRINT(EM_DIAGRAM):   when('IDSTABLE') call symput('idsTable', DATA);
50730      when('HPDMSAMPLE') call symput('hpdmSample', DATA);
MPRINT(EM_DIAGRAM):   when('HPDMSAMPLE') call symput('hpdmSample', DATA);
50731      when('PRESCORECODE') call symput('prescoreId', DATA);
MPRINT(EM_DIAGRAM):   when('PRESCORECODE') call symput('prescoreId', DATA);
50732      when('ENDGROUP') call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   when('ENDGROUP') call symput('endGroupId', DATA);
50733      otherwise call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   otherwise call symput('groupId', DATA);
50734      end;
MPRINT(EM_DIAGRAM):   end;
50735      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE UPCASE(key) in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'HPDMSAMPLE', 'IDSTABLE', 'INDEXINFO', 'LASTHPTM', 'PRESCORECODE', 'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
50736      %let lastModelid =;
50737      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
50738      set EMWS2.Reg5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg5_EMINFO;
50739      where upcase(key) = 'MODEL' and TARGET = "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   where upcase(key) = 'MODEL' and TARGET = "Cases_in_1000s";
50740      call symput('lastModelID', DATA);
MPRINT(EM_DIAGRAM):   call symput('lastModelID', DATA);
50741      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE (UPCASE(key)='MODEL') and (TARGET='Cases_in_1000s');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE (TARGET='Cases_in_1000s') and (KEY='MODEL');
NOTE: The data set WORK.EMINFO40LQJPNX has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL NUMELEMENTS >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
NOTE: There were 1 observations read from the data set EMWS2.REG5_EMINFO.
      WHERE (TARGET='Cases_in_1000s') and (KEY='DECMETA');
NOTE: The data set WORK.EMINFO43BFFNKU has 1 observations and 3 variables.
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
50742      %let em_rootkey=;
50743      %let em_keytype=;
50744      %let em_keylen=;
50745      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
50746      set EMWS2.Ids2_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_cmeta_data;
50747      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
50748      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
50749      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
50750      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
50751      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS2_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_SCORE / view = EMWS2.Score2_SCORE;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_DATA;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 09DEC2019:17:28:02;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 _0_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   _0_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   _0_4 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 49.9179190751445;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -68.218939505593) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.7579337629462) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -78.5097315230807) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 14.8718794691663) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 105.10105866912) * _TEMP * _0_4;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.24084009672934) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 61.7847909243756) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -39.8142696137315) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.97554555294165) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.36294125979976) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00310607604835 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 80.303346895729) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.252908521696) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 18.0287580656425) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -27.4006629526389) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 15.2611371052263) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -59.5878423999859) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 36.5507247588724) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.3277402763714) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.5696362287826) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -26.3213979493903) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.9686093610471) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.1414857600671) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -28.5925125279295) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 79.5855180172679) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -45.539444954891) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.7501274677249) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -82.8375370158417) * _TEMP * _0_4 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 120.063914512013) * _TEMP * _0_4 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -57.0141821034771) * _TEMP * _0_4 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.9161094005809) * _TEMP * _0_4 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.93150243104012) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88473738844764) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.91403164879495) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.58317683633376) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75341533588197) * _TEMP * _0_4 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19621301954507) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.42200033324647) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.28664963595513) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75438619150629) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -24.8018210357458);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 254.504715691805) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 155.453627385272) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 104.512893800771) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 82.6928999075811) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 57.7020158302998) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 50.4809349799713) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 43.4294220913613) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 32.7426066181951) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 28.4929612188917) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.4044044589745) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 19.7722977260921) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 15.715538694116) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.4284054000453) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.25587059735292) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 4.59311759682893) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.50932460096733) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.57366915180539) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -2.27839455173779) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -5.77882190392638) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:28:02" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 09, 2019
Time:                17:28:02
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O35RAX5S "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O35RAX5S new;
MPRINT(EM_DIAGRAM):   run;
51210      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
51211      *------------------------------------------------------------*;
51212      * Score2: Scoring DATA data;
51213      *------------------------------------------------------------*;
51214      data EMWS2.Score2_TRAIN
51215      / view=EMWS2.Score2_TRAIN
51216      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_TRAIN / view=EMWS2.Score2_TRAIN ;
51217      set EMWS2.MdlComp_TRAIN
51218      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_TRAIN ;
51219      %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
51229      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
51230      quit;
51231      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
51232      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
51233      *------------------------------------------------------------*;
51234      * Score2: Scoring VALIDATE data;
51235      *------------------------------------------------------------*;
51236      data EMWS2.Score2_VALIDATE
51237      / view=EMWS2.Score2_VALIDATE
51238      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_VALIDATE / view=EMWS2.Score2_VALIDATE ;
51239      set EMWS2.MdlComp_VALIDATE
51240      ;
MPRINT(EM_DIAGRAM):   set EMWS2.MdlComp_VALIDATE ;
51241      %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL = 'Target Variable: Cases_in_1000s';
MPRINT(EM_DIAGRAM):   EM_VALUETARGET = Cases_in_1000s;
51251      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.SCORE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
51252      quit;
51253      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
51254      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
51255      * Score2: Creating Publish Score Variables Table;
MPRINT(EM_DIAGRAM):   * Score2: Creating Publish Score Variables Table;
51256      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
51257      proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp;
51258      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51259      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
51260      proc sort data=EMWS2.Ids2_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids2_cmeta_data(keep= NAME ROLE CREATOR COMMENT LABEL) out=_temp2;
51261      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51262      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_CMETA_DATA.
NOTE: The data set WORK._TEMP2 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
51263      data EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMINPUTVARS;
51264      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
51265      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51266      length HIDE $1 SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length HIDE $1 SCOREVAR $1;
51267      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine,  meta_role_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" COMMENT =
51268         "%sysfunc(sasmsg(sashelp.dmine,  meta_comment_vlabel , NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))" HIDE = "%sysfunc(sasmsg(sashelp.dmine, rpt_hiddenVariable_vlabel,  NOQUOTE))" SCOREVAR =
51269         "%sysfunc(sasmsg(sashelp.dmine,  rpt_scoreVar_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" ROLE = "Role" CREATOR = "Creator" COMMENT = "Comment" LABEL = "Label" HIDE = "Variable Hidden" SCOREVAR = "Used in Score Code";
51270      if _a and ^_b then HIDE = 'Y';
MPRINT(EM_DIAGRAM):   if _a and ^_b then HIDE = 'Y';
51271      if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE_GROUP" then HIDE = "N";
51272      if upcase(NAME) = "CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "CASES_IN_1000S" then HIDE = "N";
51273      if upcase(NAME) = "DISEASE" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "DISEASE" then HIDE = "N";
51274      if upcase(NAME) = "GENDER" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "GENDER" then HIDE = "N";
51275      if upcase(NAME) = "P_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "P_CASES_IN_1000S" then HIDE = "N";
51276      if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "POPULATION_IN_THOUSANDS" then HIDE = "N";
51277      if upcase(NAME) = "R_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "R_CASES_IN_1000S" then HIDE = "N";
51278      if upcase(NAME) = "_WARN_" then delete;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_WARN_" then delete;
51279      if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "_DATAOBS_" then HIDE = "N";
51280      if upcase(NAME) = "B_CASES_IN_1000S" then HIDE = "N";
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "B_CASES_IN_1000S" then HIDE = "N";
51281      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable SCOREVAR is uninitialized.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
51282      proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMINPUTVARS nodupkey;
51283      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51284      where CREATOR='' or (NAME="CASES_IN_1000S" and CREATOR='');
MPRINT(EM_DIAGRAM):   where CREATOR='' or (NAME="CASES_IN_1000S" and CREATOR='');
51285      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
      WHERE (CREATOR=' ') or ((NAME='CASES_IN_1000S') and (CREATOR=' '));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51286      %let em_rootkey=;
51287      %let em_keytype=;
51288      %let em_keylen=;
51289      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
51290      set EMWS2.Ids2_cmeta_data;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_cmeta_data;
51291      where role='KEY';
MPRINT(EM_DIAGRAM):   where role='KEY';
51292      call symput('em_rootkey', strip(NAME));
MPRINT(EM_DIAGRAM):   call symput('em_rootkey', strip(NAME));
51293      call symput('em_keytype', strip(TYPE));
MPRINT(EM_DIAGRAM):   call symput('em_keytype', strip(TYPE));
51294      call symput('em_rootlen', strip(put(length, best.)));
MPRINT(EM_DIAGRAM):   call symput('em_rootlen', strip(put(length, best.)));
51295      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS2_CMETA_DATA.
      WHERE role='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51296      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMPUBLISHSCORE.sas";
51297      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
51298      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51299      %INCLUDE _pref;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
51307      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
51308      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
51309      quit;
51310      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51311      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51312      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51313      retain ID 1 Node "Score2";
MPRINT(EM_DIAGRAM):   retain ID 1 Node "Score2";
51314      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51315      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51316      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51317      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51318      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51319      proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
51320      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51321      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51322      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51323      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51324      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51325      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51326      proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Score2_train out=_meta(keep=NAME) noprint;
51327      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 15 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
51328      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51329      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51330      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 15 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51331      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51332      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51333      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51334      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 15 observations read from the data set WORK._META.
NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51335      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51336      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2 rows and 5 columns.
 
51337      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51338      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
51339      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS2.SCORE2_FCMP has 2 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51340      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\MdlComp\EMFLOWSCORE.sas";
51341      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
51342      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51343      %INCLUDE _pref;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 254.504715691805) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 155.453627385272) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 104.512893800771) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 82.6928999075811) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 57.7020158302998) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 50.4809349799713) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 43.4294220913613) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 32.7426066181951) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 28.4929612188917) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.4044044589745) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 19.7722977260921) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 15.715538694116) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.4284054000453) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.25587059735292) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 4.59311759682893) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.50932460096733) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.57366915180539) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -2.27839455173779) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -5.77882190392638) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
51423      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
51424      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
51425      quit;
51426      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51427      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51428      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51429      retain ID 2 Node "MdlComp";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "MdlComp";
51430      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51431      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51432      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51433      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51434      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51435      proc sort data=EMWS2.Reg5_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Reg5_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
51436      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51437      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS2.REG5_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51438      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51439      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51440      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51441      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51442      proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_train out=_meta(keep=NAME) noprint;
51443      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 11 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
51444      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51445      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51446      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 11 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51447      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51448      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51449      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51450      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 11 observations read from the data set WORK._META.
NOTE: There were 9 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 11 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51451      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51452      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1 rows and 5 columns.
 
51453      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51454      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
51455      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 1 observations read from the data set WORK._TEMPX.
NOTE: 1 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 3 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51456      filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg5\EMPUBLISHSCORE.sas";
51457      options validvarname=ANY;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
51458      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
51459      %INCLUDE _pref;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 _0_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   _0_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   _0_4 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
NOTE: Numeric value converted to character for argument 1 of 'DMNORM' operation.
MPRINT(EM_DIAGRAM):   if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 49.9179190751445;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -68.218939505593) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.7579337629462) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -78.5097315230807) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 14.8718794691663) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 105.10105866912) * _TEMP * _0_4;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.24084009672934) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 61.7847909243756) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -39.8142696137315) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.97554555294165) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.36294125979976) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00310607604835 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 80.303346895729) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.252908521696) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 18.0287580656425) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -27.4006629526389) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 15.2611371052263) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -59.5878423999859) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 36.5507247588724) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.3277402763714) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.5696362287826) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -26.3213979493903) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.9686093610471) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.1414857600671) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -28.5925125279295) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 79.5855180172679) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -45.539444954891) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.7501274677249) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -82.8375370158417) * _TEMP * _0_4 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 120.063914512013) * _TEMP * _0_4 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -57.0141821034771) * _TEMP * _0_4 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.9161094005809) * _TEMP * _0_4 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.93150243104012) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88473738844764) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.91403164879495) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.58317683633376) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75341533588197) * _TEMP * _0_4 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19621301954507) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.42200033324647) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.28664963595513) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75438619150629) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -24.8018210357458);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
51684      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
51685      options validvarname=V7;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   quit;
51686      quit;
51687      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
51688      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
51689      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
51690      retain ID 3 Node "Reg5";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Reg5";
51691      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
51692      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 101 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 101 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51693      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
51694      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51695      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 101 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 101 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51696      proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp2(keep=NAME CREATOR);
51697      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51698      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK._TEMP2 has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51699      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51700      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
51701      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
51702      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51703      proc contents data=EMWS2.Reg5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Reg5_train out=_meta(keep=NAME) noprint;
51704      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 10 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
51705      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
51706      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51707      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 10 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51708      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
51709      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
51710      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
51711      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 10 observations read from the data set WORK._META.
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
51712      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
51713      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 34 rows and 5 columns.
 
51714      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51715      proc append base=EMWS2.Score2_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_FCMP data=_tempx;
51716      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS2.SCORE2_FCMP.
NOTE: There were 34 observations read from the data set WORK._TEMPX.
NOTE: 34 observations added.
NOTE: The data set EMWS2.SCORE2_FCMP has 37 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
51717      %macro varDept(fcmpdata=,id=);
51718      %global nobs&id scoreFlag&id;
51719      %let scoreFlag&id = 0;
51720      %if &id=1 or ^&fcmpStart %then %do;
51721      proc sort data=&fcmpdata out=_temp&id nodupkey;
51722      by NAME;
51723      %if EM_SEGMENT EM_PREDICTION ne %then %do;
51724      where id=&id and (LHS in( %let j=1;
51725      %do %while(%scan(EM_SEGMENT EM_PREDICTION, &j) ne );
51726      %let var = %scan(EM_SEGMENT EM_PREDICTION, &j);
51727      "&var" %let j = %eval(&j+1);
51728      %end;
51729      ) or substr(LHS, 1, 3)='EM_');
51730      %end;
51731      %else %do;
51732      where id=&id and substr(LHS, 1, 3)='EM_';
51733      %end;
51734      run;
51735      %let dsid = %sysfunc(open(_temp&id));
51736      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51737      %let dsid = %sysfunc(close(&dsid));
51738      %if &&nobs&id %then %do;
51739      %let scoreFlag&id = 1;
51740      %let fcmpStart = 1;
51741      %end;
51742      %else %let fcmpStart = 0;
51743      %end;
51744      %else %do;
51745      proc sort data=&fcmpdata out=_tempid;
51746      where id=&id;
51747      by LHS;
51748      run;
51749      %let dsid = %sysfunc(open(_tempid));
51750      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51751      %let dsid = %sysfunc(close(&dsid));
51752      %if ^&&nobs&id %then %do;
51753      proc datasets lib=work nolist;
51754      delete _tempid;
51755      run;
51756      quit;
51757      %end;
51758      %else %do;
51759      data _tempAll;
51760      set %let j=%eval(&id-1);
51761      %do x=1 %to &j;
51762      %if &&nobs&x %then %do;
51763      _temp&x %end;
51764      %end;
51765      ;
51766      run;
51767      proc sql;
51768      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
51769      quit;
51770      data _temp&id;
51771      set _temp&id;
51772      where LHS ne '' and NAME ne '' and Node ne '';
51773      run;
51774      proc datasets lib=work nolist;
51775      delete _tempAll;
51776      run;
51777      %let dsid = %sysfunc(open(_temp&id));
51778      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51779      %let dsid = %sysfunc(close(&dsid));
51780      %if ^&&nobs&id %then %do;
51781      proc datasets lib=work nolist;
51782      delete _temp&id;
51783      run;
51784      quit;
51785      %end;
51786      %else %do;
51787      %let scoreFlag&id = 1;
51788      data _temp&id;
51789      set _temp&id;
51790      where LHS ne NAME and node ne '';
51791      run;
51792      %let dsid = %sysfunc(open(_temp&id));
51793      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
51794      %let dsid = %sysfunc(close(&dsid));
51795      %if ^&&nobs&id %then %do;
51796      proc datasets lib=work nolist;
51797      delete _temp&id;
51798      run;
51799      quit;
51800      %end;
51801      %else %do;
51802      proc sort data=_temp&id nodupkey;
51803      by LHS NAME;
51804      run;
51805      %end;
51806      %end;
51807      %end;
51808      %end;
51809      %mend varDept;
51810      %macro optCode(outdata=);
51811      %global fcmpStart;
51812      %let fcmpStart = 0;
51813      %let outputVars = EM_SEGMENT EM_PREDICTION;
51814      %let NumNodes=6;
51815      %do k=1 %to &NumNodes;
51816      %vardept(fcmpdata=&outdata, id=&k);
51817      %end;
51818      %mend optCode;
51819      %optcode(outData=EMWS2.Score2_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and (LHS in( "EM_SEGMENT" "EM_PREDICTION" ) or substr(LHS, 1, 3)='EM_');
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE (id=1) and (LHS in ('EM_PREDICTION', 'EM_SEGMENT') or (SUBSTR(LHS, 1, 3)='EM_'));
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP1 has 2 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=2;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=2;
NOTE: The data set WORK._TEMPID has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: The data set WORK._TEMPALL has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp2 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP2 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp2;
MPRINT(VARDEPT):   set _temp2;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp2 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp1 _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP1.
NOTE: There were 1 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll p, work._tempid p2 where p.name=p2.lhs or substr(p2.LHS, 1, 3)='EM_';
NOTE: The execution of this query involves performing one or more Cartesian product joins that can not be optimized.
NOTE: Table WORK._TEMP3 created, with 8 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP3.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS2.Score2_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS2.SCORE2_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine Score Inputs;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   filename _pref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\OPTIMIZEDCODE.sas";
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 09DEC2019:17:28:03;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 _0_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   _0_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   _0_4 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 49.9179190751445;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -68.218939505593) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.7579337629462) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -78.5097315230807) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 14.8718794691663) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 105.10105866912) * _TEMP * _0_4;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.24084009672934) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 61.7847909243756) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -39.8142696137315) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.97554555294165) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.36294125979976) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00310607604835 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 80.303346895729) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.252908521696) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 18.0287580656425) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -27.4006629526389) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 15.2611371052263) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -59.5878423999859) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 36.5507247588724) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.3277402763714) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.5696362287826) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -26.3213979493903) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.9686093610471) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.1414857600671) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -28.5925125279295) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 79.5855180172679) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -45.539444954891) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.7501274677249) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -82.8375370158417) * _TEMP * _0_4 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 120.063914512013) * _TEMP * _0_4 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -57.0141821034771) * _TEMP * _0_4 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.9161094005809) * _TEMP * _0_4 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.93150243104012) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88473738844764) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.91403164879495) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.58317683633376) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75341533588197) * _TEMP * _0_4 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19621301954507) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.42200033324647) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.28664963595513) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75438619150629) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -24.8018210357458);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 254.504715691805) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 155.453627385272) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 104.512893800771) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 82.6928999075811) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 57.7020158302998) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 50.4809349799713) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 43.4294220913613) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 32.7426066181951) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 28.4929612188917) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.4044044589745) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 19.7722977260921) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 15.715538694116) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.4284054000453) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.25587059735292) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 4.59311759682893) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.50932460096733) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.57366915180539) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -2.27839455173779) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -5.77882190392638) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   filename _pref;
MPRINT(EM_DIAGRAM):   data _temp;
MPRINT(EM_DIAGRAM):   set _temp;
MPRINT(EM_DIAGRAM):   length UNAME $32;
MPRINT(EM_DIAGRAM):   UNAME = upcase(RHS);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp(keep=UNAME) NODUPKEY;
MPRINT(EM_DIAGRAM):   by UNAME;
MPRINT(EM_DIAGRAM):   run;
52193      %let validvarany = 0;
52194      data _temp2;
MPRINT(EM_DIAGRAM):    data _temp2;
52195      set EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMINPUTVARS;
52196      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
52197      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
52198      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52199      proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
52200      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
52201      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 6 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52202      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
52203      merge _temp2(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge _temp2(in=_a) _temp(in=_b);
52204      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
52205      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
52206      length SCOREVAR $1;
MPRINT(EM_DIAGRAM):   length SCOREVAR $1;
52207      label SCOREVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreVar_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SCOREVAR = "Used in Score Code";
52208      SCOREVAR='Y';
MPRINT(EM_DIAGRAM):   SCOREVAR='Y';
52209      if ROLE='TARGET' then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   if ROLE='TARGET' then SCOREVAR='N';
52210      else if UNAME=:"EM_" then SCOREVAR='N';
MPRINT(EM_DIAGRAM):   else if UNAME=:"EM_" then SCOREVAR='N';
52211      if (_a and _b) or ROLE='TARGET' then do;
MPRINT(EM_DIAGRAM):   if (_a and _b) or ROLE='TARGET' then do;
52212      if notname(trim(UNAME)) or kcount(UNAME) then do;
MPRINT(EM_DIAGRAM):   if notname(trim(UNAME)) or kcount(UNAME) then do;
52213      call symput('validvarany', '1');
MPRINT(EM_DIAGRAM):   call symput('validvarany', '1');
52214      end;
MPRINT(EM_DIAGRAM):   end;
52215      output;
MPRINT(EM_DIAGRAM):   output;
52216      end;
MPRINT(EM_DIAGRAM):   end;
52217      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 23 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP2 has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52218      proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2 out=EMWS2.Score2_EMINPUTVARS;
52219      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52220      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set EMWS2.SCORE2_EMINPUTVARS has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Determine output variables meta;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   options validvarname=ANY;
MPRINT(EM_DIAGRAM):   proc contents data=NEWDIS.DISEASE_HISTORIC_JOIN_1 noprint out=_originalvar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpvvn "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20812_830-5CG9310VLM_\Prc2\DROPVVN.sas";
MPRINT(EM_DIAGRAM):   data _originalvar;
MPRINT(EM_DIAGRAM):   file _drpvvn;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   if notname(trim(NAME)) or kcount(NAME) or ktrim(substr(NAME, 1, 1)) in('1','2','3','4','5','6','7','8','9','0') then do;
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   call symput('_vvnflag', '1');
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else output;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _drpfrf "C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20812_830-5CG9310VLM_\Prc2\DROPINPUT.sas";
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _drpfrf;
MPRINT(EM_DIAGRAM):   set _originalvar end=eof;
MPRINT(EM_DIAGRAM):   length string $200;
MPRINT(EM_DIAGRAM):   if _N_=1 then put 'drop ';
MPRINT(EM_DIAGRAM):   string = "'"!!tranwrd(trim(NAME), "'", "''")!!"'n";
MPRINT(EM_DIAGRAM):   put string;
MPRINT(EM_DIAGRAM):   if eof then put ';';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   dsid = open('NEWDIS.DISEASE_HISTORIC_JOIN_1');
MPRINT(EM_DIAGRAM):   if dsid then do;
MPRINT(EM_DIAGRAM):   call symput('_inputEngine', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   set NEWDIS.DISEASE_HISTORIC_JOIN_1;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM SCORE CODE;
MPRINT(EM_DIAGRAM):   * EM Version: 14.2;
MPRINT(EM_DIAGRAM):   * SAS Release: 9.04.01M4P110916;
MPRINT(EM_DIAGRAM):   * Host: 830-5CG9310VLM;
MPRINT(EM_DIAGRAM):   * Encoding: wlatin1;
MPRINT(EM_DIAGRAM):   * Locale: en_US;
MPRINT(EM_DIAGRAM):   * Project Path: C:\Users\student\Desktop\AA 490\Final Project\AA490_Project;
MPRINT(EM_DIAGRAM):   * Project Name: Base Model;
MPRINT(EM_DIAGRAM):   * Diagram Id: EMWS2;
MPRINT(EM_DIAGRAM):   * Diagram Name: Base Model 2;
MPRINT(EM_DIAGRAM):   * Generated by: student;
MPRINT(EM_DIAGRAM):   * Date: 09DEC2019:17:28:03;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Input Data Source;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Ids2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * NODE: Part;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * NODE: Reg5;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 _0_3 _0_4 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_3 = 0;
MPRINT(EM_DIAGRAM):   _0_4 = 0;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
MPRINT(EM_DIAGRAM):   _0_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_3 = -1;
MPRINT(EM_DIAGRAM):   _0_4 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   _0_4 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_3 = .;
MPRINT(EM_DIAGRAM):   _0_4 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 ;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm10 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _2_0 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   _LP0 = 49.9179190751445;
MPRINT(EM_DIAGRAM):   goto REG5DR1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _LP0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -68.218939505593) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -14.7579337629462) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -78.5097315230807) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 14.8718794691663) * _TEMP * _0_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 105.10105866912) * _TEMP * _0_4;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -9.24084009672934) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 61.7847909243756) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -39.8142696137315) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.97554555294165) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.36294125979976) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00310607604835 * _TEMP);
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Disease ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 80.303346895729) * _TEMP * _0_0 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -70.252908521696) * _TEMP * _0_0 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 18.0287580656425) * _TEMP * _0_0 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -27.4006629526389) * _TEMP * _0_0 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 15.2611371052263) * _TEMP * _0_1 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -59.5878423999859) * _TEMP * _0_1 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 36.5507247588724) * _TEMP * _0_1 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.3277402763714) * _TEMP * _0_1 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.5696362287826) * _TEMP * _0_2 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -26.3213979493903) * _TEMP * _0_2 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.9686093610471) * _TEMP * _0_2 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -15.1414857600671) * _TEMP * _0_2 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -28.5925125279295) * _TEMP * _0_3 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 79.5855180172679) * _TEMP * _0_3 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -45.539444954891) * _TEMP * _0_3 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.7501274677249) * _TEMP * _0_3 * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -82.8375370158417) * _TEMP * _0_4 * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 120.063914512013) * _TEMP * _0_4 * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -57.0141821034771) * _TEMP * _0_4 * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 37.9161094005809) * _TEMP * _0_4 * _1_3;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -7.93150243104012) * _TEMP * _0_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.88473738844764) * _TEMP * _0_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.91403164879495) * _TEMP * _0_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.58317683633376) * _TEMP * _0_3 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75341533588197) * _TEMP * _0_4 * _2_0;
MPRINT(EM_DIAGRAM):   *** Effect: Disease*Gender ;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.19621301954507) * _TEMP * _1_0 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.42200033324647) * _TEMP * _1_1 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.28664963595513) * _TEMP * _1_2 * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.75438619150629) * _TEMP * _1_3 * _2_0;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -24.8018210357458);
MPRINT(EM_DIAGRAM):   REG5DR1: *** Predicted Value;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   *************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Model Compare Class;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: MdlComp;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if (P_Cases_in_1000s ge 254.504715691805) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 155.453627385272) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 104.512893800771) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 3;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 82.6928999075811) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 4;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 57.7020158302998) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 5;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 50.4809349799713) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 6;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 43.4294220913613) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 7;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 32.7426066181951) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 8;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 28.4929612188917) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 9;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 23.4044044589745) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 10;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 19.7722977260921) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 11;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 15.715538694116) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 12;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 12.4284054000453) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 13;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 7.25587059735292) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 14;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 4.59311759682893) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 15;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 2.50932460096733) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 16;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge 0.57366915180539) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 17;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -2.27839455173779) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 18;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if (P_Cases_in_1000s ge -5.77882190392638) then do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 19;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   b_Cases_in_1000s = 20;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TOOL: Score Node;
MPRINT(EM_DIAGRAM):   * TYPE: ASSESS;
MPRINT(EM_DIAGRAM):   * NODE: Score2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Creating Fixed Names;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   LABEL EM_SEGMENT = 'Segment';
MPRINT(EM_DIAGRAM):   EM_SEGMENT = b_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   LABEL EM_PREDICTION= "Prediction for Cases_in_1000s";
MPRINT(EM_DIAGRAM):   EM_PREDICTION = P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   drop 'Age_group'n 'Cases_in_1000s'n 'Date'n 'Disease'n 'Gender'n 'Population_in_thousands'n ;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options validvarname=V7;
MPRINT(EM_DIAGRAM):   proc contents data =EMWS2.Score2_EMOUTPUTVARS noprint out=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _drpvvn;
MPRINT(EM_DIAGRAM):   filename _drpfrf;
52636      data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_EMOUTPUTVARS;
52637      set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_EMOUTPUTVARS(keep=name type label rename=(type=itype));
52638      length FUNCTION $32 name_prefix $8;
MPRINT(EM_DIAGRAM):   length FUNCTION $32 name_prefix $8;
52639      if itype = 1 then type = 'N';
MPRINT(EM_DIAGRAM):   if itype = 1 then type = 'N';
52640      else type = 'C';
MPRINT(EM_DIAGRAM):   else type = 'C';
52641      drop name_prefix itype;
MPRINT(EM_DIAGRAM):   drop name_prefix itype;
52642      if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   if index(name, '_WARN_')=1 then FUNCTION = 'ASSESS';
52643      else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PREDICTION', 'EM_EVENTPROBABILITY', 'EM_PROBABILITY') then FUNCTION = 'PREDICT';
52644      else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_CLASSIFICATION' then FUNCTION = 'CLASSIFICATION';
52645      else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'EM_DECISION' then FUNCTION = 'DECISION';
52646      else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' /* removed EM_ROI */
52647      ;
MPRINT(EM_DIAGRAM):   else if upcase(name) in('EM_PROFIT', 'EM_LOSS', 'EM_VALUETARGET', 'EM_CLASSTARGET') then FUNCTION = 'ASSESS' ;
52648      else do;
MPRINT(EM_DIAGRAM):   else do;
52649      name_prefix = scan(NAME, 1, '_');
MPRINT(EM_DIAGRAM):   name_prefix = scan(NAME, 1, '_');
52650      if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
MPRINT(EM_DIAGRAM):   if name_prefix in('F', 'I', 'U') then FUNCTION = 'CLASSIFICATION';
52651      else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
MPRINT(EM_DIAGRAM):   else if name_prefix in('P', 'V') then FUNCTION = 'PREDICT';
52652      else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
MPRINT(EM_DIAGRAM):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then FUNCTION = 'RESIDUAL';
52653      else if name_prefix ='D' then FUNCTION = 'DECISION';
MPRINT(EM_DIAGRAM):   else if name_prefix ='D' then FUNCTION = 'DECISION';
52654      else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
MPRINT(EM_DIAGRAM):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then FUNCTION = 'ASSESS';
52655      else FUNCTION = 'TRANSFORM';
MPRINT(EM_DIAGRAM):   else FUNCTION = 'TRANSFORM';
52656      end;
MPRINT(EM_DIAGRAM):   end;
52657      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52658      proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=WORK.META(KEEP=NAME CREATOR);
52659      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52660      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS2.MDLCOMP_CMETA_TRAIN.
NOTE: The data set WORK.META has 10 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52661      proc sort data=EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Score2_EMOUTPUTVARS;
52662      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52663      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52664      data EMWS2.Score2_EMOUTPUTVARS;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_EMOUTPUTVARS;
52665      merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.META EMWS2.Score2_EMOUTPUTVARS(in=_a);
52666      label CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine,  meta_type_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label CREATOR = "Creator" FUNCTION = "Function" TYPE = "Type";
52667      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
52668      if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   if NAME =: 'EM_' and CREATOR = '' then CREATOR = "Score2";
52669      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
52670      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.META.
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The data set EMWS2.SCORE2_EMOUTPUTVARS has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
52671      %let _cn = %sysfunc(getoption(CENTER));
52672      %let _nb = %sysfunc(getoption(NUMBER));
52673      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
52674      title;
MPRINT(EM_DIAGRAM):   title;
52675      proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMINPUTVARS noobs label;
52676      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,  NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel ,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" CREATOR = "Creator" LABEL = "Label";
52677      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52678      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreInputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Input Variables";
MPRINT(EM_DIAGRAM):   run;
52679      run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMINPUTVARS.
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52680      title10;
MPRINT(EM_DIAGRAM):   title10;
52681      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
52682      %let _cn = %sysfunc(getoption(CENTER));
52683      %let _nb = %sysfunc(getoption(NUMBER));
52684      options nonumber nocenter;
MPRINT(EM_DIAGRAM):    options nonumber nocenter;
52685      title;
MPRINT(EM_DIAGRAM):   title;
52686      proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Score2_EMOUTPUTVARS noobs label;
52687      var NAME FUNCTION CREATOR LABEL;
MPRINT(EM_DIAGRAM):   var NAME FUNCTION CREATOR LABEL;
52688      label NAME = "%sysfunc(sasmsg(sashelp.dmine,  meta_name_vlabel ,    NOQUOTE))" FUNCTION = "%sysfunc(sasmsg(sashelp.dmine,  meta_function_vlabel ,    NOQUOTE))" CREATOR = "%sysfunc(sasmsg(sashelp.dmine,  meta_creator_vlabel , NOQUOTE))" LABEL =
52689         "%sysfunc(sasmsg(sashelp.dmine,  meta_label_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" FUNCTION = "Function" CREATOR = "Creator" LABEL = "Label";
52690      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52691      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreOutputVariables_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Score Output Variables";
MPRINT(EM_DIAGRAM):   run;
52692      run;
 
NOTE: There were 5 observations read from the data set EMWS2.SCORE2_EMOUTPUTVARS.
NOTE: The PROCEDURE PRINT printed page 15.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
52693      title10;
MPRINT(EM_DIAGRAM):   title10;
52694      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
52695      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
52696      * Score2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Score2: Computing metadata for TRAIN data;
52697      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score2_TRAIN out=WORK.M3ADNAAX noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ADNAAX;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ADNAAX(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ADNAAX;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ADNAAX;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0HBE_G8 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1697JO9(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HBE_G8;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.MdlComp_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.MdlComp_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Cases_in_1000s" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: View EMWS2.SCORE2_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
53045      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
53046      * Score2: Computing metadata for SCORE data;
MPRINT(EM_DIAGRAM):   * Score2: Computing metadata for SCORE data;
53047      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for SCORE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Score2_SCORE out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Score2_SCORE');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Score2_SCORE out=WORK.M24RHV42 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24RHV42;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M24RHV42(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24RHV42;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M24RHV42;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0OQ_PCK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0D0Y98Q(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OQ_PCK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Ids_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Score2_CMeta_SCORE;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Score2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Score2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "P_Cases_in_1000s" then ROLE = 'REJECTED';
MPRINT(EM_DIAGRAM):   if NAME = "EM_CLASSIFICATION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PREDICTION" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_EVENTPROBABILITY" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_DECISION" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_PROFIT" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_SEGMENT" then LEVEL = 'NOMINAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_VALUETARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   else if NAME = "EM_CLASSTARGET" then LEVEL = 'INTERVAL';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:28:05" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 09, 2019
Time:                17:28:05
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FC9D94 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Score2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FC9D94 new;
MPRINT(EM_DIAGRAM):   run;
53418      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
53419      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
53420      NAME="b_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="b_Cases_in_1000s";
53421      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
53422      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
53423      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
53424      output;
MPRINT(EM_DIAGRAM):   output;
53425      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53426      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
53427      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
53428      NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
53429      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
53430      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
53431      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
53432      output;
MPRINT(EM_DIAGRAM):   output;
53433      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
53434      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
53435      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
53436      proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_TRAIN order=formatted addnames;
53437      table b_Cases_in_1000s / missing;
MPRINT(EM_DIAGRAM):   table b_Cases_in_1000s / missing;
53438      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 875 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: There were 875 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 875 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
53439      quit;
53440      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
53441      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
53442      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
53443         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
53444      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
53445      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
53446      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
53447      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
53448      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
53449      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
53450      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
53451      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
53452      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
53453      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
53454      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
53455      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
53456      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
53457      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
53458      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
53459      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
53460      output;
MPRINT(EM_DIAGRAM):   output;
53461      end;
MPRINT(EM_DIAGRAM):   end;
53462      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
53463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
53464      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
53465      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
53466      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53467      proc sort data=WORK.M1KY44JE;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1KY44JE;
53468      by Name;
MPRINT(EM_DIAGRAM):   by Name;
53469      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1KY44JE.
NOTE: The data set WORK.M1KY44JE has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53470      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
53471      merge WORK.Score2_BAR(in=_a) WORK.M1KY44JE(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M1KY44JE(keep=Name Role rename=(Name=_Variable_));
53472      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
53473      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
53474      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
53475      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M1KY44JE.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53476      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
53477      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53478      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
53479      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
53480      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53481      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
53482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 20 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53483      %var_profile(DATA=EMWS2.MdlComp_TRAIN, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* EM: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Dec  9, 2019 05:28:05 PM,
      Last Modified=Mon, Dec  9, 2019 05:28:05 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20812_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS2.MdlComp_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=17;
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 875   Memory used = 511K.
NOTE: There were 875 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 875 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: There were 875 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<17));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 17 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 17 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 18 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT17 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(keep
MPRINT(VAR_PROFILE):  =P_Cases_in_1000s obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 875 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 875 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: There were 875 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 875 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.20 seconds
      cpu time            0.21 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=work.Score2_SUMDATA out=_bindata(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_bindata;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   set _bindata;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{28};
MPRINT(VAR_PROFILE):   array _bounds{28};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/16;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/16;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/16;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 16+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: The data set WORK._BINDATA has 1 observations and 69 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _bindata;
MPRINT(VAR_PROFILE):   merge _bindata _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK._BINDATA has 1 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set _bindata end=eof;
MPRINT(VAR_PROFILE):   array _bounds{26};
MPRINT(VAR_PROFILE):   array _midpoint{26};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 16;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 26-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Dec  9, 2019 05:28:06 PM,
      Last Modified=Mon, Dec  9, 2019 05:28:06 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20812_830-5CG9310VLM_\Prc2\em.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 25 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 43.
NOTE: There were 1 observations read from the data set WORK._BINDATA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc format;
MPRINT(VAR_PROFILE):   value F1_ LOW --12.62287037 ="-20.72479537 " -12.62287037 -3.58097962 ="-4.520945377 " 3.58097962 -19.784829614 ="11.682904617 " 19.784829614 -35.988679607 ="27.886754611 " 35.988679607 -52.192529601 ="44.090604604 " 52.192529601
-68.396379595 ="60.294454598 " 68.396379595 -84.600229589 ="76.498304592 " 84.600229589 -100.80407958 ="92.702154585 " 100.80407958 -117.00792958 ="108.90600458 " 117.00792958 -133.21177957 ="125.10985457 " 133.21177957 -149.41562956 ="141.31370457 "
149.41562956 -165.61947956 ="157.51755456 " 165.61947956 -181.82332955 ="173.72140455 " 181.82332955 -198.02717954 ="189.92525455 " 198.02717954 -214.23102954 ="206.12910454 " 214.23102954 -230.43487953 ="222.33295454 " 230.43487953 -250.46700519
="242.36508019 " 250.46700519 -270.49913084 ="262.39720584 " 270.49913084 -290.53125649 ="282.42933149 " 290.53125649 -310.56338215 ="302.46145715 " 310.56338215 -HIGH="322.4935828 " ;
NOTE: Format F1_ has been output.
MPRINT(VAR_PROFILE):   run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 875   Memory used = 511K.
NOTE: There were 875 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 875 observations read from the data set EMWS2.REG5_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: There were 875 observations read from the data set EMWS2.MDLCOMP_TRAIN.
NOTE: There were 875 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
53512      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
53513      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53514      retain DATAROLE "TRAIN" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" TYPE "";
53515      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
53516      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53517      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
53518      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 20 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_HIST has 20 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53519      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
53520      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
53521      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
53522      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53523      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
53524      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53525      retain DATAROLE "TRAIN" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN" Type "";
53526      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
53527      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53528      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
53529      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2STAT has 1 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53530      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
53531      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
53532      NAME="b_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="b_Cases_in_1000s";
53533      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
53534      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
53535      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
53536      output;
MPRINT(EM_DIAGRAM):   output;
53537      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53538      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
53539      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
53540      NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
53541      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
53542      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
53543      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
53544      output;
MPRINT(EM_DIAGRAM):   output;
53545      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
53546      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
53547      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
53548      proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.MdlComp_VALIDATE order=formatted addnames;
53549      table b_Cases_in_1000s / missing;
MPRINT(EM_DIAGRAM):   table b_Cases_in_1000s / missing;
53550      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 375 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 375 observations read from the data set EMWS2.REG5_VALIDATE.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 375 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
53551      quit;
53552      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
53553      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
53554      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
53555         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
53556      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
53557      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
53558      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
53559      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
53560      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
53561      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
53562      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
53563      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
53564      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
53565      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
53566      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
53567      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
53568      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
53569      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
53570      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
53571      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
53572      output;
MPRINT(EM_DIAGRAM):   output;
53573      end;
MPRINT(EM_DIAGRAM):   end;
53574      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
53575      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
53576      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
53577      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
53578      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53579      proc sort data=WORK.M2J3XGQ4;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M2J3XGQ4;
53580      by Name;
MPRINT(EM_DIAGRAM):   by Name;
53581      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M2J3XGQ4.
NOTE: The data set WORK.M2J3XGQ4 has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53582      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
53583      merge WORK.Score2_BAR(in=_a) WORK.M2J3XGQ4(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M2J3XGQ4(keep=Name Role rename=(Name=_Variable_));
53584      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
53585      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
53586      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
53587      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M2J3XGQ4.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53588      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
53589      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53590      retain DATAROLE "VALIDATE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE";
53591      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
53592      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53593      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
53594      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: 20 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 40 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53595      %var_profile(DATA=EMWS2.MdlComp_VALIDATE, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* EM: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mon, Dec  9, 2019 05:28:05 PM,
      Last Modified=Mon, Dec  9, 2019 05:28:05 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20812_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.MdlComp_VALIDATE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 375   Memory used = 511K.
NOTE: There were 375 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 375 observations read from the data set EMWS2.REG5_VALIDATE.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
NOTE: There were 375 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: There were 375 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 19 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
53599      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
53600      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53601      retain DATAROLE "VALIDATE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" TYPE "";
53602      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
53603      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53604      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
53605      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 19 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 19 observations added.
NOTE: The data set WORK.SCORE2_HIST has 39 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53606      proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.MdlComp_VALIDATE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
53607      var
53608      P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   var P_Cases_in_1000s;
53609      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 375 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.MDLCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: There were 375 observations read from the data set EMWS2.REG5_VALIDATE.
NOTE: There were 375 observations read from the data set EMWS2.MDLCOMP_VALIDATE.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
53610      quit;
 
53611      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
53612      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
53613      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
53614      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
53615      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
53616      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53617      retain DATAROLE "VALIDATE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "VALIDATE" Type "";
53618      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
53619      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53620      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
53621      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 2 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53622      data WORK.SCOREFREQMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREFREQMETA;
53623      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
53624      NAME="b_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="b_Cases_in_1000s";
53625      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
53626      LEVEL="NOMINAL";
MPRINT(EM_DIAGRAM):   LEVEL="NOMINAL";
53627      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
53628      output;
MPRINT(EM_DIAGRAM):   output;
53629      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREFREQMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53630      data WORK.SCOREHISTMETA;
MPRINT(EM_DIAGRAM):    data WORK.SCOREHISTMETA;
53631      length NAME $32 ROLE $32 LEVEL $8;
MPRINT(EM_DIAGRAM):   length NAME $32 ROLE $32 LEVEL $8;
53632      NAME="P_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   NAME="P_Cases_in_1000s";
53633      ROLE="INPUT";
MPRINT(EM_DIAGRAM):   ROLE="INPUT";
53634      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
53635      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
53636      output;
MPRINT(EM_DIAGRAM):   output;
53637      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCOREHISTMETA has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
53638      ods listing close;
MPRINT(EM_DIAGRAM):    ods listing close;
53639      ods output onewayfreqs=WORK.TEMPFREQ;
MPRINT(EM_DIAGRAM):   ods output onewayfreqs=WORK.TEMPFREQ;
53640      proc freq data = EMWS2.Score2_SCORE order=formatted addnames;
MPRINT(EM_DIAGRAM):   proc freq data = EMWS2.Score2_SCORE order=formatted addnames;
53641      table b_Cases_in_1000s / missing;
MPRINT(EM_DIAGRAM):   table b_Cases_in_1000s / missing;
53642      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 650 observations read from the data set NEWDIS.DISEASE_FUTURE_JOIN_1.
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: There were 650 observations read from the data set EMWS2.IDS_DATA.
NOTE: The data set WORK.TEMPFREQ has 20 observations and 8 variables.
NOTE: There were 650 observations read from the data set EMWS2.SCORE2_SCORE.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
53643      quit;
53644      ods listing;
MPRINT(EM_DIAGRAM):   ods listing;
53645      data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR(keep=_VARIABLE_ TYPE COUNT PERCENT _X_ _XLABEL_);
53646      label _VARIABLE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Type = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,         NOQUOTE))" _X_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel, NOQUOTE))" _XLABEL_ =
53647         "%sysfunc(sasmsg(sashelp.dmine, rpt_fmtValue_vlabel ,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,        NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Variable" Type = "Type" _X_ = "Numeric Value" _XLABEL_ = "Formatted Value" COUNT = "Frequency Count" PERCENT = "Percent";
53648      dsid = open("WORK.TEMPFREQ");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.TEMPFREQ");
53649      varnum = varnum(dsid, 'VARIABLE');
MPRINT(EM_DIAGRAM):   varnum = varnum(dsid, 'VARIABLE');
53650      freqnum = varnum(dsid, 'FREQUENCY');
MPRINT(EM_DIAGRAM):   freqnum = varnum(dsid, 'FREQUENCY');
53651      pvarnum = varnum(dsid, 'PERCENT');
MPRINT(EM_DIAGRAM):   pvarnum = varnum(dsid, 'PERCENT');
53652      typenum = varnum(dsid, '_TYPE_');
MPRINT(EM_DIAGRAM):   typenum = varnum(dsid, '_TYPE_');
53653      length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
MPRINT(EM_DIAGRAM):   length _VARIABLE_ $32 TYPE $1 _XLABEL_ $32;
53654      do while(^fetch(dsid));
MPRINT(EM_DIAGRAM):   do while(^fetch(dsid));
53655      _VARIABLE_ = strip(getvarc(dsid, varnum));
MPRINT(EM_DIAGRAM):   _VARIABLE_ = strip(getvarc(dsid, varnum));
53656      count = getvarn(dsid, freqnum);
MPRINT(EM_DIAGRAM):   count = getvarn(dsid, freqnum);
53657      percent= getvarn(dsid, pvarnum);
MPRINT(EM_DIAGRAM):   percent= getvarn(dsid, pvarnum);
53658      vvarnum = varnum(dsid, _VARIABLE_);
MPRINT(EM_DIAGRAM):   vvarnum = varnum(dsid, _VARIABLE_);
53659      type = vartype(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   type = vartype(dsid, vvarnum);
53660      fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
MPRINT(EM_DIAGRAM):   fvarnum = varnum(dsid, 'F_'!!substr(_VARIABLE_, 1, 30));
53661      _XLABEL_ = left(getvarc(dsid, fvarnum));
MPRINT(EM_DIAGRAM):   _XLABEL_ = left(getvarc(dsid, fvarnum));
53662      _X_ = .;
MPRINT(EM_DIAGRAM):   _X_ = .;
53663      if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
MPRINT(EM_DIAGRAM):   if TYPE eq 'N' then _X_ = getvarn(dsid, vvarnum);
53664      output;
MPRINT(EM_DIAGRAM):   output;
53665      end;
MPRINT(EM_DIAGRAM):   end;
53666      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
53667      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
53668      proc sort data=WORK.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Score2_BAR NOTHREADS;
53669      by _VARIABLE_;
MPRINT(EM_DIAGRAM):   by _VARIABLE_;
53670      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53671      proc sort data=WORK.M04WLD9J;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M04WLD9J;
53672      by Name;
MPRINT(EM_DIAGRAM):   by Name;
53673      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M04WLD9J.
NOTE: The data set WORK.M04WLD9J has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53674      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   data WORK.Score2_BAR;
53675      merge WORK.Score2_BAR(in=_a) WORK.M04WLD9J(keep=Name Role rename=(Name=_Variable_));
MPRINT(EM_DIAGRAM):   merge WORK.Score2_BAR(in=_a) WORK.M04WLD9J(keep=Name Role rename=(Name=_Variable_));
53676      by _Variable_;
MPRINT(EM_DIAGRAM):   by _Variable_;
53677      label Role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Role = "Role";
53678      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
53679      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: There were 1 observations read from the data set WORK.M04WLD9J.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53680      data WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):    data WORK.Score2_BAR;
53681      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53682      retain DATAROLE "SCORE";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE";
53683      set WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   set WORK.Score2_BAR;
53684      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: The data set WORK.SCORE2_BAR has 20 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53685      proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Score2_BAR data=WORK.Score2_BAR;
53686      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_BAR to EMWS2.SCORE2_BAR.
NOTE: There were 20 observations read from the data set WORK.SCORE2_BAR.
NOTE: 20 observations added.
NOTE: The data set EMWS2.SCORE2_BAR has 60 observations and 8 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53687      %var_profile(DATA=EMWS2.Score2_SCORE, OUTPUT=work.Score2_VARHIST, METADATA=WORK.SCOREHISTMETA, COMPUTESTAT=N, BINDATA=_bindata, STAT=_STAT, PCTLSTAT=work.Score2_SUMDATA, FREQ=, BIN=Y, NUMBARS= 16);
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*
* EM: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null;
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA(where=(LEVEL = 'INTERVAL' and ROLE ne 'FREQ')) end=eof;
MPRINT(VAR_PROFILE):   if eof then call symput('_nobs', put(_N_, best.));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') and (ROLE not = 'FREQ');
NOTE: The data set WORK._NULL has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   length _VARS $80;
MPRINT(VAR_PROFILE):   retain _vars;
MPRINT(VAR_PROFILE):   if _n_ =1 then put '%macro _vars;';
MPRINT(VAR_PROFILE):   set WORK.SCOREHISTMETA end=eof;
MPRINT(VAR_PROFILE):   where LEVEL = 'INTERVAL' or ROLE='FREQ';
MPRINT(VAR_PROFILE):   if ROLE='FREQ' then call symput('FREQ', trim(NAME));
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if length(strip(_vars)) + length(strip(NAME)) + 1 <80 then _vars = strip(_vars)!! ' ' !!strip(NAME);
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   _vars = strip(NAME);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if eof then do;
MPRINT(VAR_PROFILE):   put _Vars;
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Mon, Dec  9, 2019 05:28:05 PM,
      Last Modified=Mon, Dec  9, 2019 05:28:06 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20812_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504
 
NOTE: 3 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 16.
NOTE: There were 1 observations read from the data set WORK.SCOREHISTMETA.
      WHERE (LEVEL='INTERVAL') or (ROLE='FREQ');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS2.Score2_SCORE(obs=1000000);
MPRINT(VAR_PROFILE):   format P_Cases_in_1000s F1_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(_VARS):   P_Cases_in_1000s
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 650   Memory used = 511K.
NOTE: There were 650 observations read from the data set NEWDIS.DISEASE_FUTURE_JOIN_1.
NOTE: There were 650 observations read from the data set EMWS2.IDS_DATA.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 650 observations read from the data set EMWS2.SCORE2_SCORE.
NOTE: There were 650 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 19 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data work.Score2_VARHIST;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 19 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK.SCORE2_VARHIST has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
53691      data work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):    data work.Score2_VARHIST;
53692      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53693      retain DATAROLE "SCORE" TYPE "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" TYPE "";
53694      set work.Score2_VARHIST(rename=(VALUE=X));
MPRINT(EM_DIAGRAM):   set work.Score2_VARHIST(rename=(VALUE=X));
53695      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: The data set WORK.SCORE2_VARHIST has 19 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53696      proc append base=work.Score2_HIST data=work.Score2_VARHIST;
MPRINT(EM_DIAGRAM):   proc append base=work.Score2_HIST data=work.Score2_VARHIST;
53697      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_VARHIST to WORK.SCORE2_HIST.
NOTE: There were 19 observations read from the data set WORK.SCORE2_VARHIST.
NOTE: 19 observations added.
NOTE: The data set WORK.SCORE2_HIST has 58 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53698      proc stdize data=EMWS2.Score2_SCORE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(EM_DIAGRAM):    proc stdize data=EMWS2.Score2_SCORE(obs=1000000) outstat=work.Score2_SUMDATA out=_null_ pctlpts=(0 5 25 50 75 95 100);
53699      var
53700      P_Cases_in_1000s;
MPRINT(EM_DIAGRAM):   var P_Cases_in_1000s;
53701      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 650 observations read from the data set NEWDIS.DISEASE_FUTURE_JOIN_1.
NOTE: View EMWS2.SCORE2_SCORE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 650 observations read from the data set EMWS2.IDS_DATA.
NOTE: There were 650 observations read from the data set EMWS2.SCORE2_SCORE.
NOTE: The data set WORK.SCORE2_SUMDATA has 15 observations and 2 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
53702      quit;
 
53703      proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
MPRINT(EM_DIAGRAM):    proc transpose data=work.Score2_SUMDATA out=work.Score2_SUMDATA( rename=(_NAME_=VARIABLE _LABEL_=LABEL LOCATION=MEAN SCALE=STD P0=MIN P50=MEDIAN P100=MAX));
53704      where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION' 'SCALE' 'N' 'P0' 'P25' 'P50' 'P75' 'P100');
53705      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
53706      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2_SUMDATA.
      WHERE _TYPE_ in ('LOCATION', 'N', 'P0', 'P100', 'P25', 'P50', 'P75', 'SCALE');
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
53707      data work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   data work.Score2_SUMDATA;
53708      length DATAROLE $8 TYPE $14;
MPRINT(EM_DIAGRAM):   length DATAROLE $8 TYPE $14;
53709      retain DATAROLE "SCORE" Type "";
MPRINT(EM_DIAGRAM):   retain DATAROLE "SCORE" Type "";
53710      set work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   set work.Score2_SUMDATA;
53711      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: The data set WORK.SCORE2_SUMDATA has 1 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53712      proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
MPRINT(EM_DIAGRAM):   proc append base=WORK.Score2STAT data=work.Score2_SUMDATA;
53713      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.SCORE2_SUMDATA to WORK.SCORE2STAT.
NOTE: There were 1 observations read from the data set WORK.SCORE2_SUMDATA.
NOTE: 1 observations added.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53714      data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_BAR(DROP=ROLE rename = (_VARIABLE_=VARIABLE _XLABEL_=X));
53715      set EMWS2.Score2_BAR;
MPRINT(EM_DIAGRAM):   set EMWS2.Score2_BAR;
53716      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,  NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type";
53717      select(_VARIABLE_);
MPRINT(EM_DIAGRAM):   select(_VARIABLE_);
53718      when("b_Cases_in_1000s") TYPE = 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Cases_in_1000s") TYPE = 'SEGMENT';
53719      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
53720      end;
MPRINT(EM_DIAGRAM):   end;
53721      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable VARIABLE is uninitialized.
NOTE: There were 60 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 60 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53722      proc sort data = EMWS2.Score2_BAR NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Score2_BAR NOTHREADS;
53723      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
53724      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 60 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The data set EMWS2.SCORE2_BAR has 60 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53725      %let _cn = %sysfunc(getoption(CENTER));
53726      %let _nb = %sysfunc(getoption(NUMBER));
53727      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
53728      title;
MPRINT(EM_DIAGRAM):   title;
53729      proc print data = EMWS2.Score2_BAR noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Score2_BAR noobs label;
53730      by DATAROLE TYPE;
MPRINT(EM_DIAGRAM):   by DATAROLE TYPE;
53731      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
53732      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
53733      run;
 
NOTE: There were 60 observations read from the data set EMWS2.SCORE2_BAR.
NOTE: The PROCEDURE PRINT printed page 16.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53734      title10;
MPRINT(EM_DIAGRAM):   title10;
53735      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
53736      data EMWS2.Score2_HIST;
MPRINT(EM_DIAGRAM):    data EMWS2.Score2_HIST;
53737      set work.Score2_HIST(rename=(Percent=Value));
MPRINT(EM_DIAGRAM):   set work.Score2_HIST(rename=(Percent=Value));
53738      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,      NOQUOTE))" DATAROLE= "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,   NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel, NOQUOTE))" X =
53739         "%sysfunc(sasmsg(sashelp.dmine, rpt_numValue_vlabel,   NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,      NOQUOTE))" Value = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" DATAROLE= "Data Role" TYPE = "Output Type" X = "Numeric Value" COUNT = "Frequency Count" Value = "Percent";
53740      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
53741      when("P_Cases_in_1000s") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Cases_in_1000s") TYPE = 'PREDICTED';
53742      when("b_Cases_in_1000s") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Cases_in_1000s") TYPE= 'SEGMENT';
53743      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
53744      end;
MPRINT(EM_DIAGRAM):   end;
53745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK.SCORE2_HIST.
NOTE: The data set EMWS2.SCORE2_HIST has 58 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
53746      data WORK.Score2STAT;
MPRINT(EM_DIAGRAM):    data WORK.Score2STAT;
53747      set WORK.Score2STAT;
MPRINT(EM_DIAGRAM):   set WORK.Score2STAT;
53748      label VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,  NOQUOTE))" N =
53749         "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel,  NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,  NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel,  NOQUOTE))" MAX =
53750         "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel,  NOQUOTE))" MEDIAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel,  NOQUOTE))" P25 = "%sysfunc(sasmsg(sashelp.dmine, rpt_p25_vlabel,  NOQUOTE))" P75 =
53751         "%sysfunc(sasmsg(sashelp.dmine, rpt_p75_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE= "Variable Name" LABEL = "Label" MEAN = "Mean" N = "Non Missing" STD = "Standard Deviation" MIN = "Minimum" MAX = "Maximum" MEDIAN = "Median" P25 = "25th Percentile" P75 = "75th Percentile";
53752      select(VARIABLE);
MPRINT(EM_DIAGRAM):   select(VARIABLE);
53753      when("P_Cases_in_1000s") TYPE = 'PREDICTED';
MPRINT(EM_DIAGRAM):   when("P_Cases_in_1000s") TYPE = 'PREDICTED';
53754      when("b_Cases_in_1000s") TYPE= 'SEGMENT';
MPRINT(EM_DIAGRAM):   when("b_Cases_in_1000s") TYPE= 'SEGMENT';
53755      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
53756      end;
MPRINT(EM_DIAGRAM):   end;
53757      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
53758      proc sort data = WORK.Score2STAT NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = WORK.Score2STAT NOTHREADS;
53759      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
53760      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 3 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53761      proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
MPRINT(EM_DIAGRAM):   proc transpose data = WORK.Score2STAT out=WORK.Score2STAT(rename=(_NAME_=STATISTICS _LABEL_=LABEL));
53762      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
53763      id DATAROLE;
MPRINT(EM_DIAGRAM):   id DATAROLE;
53764      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SCORE2STAT.
NOTE: The data set WORK.SCORE2STAT has 8 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53765      proc datasets library=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=WORK nolist;
53766      modify Score2STAT;
MPRINT(EM_DIAGRAM):   modify Score2STAT;
53767      label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_statistics_vlabel,  NOQUOTE))" VARIABLE= "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,  NOQUOTE))" TYPE =
MPRINT(EM_DIAGRAM):   label STATISTICS = "Statistics" VARIABLE= "Variable Name" LABEL = "Label" TYPE = "Output Type";
WARNING: Variable TYPE not found in data set WORK.SCORE2STAT.
53768         "%sysfunc(sasmsg(sashelp.dmine, rpt_outputType_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
53769      run;
 
NOTE: MODIFY was successful for WORK.SCORE2STAT.DATA.
53770      %let _cn = %sysfunc(getoption(CENTER));
53771      %let _nb = %sysfunc(getoption(NUMBER));
53772      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
53773      title;
MPRINT(EM_DIAGRAM):   title;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
53774      proc print data = WORK.Score2STAT label noobs;
MPRINT(EM_DIAGRAM):   proc print data = WORK.Score2STAT label noobs;
53775      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
53776      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
53777      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   run;
53778      run;
 
NOTE: There were 8 observations read from the data set WORK.SCORE2STAT.
NOTE: The PROCEDURE PRINT printed page 17.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53779      title10;
MPRINT(EM_DIAGRAM):   title10;
53780      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
