*------------------------------------------------------------*
User:                student
Date:                December 09, 2019
Time:                16:48:10
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:06" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 09, 2019
Time:                16:48:06
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1EF_9NN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1EF_9NN new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:06" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:06" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
97018      proc freq data=EMWS2.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Trans_VariableSet noprint;
97019      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
97020      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
97021      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
97022      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
97023      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
97024      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
97025      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
97026      run;
 
NOTE: There were 3 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 29.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97027      title10;
MPRINT(EM_DIAGRAM):   title10;
97028      data WORK.M368Q821;
MPRINT(EM_DIAGRAM):    data WORK.M368Q821;
97029      set WORK.M368Q821;
MPRINT(EM_DIAGRAM):   set WORK.M368Q821;
97030      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
97031      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M368Q821.
NOTE: The data set WORK.M368Q821 has 5 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS2.Impt_TRAIN;
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
97096      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
97097      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
97098      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97099      data WORK.M2_DGN6G;
MPRINT(EM_DIAGRAM):   data WORK.M2_DGN6G;
97100      set WORK.M2_DGN6G;
MPRINT(EM_DIAGRAM):   set WORK.M2_DGN6G;
97101      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
97102      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M2_DGN6G.
NOTE: The data set WORK.M2_DGN6G has 5 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97103      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
97104      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
97105      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
97106      %macro DMDBClass;
97107          Age_group(ASC) Disease(ASC) Gender(ASC)
97108      %mend DMDBClass;
97109      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
97110      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
97111      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
97112      %macro DMDBVar;
97113          Cases_in_1000s Population_in_thousands
97114      %mend DMDBVar;
97115      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97116      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
97117      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97118      proc dmdb batch data=EMWS2.Impt_TRAIN
97119      dmdbcat=WORK.EM_DMDB
97120      classout=WORK.Transclassout
97121      maxlevel = 513
97122      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Impt_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
97123      class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Disease(ASC) Gender(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
97124      var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s Population_in_thousands
MPRINT(EM_DIAGRAM):  ;
97125      target
97126      Cases_in_1000s
97127      ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
97128      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 750   Memory used = 511K.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
97129      quit;
97130      *--- end code ---*;
 
97131      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
97132      set WORK.M368Q821;
MPRINT(EM_DIAGRAM):   set WORK.M368Q821;
97133      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
97134      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK.M368Q821.
NOTE: The data set WORK.TRANSINTERVALMETA has 2 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97135      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
97136      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
97137      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97138      data WORK.M2VFJEIE;
MPRINT(EM_DIAGRAM):   data WORK.M2VFJEIE;
97139      set WORK.M2VFJEIE;
MPRINT(EM_DIAGRAM):   set WORK.M2VFJEIE;
97140      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
97141      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK.M2VFJEIE.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M2VFJEIE has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97144      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):      *------------------------------------------------------------*;
97145      * Trans: Computing optimal binning for relationship to target using target Cases_in_1000s;
MPRINT(EM_DIAGRAM):   * Trans: Computing optimal binning for relationship to target using target Cases_in_1000s;
97146      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97147      data sortedBinMeta;
MPRINT(EM_DIAGRAM):   data sortedBinMeta;
97148      set WORK.METASET332OI2Q;
MPRINT(EM_DIAGRAM):   set WORK.METASET332OI2Q;
97149      where NAME ^in("Cases_in_1000s", "");
MPRINT(EM_DIAGRAM):   where NAME ^in("Cases_in_1000s", "");
97150      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.METASET332OI2Q.
      WHERE NAME not in (' ', 'Cases_in_1000s');
NOTE: The data set WORK.SORTEDBINMETA has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97151      proc sort data=sortedBinMeta;
MPRINT(EM_DIAGRAM):   proc sort data=sortedBinMeta;
97152      by level;
MPRINT(EM_DIAGRAM):   by level;
97153      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDBINMETA.
NOTE: The data set WORK.SORTEDBINMETA has 1 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97154      %em_varMacro(name=EMOPTBINVAR, metadata=sortedBinMeta, key=NAME);
MPRINT(EM_DIAGRAM):
MPRINT(EM_VARMACRO):   filename macFile catalog 'work.emutil.macro.source';
MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   length _STRING_ $80;
MPRINT(EM_VARMACRO):   retain _STRING_ '' maxvar 0;
MPRINT(EM_VARMACRO):   set sortedBinMeta end=eof;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   if _N_=1 then do;
MPRINT(EM_VARMACRO):   string = "%"!!"macro EMOPTBINVAR;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   maxvar +1;
MPRINT(EM_VARMACRO):   if (length(_STRING_) + length(trim(NAME))+ 4 < 80) then do;
MPRINT(EM_VARMACRO):   _STRING_ = trim(_STRING_)!!' "'!!trim(NAME)!!'"n';
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend EMOPTBINVAR;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   else do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   _string_ = '"'!!TRIM(NAME)!!'"n';
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend EMOPTBINVAR;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   run;
 
NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Dec  9, 2019 04:48:06 PM,
      Last Modified=Mon, Dec  9, 2019 04:48:06 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20968_830-5CG9310VLM_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120
 
NOTE: 3 records were written to the file MACFILE.
      The minimum record length was 18.
      The maximum record length was 26.
NOTE: There were 1 observations read from the data set WORK.SORTEDBINMETA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_VARMACRO):   filename macFile;
NOTE: Fileref MACFILE has been deassigned.
MPRINT(EM_DIAGRAM):  ;
97158      data WORK.EM_TRANSOPTBIN / view=WORK.EM_TRANSOPTBIN;
MPRINT(EM_DIAGRAM):   data WORK.EM_TRANSOPTBIN / view=WORK.EM_TRANSOPTBIN;
97159      set
97159    ! EMWS2.Impt_TRAIN(keep=%EMOPTBINVAR Cases_in_1000s );
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN(keep
MPRINT(EM_DIAGRAM):  ="Population_in_thousands"n Cases_in_1000s );
97160      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.EM_TRANSOPTBIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
97161      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
97162      length varString $100;
MPRINT(EM_DIAGRAM):   length varString $100;
97163      retain varstring '';
MPRINT(EM_DIAGRAM):   retain varstring '';
97164      set sortedBinMeta end=eof;
MPRINT(EM_DIAGRAM):   set sortedBinMeta end=eof;
97165      by level;
MPRINT(EM_DIAGRAM):   by level;
97166      if _n_=1 then do;
MPRINT(EM_DIAGRAM):   if _n_=1 then do;
97167      call execute("proc arbor data=EMWS2.Impt_TRAIN ");
MPRINT(EM_DIAGRAM):   call execute("proc arbor data=EMWS2.Impt_TRAIN ");
97168      call execute("   maxdepth = 1 Leafsize=5");
MPRINT(EM_DIAGRAM):   call execute("   maxdepth = 1 Leafsize=5");
97169      call execute("   maxbranch = 4");
MPRINT(EM_DIAGRAM):   call execute("   maxbranch = 4");
97170      call execute("Missing=USEINSEARCH ");
MPRINT(EM_DIAGRAM):   call execute("Missing=USEINSEARCH ");
97171      call execute("   norulelimit maxrules=1 maxsurrs=0;");
MPRINT(EM_DIAGRAM):   call execute("   norulelimit maxrules=1 maxsurrs=0;");
97172      end;
MPRINT(EM_DIAGRAM):   end;
97173      if first.level then do;
MPRINT(EM_DIAGRAM):   if first.level then do;
97174      call execute("input ");
MPRINT(EM_DIAGRAM):   call execute("input ");
97175      end;
MPRINT(EM_DIAGRAM):   end;
97176      if length(trim(varString)) + length(trim(name)) +1 < 80 then varString = trim(varString)!!' '!!trim(name);
MPRINT(EM_DIAGRAM):   if length(trim(varString)) + length(trim(name)) +1 < 80 then varString = trim(varString)!!' '!!trim(name);
97177      else do;
MPRINT(EM_DIAGRAM):   else do;
97178      call execute(varString);
MPRINT(EM_DIAGRAM):   call execute(varString);
97179      varString = name;
MPRINT(EM_DIAGRAM):   varString = name;
97180      end;
MPRINT(EM_DIAGRAM):   end;
97181      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
97182      call execute(varString);
MPRINT(EM_DIAGRAM):   call execute(varString);
97183      call execute("/ level="!!level!!";");
MPRINT(EM_DIAGRAM):   call execute("/ level="!!level!!";");
97184      call execute("target Cases_in_1000s / level=interval;");
MPRINT(EM_DIAGRAM):   call execute("target Cases_in_1000s / level=interval;");
97185      call execute(" Performance Disk NodeSize=10000;");
MPRINT(EM_DIAGRAM):   call execute(" Performance Disk NodeSize=10000;");
97186      call execute("assess validata=EMWS2.Impt_VALIDATE;");
MPRINT(EM_DIAGRAM):   call execute("assess validata=EMWS2.Impt_VALIDATE;");
97187      call execute(" subtree best;");
MPRINT(EM_DIAGRAM):   call execute(" subtree best;");
97188      call execute(" save RULES=WORK.OPTBIN_RULES;");
MPRINT(EM_DIAGRAM):   call execute(" save RULES=WORK.OPTBIN_RULES;");
97189      call execute("run;");
MPRINT(EM_DIAGRAM):   call execute("run;");
97190      end;
MPRINT(EM_DIAGRAM):   end;
97191      run;
MPRINT(EM_DIAGRAM):   run;
 
MPRINT(EM_DIAGRAM):   norulelimit maxrules=1 maxsurrs=0;
MPRINT(EM_DIAGRAM):   / level=INTERVAL ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s / level=interval;
MPRINT(EM_DIAGRAM):   Performance Disk NodeSize=10000;
MPRINT(EM_DIAGRAM):   assess validata=EMWS2.Impt_VALIDATE;
MPRINT(EM_DIAGRAM):   subtree best;
MPRINT(EM_DIAGRAM):   save RULES=WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 1 observations read from the data set WORK.SORTEDBINMETA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: CALL EXECUTE generated line.
1         + proc arbor data=EMWS2.Impt_TRAIN
2         +    maxdepth = 1 Leafsize=5
3         +    maxbranch = 4
4         + Missing=USEINSEARCH
5         +    norulelimit maxrules=1 maxsurrs=0;
6         + input
7         +   Population_in_thousands
NOTE: View EMWS2.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
8         + / level=INTERVAL  ;
9         + target Cases_in_1000s / level=interval;
10        +  Performance Disk NodeSize=10000;
11        + assess validata=EMWS2.Impt_VALIDATE;
NOTE: 1467365 kilobytes of physical memory.
NOTE: Will use 743 out of 750 training cases.
NOTE: Using memory pool with 10322944 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 51744 bytes of work memory.
NOTE: There were 563 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 5 nodes and 4 leaves.
NOTE: Using subtree with 5 nodes and 4 leaves.
12        +  subtree best;
NOTE: Using subtree with 5 nodes and 4 leaves.
13        +  save RULES=WORK.OPTBIN_RULES;
NOTE: The data set WORK.OPTBIN_RULES has 8 observations and 6 variables.
14        + run;
 
 
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
 
97192      data WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):   data WORK.OPTBIN_RULES;
97193      set WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):   set WORK.OPTBIN_RULES;
97194      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
97195      retain NAME '';
MPRINT(EM_DIAGRAM):   retain NAME '';
97196      by RANK;
MPRINT(EM_DIAGRAM):   by RANK;
97197      if first.RANK then NAME= CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   if first.RANK then NAME= CHARACTER_VALUE;
97198      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK.OPTBIN_RULES.
NOTE: The data set WORK.OPTBIN_RULES has 8 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97199      proc sort data=WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.OPTBIN_RULES;
97200      where STAT in('INTERVAL', 'MISSING');
MPRINT(EM_DIAGRAM):   where STAT in('INTERVAL', 'MISSING');
97201      by NAME NUMERIC_VALUE;
MPRINT(EM_DIAGRAM):   by NAME NUMERIC_VALUE;
97202      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.OPTBIN_RULES.
      WHERE STAT in ('INTERVAL', 'MISSING');
NOTE: The data set WORK.OPTBIN_RULES has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97203      data work.TEMPBESTTRAIN / view=work.TEMPBESTTRAIN;
MPRINT(EM_DIAGRAM):    data work.TEMPBESTTRAIN / view=work.TEMPBESTTRAIN;
97204      set EMWS2.Impt_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN;
97205      %inc #LN01312;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , log10(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LG10_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label LG10_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length LG10_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then LG10_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if Population_in_thousands + 1 > 0 then LG10_Population_in_thousands = log10(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else LG10_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , log(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LOG_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label LOG_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length LOG_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then LOG_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if Population_in_thousands + 1 > 0 then LOG_Population_in_thousands = log(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else LOG_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Sqrt(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label SQRT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label SQRT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length SQRT_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then SQRT_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if Population_in_thousands + 1 >= 0 then SQRT_Population_in_thousands = Sqrt(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else SQRT_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , 1 / (Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label INV_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label INV_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length INV_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then INV_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else if Population_in_thousands + 1 ne 0 then INV_Population_in_thousands = 1 / (Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else INV_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands + 1)**2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label SQR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label SQR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length SQR_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then SQR_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   SQR_Population_in_thousands = (Population_in_thousands + 1)**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , exp(Population_in_thousands / 849.7334);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label EXP_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label EXP_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length EXP_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then EXP_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   EXP_Population_in_thousands = exp(Population_in_thousands / 849.7334);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands - 31340.913136) / 23393.332986;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label STD_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label STD_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length STD_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then STD_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else STD_Population_in_thousands = (Population_in_thousands - 31340.913136) / 23393.332986;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands - 852) / (84973.34-852);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label RANGE_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length RANGE_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then RANGE_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else RANGE_Population_in_thousands = (Population_in_thousands - 852) / (84973.34-852);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands - 31340.913136);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label CNTR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label CNTR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length CNTR_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then CNTR_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else CNTR_Population_in_thousands = (Population_in_thousands - 31340.913136);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
97311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.TEMPBESTTRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
97312      data WORK.BESTMAPPING;
MPRINT(EM_DIAGRAM):   data WORK.BESTMAPPING;
97313      length VAR $32 NEWVAR $32 FORMULA $80;
MPRINT(EM_DIAGRAM):   length VAR $32 NEWVAR $32 FORMULA $80;
97314      label VAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_originalvar_vlabel, NOQUOTE))" NEWVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_computedvar_vlabel, NOQUOTE))" FORMULA = "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VAR = "Original Variable" NEWVAR = "Computed Variable" FORMULA = "Formula";
97315      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97316      NEWVAR="Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="Population_in_thousands";
97317      FORMULA="";
MPRINT(EM_DIAGRAM):   FORMULA="";
97318      output;
MPRINT(EM_DIAGRAM):   output;
97319      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97320      NEWVAR="LG10_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="LG10_Population_in_thousands";
97321      FORMULA="log10(Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="log10(Population_in_thousands  + 1)";
97322      output;
MPRINT(EM_DIAGRAM):   output;
97323      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97324      NEWVAR="LOG_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="LOG_Population_in_thousands";
97325      FORMULA="log(Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="log(Population_in_thousands  + 1)";
97326      output;
MPRINT(EM_DIAGRAM):   output;
97327      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97328      NEWVAR="SQRT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="SQRT_Population_in_thousands";
97329      FORMULA="Sqrt(Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="Sqrt(Population_in_thousands  + 1)";
97330      output;
MPRINT(EM_DIAGRAM):   output;
97331      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97332      NEWVAR="INV_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="INV_Population_in_thousands";
97333      FORMULA="1 / (Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="1 / (Population_in_thousands  + 1)";
97334      output;
MPRINT(EM_DIAGRAM):   output;
97335      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97336      NEWVAR="SQR_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="SQR_Population_in_thousands";
97337      FORMULA="(Population_in_thousands  + 1)**2";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands  + 1)**2";
97338      output;
MPRINT(EM_DIAGRAM):   output;
97339      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97340      NEWVAR="EXP_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="EXP_Population_in_thousands";
97341      FORMULA="exp(Population_in_thousands  / 849.7334)";
MPRINT(EM_DIAGRAM):   FORMULA="exp(Population_in_thousands  / 849.7334)";
97342      output;
MPRINT(EM_DIAGRAM):   output;
97343      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97344      NEWVAR="STD_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="STD_Population_in_thousands";
97345      FORMULA="(Population_in_thousands - 31340.913136) / 23393.332986";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands - 31340.913136) / 23393.332986";
97346      output;
MPRINT(EM_DIAGRAM):   output;
97347      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97348      NEWVAR="RANGE_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="RANGE_Population_in_thousands";
97349      FORMULA="(Population_in_thousands - 852) / (84973.34-852)";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands - 852) / (84973.34-852)";
97350      output;
MPRINT(EM_DIAGRAM):   output;
97351      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97352      NEWVAR="CNTR_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="CNTR_Population_in_thousands";
97353      FORMULA="(Population_in_thousands - 31340.913136)";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands - 31340.913136)";
97354      output;
MPRINT(EM_DIAGRAM):   output;
97355      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97356      NEWVAR="OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="OPT_Population_in_thousands";
97357      FORMULA="Optimal Binning(4)";
MPRINT(EM_DIAGRAM):   FORMULA="Optimal Binning(4)";
97358      output;
MPRINT(EM_DIAGRAM):   output;
97359      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.BESTMAPPING has 11 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
97360      proc dmdb data=work.TEMPBESTTRAIN dmdbcat=EM_DMDB out=EM_DMDB MAXLEVEL=32;
MPRINT(EM_DIAGRAM):   proc dmdb data=work.TEMPBESTTRAIN dmdbcat=EM_DMDB out=EM_DMDB MAXLEVEL=32;
97361      var
97362      Population_in_thousands
97363      LG10_Population_in_thousands
97364      LOG_Population_in_thousands
97365      SQRT_Population_in_thousands
97366      INV_Population_in_thousands
97367      SQR_Population_in_thousands
97368      EXP_Population_in_thousands
97369      STD_Population_in_thousands
97370      RANGE_Population_in_thousands
97371      CNTR_Population_in_thousands
97372      Cases_in_1000s
97373      ;
MPRINT(EM_DIAGRAM):   var Population_in_thousands LG10_Population_in_thousands LOG_Population_in_thousands SQRT_Population_in_thousands INV_Population_in_thousands SQR_Population_in_thousands EXP_Population_in_thousands STD_Population_in_thousands
RANGE_Population_in_thousands CNTR_Population_in_thousands Cases_in_1000s ;
97374      class
97375      OPT_Population_in_thousands
97376      ;
MPRINT(EM_DIAGRAM):   class OPT_Population_in_thousands ;
97377      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 750   Memory used = 511K.
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View WORK.TEMPBESTTRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: There were 750 observations read from the data set WORK.TEMPBESTTRAIN.
NOTE: The data set WORK.EM_DMDB has 750 observations and 12 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
 
97378      proc dmine data=work.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER outrsquare=EMWS2.Trans_RSQUARE NOMONITOR PSHORT NOPRINT;
MPRINT(EM_DIAGRAM):    proc dmine data=work.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER outrsquare=EMWS2.Trans_RSQUARE NOMONITOR PSHORT NOPRINT;
97379      var
97380      Population_in_thousands
97381      LG10_Population_in_thousands
97382      LOG_Population_in_thousands
97383      SQRT_Population_in_thousands
97384      INV_Population_in_thousands
97385      SQR_Population_in_thousands
97386      EXP_Population_in_thousands
97387      STD_Population_in_thousands
97388      RANGE_Population_in_thousands
97389      CNTR_Population_in_thousands
97390      OPT_Population_in_thousands
97391      ;
MPRINT(EM_DIAGRAM):   var Population_in_thousands LG10_Population_in_thousands LOG_Population_in_thousands SQRT_Population_in_thousands INV_Population_in_thousands SQR_Population_in_thousands EXP_Population_in_thousands STD_Population_in_thousands
RANGE_Population_in_thousands CNTR_Population_in_thousands OPT_Population_in_thousands ;
97392      target Cases_in_1000s;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s;
97393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Checking database engine with sqluse...
 
Initial pass to compute R2s for all targets
750 records read
NOTE: The full X'X matrix has 9 rows and columns.
 
Building X'X  for target: Cases_in_1000s rows=10 memory=0.00 meg.
750 records read
NOTE: There were 750 observations read from the data set WORK.EM_DMDB.
NOTE: The data set EMWS2.TRANS_RSQUARE has 21 observations and 4 variables.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97394      proc sort data=EMWS2.Trans_RSQUARE(where=(type in ('VAR', 'CLASS')) rename=(Effect=NEWVAR));
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Trans_RSQUARE(where=(type in ('VAR', 'CLASS')) rename=(Effect=NEWVAR));
97395      by NEWVAR;
MPRINT(EM_DIAGRAM):   by NEWVAR;
97396      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
      WHERE type in ('CLASS', 'VAR');
NOTE: The data set EMWS2.TRANS_RSQUARE has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97397      proc sort data=WORK.BESTMAPPING;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.BESTMAPPING;
97398      by NEWVAR;
MPRINT(EM_DIAGRAM):   by NEWVAR;
97399      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.BESTMAPPING.
NOTE: The data set WORK.BESTMAPPING has 11 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97400      data EMWS2.Trans_RSQUARE;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_RSQUARE;
97401      merge WORK.BESTMAPPING(in=_a)EMWS2.Trans_RSQUARE(drop=df type);
MPRINT(EM_DIAGRAM):   merge WORK.BESTMAPPING(in=_a)EMWS2.Trans_RSQUARE(drop=df type);
97402      by NEWVAR;
MPRINT(EM_DIAGRAM):   by NEWVAR;
97403      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
97404      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.BESTMAPPING.
NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
NOTE: The data set EMWS2.TRANS_RSQUARE has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97405      proc sort data=EMWS2.Trans_RSQUARE;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_RSQUARE;
97406      by VAR descending RSQUARE;
MPRINT(EM_DIAGRAM):   by VAR descending RSQUARE;
97407      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
NOTE: The data set EMWS2.TRANS_RSQUARE has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97408      data WORK.BESTMAPPING(rename=(bestvar=newvar bestr2=rsquare bestformula=formula));
MPRINT(EM_DIAGRAM):   data WORK.BESTMAPPING(rename=(bestvar=newvar bestr2=rsquare bestformula=formula));
97409      retain bestvar bestr2 bestformula;
MPRINT(EM_DIAGRAM):   retain bestvar bestr2 bestformula;
97410      set EMWS2.Trans_RSQUARE;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_RSQUARE;
97411      by VAR;
MPRINT(EM_DIAGRAM):   by VAR;
97412      if first.VAR then do;
MPRINT(EM_DIAGRAM):   if first.VAR then do;
97413      bestr2 = rsquare;
MPRINT(EM_DIAGRAM):   bestr2 = rsquare;
97414      bestvar = newvar;
MPRINT(EM_DIAGRAM):   bestvar = newvar;
97415      bestformula = formula;
MPRINT(EM_DIAGRAM):   bestformula = formula;
97416      end;
MPRINT(EM_DIAGRAM):   end;
97417      else do;
MPRINT(EM_DIAGRAM):   else do;
97418      if abs(rsquare-bestr2)<10**-8 and formula='' then do;
MPRINT(EM_DIAGRAM):   if abs(rsquare-bestr2)<10**-8 and formula='' then do;
97419      bestvar = var;
MPRINT(EM_DIAGRAM):   bestvar = var;
97420      bestformula = formula;
MPRINT(EM_DIAGRAM):   bestformula = formula;
97421      end;
MPRINT(EM_DIAGRAM):   end;
97422      if last.var then output;
MPRINT(EM_DIAGRAM):   if last.var then output;
97423      end;
MPRINT(EM_DIAGRAM):   end;
97424      keep var bestvar bestr2 bestformula;
MPRINT(EM_DIAGRAM):   keep var bestvar bestr2 bestformula;
97425      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
NOTE: The data set WORK.BESTMAPPING has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
*  Trans: Equalize transformation requires a class target variable.  Transformation will be ignored.
*------------------------------------------------------------*
*------------------------------------------------------------*
*  Trans: Optimize equalize max. transformation requires a class target variable.  Transformation will be ignored.
*------------------------------------------------------------*
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.83 seconds
      cpu time            0.71 seconds
 
*------------------------------------------------------------*
*  Trans: Creating EMWS2.Trans_RESULT
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    data EMWS2.Trans_RESULT;
MPRINT(EM_DIAGRAM):   length NAME NEWVAR $32 LEVEL $10 POWER 8 FORMULA $70 LABEL $44 TERM $200;
MPRINT(EM_DIAGRAM):   NAME = "Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR = "OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "Optimal Binning(4)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   TYPE = "C";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_RESULT NOTHREADS;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M368Q821 out=WORK._TRANSRESLT(RENAME=(LEVEL=INPUTLEVEL TYPE=INPUTTYPE) KEEP=NAME ROLE LEVEL TYPE) NOTHREADS;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_RESULT(RENAME=(NAME=INPUTNAME NEWVAR=NAME));
MPRINT(EM_DIAGRAM):   merge EMWS2.Trans_RESULT(in=a) WORK._TRANSRESLT;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if a then output;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):   modify Trans_RESULT;
MPRINT(EM_DIAGRAM):   label INPUTNAME = "Input Name" NAME = "Output Name" POWER = "Power" FORMULA = "Formula" ROLE = "rpt_role_vlabel" INPUTLEVEL = "Input Level" LEVEL = "Output Level" INPUTTYPE = "Input Type" TYPE = "Output Type";
MPRINT(EM_DIAGRAM):   run;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
97454      data EMWS2.Trans_RESULT;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_RESULT;
97455      length NAME $32 FORMULA $70 POWER 8 ROLE $32 LEVEL $10 INPUTNAME $32 INPUTTYPE $1 LABEL $44;
MPRINT(EM_DIAGRAM):   length NAME $32 FORMULA $70 POWER 8 ROLE $32 LEVEL $10 INPUTNAME $32 INPUTTYPE $1 LABEL $44;
97456      label INPUTNAME ='Input Name' NAME='Name' POWER='Power' FORMULA='Formula' ROLE='Role' INPUTLEVEL='Input Level' LEVEL='Level' INPUTTYPE='Input Type' TYPE='Type';
MPRINT(EM_DIAGRAM):   label INPUTNAME = 'Input Name' NAME= 'Name' POWER= 'Power' FORMULA= 'Formula' ROLE= 'Role' INPUTLEVEL= 'Input Level' LEVEL= 'Level' INPUTTYPE= 'Input Type' TYPE= 'Type';
97457      set EMWS2.Trans_RESULT;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_RESULT;
97458      if INPUTNAME = '' then INPUTNAME = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if INPUTNAME = '' then INPUTNAME = "Mixture of variables";
97459      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TRANS_RESULT.
NOTE: The data set EMWS2.TRANS_RESULT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97460      data WORK.M0QKG48A;
MPRINT(EM_DIAGRAM):    data WORK.M0QKG48A;
97461      set WORK.M0QKG48A;
MPRINT(EM_DIAGRAM):   set WORK.M0QKG48A;
97462      if ROLE='REJECTED' then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE='REJECTED' then ROLE='INPUT';
97463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0QKG48A.
NOTE: The data set WORK.M0QKG48A has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
*  Trans: Computing summary statistics for transformed variables
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    data WORK.Trans_TRANSFORM / view=WORK.Trans_TRANSFORM;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.Trans_TRANSFORM dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   OPT_Population_in_thousands(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
MPRINT(EM_DIAGRAM):    data WORK.Trans_TEMP;
MPRINT(EM_DIAGRAM):   length SOURCE $6 NAME $32;
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" NAME = "Variable Name" NLEVEL = "Number of Levels" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS = "Skewness" KURTOSIS = "Kurtosis";
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = 4 - (nmiss>0);
MPRINT(EM_DIAGRAM):   MIN = .;
MPRINT(EM_DIAGRAM):   MAX = .;
MPRINT(EM_DIAGRAM):   MEAN = .;
MPRINT(EM_DIAGRAM):   STD = .;
MPRINT(EM_DIAGRAM):   SKEWNESS = .;
MPRINT(EM_DIAGRAM):   KURTOSIS = .;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
97526      data WORK.TRANSFOR_2VN6VY6_STATISTIC;
MPRINT(EM_DIAGRAM):    data WORK.TRANSFOR_2VN6VY6_STATISTIC;
97527      set WORK.Trans_TEMP;
MPRINT(EM_DIAGRAM):   set WORK.Trans_TEMP;
97528      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_TEMP.
NOTE: The data set WORK.TRANSFOR_2VN6VY6_STATISTIC has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97529      %exploreSample(DATA=EMWS2.Impt_TRAIN, OUTPUT=EMWS2.Trans_SAMPLE_DATA, METADATA=EMWS2.Impt_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS2.Impt_TRAIN : vars= 7 : recl= 95 : max=60000 : def= 6000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS2.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS2.Impt_TRAIN(obs= 6000 );
MPRINT(EXPLORESAMPLE):   run;
 
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: The data set EMWS2.TRANS_SAMPLE_DATA has 750 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):  ;
 
97706      proc print data = EMWS2.Trans_RESULT(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS2.Trans_RESULT(obs=500) noobs label;
97707      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_computedtransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Computed Transformations";
97708      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var INPUTNAME ROLE INPUTLEVEL NAME LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
97709      var INPUTNAME ROLE INPUTLEVEL NAME LEVEL FORMULA;
97710      run;
 
NOTE: There were 1 observations read from the data set EMWS2.TRANS_RESULT.
NOTE: The PROCEDURE PRINT printed page 30.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
97711      title9;
MPRINT(EM_DIAGRAM):   title9;
97712      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:08" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 09, 2019
Time:                16:48:08
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QK4_Q6 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QK4_Q6 new;
MPRINT(EM_DIAGRAM):   run;
97814      proc sort data=EMWS2.Trans_RESULT out=WORK.TransRESULT NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Trans_RESULT out=WORK.TransRESULT NOTHREADS;
97815      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
97816      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TRANS_RESULT.
NOTE: The data set WORK.TRANSRESULT has 1 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
97817      proc sort data=EMWS2.Trans_VariableSet(KEEP= NAME FAMILY REPORT rename=(NAME=INPUTNAME)) out=WORK.TransVARSET NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_VariableSet(KEEP= NAME FAMILY REPORT rename=(NAME=INPUTNAME)) out=WORK.TransVARSET NOTHREADS;
97818      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
97819      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSVARSET has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
97820      data WORK.TransRESULT;
MPRINT(EM_DIAGRAM):   data WORK.TransRESULT;
97821      merge WORK.TransRESULT WORK.TransVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.TransRESULT WORK.TransVARSET;
97822      by INPUTNAME;
MPRINT(EM_DIAGRAM):   by INPUTNAME;
97823      if NAME ne '' then output;
MPRINT(EM_DIAGRAM):   if NAME ne '' then output;
97824      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable INPUTNAME by input data sets. This might cause unexpected results.
NOTE: There were 1 observations read from the data set WORK.TRANSRESULT.
NOTE: There were 5 observations read from the data set WORK.TRANSVARSET.
NOTE: The data set WORK.TRANSRESULT has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97825      filename _code "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\TRAINDELTACODE.sas";
MPRINT(EM_DIAGRAM):   filename _code "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\TRAINDELTACODE.sas";
97826      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
97827      set WORK.TransRESULT;
MPRINT(EM_DIAGRAM):   set WORK.TransRESULT;
97828      length String $200;
MPRINT(EM_DIAGRAM):   length String $200;
97829      file _code;
MPRINT(EM_DIAGRAM):   file _code;
97830      String = 'if NAME="'!!strip(name)!!'" then do;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(name)!!'" then do;';
97831      put / String;
MPRINT(EM_DIAGRAM):   put / String;
97832      if family ne '' then do;
MPRINT(EM_DIAGRAM):   if family ne '' then do;
97833      String = '   FAMILY ="'!!strip(family)!!'";';
MPRINT(EM_DIAGRAM):   String = '   FAMILY ="'!!strip(family)!!'";';
97834      put String;
MPRINT(EM_DIAGRAM):   put String;
97835      end;
MPRINT(EM_DIAGRAM):   end;
97836      select(formula);
MPRINT(EM_DIAGRAM):   select(formula);
97837      when('Interaction') put '   FAMILY  ="INTERACTION";';
MPRINT(EM_DIAGRAM):   when('Interaction') put '   FAMILY  ="INTERACTION";';
97838      when('') put '   COMMENT = "' method 'transformation of ' INPUTVAR '";';
MPRINT(EM_DIAGRAM):   when('') put '   COMMENT = "' method 'transformation of ' INPUTVAR '";';
97839      otherwise put '   COMMENT = "' formula '";';
MPRINT(EM_DIAGRAM):   otherwise put '   COMMENT = "' formula '";';
97840      end;
MPRINT(EM_DIAGRAM):   end;
97841      String = '   ROLE ="'!!strip(role)!!'";';
MPRINT(EM_DIAGRAM):   String = '   ROLE ="'!!strip(role)!!'";';
97842      put String;
MPRINT(EM_DIAGRAM):   put String;
97843      if REPORT="" then REPORT = "N";
MPRINT(EM_DIAGRAM):   if REPORT="" then REPORT = "N";
97844      String = '   REPORT ="'!!strip(report)!!'";';
MPRINT(EM_DIAGRAM):   String = '   REPORT ="'!!strip(report)!!'";';
97845      put String;
MPRINT(EM_DIAGRAM):   put String;
97846      String = '   LEVEL  ="'!!strip(level)!!'";';
MPRINT(EM_DIAGRAM):   String = '   LEVEL  ="'!!strip(level)!!'";';
97847      put String;
MPRINT(EM_DIAGRAM):   put String;
97848      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
97849      if formula ne 'Interaction' and INPUTNAME ne '' then do;
MPRINT(EM_DIAGRAM):   if formula ne 'Interaction' and INPUTNAME ne '' then do;
97850      String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
MPRINT(EM_DIAGRAM):   String = 'if NAME="'!!strip(INPUTNAME)!!'" then delete;';
97851      put String;
MPRINT(EM_DIAGRAM):   put String;
97852      end;
MPRINT(EM_DIAGRAM):   end;
97853      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable method is uninitialized.
NOTE: Variable INPUTVAR is uninitialized.
NOTE: The file _CODE is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\TRAINDELTACODE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=09Dec2019:16:48:07,
      Create Time=03Dec2019:16:53:07
 
NOTE: 8 records were written to the file _CODE.
      The minimum record length was 0.
      The maximum record length was 46.
NOTE: There were 1 observations read from the data set WORK.TRANSRESULT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
97854      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
97855      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97856      *------------------------------------------------------------*;
97857      * Trans: Scoring DATA data;
97858      *------------------------------------------------------------*;
97859      data EMWS2.Trans_TRAIN
97860      / view=EMWS2.Trans_TRAIN
97861      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_TRAIN / view=EMWS2.Trans_TRAIN ;
97862      set EMWS2.Impt_TRAIN
97863      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN ;
97864      %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
97886      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.TRANS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
97887      quit;
97888      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
97889      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97890      *------------------------------------------------------------*;
97891      * Trans: Scoring VALIDATE data;
97892      *------------------------------------------------------------*;
97893      data EMWS2.Trans_VALIDATE
97894      / view=EMWS2.Trans_VALIDATE
97895      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_VALIDATE / view=EMWS2.Trans_VALIDATE ;
97896      set EMWS2.Impt_VALIDATE
97897      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_VALIDATE ;
97898      %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
97920      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.TRANS_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
97921      quit;
97922      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
97923      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97924      *------------------------------------------------------------*;
97925      * Trans: Scoring TEST data;
97926      *------------------------------------------------------------*;
97927      data EMWS2.Trans_TEST
97928      / view=EMWS2.Trans_TEST
97929      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_TEST / view=EMWS2.Trans_TEST ;
97930      set EMWS2.Impt_TEST
97931      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TEST ;
97932      %inc emflow;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
97954      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.TRANS_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
97955      quit;
97956      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
97957      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
97958      * Trans: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Trans: Computing metadata for TRAIN data;
97959      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Trans_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Trans_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Trans_TRAIN out=WORK.M0CLPXGA noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CLPXGA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CLPXGA(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0CLPXGA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0CLPXGA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1F77MP_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3SI8BKQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   set WORK.M1F77MP_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Impt_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Impt_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Trans";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Trans: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME="OPT_Population_in_thousands" then do;
MPRINT(EM_DIAGRAM):   COMMENT = "Optimal Binning(4) ";
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   REPORT ="N";
MPRINT(EM_DIAGRAM):   LEVEL ="NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME="Population_in_thousands" then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS2.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS2.TRANS_TEST.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:09" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 09, 2019
Time:                16:48:09
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0HZIV_9 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0HZIV_9 new;
MPRINT(EM_DIAGRAM):   run;
98331      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98332      * &msgString;
MPRINT(EM_DIAGRAM):   * &msgString;
98333      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98334      filename _flowref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   filename _flowref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMFLOWSCORE.sas";
98335      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=WORK.TRANS_SCOREINPUTS;
98336      %INCLUDE _flowref;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Computed Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
98358      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Dependency structure written to data set WORK.TRANS_SCOREINPUTS.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
98359      quit;
98360      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
98361      set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   set WORK.TRANS_SCOREINPUTS(keep=RHS rename=(RHS=NAME));
98362      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
98363      UNAME = upcase(NAME);
MPRINT(EM_DIAGRAM):   UNAME = upcase(NAME);
98364      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98365      proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS NODUPKEY;
98366      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
98367      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 1 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98368      filename _flowref;
MPRINT(EM_DIAGRAM):   filename _flowref;
NOTE: Fileref _FLOWREF has been deassigned.
98369      %let SYSCC = 0;
98370      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98371      * transformcombinevariables;
MPRINT(EM_DIAGRAM):   * transformcombinevariables;
98372      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98373      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
98374      length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
MPRINT(EM_DIAGRAM):   length Uname inputName $32 inputLevel $10 inputType $1 _MetaFlag 8;
98375      set
98376      EMWS2.Trans_RESULT
98377      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_RESULT ;
98378      _MetaFlag=0;
MPRINT(EM_DIAGRAM):   _MetaFlag=0;
98379      uname = upcase(name);
MPRINT(EM_DIAGRAM):   uname = upcase(name);
98380      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TRANS_RESULT.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98381      data _temp;
MPRINT(EM_DIAGRAM):    data _temp;
98382      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
98383      set EMWS2.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_CMeta_TRAIN(keep=NAME LEVEL ROLE TYPE CREATOR LABEL);
98384      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
98385      where upcase(CREATOR) = upcase("Trans");
MPRINT(EM_DIAGRAM):   where upcase(CREATOR) = upcase("Trans");
98386      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TRANS_CMETA_TRAIN.
      WHERE UPCASE(CREATOR)='TRANS';
NOTE: The data set WORK._TEMP has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98387      proc sort data=_temp(drop=CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=_temp(drop=CREATOR);
98388      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
98389      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
98390      proc sort data=WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.TRANS_OUTPUTVARS;
98391      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
98392      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 1 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98393      data WORK.TRANS_OUTPUTVARS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_OUTPUTVARS;
98394      merge WORK.TRANS_OUTPUTVARS _temp;
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_OUTPUTVARS _temp;
98395      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
98396      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_OUTPUTVARS has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
98397      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98398      * Trans: Get Metadata for the Score Inputs Variables;
MPRINT(EM_DIAGRAM):   * Trans: Get Metadata for the Score Inputs Variables;
98399      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98400      data _temp;
MPRINT(EM_DIAGRAM):   data _temp;
98401      length UNAME $32;
MPRINT(EM_DIAGRAM):   length UNAME $32;
98402      set EMWS2.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_VariableSet(keep=NAME LEVEL TYPE LABEL);
98403      UNAME = upcase(name);
MPRINT(EM_DIAGRAM):   UNAME = upcase(name);
98404      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98405      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
98406      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
98407      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
98408      data WORK.TRANS_SCOREINPUTS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_SCOREINPUTS;
98409      merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_SCOREINPUTS(in=_a) _temp(in=_b);
98410      by UNAME;
MPRINT(EM_DIAGRAM):   by UNAME;
98411      if _a and _b then output;
MPRINT(EM_DIAGRAM):   if _a and _b then output;
98412      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_SCOREINPUTS has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
98413      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98414      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
98415      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98416      proc dmdb data=EMWS2.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS2.Trans_TRAIN classout=WORK.TRANS_CLASSSTATS varout=WORK.TRANS_VARSTATS;
98417      class
98418      OPT_Population_in_thousands
98419      ;
MPRINT(EM_DIAGRAM):   class OPT_Population_in_thousands ;
98420      var
98421      Population_in_thousands
98422      ;
MPRINT(EM_DIAGRAM):   var Population_in_thousands ;
98423      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 750   Memory used = 511K.
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: The data set WORK.TRANS_CLASSSTATS has 4 observations and 9 variables.
NOTE: The data set WORK.TRANS_VARSTATS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
98424      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98425      * Trans: Combine Information and Statistics for Class Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Class Variables;
98426      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98427      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
98428      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98429      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 1 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
98430      proc sort data=WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_CLASSSTATS;
98431      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98432      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98433      data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS(keep=name nlevel nmiss);
98434      retain nlevel nmiss;
MPRINT(EM_DIAGRAM):   retain nlevel nmiss;
98435      set WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS;
98436      by Name;
MPRINT(EM_DIAGRAM):   by Name;
98437      if first.Name then do;
MPRINT(EM_DIAGRAM):   if first.Name then do;
98438      nlevel= 0;
MPRINT(EM_DIAGRAM):   nlevel= 0;
98439      nmiss= 0;
MPRINT(EM_DIAGRAM):   nmiss= 0;
98440      end;
MPRINT(EM_DIAGRAM):   end;
98441      if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
MPRINT(EM_DIAGRAM):   if (type='C' and CRAW='') or (type='N' and NRAW=.) then nmiss = FREQUENCY;
98442      else nlevel + 1;
MPRINT(EM_DIAGRAM):   else nlevel + 1;
98443      if last.name then output;
MPRINT(EM_DIAGRAM):   if last.name then output;
98444      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98445      /*Merge Statistics for Class Output Vars */
98446      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
98447      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
98448      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b keep=NAME InputName Formula _MetaFlag LEVEL TYPE LABEL);
98449      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98450      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
98451      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
98452      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
98453      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
98454      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
98455      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
98456      if Formula = '' then Formula = "User Code";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "User Code";
98457      end;
MPRINT(EM_DIAGRAM):   end;
98458      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
98459      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
98460      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98461      /*Merge Statistics for Class Input Vars */
98462      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
98463      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98464      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
98465      data WORK.TRANS_CLASSSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_CLASSSTATS;
98466      merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_CLASSSTATS(in=_a) _temp(in=_b);
98467      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98468      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
98469      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
98470      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
98471      end;
MPRINT(EM_DIAGRAM):   end;
98472      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
98473      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_CLASSSTATS has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98474      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98475      * Trans: Combine Information and Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine Information and Statistics for Interval Variables;
98476      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98477      proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_OUTPUTVARS out=_temp;
98478      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98479      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_OUTPUTVARS.
NOTE: The data set WORK._TEMP has 1 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98480      proc sort data=WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_VARSTATS;
98481      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set WORK.TRANS_VARSTATS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Output Vars;
98483      *Merge Statistics for Output Vars;
98484      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
98485      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
98486      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b keep=NAME Formula InputName _MetaFlag LEVEL TYPE LABEL);
98487      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98488      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
98489      SOURCE='Output';
MPRINT(EM_DIAGRAM):   SOURCE='Output';
98490      if _MetaFlag = 1 then _METHOD_="Meta";
MPRINT(EM_DIAGRAM):   if _MetaFlag = 1 then _METHOD_="Meta";
98491      else if Formula eq 'Interaction' then _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else if Formula eq 'Interaction' then _METHOD_="Computed";
98492      else if inputName eq '' then _METHOD_="Formula";
MPRINT(EM_DIAGRAM):   else if inputName eq '' then _METHOD_="Formula";
98493      else _METHOD_="Computed";
MPRINT(EM_DIAGRAM):   else _METHOD_="Computed";
98494      if Formula = '' then Formula = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if Formula = '' then Formula = "Mixture of variables";
98495      end;
MPRINT(EM_DIAGRAM):   end;
98496      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
98497      drop inputName LEVEL TYPE _MetaFlag;
MPRINT(EM_DIAGRAM):   drop inputName LEVEL TYPE _MetaFlag;
98498      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 1 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *Merge Statistics for Input Vars;
98499      *Merge Statistics for Input Vars;
98500      proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TRANS_SCOREINPUTS(drop=TYPE LEVEL) out=_temp nodupkey;
98501      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98502      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_SCOREINPUTS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
98503      data WORK.TRANS_VARSTATS;
MPRINT(EM_DIAGRAM):   data WORK.TRANS_VARSTATS;
98504      merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.TRANS_VARSTATS(in=_a) _temp(in=_b);
98505      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
98506      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
98507      SOURCE='Input';
MPRINT(EM_DIAGRAM):   SOURCE='Input';
98508      _METHOD_="Original";
MPRINT(EM_DIAGRAM):   _METHOD_="Original";
98509      end;
MPRINT(EM_DIAGRAM):   end;
98510      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
98511      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: There were 1 observations read from the data set WORK._TEMP.
NOTE: The data set WORK.TRANS_VARSTATS has 1 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98512      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
98513      * Trans: Combine statistics for class and interval variables;
MPRINT(EM_DIAGRAM):   * Trans: Combine statistics for class and interval variables;
98514      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
98515      data EMWS2.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_STATISTICS;
98516      length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
MPRINT(EM_DIAGRAM):   length SOURCE $6 _METHOD_ $8 NAME $32 FORMULA $300;
98517      label SOURCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_source_vlabel,  NOQUOTE))" _METHOD_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_method_vlabel,  NOQUOTE))" NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,  NOQUOTE))" FORMULA =
98518         "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel,   NOQUOTE))" NLEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonmiss_vlabel, NOQUOTE))" NMISS =
98519         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))" MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))" MEAN =
98520         "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))" STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))" SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))" KURTOSIS =
98521         "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" _METHOD_ = "Method" NAME = "Variable Name" FORMULA = "Formula" NLEVEL = "Number of Levels" N = "Non Missing" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS
= "Skewness" KURTOSIS = "Kurtosis" LABEL = "Label";
98522      set
98523      WORK.TRANS_CLASSSTATS
98524      WORK.TRANS_VARSTATS
98525      ;
MPRINT(EM_DIAGRAM):   set WORK.TRANS_CLASSSTATS WORK.TRANS_VARSTATS ;
98526      drop UNAME;
MPRINT(EM_DIAGRAM):   drop UNAME;
98527      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TRANS_CLASSSTATS.
NOTE: There were 1 observations read from the data set WORK.TRANS_VARSTATS.
NOTE: The data set EMWS2.TRANS_STATISTICS has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
98528      proc sort data=EMWS2.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_STATISTICS;
98529      by SOURCE _METHOD_ NAME;
MPRINT(EM_DIAGRAM):   by SOURCE _METHOD_ NAME;
98530      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.TRANS_STATISTICS.
NOTE: The data set EMWS2.TRANS_STATISTICS has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98531      proc sort data = EMWS2.Trans_STATISTICS NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Trans_STATISTICS NOTHREADS;
98532      by SOURCE NAME;
MPRINT(EM_DIAGRAM):   by SOURCE NAME;
98533      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.TRANS_STATISTICS.
NOTE: The data set EMWS2.TRANS_STATISTICS has 2 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98534      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
98535      proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
98536      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Interval Variables";
98537      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
98538      var Name NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
98539      where SOURCE eq 'INPUT' and mean ne .;
98540      run;
 
NOTE: No observations were selected from data set EMWS2.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS2.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98541      proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
98542      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervaloutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Interval Variables";
98543      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and mean ne .;
MPRINT(EM_DIAGRAM):   run;
98544      var Name _METHOD_ NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS;
98545      where SOURCE eq 'OUTPUT' and mean ne .;
98546      run;
 
NOTE: No observations were selected from data set EMWS2.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS2.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (mean not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98547      proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
98548      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classinputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Input Class Variables";
98549      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'INPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
98550      var Name NLEVEL NMISS;
98551      where SOURCE eq 'INPUT' and nlevel ne .;
98552      run;
 
NOTE: No observations were selected from data set EMWS2.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS2.TRANS_STATISTICS.
      WHERE (SOURCE='INPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
98553      proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
MPRINT(EM_DIAGRAM):   proc print data = EMWS2.Trans_STATISTICS(obs=500) noobs label;
98554      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classoutputStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Summary Statistics for Output Class Variables";
98555      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var Name _METHOD_ NLEVEL NMISS;
MPRINT(EM_DIAGRAM):   where SOURCE eq 'OUTPUT' and nlevel ne .;
MPRINT(EM_DIAGRAM):   run;
98556      var Name _METHOD_ NLEVEL NMISS;
98557      where SOURCE eq 'OUTPUT' and nlevel ne .;
98558      run;
 
NOTE: No observations were selected from data set EMWS2.TRANS_STATISTICS.
NOTE: There were 0 observations read from the data set EMWS2.TRANS_STATISTICS.
      WHERE (SOURCE='OUTPUT') and (nlevel not = .);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
98559      title9;
MPRINT(EM_DIAGRAM):   title9;
98560      title10;
MPRINT(EM_DIAGRAM):   title10;
98561      data EMWS2.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS2.Trans_EMSCOREVAR;
98562      length Name $32 formula $300 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $300 file $200;
98563      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
98564      set EMWS2.Trans_STATISTICS;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_STATISTICS;
98565      where SOURCE='Output';
MPRINT(EM_DIAGRAM):   where SOURCE='Output';
98566      select( _METHOD_);
MPRINT(EM_DIAGRAM):   select( _METHOD_);
98567      when('Computed') do;
MPRINT(EM_DIAGRAM):   when('Computed') do;
98568      file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="TRANSFORMCODE\"!!strip(NAME)!!'.sas';
98569      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
98570      end;
MPRINT(EM_DIAGRAM):   end;
98571      when('Formula') do;
MPRINT(EM_DIAGRAM):   when('Formula') do;
98572      if Formula eq 'Mixture of variables' then do;
MPRINT(EM_DIAGRAM):   if Formula eq 'Mixture of variables' then do;
98573      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
98574      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
98575      end;
MPRINT(EM_DIAGRAM):   end;
98576      if Formula = 'User Code' then do;
MPRINT(EM_DIAGRAM):   if Formula = 'User Code' then do;
98577      file= "EDITORCODE.sas";
MPRINT(EM_DIAGRAM):   file= "EDITORCODE.sas";
98578      formula = '';
MPRINT(EM_DIAGRAM):   formula = '';
98579      end;
MPRINT(EM_DIAGRAM):   end;
98580      end;
MPRINT(EM_DIAGRAM):   end;
98581      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
98582      end;
MPRINT(EM_DIAGRAM):   end;
98583      output;
MPRINT(EM_DIAGRAM):   output;
98584      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.TRANS_STATISTICS.
      WHERE SOURCE='Output';
NOTE: The data set EMWS2.TRANS_EMSCOREVAR has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
