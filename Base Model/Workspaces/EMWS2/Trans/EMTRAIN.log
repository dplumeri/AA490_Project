MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:06" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 09, 2019
Time:                16:48:06
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1EF_9NN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1EF_9NN new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:06" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:48:06" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Trans\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
97018      proc freq data=EMWS2.Trans_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Trans_VariableSet noprint;
97019      table ROLE*LEVEL/out=WORK.TransMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.TransMETA;
97020      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set EMWS2.TRANS_VARIABLESET.
NOTE: The data set WORK.TRANSMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

97021      proc print data=WORK.TransMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.TransMETA label noobs;
97022      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
97023      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
97024      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
97025      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
97026      run;

NOTE: There were 3 observations read from the data set WORK.TRANSMETA.
NOTE: The PROCEDURE PRINT printed page 29.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97027      title10;
MPRINT(EM_DIAGRAM):   title10;
97028      data WORK.M368Q821;
MPRINT(EM_DIAGRAM):    data WORK.M368Q821;
97029      set WORK.M368Q821;
MPRINT(EM_DIAGRAM):   set WORK.M368Q821;
97030      if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
MPRINT(EM_DIAGRAM):   if (METHOD='NONE' and ROLE ne 'FREQ') or (role = 'REJECTED' and METHOD = 'DEFAULT') then delete;
97031      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK.M368Q821.
NOTE: The data set WORK.M368Q821 has 5 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS2.Impt_TRAIN;
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
97096      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
97097      * Trans: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   * Trans: Computing Summary Statistics;
97098      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97099      data WORK.M2_DGN6G;
MPRINT(EM_DIAGRAM):   data WORK.M2_DGN6G;
97100      set WORK.M2_DGN6G;
MPRINT(EM_DIAGRAM):   set WORK.M2_DGN6G;
97101      if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
97102      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK.M2_DGN6G.
NOTE: The data set WORK.M2_DGN6G has 5 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97103      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
97104      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
97105      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
97106      %macro DMDBClass;
97107          Age_group(ASC) Disease(ASC) Gender(ASC)
97108      %mend DMDBClass;
97109      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
97110      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
97111      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
97112      %macro DMDBVar;
97113          Cases_in_1000s Population_in_thousands
97114      %mend DMDBVar;
97115      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97116      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
97117      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97118      proc dmdb batch data=EMWS2.Impt_TRAIN
97119      dmdbcat=WORK.EM_DMDB
97120      classout=WORK.Transclassout
97121      maxlevel = 513
97122      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Impt_TRAIN dmdbcat=WORK.EM_DMDB classout=WORK.Transclassout maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
97123      class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Disease(ASC) Gender(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
97124      var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s Population_in_thousands
MPRINT(EM_DIAGRAM):  ;
97125      target
97126      Cases_in_1000s
97127      ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
97128      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 750   Memory used = 511K.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: The data set WORK.TRANSCLASSOUT has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
97129      quit;
97130      *--- end code ---*;

97131      data WORK.TransINTERVALMETA;
MPRINT(EM_DIAGRAM):    data WORK.TransINTERVALMETA;
97132      set WORK.M368Q821;
MPRINT(EM_DIAGRAM):   set WORK.M368Q821;
97133      if LEVEL ne 'INTERVAL' then delete;
MPRINT(EM_DIAGRAM):   if LEVEL ne 'INTERVAL' then delete;
97134      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set WORK.M368Q821.
NOTE: The data set WORK.TRANSINTERVALMETA has 2 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97135      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
97136      * Trans: Determining Variables to Scale;
MPRINT(EM_DIAGRAM):   * Trans: Determining Variables to Scale;
97137      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97138      data WORK.M2VFJEIE;
MPRINT(EM_DIAGRAM):   data WORK.M2VFJEIE;
97139      set WORK.M2VFJEIE;
MPRINT(EM_DIAGRAM):   set WORK.M2VFJEIE;
97140      where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
MPRINT(EM_DIAGRAM):   where (TYPE="N" and (METHOD in("MAX_NORM", "MAX_CORR", "EQUALIZE", "OP_MAX_NORM", "OP_EQUALIZE"))) or (ROLE eq "FREQ");
97141      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK.M2VFJEIE.
      WHERE ((TYPE='N') and METHOD in ('EQUALIZE', 'MAX_CORR', 'MAX_NORM', 'OP_EQUALIZE', 'OP_MAX_NORM')) or (ROLE='FREQ');
NOTE: The data set WORK.M2VFJEIE has 0 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97144      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):      *------------------------------------------------------------*;
97145      * Trans: Computing optimal binning for relationship to target using target Cases_in_1000s;
MPRINT(EM_DIAGRAM):   * Trans: Computing optimal binning for relationship to target using target Cases_in_1000s;
97146      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
97147      data sortedBinMeta;
MPRINT(EM_DIAGRAM):   data sortedBinMeta;
97148      set WORK.METASET332OI2Q;
MPRINT(EM_DIAGRAM):   set WORK.METASET332OI2Q;
97149      where NAME ^in("Cases_in_1000s", "");
MPRINT(EM_DIAGRAM):   where NAME ^in("Cases_in_1000s", "");
97150      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.METASET332OI2Q.
      WHERE NAME not in (' ', 'Cases_in_1000s');
NOTE: The data set WORK.SORTEDBINMETA has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97151      proc sort data=sortedBinMeta;
MPRINT(EM_DIAGRAM):   proc sort data=sortedBinMeta;
97152      by level;
MPRINT(EM_DIAGRAM):   by level;
97153      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDBINMETA.
NOTE: The data set WORK.SORTEDBINMETA has 1 observations and 22 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97154      %em_varMacro(name=EMOPTBINVAR, metadata=sortedBinMeta, key=NAME);
MPRINT(EM_DIAGRAM):   
MPRINT(EM_VARMACRO):   filename macFile catalog 'work.emutil.macro.source';
MPRINT(EM_VARMACRO):   data _null_;
MPRINT(EM_VARMACRO):   length _STRING_ $80;
MPRINT(EM_VARMACRO):   retain _STRING_ '' maxvar 0;
MPRINT(EM_VARMACRO):   set sortedBinMeta end=eof;
MPRINT(EM_VARMACRO):   file macFile;
MPRINT(EM_VARMACRO):   if _N_=1 then do;
MPRINT(EM_VARMACRO):   string = "%"!!"macro EMOPTBINVAR;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   maxvar +1;
MPRINT(EM_VARMACRO):   if (length(_STRING_) + length(trim(NAME))+ 4 < 80) then do;
MPRINT(EM_VARMACRO):   _STRING_ = trim(_STRING_)!!' "'!!trim(NAME)!!'"n';
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend EMOPTBINVAR;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   else do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   _string_ = '"'!!TRIM(NAME)!!'"n';
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   put _STRING_;
MPRINT(EM_VARMACRO):   string = "%"!!"mend EMOPTBINVAR;";
MPRINT(EM_VARMACRO):   put string;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   if eof then do;
MPRINT(EM_VARMACRO):   string = strip(put(_N_, best.));
MPRINT(EM_VARMACRO):   call symput('_METAOBS', string);
MPRINT(EM_VARMACRO):   stop;
MPRINT(EM_VARMACRO):   end;
MPRINT(EM_VARMACRO):   run;

NOTE: The file MACFILE is:
      Catalog Name=WORK.EMUTIL.MACRO.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Mon, Dec  9, 2019 04:48:06 PM,
      Last Modified=Mon, Dec  9, 2019 04:48:06 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary Files\_TD20968_830-5CG9310VLM_\Prc2\emutil.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120

NOTE: 3 records were written to the file MACFILE.
      The minimum record length was 18.
      The maximum record length was 26.
NOTE: There were 1 observations read from the data set WORK.SORTEDBINMETA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_VARMACRO):   filename macFile;
NOTE: Fileref MACFILE has been deassigned.
MPRINT(EM_DIAGRAM):  ;
97158      data WORK.EM_TRANSOPTBIN / view=WORK.EM_TRANSOPTBIN;
MPRINT(EM_DIAGRAM):   data WORK.EM_TRANSOPTBIN / view=WORK.EM_TRANSOPTBIN;
97159      set
97159    ! EMWS2.Impt_TRAIN(keep=%EMOPTBINVAR Cases_in_1000s );
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN(keep
MPRINT(EM_DIAGRAM):  ="Population_in_thousands"n Cases_in_1000s );
97160      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.EM_TRANSOPTBIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

97161      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
97162      length varString $100;
MPRINT(EM_DIAGRAM):   length varString $100;
97163      retain varstring '';
MPRINT(EM_DIAGRAM):   retain varstring '';
97164      set sortedBinMeta end=eof;
MPRINT(EM_DIAGRAM):   set sortedBinMeta end=eof;
97165      by level;
MPRINT(EM_DIAGRAM):   by level;
97166      if _n_=1 then do;
MPRINT(EM_DIAGRAM):   if _n_=1 then do;
97167      call execute("proc arbor data=EMWS2.Impt_TRAIN ");
MPRINT(EM_DIAGRAM):   call execute("proc arbor data=EMWS2.Impt_TRAIN ");
97168      call execute("   maxdepth = 1 Leafsize=5");
MPRINT(EM_DIAGRAM):   call execute("   maxdepth = 1 Leafsize=5");
97169      call execute("   maxbranch = 4");
MPRINT(EM_DIAGRAM):   call execute("   maxbranch = 4");
97170      call execute("Missing=USEINSEARCH ");
MPRINT(EM_DIAGRAM):   call execute("Missing=USEINSEARCH ");
97171      call execute("   norulelimit maxrules=1 maxsurrs=0;");
MPRINT(EM_DIAGRAM):   call execute("   norulelimit maxrules=1 maxsurrs=0;");
97172      end;
MPRINT(EM_DIAGRAM):   end;
97173      if first.level then do;
MPRINT(EM_DIAGRAM):   if first.level then do;
97174      call execute("input ");
MPRINT(EM_DIAGRAM):   call execute("input ");
97175      end;
MPRINT(EM_DIAGRAM):   end;
97176      if length(trim(varString)) + length(trim(name)) +1 < 80 then varString = trim(varString)!!' '!!trim(name);
MPRINT(EM_DIAGRAM):   if length(trim(varString)) + length(trim(name)) +1 < 80 then varString = trim(varString)!!' '!!trim(name);
97177      else do;
MPRINT(EM_DIAGRAM):   else do;
97178      call execute(varString);
MPRINT(EM_DIAGRAM):   call execute(varString);
97179      varString = name;
MPRINT(EM_DIAGRAM):   varString = name;
97180      end;
MPRINT(EM_DIAGRAM):   end;
97181      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
97182      call execute(varString);
MPRINT(EM_DIAGRAM):   call execute(varString);
97183      call execute("/ level="!!level!!";");
MPRINT(EM_DIAGRAM):   call execute("/ level="!!level!!";");
97184      call execute("target Cases_in_1000s / level=interval;");
MPRINT(EM_DIAGRAM):   call execute("target Cases_in_1000s / level=interval;");
97185      call execute(" Performance Disk NodeSize=10000;");
MPRINT(EM_DIAGRAM):   call execute(" Performance Disk NodeSize=10000;");
97186      call execute("assess validata=EMWS2.Impt_VALIDATE;");
MPRINT(EM_DIAGRAM):   call execute("assess validata=EMWS2.Impt_VALIDATE;");
97187      call execute(" subtree best;");
MPRINT(EM_DIAGRAM):   call execute(" subtree best;");
97188      call execute(" save RULES=WORK.OPTBIN_RULES;");
MPRINT(EM_DIAGRAM):   call execute(" save RULES=WORK.OPTBIN_RULES;");
97189      call execute("run;");
MPRINT(EM_DIAGRAM):   call execute("run;");
97190      end;
MPRINT(EM_DIAGRAM):   end;
97191      run;
MPRINT(EM_DIAGRAM):   run;

MPRINT(EM_DIAGRAM):   norulelimit maxrules=1 maxsurrs=0;
MPRINT(EM_DIAGRAM):   / level=INTERVAL ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s / level=interval;
MPRINT(EM_DIAGRAM):   Performance Disk NodeSize=10000;
MPRINT(EM_DIAGRAM):   assess validata=EMWS2.Impt_VALIDATE;
MPRINT(EM_DIAGRAM):   subtree best;
MPRINT(EM_DIAGRAM):   save RULES=WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 1 observations read from the data set WORK.SORTEDBINMETA.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: CALL EXECUTE generated line.
1         + proc arbor data=EMWS2.Impt_TRAIN
2         +    maxdepth = 1 Leafsize=5
3         +    maxbranch = 4
4         + Missing=USEINSEARCH
5         +    norulelimit maxrules=1 maxsurrs=0;
6         + input
7         +   Population_in_thousands
NOTE: View EMWS2.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
8         + / level=INTERVAL  ;
9         + target Cases_in_1000s / level=interval;
10        +  Performance Disk NodeSize=10000;
11        + assess validata=EMWS2.Impt_VALIDATE;
NOTE: 1467365 kilobytes of physical memory.
NOTE: Will use 743 out of 750 training cases.
NOTE: Using memory pool with 10322944 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 51744 bytes of work memory.
NOTE: There were 563 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 5 nodes and 4 leaves.
NOTE: Using subtree with 5 nodes and 4 leaves.
12        +  subtree best;
NOTE: Using subtree with 5 nodes and 4 leaves.
13        +  save RULES=WORK.OPTBIN_RULES;
NOTE: The data set WORK.OPTBIN_RULES has 8 observations and 6 variables.
14        + run;


NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      

97192      data WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):   data WORK.OPTBIN_RULES;
97193      set WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):   set WORK.OPTBIN_RULES;
97194      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
97195      retain NAME '';
MPRINT(EM_DIAGRAM):   retain NAME '';
97196      by RANK;
MPRINT(EM_DIAGRAM):   by RANK;
97197      if first.RANK then NAME= CHARACTER_VALUE;
MPRINT(EM_DIAGRAM):   if first.RANK then NAME= CHARACTER_VALUE;
97198      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 8 observations read from the data set WORK.OPTBIN_RULES.
NOTE: The data set WORK.OPTBIN_RULES has 8 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97199      proc sort data=WORK.OPTBIN_RULES;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.OPTBIN_RULES;
97200      where STAT in('INTERVAL', 'MISSING');
MPRINT(EM_DIAGRAM):   where STAT in('INTERVAL', 'MISSING');
97201      by NAME NUMERIC_VALUE;
MPRINT(EM_DIAGRAM):   by NAME NUMERIC_VALUE;
97202      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.OPTBIN_RULES.
      WHERE STAT in ('INTERVAL', 'MISSING');
NOTE: The data set WORK.OPTBIN_RULES has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97203      data work.TEMPBESTTRAIN / view=work.TEMPBESTTRAIN;
MPRINT(EM_DIAGRAM):    data work.TEMPBESTTRAIN / view=work.TEMPBESTTRAIN;
97204      set EMWS2.Impt_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN;
97205      %inc #LN01312;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , log10(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LG10_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label LG10_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length LG10_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then LG10_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if Population_in_thousands + 1 > 0 then LG10_Population_in_thousands = log10(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else LG10_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , log(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label LOG_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label LOG_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length LOG_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then LOG_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if Population_in_thousands + 1 > 0 then LOG_Population_in_thousands = log(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else LOG_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Sqrt(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label SQRT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label SQRT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length SQRT_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then SQRT_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if Population_in_thousands + 1 >= 0 then SQRT_Population_in_thousands = Sqrt(Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else SQRT_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , 1 / (Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label INV_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label INV_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length INV_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then INV_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else if Population_in_thousands + 1 ne 0 then INV_Population_in_thousands = 1 / (Population_in_thousands + 1);
MPRINT(EM_DIAGRAM):   else INV_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands + 1)**2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label SQR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label SQR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length SQR_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then SQR_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   SQR_Population_in_thousands = (Population_in_thousands + 1)**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , exp(Population_in_thousands / 849.7334);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label EXP_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label EXP_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length EXP_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then EXP_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   EXP_Population_in_thousands = exp(Population_in_thousands / 849.7334);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands - 31340.913136) / 23393.332986;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label STD_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label STD_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length STD_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then STD_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else STD_Population_in_thousands = (Population_in_thousands - 31340.913136) / 23393.332986;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands - 852) / (84973.34-852);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label RANGE_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label RANGE_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length RANGE_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then RANGE_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else RANGE_Population_in_thousands = (Population_in_thousands - 852) / (84973.34-852);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , (Population_in_thousands - 31340.913136);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label CNTR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label CNTR_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length CNTR_Population_in_thousands 8;
MPRINT(EM_DIAGRAM):   if Population_in_thousands eq . then CNTR_Population_in_thousands = .;
MPRINT(EM_DIAGRAM):   else CNTR_Population_in_thousands = (Population_in_thousands - 31340.913136);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
97311      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file WORK.TEMPBESTTRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

97312      data WORK.BESTMAPPING;
MPRINT(EM_DIAGRAM):   data WORK.BESTMAPPING;
97313      length VAR $32 NEWVAR $32 FORMULA $80;
MPRINT(EM_DIAGRAM):   length VAR $32 NEWVAR $32 FORMULA $80;
97314      label VAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_originalvar_vlabel, NOQUOTE))" NEWVAR = "%sysfunc(sasmsg(sashelp.dmine, rpt_computedvar_vlabel, NOQUOTE))" FORMULA = "%sysfunc(sasmsg(sashelp.dmine, rpt_formula_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VAR = "Original Variable" NEWVAR = "Computed Variable" FORMULA = "Formula";
97315      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97316      NEWVAR="Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="Population_in_thousands";
97317      FORMULA="";
MPRINT(EM_DIAGRAM):   FORMULA="";
97318      output;
MPRINT(EM_DIAGRAM):   output;
97319      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97320      NEWVAR="LG10_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="LG10_Population_in_thousands";
97321      FORMULA="log10(Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="log10(Population_in_thousands  + 1)";
97322      output;
MPRINT(EM_DIAGRAM):   output;
97323      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97324      NEWVAR="LOG_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="LOG_Population_in_thousands";
97325      FORMULA="log(Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="log(Population_in_thousands  + 1)";
97326      output;
MPRINT(EM_DIAGRAM):   output;
97327      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97328      NEWVAR="SQRT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="SQRT_Population_in_thousands";
97329      FORMULA="Sqrt(Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="Sqrt(Population_in_thousands  + 1)";
97330      output;
MPRINT(EM_DIAGRAM):   output;
97331      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97332      NEWVAR="INV_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="INV_Population_in_thousands";
97333      FORMULA="1 / (Population_in_thousands  + 1)";
MPRINT(EM_DIAGRAM):   FORMULA="1 / (Population_in_thousands  + 1)";
97334      output;
MPRINT(EM_DIAGRAM):   output;
97335      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97336      NEWVAR="SQR_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="SQR_Population_in_thousands";
97337      FORMULA="(Population_in_thousands  + 1)**2";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands  + 1)**2";
97338      output;
MPRINT(EM_DIAGRAM):   output;
97339      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97340      NEWVAR="EXP_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="EXP_Population_in_thousands";
97341      FORMULA="exp(Population_in_thousands  / 849.7334)";
MPRINT(EM_DIAGRAM):   FORMULA="exp(Population_in_thousands  / 849.7334)";
97342      output;
MPRINT(EM_DIAGRAM):   output;
97343      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97344      NEWVAR="STD_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="STD_Population_in_thousands";
97345      FORMULA="(Population_in_thousands - 31340.913136) / 23393.332986";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands - 31340.913136) / 23393.332986";
97346      output;
MPRINT(EM_DIAGRAM):   output;
97347      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97348      NEWVAR="RANGE_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="RANGE_Population_in_thousands";
97349      FORMULA="(Population_in_thousands - 852) / (84973.34-852)";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands - 852) / (84973.34-852)";
97350      output;
MPRINT(EM_DIAGRAM):   output;
97351      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97352      NEWVAR="CNTR_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="CNTR_Population_in_thousands";
97353      FORMULA="(Population_in_thousands - 31340.913136)";
MPRINT(EM_DIAGRAM):   FORMULA="(Population_in_thousands - 31340.913136)";
97354      output;
MPRINT(EM_DIAGRAM):   output;
97355      VAR= "Population_in_thousands";
MPRINT(EM_DIAGRAM):   VAR= "Population_in_thousands";
97356      NEWVAR="OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR="OPT_Population_in_thousands";
97357      FORMULA="Optimal Binning(4)";
MPRINT(EM_DIAGRAM):   FORMULA="Optimal Binning(4)";
97358      output;
MPRINT(EM_DIAGRAM):   output;
97359      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.BESTMAPPING has 11 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

97360      proc dmdb data=work.TEMPBESTTRAIN dmdbcat=EM_DMDB out=EM_DMDB MAXLEVEL=32;
MPRINT(EM_DIAGRAM):   proc dmdb data=work.TEMPBESTTRAIN dmdbcat=EM_DMDB out=EM_DMDB MAXLEVEL=32;
97361      var
97362      Population_in_thousands
97363      LG10_Population_in_thousands
97364      LOG_Population_in_thousands
97365      SQRT_Population_in_thousands
97366      INV_Population_in_thousands
97367      SQR_Population_in_thousands
97368      EXP_Population_in_thousands
97369      STD_Population_in_thousands
97370      RANGE_Population_in_thousands
97371      CNTR_Population_in_thousands
97372      Cases_in_1000s
97373      ;
MPRINT(EM_DIAGRAM):   var Population_in_thousands LG10_Population_in_thousands LOG_Population_in_thousands SQRT_Population_in_thousands INV_Population_in_thousands SQR_Population_in_thousands EXP_Population_in_thousands STD_Population_in_thousands 
RANGE_Population_in_thousands CNTR_Population_in_thousands Cases_in_1000s ;
97374      class
97375      OPT_Population_in_thousands
97376      ;
MPRINT(EM_DIAGRAM):   class OPT_Population_in_thousands ;
97377      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Records processed = 750   Memory used = 511K.
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: View WORK.TEMPBESTTRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: There were 750 observations read from the data set WORK.TEMPBESTTRAIN.
NOTE: The data set WORK.EM_DMDB has 750 observations and 12 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

97378      proc dmine data=work.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER outrsquare=EMWS2.Trans_RSQUARE NOMONITOR PSHORT NOPRINT;
MPRINT(EM_DIAGRAM):    proc dmine data=work.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER outrsquare=EMWS2.Trans_RSQUARE NOMONITOR PSHORT NOPRINT;
97379      var
97380      Population_in_thousands
97381      LG10_Population_in_thousands
97382      LOG_Population_in_thousands
97383      SQRT_Population_in_thousands
97384      INV_Population_in_thousands
97385      SQR_Population_in_thousands
97386      EXP_Population_in_thousands
97387      STD_Population_in_thousands
97388      RANGE_Population_in_thousands
97389      CNTR_Population_in_thousands
97390      OPT_Population_in_thousands
97391      ;
MPRINT(EM_DIAGRAM):   var Population_in_thousands LG10_Population_in_thousands LOG_Population_in_thousands SQRT_Population_in_thousands INV_Population_in_thousands SQR_Population_in_thousands EXP_Population_in_thousands STD_Population_in_thousands 
RANGE_Population_in_thousands CNTR_Population_in_thousands OPT_Population_in_thousands ;
97392      target Cases_in_1000s;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s;
97393      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Checking database engine with sqluse...

Initial pass to compute R2s for all targets
750 records read
NOTE: The full X'X matrix has 9 rows and columns.

Building X'X  for target: Cases_in_1000s rows=10 memory=0.00 meg.
750 records read
NOTE: There were 750 observations read from the data set WORK.EM_DMDB.
NOTE: The data set EMWS2.TRANS_RSQUARE has 21 observations and 4 variables.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97394      proc sort data=EMWS2.Trans_RSQUARE(where=(type in ('VAR', 'CLASS')) rename=(Effect=NEWVAR));
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Trans_RSQUARE(where=(type in ('VAR', 'CLASS')) rename=(Effect=NEWVAR));
97395      by NEWVAR;
MPRINT(EM_DIAGRAM):   by NEWVAR;
97396      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
      WHERE type in ('CLASS', 'VAR');
NOTE: The data set EMWS2.TRANS_RSQUARE has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97397      proc sort data=WORK.BESTMAPPING;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.BESTMAPPING;
97398      by NEWVAR;
MPRINT(EM_DIAGRAM):   by NEWVAR;
97399      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.BESTMAPPING.
NOTE: The data set WORK.BESTMAPPING has 11 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97400      data EMWS2.Trans_RSQUARE;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_RSQUARE;
97401      merge WORK.BESTMAPPING(in=_a)EMWS2.Trans_RSQUARE(drop=df type);
MPRINT(EM_DIAGRAM):   merge WORK.BESTMAPPING(in=_a)EMWS2.Trans_RSQUARE(drop=df type);
97402      by NEWVAR;
MPRINT(EM_DIAGRAM):   by NEWVAR;
97403      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
97404      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set WORK.BESTMAPPING.
NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
NOTE: The data set EMWS2.TRANS_RSQUARE has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97405      proc sort data=EMWS2.Trans_RSQUARE;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_RSQUARE;
97406      by VAR descending RSQUARE;
MPRINT(EM_DIAGRAM):   by VAR descending RSQUARE;
97407      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
NOTE: The data set EMWS2.TRANS_RSQUARE has 11 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

97408      data WORK.BESTMAPPING(rename=(bestvar=newvar bestr2=rsquare bestformula=formula));
MPRINT(EM_DIAGRAM):   data WORK.BESTMAPPING(rename=(bestvar=newvar bestr2=rsquare bestformula=formula));
97409      retain bestvar bestr2 bestformula;
MPRINT(EM_DIAGRAM):   retain bestvar bestr2 bestformula;
97410      set EMWS2.Trans_RSQUARE;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_RSQUARE;
97411      by VAR;
MPRINT(EM_DIAGRAM):   by VAR;
97412      if first.VAR then do;
MPRINT(EM_DIAGRAM):   if first.VAR then do;
97413      bestr2 = rsquare;
MPRINT(EM_DIAGRAM):   bestr2 = rsquare;
97414      bestvar = newvar;
MPRINT(EM_DIAGRAM):   bestvar = newvar;
97415      bestformula = formula;
MPRINT(EM_DIAGRAM):   bestformula = formula;
97416      end;
MPRINT(EM_DIAGRAM):   end;
97417      else do;
MPRINT(EM_DIAGRAM):   else do;
97418      if abs(rsquare-bestr2)<10**-8 and formula='' then do;
MPRINT(EM_DIAGRAM):   if abs(rsquare-bestr2)<10**-8 and formula='' then do;
97419      bestvar = var;
MPRINT(EM_DIAGRAM):   bestvar = var;
97420      bestformula = formula;
MPRINT(EM_DIAGRAM):   bestformula = formula;
97421      end;
MPRINT(EM_DIAGRAM):   end;
97422      if last.var then output;
MPRINT(EM_DIAGRAM):   if last.var then output;
97423      end;
MPRINT(EM_DIAGRAM):   end;
97424      keep var bestvar bestr2 bestformula;
MPRINT(EM_DIAGRAM):   keep var bestvar bestr2 bestformula;
97425      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 11 observations read from the data set EMWS2.TRANS_RSQUARE.
NOTE: The data set WORK.BESTMAPPING has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------* 
*  Trans: Equalize transformation requires a class target variable.  Transformation will be ignored. 
*------------------------------------------------------------* 
*------------------------------------------------------------* 
*  Trans: Optimize equalize max. transformation requires a class target variable.  Transformation will be ignored. 
*------------------------------------------------------------* 
NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.83 seconds
      cpu time            0.71 seconds
      
*------------------------------------------------------------* 
*  Trans: Creating EMWS2.Trans_RESULT 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    data EMWS2.Trans_RESULT;
MPRINT(EM_DIAGRAM):   length NAME NEWVAR $32 LEVEL $10 POWER 8 FORMULA $70 LABEL $44 TERM $200;
MPRINT(EM_DIAGRAM):   NAME = "Population_in_thousands";
MPRINT(EM_DIAGRAM):   NEWVAR = "OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   POWER = .;
MPRINT(EM_DIAGRAM):   FORMULA = "Optimal Binning(4)";
MPRINT(EM_DIAGRAM):   LABEL = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   TYPE = "C";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_RESULT NOTHREADS;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M368Q821 out=WORK._TRANSRESLT(RENAME=(LEVEL=INPUTLEVEL TYPE=INPUTTYPE) KEEP=NAME ROLE LEVEL TYPE) NOTHREADS;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_RESULT(RENAME=(NAME=INPUTNAME NEWVAR=NAME));
MPRINT(EM_DIAGRAM):   merge EMWS2.Trans_RESULT(in=a) WORK._TRANSRESLT;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if a then output;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):   modify Trans_RESULT;
MPRINT(EM_DIAGRAM):   label INPUTNAME = "Input Name" NAME = "Output Name" POWER = "Power" FORMULA = "Formula" ROLE = "rpt_role_vlabel" INPUTLEVEL = "Input Level" LEVEL = "Output Level" INPUTTYPE = "Input Type" TYPE = "Output Type";
MPRINT(EM_DIAGRAM):   run;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

97454      data EMWS2.Trans_RESULT;
MPRINT(EM_DIAGRAM):   data EMWS2.Trans_RESULT;
97455      length NAME $32 FORMULA $70 POWER 8 ROLE $32 LEVEL $10 INPUTNAME $32 INPUTTYPE $1 LABEL $44;
MPRINT(EM_DIAGRAM):   length NAME $32 FORMULA $70 POWER 8 ROLE $32 LEVEL $10 INPUTNAME $32 INPUTTYPE $1 LABEL $44;
97456      label INPUTNAME ='Input Name' NAME='Name' POWER='Power' FORMULA='Formula' ROLE='Role' INPUTLEVEL='Input Level' LEVEL='Level' INPUTTYPE='Input Type' TYPE='Type';
MPRINT(EM_DIAGRAM):   label INPUTNAME = 'Input Name' NAME= 'Name' POWER= 'Power' FORMULA= 'Formula' ROLE= 'Role' INPUTLEVEL= 'Input Level' LEVEL= 'Level' INPUTTYPE= 'Input Type' TYPE= 'Type';
97457      set EMWS2.Trans_RESULT;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_RESULT;
97458      if INPUTNAME = '' then INPUTNAME = "Mixture of variables";
MPRINT(EM_DIAGRAM):   if INPUTNAME = '' then INPUTNAME = "Mixture of variables";
97459      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS2.TRANS_RESULT.
NOTE: The data set EMWS2.TRANS_RESULT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97460      data WORK.M0QKG48A;
MPRINT(EM_DIAGRAM):    data WORK.M0QKG48A;
97461      set WORK.M0QKG48A;
MPRINT(EM_DIAGRAM):   set WORK.M0QKG48A;
97462      if ROLE='REJECTED' then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   if ROLE='REJECTED' then ROLE='INPUT';
97463      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.M0QKG48A.
NOTE: The data set WORK.M0QKG48A has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------* 
*  Trans: Computing summary statistics for transformed variables 
*------------------------------------------------------------* 
MPRINT(EM_DIAGRAM):    data WORK.Trans_TRANSFORM / view=WORK.Trans_TRANSFORM;
MPRINT(EM_DIAGRAM):   set EMWS2.Impt_TRAIN;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * TRANSFORM: Population_in_thousands , Optimal Binning(4);
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   label OPT_Population_in_thousands = 'Transformed Population_in_thousands';
MPRINT(EM_DIAGRAM):   length OPT_Population_in_thousands $36;
MPRINT(EM_DIAGRAM):   if (Population_in_thousands eq .) then OPT_Population_in_thousands="04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands < 16090.6415) then OPT_Population_in_thousands = "01:low-16090.642";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 16090.6415 and Population_in_thousands < 28948.373) then OPT_Population_in_thousands = "02:16090.642-28948.373";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 28948.373 and Population_in_thousands < 35431.169) then OPT_Population_in_thousands = "03:28948.373-35431.169";
MPRINT(EM_DIAGRAM):   else if (Population_in_thousands >= 35431.169) then OPT_Population_in_thousands = "04:35431.169-high, MISSING";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.Trans_TRANSFORM dmdbcat=WORK.EM_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   OPT_Population_in_thousands(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
MPRINT(EM_DIAGRAM):    data WORK.Trans_TEMP;
MPRINT(EM_DIAGRAM):   length SOURCE $6 NAME $32;
MPRINT(EM_DIAGRAM):   label SOURCE = "Source" NAME = "Variable Name" NLEVEL = "Number of Levels" NMISS = "Missing" MIN = "Minimum" MAX = "Maximum" MEAN = "Mean" STD = "Standard Deviation" SKEWNESS = "Skewness" KURTOSIS = "Kurtosis";
MPRINT(EM_DIAGRAM):   SOURCE = "OUTPUT";
MPRINT(EM_DIAGRAM):   NAME = "OPT_Population_in_thousands";
MPRINT(EM_DIAGRAM):   NMISS = 0;
MPRINT(EM_DIAGRAM):   NLEVEL = 4 - (nmiss>0);
MPRINT(EM_DIAGRAM):   MIN = .;
MPRINT(EM_DIAGRAM):   MAX = .;
MPRINT(EM_DIAGRAM):   MEAN = .;
MPRINT(EM_DIAGRAM):   STD = .;
MPRINT(EM_DIAGRAM):   SKEWNESS = .;
MPRINT(EM_DIAGRAM):   KURTOSIS = .;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
97526      data WORK.TRANSFOR_2VN6VY6_STATISTIC;
MPRINT(EM_DIAGRAM):    data WORK.TRANSFOR_2VN6VY6_STATISTIC;
97527      set WORK.Trans_TEMP;
MPRINT(EM_DIAGRAM):   set WORK.Trans_TEMP;
97528      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.TRANS_TEMP.
NOTE: The data set WORK.TRANSFOR_2VN6VY6_STATISTIC has 1 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97529      %exploreSample(DATA=EMWS2.Impt_TRAIN, OUTPUT=EMWS2.Trans_SAMPLE_DATA, METADATA=EMWS2.Impt_CMeta_TRAIN, VARS=, METHOD=FIRSTN, SIZE=DEFAULT, ALPHA=0.01, PVALUE=0.01, SEED=12345);
MPRINT(EM_DIAGRAM):   
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
NOTE: EXPLOREOBS EMWS2.Impt_TRAIN : vars= 7 : recl= 95 : max=60000 : def= 6000
MPRINT(EXPLORESAMPLE):   ;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
*------------------------------------------------------------*
* FirstN/Top sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   data EMWS2.Trans_SAMPLE_DATA;
MPRINT(EXPLORESAMPLE):   set EMWS2.Impt_TRAIN(obs= 6000 );
MPRINT(EXPLORESAMPLE):   run;

NOTE: View EMWS2.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: The data set EMWS2.TRANS_SAMPLE_DATA has 750 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):  ;

97706      proc print data = EMWS2.Trans_RESULT(obs=500) noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS2.Trans_RESULT(obs=500) noobs label;
97707      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_computedtransformations_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Computed Transformations";
97708      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   var INPUTNAME ROLE INPUTLEVEL NAME LEVEL FORMULA;
MPRINT(EM_DIAGRAM):   run;
97709      var INPUTNAME ROLE INPUTLEVEL NAME LEVEL FORMULA;
97710      run;

NOTE: There were 1 observations read from the data set EMWS2.TRANS_RESULT.
NOTE: The PROCEDURE PRINT printed page 30.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

97711      title9;
MPRINT(EM_DIAGRAM):   title9;
97712      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
