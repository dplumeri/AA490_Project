MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:42" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 09, 2019
Time:                16:19:42
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0FW0872 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0FW0872 new;
MPRINT(EM_DIAGRAM):   run;
203147     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
203148     set EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_OUTKEY;
203149     if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
203150     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 21 observations read from the data set EMWS2.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

203151     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203152     *------------------------------------------------------------*;
203153     * Neural: Scoring DATA data;
203154     *------------------------------------------------------------*;
203155     data EMWS2.Neural_TRAIN
203156     / view=EMWS2.Neural_TRAIN
203157     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TRAIN / view=EMWS2.Neural_TRAIN ;
203158     set EMWS2.Part_TRAIN
203159     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN ;
203160     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
203161    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203162    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203163    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203164    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203165    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203166    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203167    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203168    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203169    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203170    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203171    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203172    +LENGTH _WARN_ $4
203173    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
203174    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
203175    +
203176    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
203177    +
203178    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
203179    +
203180    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
203181    +
203182    +      label Age_group45_64 = 'Dummy: Age_group=45-64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_64 = 'Dummy: Age_group=45-64' ;
203183    +
203184    +      label Age_group65_84 = 'Dummy: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Age_group65_84 = 'Dummy: Age_group=65-84' ;
203185    +
203186    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
203187    +
203188    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
203189    +
203190    +      label DiseaseDementia_and_Alzheimer_ =
203191    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
203192    +
203193    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
203194    +
203195    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
203196    +
203197    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
203198    +
203199    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203200    +
203201    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203202    +
203203    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203204    +
203205    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203206    +
203207    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203208    +
203209    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
203210    +
203211    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
203212    +
203213    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203214    +
203215    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
203216    +drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84
203217    +         ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84 ;
203218    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203219    +Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
203220    +Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
203221    +Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
203222    +Age_group45_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 0;
203223    +Age_group65_84 = 0;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0;
203224    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
203225    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203226    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203227    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203228    +   Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203229    +   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203232    +end;
MPRINT(EM_DIAGRAM):   end;
203233    +else do;
MPRINT(EM_DIAGRAM):   else do;
203234    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
203235    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203236    +   if _dm19 = '65-84'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '65-84' then do;
203237    +      Age_group65_84 = 1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 1;
203238    +   end;
MPRINT(EM_DIAGRAM):   end;
203239    +   else if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
203240    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
203241    +   end;
MPRINT(EM_DIAGRAM):   end;
203242    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
203243    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
203244    +   end;
MPRINT(EM_DIAGRAM):   end;
203245    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
203246    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
203247    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
203248    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
203249    +      Age_group45_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = -1;
203250    +      Age_group65_84 = -1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -1;
203251    +   end;
MPRINT(EM_DIAGRAM):   end;
203252    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
203253    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
203254    +   end;
MPRINT(EM_DIAGRAM):   end;
203255    +   else if _dm19 = '45-64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
203256    +      Age_group45_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 1;
203257    +   end;
MPRINT(EM_DIAGRAM):   end;
203258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203259    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203260    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203261    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203262    +      Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203263    +      Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203266    +   end;
MPRINT(EM_DIAGRAM):   end;
203267    +end;
MPRINT(EM_DIAGRAM):   end;
203268    +
203269    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
203270    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
203271    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
203272    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203273    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
203274    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
203275    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
203276    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
203277    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
203278    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203279    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203280    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203281    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203284    +end;
MPRINT(EM_DIAGRAM):   end;
203285    +else do;
MPRINT(EM_DIAGRAM):   else do;
203286    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
203287    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203288    +   if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'CANCER, ALL' then do;
203289    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
203290    +   end;
MPRINT(EM_DIAGRAM):   end;
203291    +   else if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
203292    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
203293    +   end;
MPRINT(EM_DIAGRAM):   end;
203294    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
203295    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
203296    +   end;
MPRINT(EM_DIAGRAM):   end;
203297    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
203298    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
203299    +   end;
MPRINT(EM_DIAGRAM):   end;
203300    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
203301    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
203302    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
203303    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
203304    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
203305    +   end;
MPRINT(EM_DIAGRAM):   end;
203306    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203307    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203308    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203309    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203310    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203313    +   end;
MPRINT(EM_DIAGRAM):   end;
203314    +end;
MPRINT(EM_DIAGRAM):   end;
203315    +
203316    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
203317    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
203318    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
203319    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203320    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203323    +end;
MPRINT(EM_DIAGRAM):   end;
203324    +else do;
MPRINT(EM_DIAGRAM):   else do;
203325    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
203326    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
203327    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203328    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
203329    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
203330    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
203331    +   end;
MPRINT(EM_DIAGRAM):   end;
203332    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
203333    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
203334    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
203335    +   end;
MPRINT(EM_DIAGRAM):   end;
203336    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
203337    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
203338    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
203339    +   end;
MPRINT(EM_DIAGRAM):   end;
203340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203341    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203342    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203343    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203344    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203345    +   end;
MPRINT(EM_DIAGRAM):   end;
203346    +end;
MPRINT(EM_DIAGRAM):   end;
203347    +
203348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203349    +*** Checking missing input Interval
203350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
203351    +
203352    +IF NMISS(
203353    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
203354    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
203355    +
203356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203357    +END;
MPRINT(EM_DIAGRAM):   END;
203358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203359    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
203360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203361    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203362    +   S_Population_in_thousands  =    -1.33973697356729 +     0.00004274722206 *
203363    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203364    +END;
MPRINT(EM_DIAGRAM):   END;
203365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203366    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
203367    +   ELSE S_Population_in_thousands
203368    +          =    -1.33973697356729 +     0.00004274722206 *
203369    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203370    +END;
MPRINT(EM_DIAGRAM):   END;
203371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203372    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
203373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203375    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
203376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203377    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203378    +   H11  =     1.35434005089982 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = 1.35434005089982 * S_Population_in_thousands ;
203379    +   H12  =    -5.86736639290222 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = -5.86736639290222 * S_Population_in_thousands ;
203380    +   H13  =     1.74534286115132 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 1.74534286115132 * S_Population_in_thousands ;
203381    +   H14  =     -1.7416965772114 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -1.7416965772114 * S_Population_in_thousands ;
203382    +   H15  =     0.32029026736697 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 0.32029026736697 * S_Population_in_thousands ;
203383    +   H11  = H11  +     1.71448870576879 * Age_group0_17
203384    +          +     1.77698251167841 * Age_group18_24  +     1.03025379631606 *
203385    +        Age_group25_44  +     -2.7956731934031 * Age_group45_64
203386    +          +    -1.03005728244483 * Age_group65_84  +    -0.94281877271546 *
203387    +        DiseaseAsthma  +      2.2147481918044 * DiseaseCancer__all
203388    +          +    -1.69110565485991 * DiseaseDementia_and_Alzheimer_
203389    +          +     1.35070603998304 * DiseaseOsteoarthritis
203390    +          +    -0.20138646157356 * GenderAll  +    -0.33007295308219 *
203391    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.71448870576879 * Age_group0_17 + 1.77698251167841 * Age_group18_24 + 1.03025379631606 * Age_group25_44 + -2.7956731934031 * Age_group45_64 + -1.03005728244483 * Age_group65_84 + -0.94281877271546 * DiseaseAsthma + 
2.2147481918044 * DiseaseCancer__all + -1.69110565485991 * DiseaseDementia_and_Alzheimer_ + 1.35070603998304 * DiseaseOsteoarthritis + -0.20138646157356 * GenderAll + -0.33007295308219 * GenderFemale ;
203392    +   H12  = H12  +    -0.49834529725908 * Age_group0_17
203393    +          +     6.65737966257656 * Age_group18_24  +     0.02166950755446 *
203394    +        Age_group25_44  +    -0.30406002314189 * Age_group45_64
203395    +          +    -0.19967481942436 * Age_group65_84  +     2.48663287133045 *
203396    +        DiseaseAsthma  +    -4.17996212144142 * DiseaseCancer__all
203397    +          +     7.87749987799108 * DiseaseDementia_and_Alzheimer_
203398    +          +    -3.48018763761733 * DiseaseOsteoarthritis
203399    +          +    -0.74940371145971 * GenderAll  +     1.76509155400586 *
203400    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.49834529725908 * Age_group0_17 + 6.65737966257656 * Age_group18_24 + 0.02166950755446 * Age_group25_44 + -0.30406002314189 * Age_group45_64 + -0.19967481942436 * Age_group65_84 + 2.48663287133045 * DiseaseAsthma + 
-4.17996212144142 * DiseaseCancer__all + 7.87749987799108 * DiseaseDementia_and_Alzheimer_ + -3.48018763761733 * DiseaseOsteoarthritis + -0.74940371145971 * GenderAll + 1.76509155400586 * GenderFemale ;
203401    +   H13  = H13  +     1.77452647934571 * Age_group0_17
203402    +          +     1.30242349489465 * Age_group18_24  +     4.75511761734959 *
203403    +        Age_group25_44  +    -5.04989377605042 * Age_group45_64
203404    +          +    -14.6022849415037 * Age_group65_84  +     -0.5937322268467 *
203405    +        DiseaseAsthma  +     3.59429329496977 * DiseaseCancer__all
203406    +          +    -1.42393776965241 * DiseaseDementia_and_Alzheimer_
203407    +          +     -1.1581922307743 * DiseaseOsteoarthritis
203408    +          +     0.22970325988741 * GenderAll  +     0.16544413491246 *
203409    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.77452647934571 * Age_group0_17 + 1.30242349489465 * Age_group18_24 + 4.75511761734959 * Age_group25_44 + -5.04989377605042 * Age_group45_64 + -14.6022849415037 * Age_group65_84 + -0.5937322268467 * DiseaseAsthma + 
3.59429329496977 * DiseaseCancer__all + -1.42393776965241 * DiseaseDementia_and_Alzheimer_ + -1.1581922307743 * DiseaseOsteoarthritis + 0.22970325988741 * GenderAll + 0.16544413491246 * GenderFemale ;
203410    +   H14  = H14  +    -3.17942072873073 * Age_group0_17
203411    +          +    -3.71080374659487 * Age_group18_24  +    -2.41487691740168 *
203412    +        Age_group25_44  +     5.87238706134944 * Age_group45_64
203413    +          +     7.12807887019481 * Age_group65_84  +     4.95030154622387 *
203414    +        DiseaseAsthma  +    -3.98563182695072 * DiseaseCancer__all
203415    +          +     1.65479145935008 * DiseaseDementia_and_Alzheimer_
203416    +          +    -1.84356548332388 * DiseaseOsteoarthritis
203417    +          +     0.02515372327161 * GenderAll  +     0.14248788307797 *
203418    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.17942072873073 * Age_group0_17 + -3.71080374659487 * Age_group18_24 + -2.41487691740168 * Age_group25_44 + 5.87238706134944 * Age_group45_64 + 7.12807887019481 * Age_group65_84 + 4.95030154622387 * DiseaseAsthma + 
-3.98563182695072 * DiseaseCancer__all + 1.65479145935008 * DiseaseDementia_and_Alzheimer_ + -1.84356548332388 * DiseaseOsteoarthritis + 0.02515372327161 * GenderAll + 0.14248788307797 * GenderFemale ;
203419    +   H15  = H15  +    -2.65499345189966 * Age_group0_17
203420    +          +    -2.52386407007236 * Age_group18_24  +    -0.08789214446679 *
203421    +        Age_group25_44  +     1.33690548242373 * Age_group45_64
203422    +          +     3.35753315084801 * Age_group65_84  +    -2.54327090277794 *
203423    +        DiseaseAsthma  +     3.22645343642654 * DiseaseCancer__all
203424    +          +     -1.7342325341365 * DiseaseDementia_and_Alzheimer_
203425    +          +     1.62294449342552 * DiseaseOsteoarthritis
203426    +          +     0.50944932247803 * GenderAll  +     1.16624523024671 *
203427    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -2.65499345189966 * Age_group0_17 + -2.52386407007236 * Age_group18_24 + -0.08789214446679 * Age_group25_44 + 1.33690548242373 * Age_group45_64 + 3.35753315084801 * Age_group65_84 + -2.54327090277794 * DiseaseAsthma + 
3.22645343642654 * DiseaseCancer__all + -1.7342325341365 * DiseaseDementia_and_Alzheimer_ + 1.62294449342552 * DiseaseOsteoarthritis + 0.50944932247803 * GenderAll + 1.16624523024671 * GenderFemale ;
203428    +   H11  =    -0.16328527582879 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16328527582879 + H11 ;
203429    +   H12  =     3.43706584749845 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.43706584749845 + H12 ;
203430    +   H13  =    -3.84967331225192 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.84967331225192 + H13 ;
203431    +   H14  =     3.88592449819665 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.88592449819665 + H14 ;
203432    +   H15  =    -4.58028929812927 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.58028929812927 + H15 ;
203433    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
203434    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
203435    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
203436    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
203437    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
203438    +END;
MPRINT(EM_DIAGRAM):   END;
203439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203440    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
203441    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
203442    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
203443    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
203444    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
203445    +END;
MPRINT(EM_DIAGRAM):   END;
203446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203447    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
203448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203449    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203450    +   P_Cases_in_1000s  =     67.4104297195872 * H11  +    -35.8921323485021 *
203451    +        H12  +    -24.7752792694521 * H13  +     81.8360046551309 * H14
203452    +          +     66.7196227687357 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 67.4104297195872 * H11 + -35.8921323485021 * H12 + -24.7752792694521 * H13 + 81.8360046551309 * H14 + 66.7196227687357 * H15 ;
203453    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -8.68845221932159 *
203454    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -8.68845221932159 * S_Population_in_thousands ;
203455    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -42.2746060828309 *
203456    +        Age_group0_17  +     -47.143646201442 * Age_group18_24
203457    +          +    -36.7791443787182 * Age_group25_44  +      11.462692663179 *
203458    +        Age_group45_64  +      58.824895833719 * Age_group65_84
203459    +          +    -29.7087244942384 * DiseaseAsthma  +     65.9700972408222 *
203460    +        DiseaseCancer__all  +    -33.3466634179848 *
203461    +        DiseaseDementia_and_Alzheimer_  +     0.84531108399158 *
203462    +        DiseaseOsteoarthritis  +     30.4656747943978 * GenderAll
203463    +          +    -8.25358426398541 * GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -42.2746060828309 * Age_group0_17 + -47.143646201442 * Age_group18_24 + -36.7791443787182 * Age_group25_44 + 11.462692663179 * Age_group45_64 + 58.824895833719 * Age_group65_84 + 
-29.7087244942384 * DiseaseAsthma + 65.9700972408222 * DiseaseCancer__all + -33.3466634179848 * DiseaseDementia_and_Alzheimer_ + 0.84531108399158 * DiseaseOsteoarthritis + 30.4656747943978 * GenderAll + -8.25358426398541 * GenderFemale ;
203464    +   P_Cases_in_1000s  =      96.558824557025 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 96.558824557025 + P_Cases_in_1000s ;
203465    +END;
MPRINT(EM_DIAGRAM):   END;
203466    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203467    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
203468    +END;
MPRINT(EM_DIAGRAM):   END;
203469    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
203470    +   P_Cases_in_1000s  =     71.1668909825033;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 71.1668909825033;
203471    +END;
MPRINT(EM_DIAGRAM):   END;
203472    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
203473    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
203474    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
203475    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
203476    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
203477    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203478    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
203479    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203480    +drop
203481    +S_Population_in_thousands
203482    +H11
203483    +H12
203484    +H13
203485    +H14
203486    +H15
203487    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
203488     run;

NOTE: DATA STEP view saved on file EMWS2.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
203489     quit;
203490     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
203491     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203492     *------------------------------------------------------------*;
203493     * Neural: Scoring VALIDATE data;
203494     *------------------------------------------------------------*;
203495     data EMWS2.Neural_VALIDATE
203496     / view=EMWS2.Neural_VALIDATE
203497     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_VALIDATE / view=EMWS2.Neural_VALIDATE ;
203498     set EMWS2.Part_VALIDATE
203499     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_VALIDATE ;
203500     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
203501    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203502    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203503    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203504    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203505    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203506    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203507    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203508    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203509    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203510    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203511    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203512    +LENGTH _WARN_ $4
203513    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
203514    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
203515    +
203516    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
203517    +
203518    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
203519    +
203520    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
203521    +
203522    +      label Age_group45_64 = 'Dummy: Age_group=45-64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_64 = 'Dummy: Age_group=45-64' ;
203523    +
203524    +      label Age_group65_84 = 'Dummy: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Age_group65_84 = 'Dummy: Age_group=65-84' ;
203525    +
203526    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
203527    +
203528    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
203529    +
203530    +      label DiseaseDementia_and_Alzheimer_ =
203531    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
203532    +
203533    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
203534    +
203535    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
203536    +
203537    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
203538    +
203539    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203540    +
203541    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203542    +
203543    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203544    +
203545    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203546    +
203547    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203548    +
203549    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
203550    +
203551    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
203552    +
203553    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203554    +
203555    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
203556    +drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84
203557    +         ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84 ;
203558    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203559    +Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
203560    +Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
203561    +Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
203562    +Age_group45_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 0;
203563    +Age_group65_84 = 0;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0;
203564    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
203565    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203566    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203567    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203568    +   Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203569    +   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203570    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203571    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203572    +end;
MPRINT(EM_DIAGRAM):   end;
203573    +else do;
MPRINT(EM_DIAGRAM):   else do;
203574    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
203575    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203576    +   if _dm19 = '65-84'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '65-84' then do;
203577    +      Age_group65_84 = 1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 1;
203578    +   end;
MPRINT(EM_DIAGRAM):   end;
203579    +   else if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
203580    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
203581    +   end;
MPRINT(EM_DIAGRAM):   end;
203582    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
203583    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
203584    +   end;
MPRINT(EM_DIAGRAM):   end;
203585    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
203586    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
203587    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
203588    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
203589    +      Age_group45_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = -1;
203590    +      Age_group65_84 = -1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -1;
203591    +   end;
MPRINT(EM_DIAGRAM):   end;
203592    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
203593    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
203594    +   end;
MPRINT(EM_DIAGRAM):   end;
203595    +   else if _dm19 = '45-64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
203596    +      Age_group45_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 1;
203597    +   end;
MPRINT(EM_DIAGRAM):   end;
203598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203599    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203600    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203601    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203602    +      Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203603    +      Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203606    +   end;
MPRINT(EM_DIAGRAM):   end;
203607    +end;
MPRINT(EM_DIAGRAM):   end;
203608    +
203609    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
203610    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
203611    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
203612    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203613    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
203614    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
203615    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
203616    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
203617    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
203618    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203619    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203620    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203621    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203624    +end;
MPRINT(EM_DIAGRAM):   end;
203625    +else do;
MPRINT(EM_DIAGRAM):   else do;
203626    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
203627    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203628    +   if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'CANCER, ALL' then do;
203629    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
203630    +   end;
MPRINT(EM_DIAGRAM):   end;
203631    +   else if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
203632    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
203633    +   end;
MPRINT(EM_DIAGRAM):   end;
203634    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
203635    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
203636    +   end;
MPRINT(EM_DIAGRAM):   end;
203637    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
203638    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
203639    +   end;
MPRINT(EM_DIAGRAM):   end;
203640    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
203641    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
203642    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
203643    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
203644    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
203645    +   end;
MPRINT(EM_DIAGRAM):   end;
203646    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203647    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203648    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203649    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203650    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203653    +   end;
MPRINT(EM_DIAGRAM):   end;
203654    +end;
MPRINT(EM_DIAGRAM):   end;
203655    +
203656    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
203657    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
203658    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
203659    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203660    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203663    +end;
MPRINT(EM_DIAGRAM):   end;
203664    +else do;
MPRINT(EM_DIAGRAM):   else do;
203665    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
203666    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
203667    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203668    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
203669    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
203670    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
203671    +   end;
MPRINT(EM_DIAGRAM):   end;
203672    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
203673    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
203674    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
203675    +   end;
MPRINT(EM_DIAGRAM):   end;
203676    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
203677    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
203678    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
203679    +   end;
MPRINT(EM_DIAGRAM):   end;
203680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203681    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203682    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203685    +   end;
MPRINT(EM_DIAGRAM):   end;
203686    +end;
MPRINT(EM_DIAGRAM):   end;
203687    +
203688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203689    +*** Checking missing input Interval
203690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
203691    +
203692    +IF NMISS(
203693    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
203694    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
203695    +
203696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203697    +END;
MPRINT(EM_DIAGRAM):   END;
203698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203699    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
203700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203701    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203702    +   S_Population_in_thousands  =    -1.33973697356729 +     0.00004274722206 *
203703    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203704    +END;
MPRINT(EM_DIAGRAM):   END;
203705    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203706    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
203707    +   ELSE S_Population_in_thousands
203708    +          =    -1.33973697356729 +     0.00004274722206 *
203709    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203710    +END;
MPRINT(EM_DIAGRAM):   END;
203711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203712    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
203713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203715    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
203716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203717    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203718    +   H11  =     1.35434005089982 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = 1.35434005089982 * S_Population_in_thousands ;
203719    +   H12  =    -5.86736639290222 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = -5.86736639290222 * S_Population_in_thousands ;
203720    +   H13  =     1.74534286115132 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 1.74534286115132 * S_Population_in_thousands ;
203721    +   H14  =     -1.7416965772114 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -1.7416965772114 * S_Population_in_thousands ;
203722    +   H15  =     0.32029026736697 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 0.32029026736697 * S_Population_in_thousands ;
203723    +   H11  = H11  +     1.71448870576879 * Age_group0_17
203724    +          +     1.77698251167841 * Age_group18_24  +     1.03025379631606 *
203725    +        Age_group25_44  +     -2.7956731934031 * Age_group45_64
203726    +          +    -1.03005728244483 * Age_group65_84  +    -0.94281877271546 *
203727    +        DiseaseAsthma  +      2.2147481918044 * DiseaseCancer__all
203728    +          +    -1.69110565485991 * DiseaseDementia_and_Alzheimer_
203729    +          +     1.35070603998304 * DiseaseOsteoarthritis
203730    +          +    -0.20138646157356 * GenderAll  +    -0.33007295308219 *
203731    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.71448870576879 * Age_group0_17 + 1.77698251167841 * Age_group18_24 + 1.03025379631606 * Age_group25_44 + -2.7956731934031 * Age_group45_64 + -1.03005728244483 * Age_group65_84 + -0.94281877271546 * DiseaseAsthma + 
2.2147481918044 * DiseaseCancer__all + -1.69110565485991 * DiseaseDementia_and_Alzheimer_ + 1.35070603998304 * DiseaseOsteoarthritis + -0.20138646157356 * GenderAll + -0.33007295308219 * GenderFemale ;
203732    +   H12  = H12  +    -0.49834529725908 * Age_group0_17
203733    +          +     6.65737966257656 * Age_group18_24  +     0.02166950755446 *
203734    +        Age_group25_44  +    -0.30406002314189 * Age_group45_64
203735    +          +    -0.19967481942436 * Age_group65_84  +     2.48663287133045 *
203736    +        DiseaseAsthma  +    -4.17996212144142 * DiseaseCancer__all
203737    +          +     7.87749987799108 * DiseaseDementia_and_Alzheimer_
203738    +          +    -3.48018763761733 * DiseaseOsteoarthritis
203739    +          +    -0.74940371145971 * GenderAll  +     1.76509155400586 *
203740    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.49834529725908 * Age_group0_17 + 6.65737966257656 * Age_group18_24 + 0.02166950755446 * Age_group25_44 + -0.30406002314189 * Age_group45_64 + -0.19967481942436 * Age_group65_84 + 2.48663287133045 * DiseaseAsthma + 
-4.17996212144142 * DiseaseCancer__all + 7.87749987799108 * DiseaseDementia_and_Alzheimer_ + -3.48018763761733 * DiseaseOsteoarthritis + -0.74940371145971 * GenderAll + 1.76509155400586 * GenderFemale ;
203741    +   H13  = H13  +     1.77452647934571 * Age_group0_17
203742    +          +     1.30242349489465 * Age_group18_24  +     4.75511761734959 *
203743    +        Age_group25_44  +    -5.04989377605042 * Age_group45_64
203744    +          +    -14.6022849415037 * Age_group65_84  +     -0.5937322268467 *
203745    +        DiseaseAsthma  +     3.59429329496977 * DiseaseCancer__all
203746    +          +    -1.42393776965241 * DiseaseDementia_and_Alzheimer_
203747    +          +     -1.1581922307743 * DiseaseOsteoarthritis
203748    +          +     0.22970325988741 * GenderAll  +     0.16544413491246 *
203749    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.77452647934571 * Age_group0_17 + 1.30242349489465 * Age_group18_24 + 4.75511761734959 * Age_group25_44 + -5.04989377605042 * Age_group45_64 + -14.6022849415037 * Age_group65_84 + -0.5937322268467 * DiseaseAsthma + 
3.59429329496977 * DiseaseCancer__all + -1.42393776965241 * DiseaseDementia_and_Alzheimer_ + -1.1581922307743 * DiseaseOsteoarthritis + 0.22970325988741 * GenderAll + 0.16544413491246 * GenderFemale ;
203750    +   H14  = H14  +    -3.17942072873073 * Age_group0_17
203751    +          +    -3.71080374659487 * Age_group18_24  +    -2.41487691740168 *
203752    +        Age_group25_44  +     5.87238706134944 * Age_group45_64
203753    +          +     7.12807887019481 * Age_group65_84  +     4.95030154622387 *
203754    +        DiseaseAsthma  +    -3.98563182695072 * DiseaseCancer__all
203755    +          +     1.65479145935008 * DiseaseDementia_and_Alzheimer_
203756    +          +    -1.84356548332388 * DiseaseOsteoarthritis
203757    +          +     0.02515372327161 * GenderAll  +     0.14248788307797 *
203758    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.17942072873073 * Age_group0_17 + -3.71080374659487 * Age_group18_24 + -2.41487691740168 * Age_group25_44 + 5.87238706134944 * Age_group45_64 + 7.12807887019481 * Age_group65_84 + 4.95030154622387 * DiseaseAsthma + 
-3.98563182695072 * DiseaseCancer__all + 1.65479145935008 * DiseaseDementia_and_Alzheimer_ + -1.84356548332388 * DiseaseOsteoarthritis + 0.02515372327161 * GenderAll + 0.14248788307797 * GenderFemale ;
203759    +   H15  = H15  +    -2.65499345189966 * Age_group0_17
203760    +          +    -2.52386407007236 * Age_group18_24  +    -0.08789214446679 *
203761    +        Age_group25_44  +     1.33690548242373 * Age_group45_64
203762    +          +     3.35753315084801 * Age_group65_84  +    -2.54327090277794 *
203763    +        DiseaseAsthma  +     3.22645343642654 * DiseaseCancer__all
203764    +          +     -1.7342325341365 * DiseaseDementia_and_Alzheimer_
203765    +          +     1.62294449342552 * DiseaseOsteoarthritis
203766    +          +     0.50944932247803 * GenderAll  +     1.16624523024671 *
203767    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -2.65499345189966 * Age_group0_17 + -2.52386407007236 * Age_group18_24 + -0.08789214446679 * Age_group25_44 + 1.33690548242373 * Age_group45_64 + 3.35753315084801 * Age_group65_84 + -2.54327090277794 * DiseaseAsthma + 
3.22645343642654 * DiseaseCancer__all + -1.7342325341365 * DiseaseDementia_and_Alzheimer_ + 1.62294449342552 * DiseaseOsteoarthritis + 0.50944932247803 * GenderAll + 1.16624523024671 * GenderFemale ;
203768    +   H11  =    -0.16328527582879 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16328527582879 + H11 ;
203769    +   H12  =     3.43706584749845 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.43706584749845 + H12 ;
203770    +   H13  =    -3.84967331225192 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.84967331225192 + H13 ;
203771    +   H14  =     3.88592449819665 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.88592449819665 + H14 ;
203772    +   H15  =    -4.58028929812927 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.58028929812927 + H15 ;
203773    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
203774    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
203775    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
203776    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
203777    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
203778    +END;
MPRINT(EM_DIAGRAM):   END;
203779    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203780    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
203781    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
203782    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
203783    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
203784    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
203785    +END;
MPRINT(EM_DIAGRAM):   END;
203786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203787    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
203788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203790    +   P_Cases_in_1000s  =     67.4104297195872 * H11  +    -35.8921323485021 *
203791    +        H12  +    -24.7752792694521 * H13  +     81.8360046551309 * H14
203792    +          +     66.7196227687357 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 67.4104297195872 * H11 + -35.8921323485021 * H12 + -24.7752792694521 * H13 + 81.8360046551309 * H14 + 66.7196227687357 * H15 ;
203793    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -8.68845221932159 *
203794    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -8.68845221932159 * S_Population_in_thousands ;
203795    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -42.2746060828309 *
203796    +        Age_group0_17  +     -47.143646201442 * Age_group18_24
203797    +          +    -36.7791443787182 * Age_group25_44  +      11.462692663179 *
203798    +        Age_group45_64  +      58.824895833719 * Age_group65_84
203799    +          +    -29.7087244942384 * DiseaseAsthma  +     65.9700972408222 *
203800    +        DiseaseCancer__all  +    -33.3466634179848 *
203801    +        DiseaseDementia_and_Alzheimer_  +     0.84531108399158 *
203802    +        DiseaseOsteoarthritis  +     30.4656747943978 * GenderAll
203803    +          +    -8.25358426398541 * GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -42.2746060828309 * Age_group0_17 + -47.143646201442 * Age_group18_24 + -36.7791443787182 * Age_group25_44 + 11.462692663179 * Age_group45_64 + 58.824895833719 * Age_group65_84 + 
-29.7087244942384 * DiseaseAsthma + 65.9700972408222 * DiseaseCancer__all + -33.3466634179848 * DiseaseDementia_and_Alzheimer_ + 0.84531108399158 * DiseaseOsteoarthritis + 30.4656747943978 * GenderAll + -8.25358426398541 * GenderFemale ;
203804    +   P_Cases_in_1000s  =      96.558824557025 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 96.558824557025 + P_Cases_in_1000s ;
203805    +END;
MPRINT(EM_DIAGRAM):   END;
203806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203807    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
203808    +END;
MPRINT(EM_DIAGRAM):   END;
203809    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
203810    +   P_Cases_in_1000s  =     71.1668909825033;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 71.1668909825033;
203811    +END;
MPRINT(EM_DIAGRAM):   END;
203812    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
203813    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
203814    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
203815    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
203816    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
203817    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203818    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
203819    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203820    +drop
203821    +S_Population_in_thousands
203822    +H11
203823    +H12
203824    +H13
203825    +H14
203826    +H15
203827    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
203828     run;

NOTE: DATA STEP view saved on file EMWS2.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
203829     quit;
203830     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
203831     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203832     *------------------------------------------------------------*;
203833     * Neural: Scoring TEST data;
203834     *------------------------------------------------------------*;
203835     data EMWS2.Neural_TEST
203836     / view=EMWS2.Neural_TEST
203837     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TEST / view=EMWS2.Neural_TEST ;
203838     set EMWS2.Part_TEST
203839     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TEST ;
203840     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
203841    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203842    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203843    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203844    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203845    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203846    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203847    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203848    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203849    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203850    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203851    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203852    +LENGTH _WARN_ $4
203853    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
203854    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
203855    +
203856    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
203857    +
203858    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
203859    +
203860    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
203861    +
203862    +      label Age_group45_64 = 'Dummy: Age_group=45-64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_64 = 'Dummy: Age_group=45-64' ;
203863    +
203864    +      label Age_group65_84 = 'Dummy: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Age_group65_84 = 'Dummy: Age_group=65-84' ;
203865    +
203866    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
203867    +
203868    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
203869    +
203870    +      label DiseaseDementia_and_Alzheimer_ =
203871    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
203872    +
203873    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
203874    +
203875    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
203876    +
203877    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
203878    +
203879    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203880    +
203881    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203882    +
203883    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203884    +
203885    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203886    +
203887    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203888    +
203889    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
203890    +
203891    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
203892    +
203893    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203894    +
203895    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
203896    +drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84
203897    +         ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84 ;
203898    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203899    +Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
203900    +Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
203901    +Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
203902    +Age_group45_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 0;
203903    +Age_group65_84 = 0;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0;
203904    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
203905    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203906    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203907    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203908    +   Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203909    +   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203912    +end;
MPRINT(EM_DIAGRAM):   end;
203913    +else do;
MPRINT(EM_DIAGRAM):   else do;
203914    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
203915    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203916    +   if _dm19 = '65-84'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '65-84' then do;
203917    +      Age_group65_84 = 1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 1;
203918    +   end;
MPRINT(EM_DIAGRAM):   end;
203919    +   else if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
203920    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
203921    +   end;
MPRINT(EM_DIAGRAM):   end;
203922    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
203923    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
203924    +   end;
MPRINT(EM_DIAGRAM):   end;
203925    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
203926    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
203927    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
203928    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
203929    +      Age_group45_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = -1;
203930    +      Age_group65_84 = -1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -1;
203931    +   end;
MPRINT(EM_DIAGRAM):   end;
203932    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
203933    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
203934    +   end;
MPRINT(EM_DIAGRAM):   end;
203935    +   else if _dm19 = '45-64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
203936    +      Age_group45_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 1;
203937    +   end;
MPRINT(EM_DIAGRAM):   end;
203938    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203939    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203940    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203941    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203942    +      Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203943    +      Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203944    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203945    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203946    +   end;
MPRINT(EM_DIAGRAM):   end;
203947    +end;
MPRINT(EM_DIAGRAM):   end;
203948    +
203949    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
203950    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
203951    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
203952    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203953    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
203954    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
203955    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
203956    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
203957    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
203958    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203959    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203960    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203961    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203964    +end;
MPRINT(EM_DIAGRAM):   end;
203965    +else do;
MPRINT(EM_DIAGRAM):   else do;
203966    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
203967    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203968    +   if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'CANCER, ALL' then do;
203969    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
203970    +   end;
MPRINT(EM_DIAGRAM):   end;
203971    +   else if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
203972    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
203973    +   end;
MPRINT(EM_DIAGRAM):   end;
203974    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
203975    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
203976    +   end;
MPRINT(EM_DIAGRAM):   end;
203977    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
203978    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
203979    +   end;
MPRINT(EM_DIAGRAM):   end;
203980    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
203981    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
203982    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
203983    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
203984    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
203985    +   end;
MPRINT(EM_DIAGRAM):   end;
203986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203987    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203988    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203989    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203990    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203993    +   end;
MPRINT(EM_DIAGRAM):   end;
203994    +end;
MPRINT(EM_DIAGRAM):   end;
203995    +
203996    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
203997    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
203998    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
203999    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
204000    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
204001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204003    +end;
MPRINT(EM_DIAGRAM):   end;
204004    +else do;
MPRINT(EM_DIAGRAM):   else do;
204005    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
204006    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
204007    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204008    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
204009    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
204010    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
204011    +   end;
MPRINT(EM_DIAGRAM):   end;
204012    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
204013    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
204014    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
204015    +   end;
MPRINT(EM_DIAGRAM):   end;
204016    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
204017    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
204018    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
204019    +   end;
MPRINT(EM_DIAGRAM):   end;
204020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204021    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
204022    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
204023    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204024    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204025    +   end;
MPRINT(EM_DIAGRAM):   end;
204026    +end;
MPRINT(EM_DIAGRAM):   end;
204027    +
204028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204029    +*** Checking missing input Interval
204030    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
204031    +
204032    +IF NMISS(
204033    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
204034    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
204035    +
204036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204037    +END;
MPRINT(EM_DIAGRAM):   END;
204038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204039    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
204040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204041    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204042    +   S_Population_in_thousands  =    -1.33973697356729 +     0.00004274722206 *
204043    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
204044    +END;
MPRINT(EM_DIAGRAM):   END;
204045    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204046    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
204047    +   ELSE S_Population_in_thousands
204048    +          =    -1.33973697356729 +     0.00004274722206 *
204049    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
204050    +END;
MPRINT(EM_DIAGRAM):   END;
204051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204052    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
204053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204055    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
204056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204057    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204058    +   H11  =     1.35434005089982 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = 1.35434005089982 * S_Population_in_thousands ;
204059    +   H12  =    -5.86736639290222 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = -5.86736639290222 * S_Population_in_thousands ;
204060    +   H13  =     1.74534286115132 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 1.74534286115132 * S_Population_in_thousands ;
204061    +   H14  =     -1.7416965772114 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -1.7416965772114 * S_Population_in_thousands ;
204062    +   H15  =     0.32029026736697 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 0.32029026736697 * S_Population_in_thousands ;
204063    +   H11  = H11  +     1.71448870576879 * Age_group0_17
204064    +          +     1.77698251167841 * Age_group18_24  +     1.03025379631606 *
204065    +        Age_group25_44  +     -2.7956731934031 * Age_group45_64
204066    +          +    -1.03005728244483 * Age_group65_84  +    -0.94281877271546 *
204067    +        DiseaseAsthma  +      2.2147481918044 * DiseaseCancer__all
204068    +          +    -1.69110565485991 * DiseaseDementia_and_Alzheimer_
204069    +          +     1.35070603998304 * DiseaseOsteoarthritis
204070    +          +    -0.20138646157356 * GenderAll  +    -0.33007295308219 *
204071    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.71448870576879 * Age_group0_17 + 1.77698251167841 * Age_group18_24 + 1.03025379631606 * Age_group25_44 + -2.7956731934031 * Age_group45_64 + -1.03005728244483 * Age_group65_84 + -0.94281877271546 * DiseaseAsthma + 
2.2147481918044 * DiseaseCancer__all + -1.69110565485991 * DiseaseDementia_and_Alzheimer_ + 1.35070603998304 * DiseaseOsteoarthritis + -0.20138646157356 * GenderAll + -0.33007295308219 * GenderFemale ;
204072    +   H12  = H12  +    -0.49834529725908 * Age_group0_17
204073    +          +     6.65737966257656 * Age_group18_24  +     0.02166950755446 *
204074    +        Age_group25_44  +    -0.30406002314189 * Age_group45_64
204075    +          +    -0.19967481942436 * Age_group65_84  +     2.48663287133045 *
204076    +        DiseaseAsthma  +    -4.17996212144142 * DiseaseCancer__all
204077    +          +     7.87749987799108 * DiseaseDementia_and_Alzheimer_
204078    +          +    -3.48018763761733 * DiseaseOsteoarthritis
204079    +          +    -0.74940371145971 * GenderAll  +     1.76509155400586 *
204080    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.49834529725908 * Age_group0_17 + 6.65737966257656 * Age_group18_24 + 0.02166950755446 * Age_group25_44 + -0.30406002314189 * Age_group45_64 + -0.19967481942436 * Age_group65_84 + 2.48663287133045 * DiseaseAsthma + 
-4.17996212144142 * DiseaseCancer__all + 7.87749987799108 * DiseaseDementia_and_Alzheimer_ + -3.48018763761733 * DiseaseOsteoarthritis + -0.74940371145971 * GenderAll + 1.76509155400586 * GenderFemale ;
204081    +   H13  = H13  +     1.77452647934571 * Age_group0_17
204082    +          +     1.30242349489465 * Age_group18_24  +     4.75511761734959 *
204083    +        Age_group25_44  +    -5.04989377605042 * Age_group45_64
204084    +          +    -14.6022849415037 * Age_group65_84  +     -0.5937322268467 *
204085    +        DiseaseAsthma  +     3.59429329496977 * DiseaseCancer__all
204086    +          +    -1.42393776965241 * DiseaseDementia_and_Alzheimer_
204087    +          +     -1.1581922307743 * DiseaseOsteoarthritis
204088    +          +     0.22970325988741 * GenderAll  +     0.16544413491246 *
204089    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.77452647934571 * Age_group0_17 + 1.30242349489465 * Age_group18_24 + 4.75511761734959 * Age_group25_44 + -5.04989377605042 * Age_group45_64 + -14.6022849415037 * Age_group65_84 + -0.5937322268467 * DiseaseAsthma + 
3.59429329496977 * DiseaseCancer__all + -1.42393776965241 * DiseaseDementia_and_Alzheimer_ + -1.1581922307743 * DiseaseOsteoarthritis + 0.22970325988741 * GenderAll + 0.16544413491246 * GenderFemale ;
204090    +   H14  = H14  +    -3.17942072873073 * Age_group0_17
204091    +          +    -3.71080374659487 * Age_group18_24  +    -2.41487691740168 *
204092    +        Age_group25_44  +     5.87238706134944 * Age_group45_64
204093    +          +     7.12807887019481 * Age_group65_84  +     4.95030154622387 *
204094    +        DiseaseAsthma  +    -3.98563182695072 * DiseaseCancer__all
204095    +          +     1.65479145935008 * DiseaseDementia_and_Alzheimer_
204096    +          +    -1.84356548332388 * DiseaseOsteoarthritis
204097    +          +     0.02515372327161 * GenderAll  +     0.14248788307797 *
204098    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.17942072873073 * Age_group0_17 + -3.71080374659487 * Age_group18_24 + -2.41487691740168 * Age_group25_44 + 5.87238706134944 * Age_group45_64 + 7.12807887019481 * Age_group65_84 + 4.95030154622387 * DiseaseAsthma + 
-3.98563182695072 * DiseaseCancer__all + 1.65479145935008 * DiseaseDementia_and_Alzheimer_ + -1.84356548332388 * DiseaseOsteoarthritis + 0.02515372327161 * GenderAll + 0.14248788307797 * GenderFemale ;
204099    +   H15  = H15  +    -2.65499345189966 * Age_group0_17
204100    +          +    -2.52386407007236 * Age_group18_24  +    -0.08789214446679 *
204101    +        Age_group25_44  +     1.33690548242373 * Age_group45_64
204102    +          +     3.35753315084801 * Age_group65_84  +    -2.54327090277794 *
204103    +        DiseaseAsthma  +     3.22645343642654 * DiseaseCancer__all
204104    +          +     -1.7342325341365 * DiseaseDementia_and_Alzheimer_
204105    +          +     1.62294449342552 * DiseaseOsteoarthritis
204106    +          +     0.50944932247803 * GenderAll  +     1.16624523024671 *
204107    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -2.65499345189966 * Age_group0_17 + -2.52386407007236 * Age_group18_24 + -0.08789214446679 * Age_group25_44 + 1.33690548242373 * Age_group45_64 + 3.35753315084801 * Age_group65_84 + -2.54327090277794 * DiseaseAsthma + 
3.22645343642654 * DiseaseCancer__all + -1.7342325341365 * DiseaseDementia_and_Alzheimer_ + 1.62294449342552 * DiseaseOsteoarthritis + 0.50944932247803 * GenderAll + 1.16624523024671 * GenderFemale ;
204108    +   H11  =    -0.16328527582879 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16328527582879 + H11 ;
204109    +   H12  =     3.43706584749845 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.43706584749845 + H12 ;
204110    +   H13  =    -3.84967331225192 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.84967331225192 + H13 ;
204111    +   H14  =     3.88592449819665 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.88592449819665 + H14 ;
204112    +   H15  =    -4.58028929812927 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.58028929812927 + H15 ;
204113    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
204114    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
204115    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
204116    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
204117    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
204118    +END;
MPRINT(EM_DIAGRAM):   END;
204119    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204120    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
204121    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
204122    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
204123    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
204124    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
204125    +END;
MPRINT(EM_DIAGRAM):   END;
204126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204127    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
204128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204129    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204130    +   P_Cases_in_1000s  =     67.4104297195872 * H11  +    -35.8921323485021 *
204131    +        H12  +    -24.7752792694521 * H13  +     81.8360046551309 * H14
204132    +          +     66.7196227687357 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 67.4104297195872 * H11 + -35.8921323485021 * H12 + -24.7752792694521 * H13 + 81.8360046551309 * H14 + 66.7196227687357 * H15 ;
204133    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -8.68845221932159 *
204134    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -8.68845221932159 * S_Population_in_thousands ;
204135    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -42.2746060828309 *
204136    +        Age_group0_17  +     -47.143646201442 * Age_group18_24
204137    +          +    -36.7791443787182 * Age_group25_44  +      11.462692663179 *
204138    +        Age_group45_64  +      58.824895833719 * Age_group65_84
204139    +          +    -29.7087244942384 * DiseaseAsthma  +     65.9700972408222 *
204140    +        DiseaseCancer__all  +    -33.3466634179848 *
204141    +        DiseaseDementia_and_Alzheimer_  +     0.84531108399158 *
204142    +        DiseaseOsteoarthritis  +     30.4656747943978 * GenderAll
204143    +          +    -8.25358426398541 * GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -42.2746060828309 * Age_group0_17 + -47.143646201442 * Age_group18_24 + -36.7791443787182 * Age_group25_44 + 11.462692663179 * Age_group45_64 + 58.824895833719 * Age_group65_84 + 
-29.7087244942384 * DiseaseAsthma + 65.9700972408222 * DiseaseCancer__all + -33.3466634179848 * DiseaseDementia_and_Alzheimer_ + 0.84531108399158 * DiseaseOsteoarthritis + 30.4656747943978 * GenderAll + -8.25358426398541 * GenderFemale ;
204144    +   P_Cases_in_1000s  =      96.558824557025 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 96.558824557025 + P_Cases_in_1000s ;
204145    +END;
MPRINT(EM_DIAGRAM):   END;
204146    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204147    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
204148    +END;
MPRINT(EM_DIAGRAM):   END;
204149    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
204150    +   P_Cases_in_1000s  =     71.1668909825033;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 71.1668909825033;
204151    +END;
MPRINT(EM_DIAGRAM):   END;
204152    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
204153    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
204154    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
204155    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
204156    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
204157    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204158    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
204159    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204160    +drop
204161    +S_Population_in_thousands
204162    +H11
204163    +H12
204164    +H13
204165    +H14
204166    +H15
204167    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
204168     run;

NOTE: DATA STEP view saved on file EMWS2.NEURAL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
204169     quit;
204170     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
204171     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
204172     * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
204173     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Neural_TRAIN out=WORK.M2VG2SI0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VG2SI0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VG2SI0(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VG2SI0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VG2SI0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3RQ_XVL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WLZ08N(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_CASES_IN_1000S") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_CASES_IN_1000S") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("CASES_IN_1000S") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
204521     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
204522     set EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO;
204523     where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
204524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

204525     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMINFO;
204526     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
204527     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
204528     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
204532     run;
204533     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
204534     set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
204535     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

204536     proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
204537     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204538     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

204539     proc sort data = EMWS2.Ids2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
204540     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204541     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.IDS2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

204542     proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
204543     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204544     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

204545     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
204546     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
204547     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204548     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

204549     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
204550     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
204551     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
204552     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS2.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS2.NEURAL_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
