MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:53" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 21, 2019
Time:                16:19:53
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2P9GO7H "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2P9GO7H new;
MPRINT(EM_DIAGRAM):   run;
177858     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
177859     set EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_OUTKEY;
177860     if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
177861     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS2.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

177862     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
177863     *------------------------------------------------------------*;
177864     * Neural: Scoring DATA data;
177865     *------------------------------------------------------------*;
177866     data EMWS2.Neural_TRAIN
177867     / view=EMWS2.Neural_TRAIN
177868     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TRAIN / view=EMWS2.Neural_TRAIN ;
177869     set EMWS2.Part_TRAIN
177870     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN ;
177871     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
177872    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
177873    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
177874    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
177875    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
177876    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
177877    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
177878    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
177879    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
177880    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
177881    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
177882    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
177883    +LENGTH _WARN_ $4
177884    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
177885    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
177886    +
177887    +      label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
MPRINT(EM_DIAGRAM):   label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
177888    +
177889    +      label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
177890    +
177891    +      label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
177892    +
177893    +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
177894    +
177895    +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
177896    +
177897    +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
177898    +
177899    +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
177900    +
177901    +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
177902    +
177903    +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
177904    +
177905    +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
177906    +
177907    +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
177908    +
177909    +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
177910    +
177911    +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
177912    +
177913    +      label Date2010 = 'Dummy: Date=2010' ;
MPRINT(EM_DIAGRAM):   label Date2010 = 'Dummy: Date=2010' ;
177914    +
177915    +      label Date2011 = 'Dummy: Date=2011' ;
MPRINT(EM_DIAGRAM):   label Date2011 = 'Dummy: Date=2011' ;
177916    +
177917    +      label Date2012 = 'Dummy: Date=2012' ;
MPRINT(EM_DIAGRAM):   label Date2012 = 'Dummy: Date=2012' ;
177918    +
177919    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
177920    +
177921    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
177922    +
177923    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
177924    +
177925    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
177926    +
177927    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
177928    +
177929    +      label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
177930    +
177931    +      label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
177932    +
177933    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
177934    +
177935    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
177936    +drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
MPRINT(EM_DIAGRAM):   drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
177937    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
177938    +   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
177939    +   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
177940    +   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
177941    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
177942    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177943    +end;
MPRINT(EM_DIAGRAM):   end;
177944    +else do;
MPRINT(EM_DIAGRAM):   else do;
177945    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
177946    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
177947    +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
177948    +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
177949    +      Age_group25_to_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 1;
177950    +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
177951    +   end;
MPRINT(EM_DIAGRAM):   end;
177952    +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
177953    +      Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = -1;
177954    +      Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = -1;
177955    +      Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = -1;
177956    +   end;
MPRINT(EM_DIAGRAM):   end;
177957    +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
177958    +      Age_group16_to_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 1;
177959    +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
177960    +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
177961    +   end;
MPRINT(EM_DIAGRAM):   end;
177962    +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
177963    +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
177964    +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
177965    +      Age_group45_to_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 1;
177966    +   end;
MPRINT(EM_DIAGRAM):   end;
177967    +   else do;
MPRINT(EM_DIAGRAM):   else do;
177968    +      Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
177969    +      Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
177970    +      Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
177971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
177972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
177973    +   end;
MPRINT(EM_DIAGRAM):   end;
177974    +end;
MPRINT(EM_DIAGRAM):   end;
177975    +
177976    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
177977    +drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007
177978    +        Date2008 Date2009 Date2010 Date2011 Date2012 ;
MPRINT(EM_DIAGRAM):   drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 Date2010 Date2011 Date2012 ;
177979    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
177980    +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
177981    +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
177982    +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
177983    +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
177984    +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
177985    +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
177986    +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
177987    +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
177988    +Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
177989    +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
177990    +Date2010 = 0;
MPRINT(EM_DIAGRAM):   Date2010 = 0;
177991    +Date2011 = 0;
MPRINT(EM_DIAGRAM):   Date2011 = 0;
177992    +Date2012 = 0;
MPRINT(EM_DIAGRAM):   Date2012 = 0;
177993    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
177994    +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
177995    +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
177996    +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
177997    +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
177998    +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
177999    +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
178000    +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
178001    +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
178002    +   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
178003    +   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
178004    +   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
178005    +   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
178006    +   Date2012 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
178007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178009    +end;
MPRINT(EM_DIAGRAM):   end;
178010    +else do;
MPRINT(EM_DIAGRAM):   else do;
178011    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
178012    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
178013    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
178014    +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
178015    +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
178016    +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
178017    +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
178018    +               Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
178019    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178020    +            end;
MPRINT(EM_DIAGRAM):   end;
178021    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178022    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
178023    +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
178024    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178025    +               end;
MPRINT(EM_DIAGRAM):   end;
178026    +            end;
MPRINT(EM_DIAGRAM):   end;
178027    +         end;
MPRINT(EM_DIAGRAM):   end;
178028    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178029    +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
178030    +               Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
178031    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178032    +            end;
MPRINT(EM_DIAGRAM):   end;
178033    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178034    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
178035    +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
178036    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178037    +               end;
MPRINT(EM_DIAGRAM):   end;
178038    +            end;
MPRINT(EM_DIAGRAM):   end;
178039    +         end;
MPRINT(EM_DIAGRAM):   end;
178040    +      end;
MPRINT(EM_DIAGRAM):   end;
178041    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178042    +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
178043    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
178044    +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
178045    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178046    +            end;
MPRINT(EM_DIAGRAM):   end;
178047    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178048    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
178049    +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
178050    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178051    +               end;
MPRINT(EM_DIAGRAM):   end;
178052    +            end;
MPRINT(EM_DIAGRAM):   end;
178053    +         end;
MPRINT(EM_DIAGRAM):   end;
178054    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178055    +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
178056    +               Date2006 = 1;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
178057    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178058    +            end;
MPRINT(EM_DIAGRAM):   end;
178059    +         end;
MPRINT(EM_DIAGRAM):   end;
178060    +      end;
MPRINT(EM_DIAGRAM):   end;
178061    +   end;
MPRINT(EM_DIAGRAM):   end;
178062    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178063    +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
178064    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
178065    +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
178066    +               Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
178067    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178068    +            end;
MPRINT(EM_DIAGRAM):   end;
178069    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178070    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
178071    +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
178072    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178073    +               end;
MPRINT(EM_DIAGRAM):   end;
178074    +            end;
MPRINT(EM_DIAGRAM):   end;
178075    +         end;
MPRINT(EM_DIAGRAM):   end;
178076    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178077    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
178078    +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
178079    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178080    +            end;
MPRINT(EM_DIAGRAM):   end;
178081    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178082    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
178083    +                  Date2010 = 1;
MPRINT(EM_DIAGRAM):   Date2010 = 1;
178084    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178085    +               end;
MPRINT(EM_DIAGRAM):   end;
178086    +            end;
MPRINT(EM_DIAGRAM):   end;
178087    +         end;
MPRINT(EM_DIAGRAM):   end;
178088    +      end;
MPRINT(EM_DIAGRAM):   end;
178089    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178090    +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
178091    +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
178092    +               Date2011 = 1;
MPRINT(EM_DIAGRAM):   Date2011 = 1;
178093    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178094    +            end;
MPRINT(EM_DIAGRAM):   end;
178095    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178096    +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
178097    +                  Date2012 = 1;
MPRINT(EM_DIAGRAM):   Date2012 = 1;
178098    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178099    +               end;
MPRINT(EM_DIAGRAM):   end;
178100    +            end;
MPRINT(EM_DIAGRAM):   end;
178101    +         end;
MPRINT(EM_DIAGRAM):   end;
178102    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178103    +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
178104    +               Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
178105    +               Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
178106    +               Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
178107    +               Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
178108    +               Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
178109    +               Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
178110    +               Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
178111    +               Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
178112    +               Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
178113    +               Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
178114    +               Date2010 = -1;
MPRINT(EM_DIAGRAM):   Date2010 = -1;
178115    +               Date2011 = -1;
MPRINT(EM_DIAGRAM):   Date2011 = -1;
178116    +               Date2012 = -1;
MPRINT(EM_DIAGRAM):   Date2012 = -1;
178117    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178118    +            end;
MPRINT(EM_DIAGRAM):   end;
178119    +         end;
MPRINT(EM_DIAGRAM):   end;
178120    +      end;
MPRINT(EM_DIAGRAM):   end;
178121    +   end;
MPRINT(EM_DIAGRAM):   end;
178122    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
178123    +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
178124    +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
178125    +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
178126    +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
178127    +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
178128    +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
178129    +      Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
178130    +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
178131    +      Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
178132    +      Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
178133    +      Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
178134    +      Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
178135    +      Date2012 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
178136    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178137    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178138    +   end;
MPRINT(EM_DIAGRAM):   end;
178139    +end;
MPRINT(EM_DIAGRAM):   end;
178140    +
178141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178142    +*** Checking missing input Interval
178143    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
178144    +
178145    +IF NMISS(
178146    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
178147    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
178148    +
178149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178150    +END;
MPRINT(EM_DIAGRAM):   END;
178151    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178152    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
178153    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178154    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178155    +   S_Population_in_thousands  =    -1.87364654722034 +     0.00004806883022 *
178156    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.87364654722034 + 0.00004806883022 * Population_in_thousands ;
178157    +END;
MPRINT(EM_DIAGRAM):   END;
178158    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178159    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
178160    +   ELSE S_Population_in_thousands
178161    +          =    -1.87364654722034 +     0.00004806883022 *
178162    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.87364654722034 + 0.00004806883022 * Population_in_thousands ;
178163    +END;
MPRINT(EM_DIAGRAM):   END;
178164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178165    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
178166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178168    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
178169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178170    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178171    +   H11  =    -10.5567860619218 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = -10.5567860619218 * S_Population_in_thousands ;
178172    +   H12  =     6.93674374688679 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = 6.93674374688679 * S_Population_in_thousands ;
178173    +   H13  =     7.97463271293276 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 7.97463271293276 * S_Population_in_thousands ;
178174    +   H14  =    -2.96157455818886 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -2.96157455818886 * S_Population_in_thousands ;
178175    +   H15  =      4.9967181694671 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 4.9967181694671 * S_Population_in_thousands ;
178176    +   H11  = H11  +    -11.6869571982903 * Age_group16_to_24
178177    +          +     10.2910675953121 * Age_group25_to_44
178178    +          +    -2.67490802081759 * Age_group45_to_64
178179    +          +    -1.10047437764076 * Date2000  +    -0.22760053126253 * Date2001
178180    +          +    -3.40954321604118 * Date2002  +    -0.60452251018176 * Date2003
178181    +          +    -1.03783572365717 * Date2004  +    -0.54238684306836 * Date2005
178182    +          +    -1.80290984208328 * Date2006  +     2.30444950898572 * Date2007
178183    +          +     0.28846951445795 * Date2008  +    -0.62558742417256 * Date2009
178184    +          +    -0.92614337641004 * Date2010  +    -1.14935618765427 * Date2011
178185    +          +     0.42630552474157 * Date2012 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -11.6869571982903 * Age_group16_to_24 + 10.2910675953121 * Age_group25_to_44 + -2.67490802081759 * Age_group45_to_64 + -1.10047437764076 * Date2000 + -0.22760053126253 * Date2001 + -3.40954321604118 * Date2002 + 
-0.60452251018176 * Date2003 + -1.03783572365717 * Date2004 + -0.54238684306836 * Date2005 + -1.80290984208328 * Date2006 + 2.30444950898572 * Date2007 + 0.28846951445795 * Date2008 + -0.62558742417256 * Date2009 + -0.92614337641004 * Date2010 + 
-1.14935618765427 * Date2011 + 0.42630552474157 * Date2012 ;
178186    +   H12  = H12  +      5.1341539558253 * Age_group16_to_24
178187    +          +    -1.85154808121503 * Age_group25_to_44
178188    +          +    -0.21963193751603 * Age_group45_to_64
178189    +          +     0.67968076087533 * Date2000  +     -0.2213889785313 * Date2001
178190    +          +     0.90857120287394 * Date2002  +    -0.39051573868889 * Date2003
178191    +          +    -0.88481111060544 * Date2004  +     0.82639309413488 * Date2005
178192    +          +     0.56101709444704 * Date2006  +    -1.60116887850484 * Date2007
178193    +          +    -0.14101840804294 * Date2008  +     0.57133076039339 * Date2009
178194    +          +     0.56354245938444 * Date2010  +     0.01755253253051 * Date2011
178195    +          +     0.20400190699063 * Date2012 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 5.1341539558253 * Age_group16_to_24 + -1.85154808121503 * Age_group25_to_44 + -0.21963193751603 * Age_group45_to_64 + 0.67968076087533 * Date2000 + -0.2213889785313 * Date2001 + 0.90857120287394 * Date2002 + 
-0.39051573868889 * Date2003 + -0.88481111060544 * Date2004 + 0.82639309413488 * Date2005 + 0.56101709444704 * Date2006 + -1.60116887850484 * Date2007 + -0.14101840804294 * Date2008 + 0.57133076039339 * Date2009 + 0.56354245938444 * Date2010 + 
0.01755253253051 * Date2011 + 0.20400190699063 * Date2012 ;
178196    +   H13  = H13  +     6.54896826830039 * Age_group16_to_24
178197    +          +    -5.96257556419985 * Age_group25_to_44
178198    +          +    -1.03829245308179 * Age_group45_to_64
178199    +          +      0.5273199909973 * Date2000  +    -1.16104235179963 * Date2001
178200    +          +     0.55522670162147 * Date2002  +    -1.89314202170014 * Date2003
178201    +          +    -1.01567903024112 * Date2004  +     0.38130258078793 * Date2005
178202    +          +     0.21728270575449 * Date2006  +    -2.94142752103015 * Date2007
178203    +          +    -0.77285836854397 * Date2008  +    -0.90322430952049 * Date2009
178204    +          +    -1.08347007669971 * Date2010  +    -1.55758639952604 * Date2011
178205    +          +     0.18020721840761 * Date2012 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 6.54896826830039 * Age_group16_to_24 + -5.96257556419985 * Age_group25_to_44 + -1.03829245308179 * Age_group45_to_64 + 0.5273199909973 * Date2000 + -1.16104235179963 * Date2001 + 0.55522670162147 * Date2002 + 
-1.89314202170014 * Date2003 + -1.01567903024112 * Date2004 + 0.38130258078793 * Date2005 + 0.21728270575449 * Date2006 + -2.94142752103015 * Date2007 + -0.77285836854397 * Date2008 + -0.90322430952049 * Date2009 + -1.08347007669971 * Date2010 + 
-1.55758639952604 * Date2011 + 0.18020721840761 * Date2012 ;
178206    +   H14  = H14  +     0.38670331780541 * Age_group16_to_24
178207    +          +    -1.05097959254072 * Age_group25_to_44
178208    +          +     1.96761736600783 * Age_group45_to_64
178209    +          +    -0.18360301011118 * Date2000  +     0.17293362273923 * Date2001
178210    +          +    -1.43323685000342 * Date2002  +      0.0272054881225 * Date2003
178211    +          +    -0.71125460179926 * Date2004  +    -0.77561194746101 * Date2005
178212    +          +    -0.73592366437635 * Date2006  +     1.26146631848131 * Date2007
178213    +          +     0.23163572016059 * Date2008  +    -0.17917872246374 * Date2009
178214    +          +    -0.11229699447691 * Date2010  +     0.40765262698265 * Date2011
178215    +          +    -0.75347814872141 * Date2012 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.38670331780541 * Age_group16_to_24 + -1.05097959254072 * Age_group25_to_44 + 1.96761736600783 * Age_group45_to_64 + -0.18360301011118 * Date2000 + 0.17293362273923 * Date2001 + -1.43323685000342 * Date2002 + 
0.0272054881225 * Date2003 + -0.71125460179926 * Date2004 + -0.77561194746101 * Date2005 + -0.73592366437635 * Date2006 + 1.26146631848131 * Date2007 + 0.23163572016059 * Date2008 + -0.17917872246374 * Date2009 + -0.11229699447691 * Date2010 + 
0.40765262698265 * Date2011 + -0.75347814872141 * Date2012 ;
178216    +   H15  = H15  +     6.05287136294286 * Age_group16_to_24
178217    +          +    -3.79644901080526 * Age_group25_to_44
178218    +          +     1.21876416645613 * Age_group45_to_64
178219    +          +     3.86274213785008 * Date2000  +    -3.03988820362945 * Date2001
178220    +          +     3.63422315190693 * Date2002  +    -2.86024226192798 * Date2003
178221    +          +     1.31190653109364 * Date2004  +     1.00269797540369 * Date2005
178222    +          +     2.22154927414665 * Date2006  +    -3.83979602461957 * Date2007
178223    +          +     4.44191782076897 * Date2008  +     3.47148215279693 * Date2009
178224    +          +     3.48556234924851 * Date2010  +     2.70069017647433 * Date2011
178225    +          +    -1.24140391383962 * Date2012 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 6.05287136294286 * Age_group16_to_24 + -3.79644901080526 * Age_group25_to_44 + 1.21876416645613 * Age_group45_to_64 + 3.86274213785008 * Date2000 + -3.03988820362945 * Date2001 + 3.63422315190693 * Date2002 + 
-2.86024226192798 * Date2003 + 1.31190653109364 * Date2004 + 1.00269797540369 * Date2005 + 2.22154927414665 * Date2006 + -3.83979602461957 * Date2007 + 4.44191782076897 * Date2008 + 3.47148215279693 * Date2009 + 3.48556234924851 * Date2010 + 
2.70069017647433 * Date2011 + -1.24140391383962 * Date2012 ;
178226    +   H11  =    -7.92818491829576 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -7.92818491829576 + H11 ;
178227    +   H12  =    -4.07978141494418 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.07978141494418 + H12 ;
178228    +   H13  =    -5.38343814140791 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -5.38343814140791 + H13 ;
178229    +   H14  =    -0.18602948673383 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.18602948673383 + H14 ;
178230    +   H15  =     1.32351071847022 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.32351071847022 + H15 ;
178231    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
178232    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
178233    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
178234    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
178235    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
178236    +END;
MPRINT(EM_DIAGRAM):   END;
178237    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178238    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
178239    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
178240    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
178241    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
178242    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
178243    +END;
MPRINT(EM_DIAGRAM):   END;
178244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178245    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
178246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178247    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178248    +   P_Sum_Labor_Force_Pop  =     1202843.43179155 * H11
178249    +          +    -948614.000404475 * H12  +    -892176.275748305 * H13
178250    +          +     108381.926973916 * H14  +    -1312495.62626186 * H15 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1202843.43179155 * H11 + -948614.000404475 * H12 + -892176.275748305 * H13 + 108381.926973916 * H14 + -1312495.62626186 * H15 ;
178251    +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     3828588.58021984 *
178252    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 3828588.58021984 * S_Population_in_thousands ;
178253    +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     825881.286839296 *
178254    +        Age_group16_to_24  +       3494649.914537 * Age_group25_to_44
178255    +          +     2356092.99042497 * Age_group45_to_64
178256    +          +     161354.844294645 * Date2000  +     61402.3535329015 * Date2001
178257    +          +      142996.97687617 * Date2002  +     195762.159998255 * Date2003
178258    +          +     80843.3279672504 * Date2004  +    -7558.25823677259 * Date2005
178259    +          +     84781.8608938522 * Date2006  +     284398.657112347 * Date2007
178260    +          +     160257.474819793 * Date2008  +     9735.37887295724 * Date2009
178261    +          +     64520.7957197358 * Date2010  +     151481.035764261 * Date2011
178262    +          +     210465.484947051 * Date2012 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 825881.286839296 * Age_group16_to_24 + 3494649.914537 * Age_group25_to_44 + 2356092.99042497 * Age_group45_to_64 + 161354.844294645 * Date2000 + 61402.3535329015 * Date2001 + 
142996.97687617 * Date2002 + 195762.159998255 * Date2003 + 80843.3279672504 * Date2004 + -7558.25823677259 * Date2005 + 84781.8608938522 * Date2006 + 284398.657112347 * Date2007 + 160257.474819793 * Date2008 + 9735.37887295724 * Date2009 + 
64520.7957197358 * Date2010 + 151481.035764261 * Date2011 + 210465.484947051 * Date2012 ;
178263    +   P_Sum_Labor_Force_Pop  =     6735624.99997696 + P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6735624.99997696 + P_Sum_Labor_Force_Pop ;
178264    +END;
MPRINT(EM_DIAGRAM):   END;
178265    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178266    +   P_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = .;
178267    +END;
MPRINT(EM_DIAGRAM):   END;
178268    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
178269    +   P_Sum_Labor_Force_Pop  =              6735625;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6735625;
178270    +END;
MPRINT(EM_DIAGRAM):   END;
178271    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
178272    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
178273    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
178274    +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = . ;
178275    +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
178276    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
178277    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
178278    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
178279    +drop
178280    +S_Population_in_thousands
178281    +H11
178282    +H12
178283    +H13
178284    +H14
178285    +H15
178286    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
178287     run;

NOTE: DATA STEP view saved on file EMWS2.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
178288     quit;
178289     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
178290     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178291     *------------------------------------------------------------*;
178292     * Neural: Scoring VALIDATE data;
178293     *------------------------------------------------------------*;
178294     data EMWS2.Neural_VALIDATE
178295     / view=EMWS2.Neural_VALIDATE
178296     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_VALIDATE / view=EMWS2.Neural_VALIDATE ;
178297     set EMWS2.Part_VALIDATE
178298     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_VALIDATE ;
178299     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
178300    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
178301    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
178302    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
178303    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
178304    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
178305    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
178306    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
178307    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
178308    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
178309    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
178310    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
178311    +LENGTH _WARN_ $4
178312    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
178313    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
178314    +
178315    +      label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
MPRINT(EM_DIAGRAM):   label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
178316    +
178317    +      label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
178318    +
178319    +      label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
178320    +
178321    +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
178322    +
178323    +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
178324    +
178325    +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
178326    +
178327    +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
178328    +
178329    +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
178330    +
178331    +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
178332    +
178333    +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
178334    +
178335    +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
178336    +
178337    +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
178338    +
178339    +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
178340    +
178341    +      label Date2010 = 'Dummy: Date=2010' ;
MPRINT(EM_DIAGRAM):   label Date2010 = 'Dummy: Date=2010' ;
178342    +
178343    +      label Date2011 = 'Dummy: Date=2011' ;
MPRINT(EM_DIAGRAM):   label Date2011 = 'Dummy: Date=2011' ;
178344    +
178345    +      label Date2012 = 'Dummy: Date=2012' ;
MPRINT(EM_DIAGRAM):   label Date2012 = 'Dummy: Date=2012' ;
178346    +
178347    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
178348    +
178349    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
178350    +
178351    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
178352    +
178353    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
178354    +
178355    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
178356    +
178357    +      label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
178358    +
178359    +      label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
178360    +
178361    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
178362    +
178363    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
178364    +drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
MPRINT(EM_DIAGRAM):   drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
178365    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
178366    +   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
178367    +   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
178368    +   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
178369    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178370    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178371    +end;
MPRINT(EM_DIAGRAM):   end;
178372    +else do;
MPRINT(EM_DIAGRAM):   else do;
178373    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
178374    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
178375    +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
178376    +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
178377    +      Age_group25_to_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 1;
178378    +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
178379    +   end;
MPRINT(EM_DIAGRAM):   end;
178380    +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
178381    +      Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = -1;
178382    +      Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = -1;
178383    +      Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = -1;
178384    +   end;
MPRINT(EM_DIAGRAM):   end;
178385    +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
178386    +      Age_group16_to_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 1;
178387    +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
178388    +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
178389    +   end;
MPRINT(EM_DIAGRAM):   end;
178390    +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
178391    +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
178392    +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
178393    +      Age_group45_to_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 1;
178394    +   end;
MPRINT(EM_DIAGRAM):   end;
178395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178396    +      Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
178397    +      Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
178398    +      Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
178399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178401    +   end;
MPRINT(EM_DIAGRAM):   end;
178402    +end;
MPRINT(EM_DIAGRAM):   end;
178403    +
178404    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
178405    +drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007
178406    +        Date2008 Date2009 Date2010 Date2011 Date2012 ;
MPRINT(EM_DIAGRAM):   drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 Date2010 Date2011 Date2012 ;
178407    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
178408    +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
178409    +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
178410    +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
178411    +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
178412    +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
178413    +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
178414    +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
178415    +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
178416    +Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
178417    +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
178418    +Date2010 = 0;
MPRINT(EM_DIAGRAM):   Date2010 = 0;
178419    +Date2011 = 0;
MPRINT(EM_DIAGRAM):   Date2011 = 0;
178420    +Date2012 = 0;
MPRINT(EM_DIAGRAM):   Date2012 = 0;
178421    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
178422    +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
178423    +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
178424    +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
178425    +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
178426    +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
178427    +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
178428    +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
178429    +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
178430    +   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
178431    +   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
178432    +   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
178433    +   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
178434    +   Date2012 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
178435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178437    +end;
MPRINT(EM_DIAGRAM):   end;
178438    +else do;
MPRINT(EM_DIAGRAM):   else do;
178439    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
178440    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
178441    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
178442    +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
178443    +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
178444    +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
178445    +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
178446    +               Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
178447    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178448    +            end;
MPRINT(EM_DIAGRAM):   end;
178449    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178450    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
178451    +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
178452    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178453    +               end;
MPRINT(EM_DIAGRAM):   end;
178454    +            end;
MPRINT(EM_DIAGRAM):   end;
178455    +         end;
MPRINT(EM_DIAGRAM):   end;
178456    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178457    +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
178458    +               Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
178459    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178460    +            end;
MPRINT(EM_DIAGRAM):   end;
178461    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178462    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
178463    +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
178464    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178465    +               end;
MPRINT(EM_DIAGRAM):   end;
178466    +            end;
MPRINT(EM_DIAGRAM):   end;
178467    +         end;
MPRINT(EM_DIAGRAM):   end;
178468    +      end;
MPRINT(EM_DIAGRAM):   end;
178469    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178470    +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
178471    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
178472    +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
178473    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178474    +            end;
MPRINT(EM_DIAGRAM):   end;
178475    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178476    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
178477    +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
178478    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178479    +               end;
MPRINT(EM_DIAGRAM):   end;
178480    +            end;
MPRINT(EM_DIAGRAM):   end;
178481    +         end;
MPRINT(EM_DIAGRAM):   end;
178482    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178483    +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
178484    +               Date2006 = 1;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
178485    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178486    +            end;
MPRINT(EM_DIAGRAM):   end;
178487    +         end;
MPRINT(EM_DIAGRAM):   end;
178488    +      end;
MPRINT(EM_DIAGRAM):   end;
178489    +   end;
MPRINT(EM_DIAGRAM):   end;
178490    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178491    +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
178492    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
178493    +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
178494    +               Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
178495    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178496    +            end;
MPRINT(EM_DIAGRAM):   end;
178497    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178498    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
178499    +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
178500    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178501    +               end;
MPRINT(EM_DIAGRAM):   end;
178502    +            end;
MPRINT(EM_DIAGRAM):   end;
178503    +         end;
MPRINT(EM_DIAGRAM):   end;
178504    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178505    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
178506    +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
178507    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178508    +            end;
MPRINT(EM_DIAGRAM):   end;
178509    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178510    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
178511    +                  Date2010 = 1;
MPRINT(EM_DIAGRAM):   Date2010 = 1;
178512    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178513    +               end;
MPRINT(EM_DIAGRAM):   end;
178514    +            end;
MPRINT(EM_DIAGRAM):   end;
178515    +         end;
MPRINT(EM_DIAGRAM):   end;
178516    +      end;
MPRINT(EM_DIAGRAM):   end;
178517    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178518    +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
178519    +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
178520    +               Date2011 = 1;
MPRINT(EM_DIAGRAM):   Date2011 = 1;
178521    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178522    +            end;
MPRINT(EM_DIAGRAM):   end;
178523    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178524    +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
178525    +                  Date2012 = 1;
MPRINT(EM_DIAGRAM):   Date2012 = 1;
178526    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178527    +               end;
MPRINT(EM_DIAGRAM):   end;
178528    +            end;
MPRINT(EM_DIAGRAM):   end;
178529    +         end;
MPRINT(EM_DIAGRAM):   end;
178530    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178531    +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
178532    +               Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
178533    +               Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
178534    +               Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
178535    +               Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
178536    +               Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
178537    +               Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
178538    +               Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
178539    +               Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
178540    +               Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
178541    +               Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
178542    +               Date2010 = -1;
MPRINT(EM_DIAGRAM):   Date2010 = -1;
178543    +               Date2011 = -1;
MPRINT(EM_DIAGRAM):   Date2011 = -1;
178544    +               Date2012 = -1;
MPRINT(EM_DIAGRAM):   Date2012 = -1;
178545    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178546    +            end;
MPRINT(EM_DIAGRAM):   end;
178547    +         end;
MPRINT(EM_DIAGRAM):   end;
178548    +      end;
MPRINT(EM_DIAGRAM):   end;
178549    +   end;
MPRINT(EM_DIAGRAM):   end;
178550    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
178551    +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
178552    +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
178553    +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
178554    +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
178555    +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
178556    +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
178557    +      Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
178558    +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
178559    +      Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
178560    +      Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
178561    +      Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
178562    +      Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
178563    +      Date2012 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
178564    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178565    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178566    +   end;
MPRINT(EM_DIAGRAM):   end;
178567    +end;
MPRINT(EM_DIAGRAM):   end;
178568    +
178569    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178570    +*** Checking missing input Interval
178571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
178572    +
178573    +IF NMISS(
178574    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
178575    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
178576    +
178577    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178578    +END;
MPRINT(EM_DIAGRAM):   END;
178579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178580    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
178581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178582    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178583    +   S_Population_in_thousands  =    -1.87364654722034 +     0.00004806883022 *
178584    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.87364654722034 + 0.00004806883022 * Population_in_thousands ;
178585    +END;
MPRINT(EM_DIAGRAM):   END;
178586    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178587    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
178588    +   ELSE S_Population_in_thousands
178589    +          =    -1.87364654722034 +     0.00004806883022 *
178590    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.87364654722034 + 0.00004806883022 * Population_in_thousands ;
178591    +END;
MPRINT(EM_DIAGRAM):   END;
178592    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178593    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
178594    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178596    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
178597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178598    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178599    +   H11  =    -10.5567860619218 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = -10.5567860619218 * S_Population_in_thousands ;
178600    +   H12  =     6.93674374688679 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = 6.93674374688679 * S_Population_in_thousands ;
178601    +   H13  =     7.97463271293276 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 7.97463271293276 * S_Population_in_thousands ;
178602    +   H14  =    -2.96157455818886 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -2.96157455818886 * S_Population_in_thousands ;
178603    +   H15  =      4.9967181694671 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 4.9967181694671 * S_Population_in_thousands ;
178604    +   H11  = H11  +    -11.6869571982903 * Age_group16_to_24
178605    +          +     10.2910675953121 * Age_group25_to_44
178606    +          +    -2.67490802081759 * Age_group45_to_64
178607    +          +    -1.10047437764076 * Date2000  +    -0.22760053126253 * Date2001
178608    +          +    -3.40954321604118 * Date2002  +    -0.60452251018176 * Date2003
178609    +          +    -1.03783572365717 * Date2004  +    -0.54238684306836 * Date2005
178610    +          +    -1.80290984208328 * Date2006  +     2.30444950898572 * Date2007
178611    +          +     0.28846951445795 * Date2008  +    -0.62558742417256 * Date2009
178612    +          +    -0.92614337641004 * Date2010  +    -1.14935618765427 * Date2011
178613    +          +     0.42630552474157 * Date2012 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -11.6869571982903 * Age_group16_to_24 + 10.2910675953121 * Age_group25_to_44 + -2.67490802081759 * Age_group45_to_64 + -1.10047437764076 * Date2000 + -0.22760053126253 * Date2001 + -3.40954321604118 * Date2002 + 
-0.60452251018176 * Date2003 + -1.03783572365717 * Date2004 + -0.54238684306836 * Date2005 + -1.80290984208328 * Date2006 + 2.30444950898572 * Date2007 + 0.28846951445795 * Date2008 + -0.62558742417256 * Date2009 + -0.92614337641004 * Date2010 + 
-1.14935618765427 * Date2011 + 0.42630552474157 * Date2012 ;
178614    +   H12  = H12  +      5.1341539558253 * Age_group16_to_24
178615    +          +    -1.85154808121503 * Age_group25_to_44
178616    +          +    -0.21963193751603 * Age_group45_to_64
178617    +          +     0.67968076087533 * Date2000  +     -0.2213889785313 * Date2001
178618    +          +     0.90857120287394 * Date2002  +    -0.39051573868889 * Date2003
178619    +          +    -0.88481111060544 * Date2004  +     0.82639309413488 * Date2005
178620    +          +     0.56101709444704 * Date2006  +    -1.60116887850484 * Date2007
178621    +          +    -0.14101840804294 * Date2008  +     0.57133076039339 * Date2009
178622    +          +     0.56354245938444 * Date2010  +     0.01755253253051 * Date2011
178623    +          +     0.20400190699063 * Date2012 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 5.1341539558253 * Age_group16_to_24 + -1.85154808121503 * Age_group25_to_44 + -0.21963193751603 * Age_group45_to_64 + 0.67968076087533 * Date2000 + -0.2213889785313 * Date2001 + 0.90857120287394 * Date2002 + 
-0.39051573868889 * Date2003 + -0.88481111060544 * Date2004 + 0.82639309413488 * Date2005 + 0.56101709444704 * Date2006 + -1.60116887850484 * Date2007 + -0.14101840804294 * Date2008 + 0.57133076039339 * Date2009 + 0.56354245938444 * Date2010 + 
0.01755253253051 * Date2011 + 0.20400190699063 * Date2012 ;
178624    +   H13  = H13  +     6.54896826830039 * Age_group16_to_24
178625    +          +    -5.96257556419985 * Age_group25_to_44
178626    +          +    -1.03829245308179 * Age_group45_to_64
178627    +          +      0.5273199909973 * Date2000  +    -1.16104235179963 * Date2001
178628    +          +     0.55522670162147 * Date2002  +    -1.89314202170014 * Date2003
178629    +          +    -1.01567903024112 * Date2004  +     0.38130258078793 * Date2005
178630    +          +     0.21728270575449 * Date2006  +    -2.94142752103015 * Date2007
178631    +          +    -0.77285836854397 * Date2008  +    -0.90322430952049 * Date2009
178632    +          +    -1.08347007669971 * Date2010  +    -1.55758639952604 * Date2011
178633    +          +     0.18020721840761 * Date2012 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 6.54896826830039 * Age_group16_to_24 + -5.96257556419985 * Age_group25_to_44 + -1.03829245308179 * Age_group45_to_64 + 0.5273199909973 * Date2000 + -1.16104235179963 * Date2001 + 0.55522670162147 * Date2002 + 
-1.89314202170014 * Date2003 + -1.01567903024112 * Date2004 + 0.38130258078793 * Date2005 + 0.21728270575449 * Date2006 + -2.94142752103015 * Date2007 + -0.77285836854397 * Date2008 + -0.90322430952049 * Date2009 + -1.08347007669971 * Date2010 + 
-1.55758639952604 * Date2011 + 0.18020721840761 * Date2012 ;
178634    +   H14  = H14  +     0.38670331780541 * Age_group16_to_24
178635    +          +    -1.05097959254072 * Age_group25_to_44
178636    +          +     1.96761736600783 * Age_group45_to_64
178637    +          +    -0.18360301011118 * Date2000  +     0.17293362273923 * Date2001
178638    +          +    -1.43323685000342 * Date2002  +      0.0272054881225 * Date2003
178639    +          +    -0.71125460179926 * Date2004  +    -0.77561194746101 * Date2005
178640    +          +    -0.73592366437635 * Date2006  +     1.26146631848131 * Date2007
178641    +          +     0.23163572016059 * Date2008  +    -0.17917872246374 * Date2009
178642    +          +    -0.11229699447691 * Date2010  +     0.40765262698265 * Date2011
178643    +          +    -0.75347814872141 * Date2012 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.38670331780541 * Age_group16_to_24 + -1.05097959254072 * Age_group25_to_44 + 1.96761736600783 * Age_group45_to_64 + -0.18360301011118 * Date2000 + 0.17293362273923 * Date2001 + -1.43323685000342 * Date2002 + 
0.0272054881225 * Date2003 + -0.71125460179926 * Date2004 + -0.77561194746101 * Date2005 + -0.73592366437635 * Date2006 + 1.26146631848131 * Date2007 + 0.23163572016059 * Date2008 + -0.17917872246374 * Date2009 + -0.11229699447691 * Date2010 + 
0.40765262698265 * Date2011 + -0.75347814872141 * Date2012 ;
178644    +   H15  = H15  +     6.05287136294286 * Age_group16_to_24
178645    +          +    -3.79644901080526 * Age_group25_to_44
178646    +          +     1.21876416645613 * Age_group45_to_64
178647    +          +     3.86274213785008 * Date2000  +    -3.03988820362945 * Date2001
178648    +          +     3.63422315190693 * Date2002  +    -2.86024226192798 * Date2003
178649    +          +     1.31190653109364 * Date2004  +     1.00269797540369 * Date2005
178650    +          +     2.22154927414665 * Date2006  +    -3.83979602461957 * Date2007
178651    +          +     4.44191782076897 * Date2008  +     3.47148215279693 * Date2009
178652    +          +     3.48556234924851 * Date2010  +     2.70069017647433 * Date2011
178653    +          +    -1.24140391383962 * Date2012 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 6.05287136294286 * Age_group16_to_24 + -3.79644901080526 * Age_group25_to_44 + 1.21876416645613 * Age_group45_to_64 + 3.86274213785008 * Date2000 + -3.03988820362945 * Date2001 + 3.63422315190693 * Date2002 + 
-2.86024226192798 * Date2003 + 1.31190653109364 * Date2004 + 1.00269797540369 * Date2005 + 2.22154927414665 * Date2006 + -3.83979602461957 * Date2007 + 4.44191782076897 * Date2008 + 3.47148215279693 * Date2009 + 3.48556234924851 * Date2010 + 
2.70069017647433 * Date2011 + -1.24140391383962 * Date2012 ;
178654    +   H11  =    -7.92818491829576 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -7.92818491829576 + H11 ;
178655    +   H12  =    -4.07978141494418 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.07978141494418 + H12 ;
178656    +   H13  =    -5.38343814140791 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -5.38343814140791 + H13 ;
178657    +   H14  =    -0.18602948673383 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.18602948673383 + H14 ;
178658    +   H15  =     1.32351071847022 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.32351071847022 + H15 ;
178659    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
178660    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
178661    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
178662    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
178663    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
178664    +END;
MPRINT(EM_DIAGRAM):   END;
178665    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178666    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
178667    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
178668    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
178669    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
178670    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
178671    +END;
MPRINT(EM_DIAGRAM):   END;
178672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178673    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
178674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178675    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
178676    +   P_Sum_Labor_Force_Pop  =     1202843.43179155 * H11
178677    +          +    -948614.000404475 * H12  +    -892176.275748305 * H13
178678    +          +     108381.926973916 * H14  +    -1312495.62626186 * H15 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1202843.43179155 * H11 + -948614.000404475 * H12 + -892176.275748305 * H13 + 108381.926973916 * H14 + -1312495.62626186 * H15 ;
178679    +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     3828588.58021984 *
178680    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 3828588.58021984 * S_Population_in_thousands ;
178681    +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     825881.286839296 *
178682    +        Age_group16_to_24  +       3494649.914537 * Age_group25_to_44
178683    +          +     2356092.99042497 * Age_group45_to_64
178684    +          +     161354.844294645 * Date2000  +     61402.3535329015 * Date2001
178685    +          +      142996.97687617 * Date2002  +     195762.159998255 * Date2003
178686    +          +     80843.3279672504 * Date2004  +    -7558.25823677259 * Date2005
178687    +          +     84781.8608938522 * Date2006  +     284398.657112347 * Date2007
178688    +          +     160257.474819793 * Date2008  +     9735.37887295724 * Date2009
178689    +          +     64520.7957197358 * Date2010  +     151481.035764261 * Date2011
178690    +          +     210465.484947051 * Date2012 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 825881.286839296 * Age_group16_to_24 + 3494649.914537 * Age_group25_to_44 + 2356092.99042497 * Age_group45_to_64 + 161354.844294645 * Date2000 + 61402.3535329015 * Date2001 + 
142996.97687617 * Date2002 + 195762.159998255 * Date2003 + 80843.3279672504 * Date2004 + -7558.25823677259 * Date2005 + 84781.8608938522 * Date2006 + 284398.657112347 * Date2007 + 160257.474819793 * Date2008 + 9735.37887295724 * Date2009 + 
64520.7957197358 * Date2010 + 151481.035764261 * Date2011 + 210465.484947051 * Date2012 ;
178691    +   P_Sum_Labor_Force_Pop  =     6735624.99997696 + P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6735624.99997696 + P_Sum_Labor_Force_Pop ;
178692    +END;
MPRINT(EM_DIAGRAM):   END;
178693    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
178694    +   P_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = .;
178695    +END;
MPRINT(EM_DIAGRAM):   END;
178696    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
178697    +   P_Sum_Labor_Force_Pop  =              6735625;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6735625;
178698    +END;
MPRINT(EM_DIAGRAM):   END;
178699    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
178700    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
178701    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
178702    +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = . ;
178703    +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
178704    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
178705    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
178706    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
178707    +drop
178708    +S_Population_in_thousands
178709    +H11
178710    +H12
178711    +H13
178712    +H14
178713    +H15
178714    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
178715     run;

NOTE: DATA STEP view saved on file EMWS2.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
178716     quit;
178717     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
178718     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
178719     *------------------------------------------------------------*;
178720     * Neural: Scoring TEST data;
178721     *------------------------------------------------------------*;
178722     data EMWS2.Neural_TEST
178723     / view=EMWS2.Neural_TEST
178724     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TEST / view=EMWS2.Neural_TEST ;
178725     set EMWS2.Part_TEST
178726     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TEST ;
178727     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
178728    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
178729    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
178730    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
178731    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
178732    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
178733    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
178734    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
178735    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
178736    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
178737    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
178738    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
178739    +LENGTH _WARN_ $4
178740    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
178741    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
178742    +
178743    +      label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
MPRINT(EM_DIAGRAM):   label Age_group16_to_24 = 'Dummy: Age_group=16 to 24' ;
178744    +
178745    +      label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_to_44 = 'Dummy: Age_group=25 to 44' ;
178746    +
178747    +      label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_to_64 = 'Dummy: Age_group=45 to 64' ;
178748    +
178749    +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
178750    +
178751    +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
178752    +
178753    +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
178754    +
178755    +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
178756    +
178757    +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
178758    +
178759    +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
178760    +
178761    +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
178762    +
178763    +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
178764    +
178765    +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
178766    +
178767    +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
178768    +
178769    +      label Date2010 = 'Dummy: Date=2010' ;
MPRINT(EM_DIAGRAM):   label Date2010 = 'Dummy: Date=2010' ;
178770    +
178771    +      label Date2011 = 'Dummy: Date=2011' ;
MPRINT(EM_DIAGRAM):   label Date2011 = 'Dummy: Date=2011' ;
178772    +
178773    +      label Date2012 = 'Dummy: Date=2012' ;
MPRINT(EM_DIAGRAM):   label Date2012 = 'Dummy: Date=2012' ;
178774    +
178775    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
178776    +
178777    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
178778    +
178779    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
178780    +
178781    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
178782    +
178783    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
178784    +
178785    +      label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
178786    +
178787    +      label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
178788    +
178789    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
178790    +
178791    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
178792    +drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
MPRINT(EM_DIAGRAM):   drop Age_group16_to_24 Age_group25_to_44 Age_group45_to_64 ;
178793    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
178794    +   Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
178795    +   Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
178796    +   Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
178797    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178798    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178799    +end;
MPRINT(EM_DIAGRAM):   end;
178800    +else do;
MPRINT(EM_DIAGRAM):   else do;
178801    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
178802    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
178803    +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
178804    +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
178805    +      Age_group25_to_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 1;
178806    +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
178807    +   end;
MPRINT(EM_DIAGRAM):   end;
178808    +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
178809    +      Age_group16_to_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = -1;
178810    +      Age_group25_to_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = -1;
178811    +      Age_group45_to_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = -1;
178812    +   end;
MPRINT(EM_DIAGRAM):   end;
178813    +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
178814    +      Age_group16_to_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 1;
178815    +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
178816    +      Age_group45_to_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 0;
178817    +   end;
MPRINT(EM_DIAGRAM):   end;
178818    +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
178819    +      Age_group16_to_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = 0;
178820    +      Age_group25_to_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = 0;
178821    +      Age_group45_to_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = 1;
178822    +   end;
MPRINT(EM_DIAGRAM):   end;
178823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178824    +      Age_group16_to_24 = .;
MPRINT(EM_DIAGRAM):   Age_group16_to_24 = .;
178825    +      Age_group25_to_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_to_44 = .;
178826    +      Age_group45_to_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_to_64 = .;
178827    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178828    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178829    +   end;
MPRINT(EM_DIAGRAM):   end;
178830    +end;
MPRINT(EM_DIAGRAM):   end;
178831    +
178832    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
178833    +drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007
178834    +        Date2008 Date2009 Date2010 Date2011 Date2012 ;
MPRINT(EM_DIAGRAM):   drop Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 Date2010 Date2011 Date2012 ;
178835    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
178836    +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
178837    +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
178838    +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
178839    +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
178840    +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
178841    +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
178842    +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
178843    +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
178844    +Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
178845    +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
178846    +Date2010 = 0;
MPRINT(EM_DIAGRAM):   Date2010 = 0;
178847    +Date2011 = 0;
MPRINT(EM_DIAGRAM):   Date2011 = 0;
178848    +Date2012 = 0;
MPRINT(EM_DIAGRAM):   Date2012 = 0;
178849    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
178850    +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
178851    +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
178852    +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
178853    +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
178854    +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
178855    +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
178856    +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
178857    +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
178858    +   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
178859    +   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
178860    +   Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
178861    +   Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
178862    +   Date2012 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
178863    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
178864    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178865    +end;
MPRINT(EM_DIAGRAM):   end;
178866    +else do;
MPRINT(EM_DIAGRAM):   else do;
178867    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
178868    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
178869    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
178870    +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
178871    +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
178872    +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
178873    +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
178874    +               Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
178875    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178876    +            end;
MPRINT(EM_DIAGRAM):   end;
178877    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178878    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
178879    +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
178880    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178881    +               end;
MPRINT(EM_DIAGRAM):   end;
178882    +            end;
MPRINT(EM_DIAGRAM):   end;
178883    +         end;
MPRINT(EM_DIAGRAM):   end;
178884    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178885    +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
178886    +               Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
178887    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178888    +            end;
MPRINT(EM_DIAGRAM):   end;
178889    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178890    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
178891    +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
178892    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178893    +               end;
MPRINT(EM_DIAGRAM):   end;
178894    +            end;
MPRINT(EM_DIAGRAM):   end;
178895    +         end;
MPRINT(EM_DIAGRAM):   end;
178896    +      end;
MPRINT(EM_DIAGRAM):   end;
178897    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178898    +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
178899    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
178900    +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
178901    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178902    +            end;
MPRINT(EM_DIAGRAM):   end;
178903    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178904    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
178905    +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
178906    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178907    +               end;
MPRINT(EM_DIAGRAM):   end;
178908    +            end;
MPRINT(EM_DIAGRAM):   end;
178909    +         end;
MPRINT(EM_DIAGRAM):   end;
178910    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178911    +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
178912    +               Date2006 = 1;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
178913    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178914    +            end;
MPRINT(EM_DIAGRAM):   end;
178915    +         end;
MPRINT(EM_DIAGRAM):   end;
178916    +      end;
MPRINT(EM_DIAGRAM):   end;
178917    +   end;
MPRINT(EM_DIAGRAM):   end;
178918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
178919    +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
178920    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
178921    +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
178922    +               Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
178923    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178924    +            end;
MPRINT(EM_DIAGRAM):   end;
178925    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178926    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
178927    +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
178928    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178929    +               end;
MPRINT(EM_DIAGRAM):   end;
178930    +            end;
MPRINT(EM_DIAGRAM):   end;
178931    +         end;
MPRINT(EM_DIAGRAM):   end;
178932    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178933    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
178934    +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
178935    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178936    +            end;
MPRINT(EM_DIAGRAM):   end;
178937    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178938    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
178939    +                  Date2010 = 1;
MPRINT(EM_DIAGRAM):   Date2010 = 1;
178940    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178941    +               end;
MPRINT(EM_DIAGRAM):   end;
178942    +            end;
MPRINT(EM_DIAGRAM):   end;
178943    +         end;
MPRINT(EM_DIAGRAM):   end;
178944    +      end;
MPRINT(EM_DIAGRAM):   end;
178945    +      else do;
MPRINT(EM_DIAGRAM):   else do;
178946    +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
178947    +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
178948    +               Date2011 = 1;
MPRINT(EM_DIAGRAM):   Date2011 = 1;
178949    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178950    +            end;
MPRINT(EM_DIAGRAM):   end;
178951    +            else do;
MPRINT(EM_DIAGRAM):   else do;
178952    +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
178953    +                  Date2012 = 1;
MPRINT(EM_DIAGRAM):   Date2012 = 1;
178954    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178955    +               end;
MPRINT(EM_DIAGRAM):   end;
178956    +            end;
MPRINT(EM_DIAGRAM):   end;
178957    +         end;
MPRINT(EM_DIAGRAM):   end;
178958    +         else do;
MPRINT(EM_DIAGRAM):   else do;
178959    +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
178960    +               Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
178961    +               Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
178962    +               Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
178963    +               Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
178964    +               Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
178965    +               Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
178966    +               Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
178967    +               Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
178968    +               Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
178969    +               Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
178970    +               Date2010 = -1;
MPRINT(EM_DIAGRAM):   Date2010 = -1;
178971    +               Date2011 = -1;
MPRINT(EM_DIAGRAM):   Date2011 = -1;
178972    +               Date2012 = -1;
MPRINT(EM_DIAGRAM):   Date2012 = -1;
178973    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
178974    +            end;
MPRINT(EM_DIAGRAM):   end;
178975    +         end;
MPRINT(EM_DIAGRAM):   end;
178976    +      end;
MPRINT(EM_DIAGRAM):   end;
178977    +   end;
MPRINT(EM_DIAGRAM):   end;
178978    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
178979    +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
178980    +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
178981    +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
178982    +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
178983    +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
178984    +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
178985    +      Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
178986    +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
178987    +      Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
178988    +      Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
178989    +      Date2010 = .;
MPRINT(EM_DIAGRAM):   Date2010 = .;
178990    +      Date2011 = .;
MPRINT(EM_DIAGRAM):   Date2011 = .;
178991    +      Date2012 = .;
MPRINT(EM_DIAGRAM):   Date2012 = .;
178992    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
178993    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
178994    +   end;
MPRINT(EM_DIAGRAM):   end;
178995    +end;
MPRINT(EM_DIAGRAM):   end;
178996    +
178997    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
178998    +*** Checking missing input Interval
178999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
179000    +
179001    +IF NMISS(
179002    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
179003    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
179004    +
179005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
179006    +END;
MPRINT(EM_DIAGRAM):   END;
179007    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179008    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
179009    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179010    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179011    +   S_Population_in_thousands  =    -1.87364654722034 +     0.00004806883022 *
179012    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.87364654722034 + 0.00004806883022 * Population_in_thousands ;
179013    +END;
MPRINT(EM_DIAGRAM):   END;
179014    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179015    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
179016    +   ELSE S_Population_in_thousands
179017    +          =    -1.87364654722034 +     0.00004806883022 *
179018    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.87364654722034 + 0.00004806883022 * Population_in_thousands ;
179019    +END;
MPRINT(EM_DIAGRAM):   END;
179020    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179021    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
179022    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179023    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179024    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
179025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179026    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179027    +   H11  =    -10.5567860619218 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = -10.5567860619218 * S_Population_in_thousands ;
179028    +   H12  =     6.93674374688679 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = 6.93674374688679 * S_Population_in_thousands ;
179029    +   H13  =     7.97463271293276 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 7.97463271293276 * S_Population_in_thousands ;
179030    +   H14  =    -2.96157455818886 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -2.96157455818886 * S_Population_in_thousands ;
179031    +   H15  =      4.9967181694671 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 4.9967181694671 * S_Population_in_thousands ;
179032    +   H11  = H11  +    -11.6869571982903 * Age_group16_to_24
179033    +          +     10.2910675953121 * Age_group25_to_44
179034    +          +    -2.67490802081759 * Age_group45_to_64
179035    +          +    -1.10047437764076 * Date2000  +    -0.22760053126253 * Date2001
179036    +          +    -3.40954321604118 * Date2002  +    -0.60452251018176 * Date2003
179037    +          +    -1.03783572365717 * Date2004  +    -0.54238684306836 * Date2005
179038    +          +    -1.80290984208328 * Date2006  +     2.30444950898572 * Date2007
179039    +          +     0.28846951445795 * Date2008  +    -0.62558742417256 * Date2009
179040    +          +    -0.92614337641004 * Date2010  +    -1.14935618765427 * Date2011
179041    +          +     0.42630552474157 * Date2012 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -11.6869571982903 * Age_group16_to_24 + 10.2910675953121 * Age_group25_to_44 + -2.67490802081759 * Age_group45_to_64 + -1.10047437764076 * Date2000 + -0.22760053126253 * Date2001 + -3.40954321604118 * Date2002 + 
-0.60452251018176 * Date2003 + -1.03783572365717 * Date2004 + -0.54238684306836 * Date2005 + -1.80290984208328 * Date2006 + 2.30444950898572 * Date2007 + 0.28846951445795 * Date2008 + -0.62558742417256 * Date2009 + -0.92614337641004 * Date2010 + 
-1.14935618765427 * Date2011 + 0.42630552474157 * Date2012 ;
179042    +   H12  = H12  +      5.1341539558253 * Age_group16_to_24
179043    +          +    -1.85154808121503 * Age_group25_to_44
179044    +          +    -0.21963193751603 * Age_group45_to_64
179045    +          +     0.67968076087533 * Date2000  +     -0.2213889785313 * Date2001
179046    +          +     0.90857120287394 * Date2002  +    -0.39051573868889 * Date2003
179047    +          +    -0.88481111060544 * Date2004  +     0.82639309413488 * Date2005
179048    +          +     0.56101709444704 * Date2006  +    -1.60116887850484 * Date2007
179049    +          +    -0.14101840804294 * Date2008  +     0.57133076039339 * Date2009
179050    +          +     0.56354245938444 * Date2010  +     0.01755253253051 * Date2011
179051    +          +     0.20400190699063 * Date2012 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 5.1341539558253 * Age_group16_to_24 + -1.85154808121503 * Age_group25_to_44 + -0.21963193751603 * Age_group45_to_64 + 0.67968076087533 * Date2000 + -0.2213889785313 * Date2001 + 0.90857120287394 * Date2002 + 
-0.39051573868889 * Date2003 + -0.88481111060544 * Date2004 + 0.82639309413488 * Date2005 + 0.56101709444704 * Date2006 + -1.60116887850484 * Date2007 + -0.14101840804294 * Date2008 + 0.57133076039339 * Date2009 + 0.56354245938444 * Date2010 + 
0.01755253253051 * Date2011 + 0.20400190699063 * Date2012 ;
179052    +   H13  = H13  +     6.54896826830039 * Age_group16_to_24
179053    +          +    -5.96257556419985 * Age_group25_to_44
179054    +          +    -1.03829245308179 * Age_group45_to_64
179055    +          +      0.5273199909973 * Date2000  +    -1.16104235179963 * Date2001
179056    +          +     0.55522670162147 * Date2002  +    -1.89314202170014 * Date2003
179057    +          +    -1.01567903024112 * Date2004  +     0.38130258078793 * Date2005
179058    +          +     0.21728270575449 * Date2006  +    -2.94142752103015 * Date2007
179059    +          +    -0.77285836854397 * Date2008  +    -0.90322430952049 * Date2009
179060    +          +    -1.08347007669971 * Date2010  +    -1.55758639952604 * Date2011
179061    +          +     0.18020721840761 * Date2012 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 6.54896826830039 * Age_group16_to_24 + -5.96257556419985 * Age_group25_to_44 + -1.03829245308179 * Age_group45_to_64 + 0.5273199909973 * Date2000 + -1.16104235179963 * Date2001 + 0.55522670162147 * Date2002 + 
-1.89314202170014 * Date2003 + -1.01567903024112 * Date2004 + 0.38130258078793 * Date2005 + 0.21728270575449 * Date2006 + -2.94142752103015 * Date2007 + -0.77285836854397 * Date2008 + -0.90322430952049 * Date2009 + -1.08347007669971 * Date2010 + 
-1.55758639952604 * Date2011 + 0.18020721840761 * Date2012 ;
179062    +   H14  = H14  +     0.38670331780541 * Age_group16_to_24
179063    +          +    -1.05097959254072 * Age_group25_to_44
179064    +          +     1.96761736600783 * Age_group45_to_64
179065    +          +    -0.18360301011118 * Date2000  +     0.17293362273923 * Date2001
179066    +          +    -1.43323685000342 * Date2002  +      0.0272054881225 * Date2003
179067    +          +    -0.71125460179926 * Date2004  +    -0.77561194746101 * Date2005
179068    +          +    -0.73592366437635 * Date2006  +     1.26146631848131 * Date2007
179069    +          +     0.23163572016059 * Date2008  +    -0.17917872246374 * Date2009
179070    +          +    -0.11229699447691 * Date2010  +     0.40765262698265 * Date2011
179071    +          +    -0.75347814872141 * Date2012 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.38670331780541 * Age_group16_to_24 + -1.05097959254072 * Age_group25_to_44 + 1.96761736600783 * Age_group45_to_64 + -0.18360301011118 * Date2000 + 0.17293362273923 * Date2001 + -1.43323685000342 * Date2002 + 
0.0272054881225 * Date2003 + -0.71125460179926 * Date2004 + -0.77561194746101 * Date2005 + -0.73592366437635 * Date2006 + 1.26146631848131 * Date2007 + 0.23163572016059 * Date2008 + -0.17917872246374 * Date2009 + -0.11229699447691 * Date2010 + 
0.40765262698265 * Date2011 + -0.75347814872141 * Date2012 ;
179072    +   H15  = H15  +     6.05287136294286 * Age_group16_to_24
179073    +          +    -3.79644901080526 * Age_group25_to_44
179074    +          +     1.21876416645613 * Age_group45_to_64
179075    +          +     3.86274213785008 * Date2000  +    -3.03988820362945 * Date2001
179076    +          +     3.63422315190693 * Date2002  +    -2.86024226192798 * Date2003
179077    +          +     1.31190653109364 * Date2004  +     1.00269797540369 * Date2005
179078    +          +     2.22154927414665 * Date2006  +    -3.83979602461957 * Date2007
179079    +          +     4.44191782076897 * Date2008  +     3.47148215279693 * Date2009
179080    +          +     3.48556234924851 * Date2010  +     2.70069017647433 * Date2011
179081    +          +    -1.24140391383962 * Date2012 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 6.05287136294286 * Age_group16_to_24 + -3.79644901080526 * Age_group25_to_44 + 1.21876416645613 * Age_group45_to_64 + 3.86274213785008 * Date2000 + -3.03988820362945 * Date2001 + 3.63422315190693 * Date2002 + 
-2.86024226192798 * Date2003 + 1.31190653109364 * Date2004 + 1.00269797540369 * Date2005 + 2.22154927414665 * Date2006 + -3.83979602461957 * Date2007 + 4.44191782076897 * Date2008 + 3.47148215279693 * Date2009 + 3.48556234924851 * Date2010 + 
2.70069017647433 * Date2011 + -1.24140391383962 * Date2012 ;
179082    +   H11  =    -7.92818491829576 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -7.92818491829576 + H11 ;
179083    +   H12  =    -4.07978141494418 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -4.07978141494418 + H12 ;
179084    +   H13  =    -5.38343814140791 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -5.38343814140791 + H13 ;
179085    +   H14  =    -0.18602948673383 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.18602948673383 + H14 ;
179086    +   H15  =     1.32351071847022 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.32351071847022 + H15 ;
179087    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
179088    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
179089    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
179090    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
179091    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
179092    +END;
MPRINT(EM_DIAGRAM):   END;
179093    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179094    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
179095    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
179096    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
179097    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
179098    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
179099    +END;
MPRINT(EM_DIAGRAM):   END;
179100    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179101    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
179102    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
179103    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
179104    +   P_Sum_Labor_Force_Pop  =     1202843.43179155 * H11
179105    +          +    -948614.000404475 * H12  +    -892176.275748305 * H13
179106    +          +     108381.926973916 * H14  +    -1312495.62626186 * H15 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1202843.43179155 * H11 + -948614.000404475 * H12 + -892176.275748305 * H13 + 108381.926973916 * H14 + -1312495.62626186 * H15 ;
179107    +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     3828588.58021984 *
179108    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 3828588.58021984 * S_Population_in_thousands ;
179109    +   P_Sum_Labor_Force_Pop  = P_Sum_Labor_Force_Pop  +     825881.286839296 *
179110    +        Age_group16_to_24  +       3494649.914537 * Age_group25_to_44
179111    +          +     2356092.99042497 * Age_group45_to_64
179112    +          +     161354.844294645 * Date2000  +     61402.3535329015 * Date2001
179113    +          +      142996.97687617 * Date2002  +     195762.159998255 * Date2003
179114    +          +     80843.3279672504 * Date2004  +    -7558.25823677259 * Date2005
179115    +          +     84781.8608938522 * Date2006  +     284398.657112347 * Date2007
179116    +          +     160257.474819793 * Date2008  +     9735.37887295724 * Date2009
179117    +          +     64520.7957197358 * Date2010  +     151481.035764261 * Date2011
179118    +          +     210465.484947051 * Date2012 ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = P_Sum_Labor_Force_Pop + 825881.286839296 * Age_group16_to_24 + 3494649.914537 * Age_group25_to_44 + 2356092.99042497 * Age_group45_to_64 + 161354.844294645 * Date2000 + 61402.3535329015 * Date2001 + 
142996.97687617 * Date2002 + 195762.159998255 * Date2003 + 80843.3279672504 * Date2004 + -7558.25823677259 * Date2005 + 84781.8608938522 * Date2006 + 284398.657112347 * Date2007 + 160257.474819793 * Date2008 + 9735.37887295724 * Date2009 + 
64520.7957197358 * Date2010 + 151481.035764261 * Date2011 + 210465.484947051 * Date2012 ;
179119    +   P_Sum_Labor_Force_Pop  =     6735624.99997696 + P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6735624.99997696 + P_Sum_Labor_Force_Pop ;
179120    +END;
MPRINT(EM_DIAGRAM):   END;
179121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
179122    +   P_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = .;
179123    +END;
MPRINT(EM_DIAGRAM):   END;
179124    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
179125    +   P_Sum_Labor_Force_Pop  =              6735625;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6735625;
179126    +END;
MPRINT(EM_DIAGRAM):   END;
179127    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
179128    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
179129    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
179130    +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = . ;
179131    +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
179132    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
179133    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
179134    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
179135    +drop
179136    +S_Population_in_thousands
179137    +H11
179138    +H12
179139    +H13
179140    +H14
179141    +H15
179142    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
179143     run;

NOTE: DATA STEP view saved on file EMWS2.NEURAL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
179144     quit;
179145     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
179146     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
179147     * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
179148     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Neural_TRAIN out=WORK.M3W3K0KB noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W3K0KB;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W3K0KB(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3W3K0KB;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3W3K0KB;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M10XFGE1 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M04H6J07(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   set WORK.M10XFGE1;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_SUM_LABOR_FORCE_POP") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_SUM_LABOR_FORCE_POP") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("SUM_LABOR_FORCE_POP") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
179496     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
179497     set EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO;
179498     where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
179499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

179500     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMINFO;
179501     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
179502     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
179503     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
179507     run;
179508     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
179509     set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
179510     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

179511     proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
179512     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
179513     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

179514     proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
179515     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
179516     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

179517     proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
179518     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
179519     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

179520     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
179521     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
179522     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
179523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

179524     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
179525     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
179526     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
179527     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS2.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS2.NEURAL_TEST.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
