*------------------------------------------------------------*
User:                student
Date:                December 04, 2019
Time:                13:45:41
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:37" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 04, 2019
Time:                13:45:37
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O07BI9ZG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O07BI9ZG new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:37" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:37" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
198646     proc freq data=EMWS2.Neural_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Neural_VariableSet noprint;
198647     table ROLE*LEVEL/out=WORK.NeuralMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.NeuralMETA;
198648     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.NEURAL_VARIABLESET.
NOTE: The data set WORK.NEURALMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
198649     proc print data=WORK.NeuralMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.NeuralMETA label noobs;
198650     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
198651     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
198652     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
198653     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
198654     run;
 
NOTE: There were 3 observations read from the data set WORK.NEURALMETA.
NOTE: The PROCEDURE PRINT printed page 56.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
198655     title10;
MPRINT(EM_DIAGRAM):   title10;
198656     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS2.Part_TRAIN EMWS2.Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN EMWS2 Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN EMWS2 Part_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
"No decisions defined for target "Cases_in_1000s"."
198657     proc print data = EMWS2.Ids_Cases_in_1000s_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS2.Ids_Cases_in_1000s_DM noobs label;
198658     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
198659     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
198660     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
198661     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
198662     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
198663     run;
 
NOTE: There were 3 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 57.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
198664     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M129462X;
MPRINT(EM_DIAGRAM):   set WORK.M129462X;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 3 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DD.
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
NOTE: There were 3 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DD.
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
198674     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
198675     * Neural: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural: Create decision matrix;
198676     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198677     data WORK.Cases_in_1000s(label="Cases_in_1000s");
MPRINT(EM_DIAGRAM):   data WORK.Cases_in_1000s(label="Cases_in_1000s");
198678       length   Cases_in_1000s                       8
198679                ;
MPRINT(EM_DIAGRAM):   length Cases_in_1000s 8 ;
198680
198681      Cases_in_1000s=0;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=0;
198682     output;
MPRINT(EM_DIAGRAM):   output;
198683      Cases_in_1000s=229;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=229;
198684     output;
MPRINT(EM_DIAGRAM):   output;
198685      Cases_in_1000s=114.5;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=114.5;
198686     output;
MPRINT(EM_DIAGRAM):   output;
198687     ;
MPRINT(EM_DIAGRAM):   ;
198688     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
198689     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
198690     modify Cases_in_1000s(type=PROFIT label=Cases_in_1000s);
MPRINT(EM_DIAGRAM):   modify Cases_in_1000s(type=PROFIT label= Cases_in_1000s);
MPRINT(EM_DIAGRAM):   run;
198691     run;
 
NOTE: MODIFY was successful for WORK.CASES_IN_1000S.DATA.
198692     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
198693     data EM_Neural;
MPRINT(EM_DIAGRAM):   data EM_Neural;
198694     set EMWS2.Part_TRAIN(keep=
198695     Age_group Cases_in_1000s Date Disease Gender Population_in_thousands);
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN(keep= Age_group Cases_in_1000s Date Disease Gender Population_in_thousands);
198696     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: The data set WORK.EM_NEURAL has 378 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198697     *------------------------------------------------------------* ;
198698     * Neural: DMDBClass Macro ;
198699     *------------------------------------------------------------* ;
198700     %macro DMDBClass;
198701         Age_group(ASC) Date(ASC) Disease(ASC) Gender(ASC)
198702     %mend DMDBClass;
198703     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198704     * Neural: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural: DMDBVar Macro ;
198705     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198706     %macro DMDBVar;
198707         Cases_in_1000s Population_in_thousands
198708     %mend DMDBVar;
198709     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198710     * Neural: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural: Create DMDB;
198711     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198712     proc dmdb batch data=WORK.EM_Neural
198713     dmdbcat=WORK.Neural_DMDB
198714     maxlevel = 513
198715     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural dmdbcat=WORK.Neural_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
198716     class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Date(ASC) Disease(ASC) Gender(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
198717     var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s Population_in_thousands
MPRINT(EM_DIAGRAM):  ;
198718     target
198719     Cases_in_1000s
198720     ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
198721     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 378   Memory used = 511K.
NOTE: There were 378 observations read from the data set WORK.EM_NEURAL.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
198722     quit;
198723     *--- end code ---*;
 
198724     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
198725     * Neural: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Interval Input Variables Macro ;
198726     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198727     %macro INTINPUTS;
198728         Population_in_thousands
198729     %mend INTINPUTS;
198730     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198731     * Neural: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Binary Inputs Macro ;
198732     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198733     %macro BININPUTS;
198734
198735     %mend BININPUTS;
198736     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198737     * Neural: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Nominal Inputs Macro ;
198738     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198739     %macro NOMINPUTS;
198740         Age_group Date Disease Gender
198741     %mend NOMINPUTS;
198742     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198743     * Neural: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Ordinal Inputs Macro ;
198744     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
198745     %macro ORDINPUTS;
198746
198747     %mend ORDINPUTS;
198748     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198749     * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
198750     ;
MPRINT(EM_DIAGRAM):   ;
198751     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198752     proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB
198753     validdata = EMWS2.Part_VALIDATE
198754     random=12345
198755     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB validdata = EMWS2.Part_VALIDATE random=12345 ;
198756     nloptions
198757     ;
MPRINT(EM_DIAGRAM):   nloptions ;
198758     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
198759     netopts
198760     decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
198761     input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Population_in_thousands
198762     ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
198763     input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   Age_group Date Disease Gender
198764     ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
198765     target
198766     Cases_in_1000s
198767     / level=interval id=intervalTargets
198768     bias
198769     ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s / level=interval id=intervalTargets bias ;
198770     arch MLP
198771     Hidden=5
198772     direct
198773     ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=5 direct ;
198774     Prelim 5 preiter=10
198775     pretime=3600
198776     Outest=EMWS2.Neural_PRELIM_OUTEST
198777     ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS2.Neural_PRELIM_OUTEST ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set EMWS2.NEURAL_PRELIM_OUTEST has 11 observations and 206 variables.
198778     save network=EMWS2.Neural_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS2.Neural_NETWORK.dm_neural;
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been closed.
198779     train Maxiter=50
198780     maxtime=14400
198781     Outest=EMWS2.Neural_outest estiter=1
198782     Outfit=EMWS2.Neural_OUTFIT
198783     ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS2.Neural_outest estiter=1 Outfit=EMWS2.Neural_OUTFIT ;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set EMWS2.NEURAL_OUTEST has 53 observations and 206 variables.
NOTE: The data set EMWS2.NEURAL_OUTFIT has 104 observations and 36 variables.
198784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL has 378 observations and 6 variables.
NOTE: The data set EMWS2.PART_VALIDATE has 284 observations and 7 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 58-61.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.40 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
198785     quit;
 
198786     proc sort data=EMWS2.Neural_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Neural_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural;
198787     by _VMISC_;
MPRINT(EM_DIAGRAM):   by _VMISC_;
198788     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
198789     %GLOBAL ITER;
198790     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
198791     set fit_Neural(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural(obs=1);
198792     call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
198793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
198794     data EMWS2.Neural_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_INITIAL;
198795     set EMWS2.Neural_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_outest(where=(_ITER_ eq 0 and _OBJ_ ne .));
198796     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_OUTEST.
      WHERE (_ITER_=0) and (_OBJ_ not = .);
NOTE: The data set EMWS2.NEURAL_INITIAL has 1 observations and 206 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
198797     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
198798     * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
198799     ;
MPRINT(EM_DIAGRAM):   ;
198800     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198801     proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB
198802     validdata = EMWS2.Part_VALIDATE
198803     network = EMWS2.Neural_NETWORK.dm_neural
198804     random=12345
198805     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB validdata = EMWS2.Part_VALIDATE network = EMWS2.Neural_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been closed.
198806     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
198807     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
198808     initial inest=EMWS2.Neural_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS2.Neural_INITIAL;
NOTE: The data set EMWS2.NEURAL_INITIAL has 1 observations and 206 variables.
198809     train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
198810     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\SCORECODE.sas"
198811     group=Neural
198812     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\SCORECODE.sas" group=Neural ;
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\SCORECODE.sas opened.
198813     ;
MPRINT(EM_DIAGRAM):   ;
198814     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\RESIDUALSCORECODE.sas"
198815     group=Neural
198816     residual
198817     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\RESIDUALSCORECODE.sas" group=Neural residual ;
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\RESIDUALSCORECODE.sas opened.
198818     ;
MPRINT(EM_DIAGRAM):   ;
198819     score data=EMWS2.Part_TRAIN out=_NULL_
198820     outfit=WORK.FIT1
198821     role=TRAIN
198822     outkey=EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Part_TRAIN out=_NULL_ outfit=WORK.FIT1 role=TRAIN outkey=EMWS2.Neural_OUTKEY;
NOTE: The data set EMWS2.NEURAL_OUTKEY has 39 observations and 8 variables.
NOTE: The data set EMWS2.PART_TRAIN has 378 observations and 7 variables.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
198823     score data=EMWS2.Part_VALIDATE out=_NULL_
198824     outfit=WORK.FIT2
198825     role=VALID
198826     outkey=EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Part_VALIDATE out=_NULL_ outfit=WORK.FIT2 role=VALID outkey=EMWS2.Neural_OUTKEY;
NOTE: The data set EMWS2.NEURAL_OUTKEY has 39 observations and 8 variables.
NOTE: The data set EMWS2.PART_VALIDATE has 284 observations and 7 variables.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
198827     score data=EMWS2.Part_TEST out=_NULL_
198828     outfit=WORK.FIT3
198829     role=TEST
198830     outkey=EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Part_TEST out=_NULL_ outfit=WORK.FIT3 role=TEST outkey=EMWS2.Neural_OUTKEY;
NOTE: The data set EMWS2.NEURAL_OUTKEY has 39 observations and 8 variables.
NOTE: The data set EMWS2.PART_TEST has 283 observations and 7 variables.
NOTE: The data set WORK.FIT3 has 2 observations and 25 variables.
198831     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL has 378 observations and 6 variables.
NOTE: The data set EMWS2.PART_VALIDATE has 284 observations and 7 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
198832     quit;
198833     data EMWS2.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_OUTFIT;
198834     merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
198835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: There were 2 observations read from the data set WORK.FIT3.
NOTE: The data set EMWS2.NEURAL_OUTFIT has 2 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
198836     data EMWS2.Neural_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMESTIMATE;
198837     set EMWS2.Neural_outest;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_outest;
198838     if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
198839     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS2.NEURAL_OUTEST.
NOTE: The data set EMWS2.NEURAL_EMESTIMATE has 52 observations and 206 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
198840     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
198841     delete EM_Neural;
MPRINT(EM_DIAGRAM):   delete EM_Neural;
198842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_NEURAL (memtype=DATA).
198843     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
198844     data EMWS2.Neural_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
198845     set fit_Neural;
MPRINT(EM_DIAGRAM):   set fit_Neural;
198846     attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
198847     attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
198848     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK.FIT_NEURAL.
NOTE: The data set EMWS2.NEURAL_PLOTDS has 52 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
198849     proc sort data=EMWS2.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_PLOTDS;
198850     by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
198851     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_PLOTDS.
NOTE: The data set EMWS2.NEURAL_PLOTDS has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
198852     data EMWS2.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_PLOTDS;
198853     set EMWS2.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_PLOTDS;
198854     drop _MISC_;
MPRINT(EM_DIAGRAM):   drop _MISC_;
198855     drop _WRONG_;
MPRINT(EM_DIAGRAM):   drop _WRONG_;
198856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_PLOTDS.
NOTE: The data set EMWS2.NEURAL_PLOTDS has 52 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
198857     data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 0) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 0) );
198858     set EMWS2.Neural_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMESTIMATE;
198859     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 198 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
198860     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
198861     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
198862     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 198 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
198863     proc transpose data=tempweight out=EMWS2.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS2.Neural_WEIGHTDS;
198864     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
198865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS2.NEURAL_WEIGHTDS has 196 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
198866     data EMWS2.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_WEIGHTDS;
198867     set EMWS2.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_WEIGHTDS;
198868     FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
198869     TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
198870     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
198871     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
198872     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
198873        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
198874     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
198875     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 196 observations read from the data set EMWS2.NEURAL_WEIGHTDS.
NOTE: The data set EMWS2.NEURAL_WEIGHTDS has 191 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
198876     proc sort data=EMWS2.Neural_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_WEIGHTDS nodupkey;
198877     by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
198878     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 191 observations read from the data set EMWS2.NEURAL_WEIGHTDS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.NEURAL_WEIGHTDS has 191 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 04, 2019
Time:                13:45:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O39NJE1U "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O39NJE1U new;
MPRINT(EM_DIAGRAM):   run;
198980     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
198981     set EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_OUTKEY;
198982     if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
198983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set EMWS2.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
198984     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
198985     *------------------------------------------------------------*;
198986     * Neural: Scoring DATA data;
198987     *------------------------------------------------------------*;
198988     data EMWS2.Neural_TRAIN
198989     / view=EMWS2.Neural_TRAIN
198990     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TRAIN / view=EMWS2.Neural_TRAIN ;
198991     set EMWS2.Part_TRAIN
198992     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN ;
198993     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
198994    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
198995    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
198996    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
198997    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
198998    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
198999    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
199000    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
199001    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
199002    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
199003    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
199004    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
199005    +LENGTH _WARN_ $4
199006    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
199007    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
199008    +
199009    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
199010    +
199011    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
199012    +
199013    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
199014    +
199015    +      label Date1990 = 'Dummy: Date=1990' ;
MPRINT(EM_DIAGRAM):   label Date1990 = 'Dummy: Date=1990' ;
199016    +
199017    +      label Date1991 = 'Dummy: Date=1991' ;
MPRINT(EM_DIAGRAM):   label Date1991 = 'Dummy: Date=1991' ;
199018    +
199019    +      label Date1992 = 'Dummy: Date=1992' ;
MPRINT(EM_DIAGRAM):   label Date1992 = 'Dummy: Date=1992' ;
199020    +
199021    +      label Date1993 = 'Dummy: Date=1993' ;
MPRINT(EM_DIAGRAM):   label Date1993 = 'Dummy: Date=1993' ;
199022    +
199023    +      label Date1994 = 'Dummy: Date=1994' ;
MPRINT(EM_DIAGRAM):   label Date1994 = 'Dummy: Date=1994' ;
199024    +
199025    +      label Date1995 = 'Dummy: Date=1995' ;
MPRINT(EM_DIAGRAM):   label Date1995 = 'Dummy: Date=1995' ;
199026    +
199027    +      label Date1996 = 'Dummy: Date=1996' ;
MPRINT(EM_DIAGRAM):   label Date1996 = 'Dummy: Date=1996' ;
199028    +
199029    +      label Date1997 = 'Dummy: Date=1997' ;
MPRINT(EM_DIAGRAM):   label Date1997 = 'Dummy: Date=1997' ;
199030    +
199031    +      label Date1998 = 'Dummy: Date=1998' ;
MPRINT(EM_DIAGRAM):   label Date1998 = 'Dummy: Date=1998' ;
199032    +
199033    +      label Date1999 = 'Dummy: Date=1999' ;
MPRINT(EM_DIAGRAM):   label Date1999 = 'Dummy: Date=1999' ;
199034    +
199035    +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
199036    +
199037    +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
199038    +
199039    +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
199040    +
199041    +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
199042    +
199043    +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
199044    +
199045    +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
199046    +
199047    +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
199048    +
199049    +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
199050    +
199051    +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
199052    +
199053    +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
199054    +
199055    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
199056    +
199057    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
199058    +
199059    +      label DiseaseDementia_and_Alzheimer_ =
199060    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
199061    +
199062    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
199063    +
199064    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
199065    +
199066    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
199067    +
199068    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
199069    +
199070    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
199071    +
199072    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
199073    +
199074    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
199075    +
199076    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
199077    +
199078    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
199079    +
199080    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
199081    +
199082    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
199083    +
199084    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
199085    +drop Age_group0_17 Age_group18_24 Age_group25_44 ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 ;
199086    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
199087    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
199088    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
199089    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
199090    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199091    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199092    +end;
MPRINT(EM_DIAGRAM):   end;
199093    +else do;
MPRINT(EM_DIAGRAM):   else do;
199094    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
199095    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
199096    +   if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '18-24' then do;
199097    +      Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
199098    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
199099    +      Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
199100    +   end;
MPRINT(EM_DIAGRAM):   end;
199101    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
199102    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
199103    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
199104    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
199105    +   end;
MPRINT(EM_DIAGRAM):   end;
199106    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
199107    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
199108    +      Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
199109    +      Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
199110    +   end;
MPRINT(EM_DIAGRAM):   end;
199111    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
199112    +      Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
199113    +      Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
199114    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
199115    +   end;
MPRINT(EM_DIAGRAM):   end;
199116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199117    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
199118    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
199119    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
199120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199122    +   end;
MPRINT(EM_DIAGRAM):   end;
199123    +end;
MPRINT(EM_DIAGRAM):   end;
199124    +
199125    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
199126    +drop Date1990 Date1991 Date1992 Date1993 Date1994 Date1995 Date1996 Date1997
199127    +        Date1998 Date1999 Date2000 Date2001 Date2002 Date2003 Date2004
199128    +        Date2005 Date2006 Date2007 Date2008 Date2009 ;
MPRINT(EM_DIAGRAM):   drop Date1990 Date1991 Date1992 Date1993 Date1994 Date1995 Date1996 Date1997 Date1998 Date1999 Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 ;
199129    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
199130    +Date1990 = 0;
MPRINT(EM_DIAGRAM):   Date1990 = 0;
199131    +Date1991 = 0;
MPRINT(EM_DIAGRAM):   Date1991 = 0;
199132    +Date1992 = 0;
MPRINT(EM_DIAGRAM):   Date1992 = 0;
199133    +Date1993 = 0;
MPRINT(EM_DIAGRAM):   Date1993 = 0;
199134    +Date1994 = 0;
MPRINT(EM_DIAGRAM):   Date1994 = 0;
199135    +Date1995 = 0;
MPRINT(EM_DIAGRAM):   Date1995 = 0;
199136    +Date1996 = 0;
MPRINT(EM_DIAGRAM):   Date1996 = 0;
199137    +Date1997 = 0;
MPRINT(EM_DIAGRAM):   Date1997 = 0;
199138    +Date1998 = 0;
MPRINT(EM_DIAGRAM):   Date1998 = 0;
199139    +Date1999 = 0;
MPRINT(EM_DIAGRAM):   Date1999 = 0;
199140    +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
199141    +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
199142    +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
199143    +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
199144    +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
199145    +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
199146    +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
199147    +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
199148    +Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
199149    +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
199150    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
199151    +   Date1990 = .;
MPRINT(EM_DIAGRAM):   Date1990 = .;
199152    +   Date1991 = .;
MPRINT(EM_DIAGRAM):   Date1991 = .;
199153    +   Date1992 = .;
MPRINT(EM_DIAGRAM):   Date1992 = .;
199154    +   Date1993 = .;
MPRINT(EM_DIAGRAM):   Date1993 = .;
199155    +   Date1994 = .;
MPRINT(EM_DIAGRAM):   Date1994 = .;
199156    +   Date1995 = .;
MPRINT(EM_DIAGRAM):   Date1995 = .;
199157    +   Date1996 = .;
MPRINT(EM_DIAGRAM):   Date1996 = .;
199158    +   Date1997 = .;
MPRINT(EM_DIAGRAM):   Date1997 = .;
199159    +   Date1998 = .;
MPRINT(EM_DIAGRAM):   Date1998 = .;
199160    +   Date1999 = .;
MPRINT(EM_DIAGRAM):   Date1999 = .;
199161    +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
199162    +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
199163    +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
199164    +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
199165    +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
199166    +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
199167    +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
199168    +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
199169    +   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
199170    +   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
199171    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199172    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199173    +end;
MPRINT(EM_DIAGRAM):   end;
199174    +else do;
MPRINT(EM_DIAGRAM):   else do;
199175    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
199176    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
199177    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
199178    +   if _dm10 <= '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2000' then do;
199179    +      if _dm10 <= '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1995' then do;
199180    +         if _dm10 <= '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1992' then do;
199181    +            if _dm10 <= '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1991' then do;
199182    +               if _dm10 = '1990'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1990' then do;
199183    +                  Date1990 = 1;
MPRINT(EM_DIAGRAM):   Date1990 = 1;
199184    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199185    +               end;
MPRINT(EM_DIAGRAM):   end;
199186    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199187    +                  if _dm10 = '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1991' then do;
199188    +                     Date1991 = 1;
MPRINT(EM_DIAGRAM):   Date1991 = 1;
199189    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199190    +                  end;
MPRINT(EM_DIAGRAM):   end;
199191    +               end;
MPRINT(EM_DIAGRAM):   end;
199192    +            end;
MPRINT(EM_DIAGRAM):   end;
199193    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199194    +               if _dm10 = '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1992' then do;
199195    +                  Date1992 = 1;
MPRINT(EM_DIAGRAM):   Date1992 = 1;
199196    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199197    +               end;
MPRINT(EM_DIAGRAM):   end;
199198    +            end;
MPRINT(EM_DIAGRAM):   end;
199199    +         end;
MPRINT(EM_DIAGRAM):   end;
199200    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199201    +            if _dm10 <= '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1994' then do;
199202    +               if _dm10 = '1993'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1993' then do;
199203    +                  Date1993 = 1;
MPRINT(EM_DIAGRAM):   Date1993 = 1;
199204    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199205    +               end;
MPRINT(EM_DIAGRAM):   end;
199206    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199207    +                  if _dm10 = '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1994' then do;
199208    +                     Date1994 = 1;
MPRINT(EM_DIAGRAM):   Date1994 = 1;
199209    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199210    +                  end;
MPRINT(EM_DIAGRAM):   end;
199211    +               end;
MPRINT(EM_DIAGRAM):   end;
199212    +            end;
MPRINT(EM_DIAGRAM):   end;
199213    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199214    +               if _dm10 = '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1995' then do;
199215    +                  Date1995 = 1;
MPRINT(EM_DIAGRAM):   Date1995 = 1;
199216    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199217    +               end;
MPRINT(EM_DIAGRAM):   end;
199218    +            end;
MPRINT(EM_DIAGRAM):   end;
199219    +         end;
MPRINT(EM_DIAGRAM):   end;
199220    +      end;
MPRINT(EM_DIAGRAM):   end;
199221    +      else do;
MPRINT(EM_DIAGRAM):   else do;
199222    +         if _dm10 <= '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1998' then do;
199223    +            if _dm10 <= '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1997' then do;
199224    +               if _dm10 = '1996'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1996' then do;
199225    +                  Date1996 = 1;
MPRINT(EM_DIAGRAM):   Date1996 = 1;
199226    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199227    +               end;
MPRINT(EM_DIAGRAM):   end;
199228    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199229    +                  if _dm10 = '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1997' then do;
199230    +                     Date1997 = 1;
MPRINT(EM_DIAGRAM):   Date1997 = 1;
199231    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199232    +                  end;
MPRINT(EM_DIAGRAM):   end;
199233    +               end;
MPRINT(EM_DIAGRAM):   end;
199234    +            end;
MPRINT(EM_DIAGRAM):   end;
199235    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199236    +               if _dm10 = '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1998' then do;
199237    +                  Date1998 = 1;
MPRINT(EM_DIAGRAM):   Date1998 = 1;
199238    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199239    +               end;
MPRINT(EM_DIAGRAM):   end;
199240    +            end;
MPRINT(EM_DIAGRAM):   end;
199241    +         end;
MPRINT(EM_DIAGRAM):   end;
199242    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199243    +            if _dm10 = '1999'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1999' then do;
199244    +               Date1999 = 1;
MPRINT(EM_DIAGRAM):   Date1999 = 1;
199245    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199246    +            end;
MPRINT(EM_DIAGRAM):   end;
199247    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199248    +               if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
199249    +                  Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
199250    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199251    +               end;
MPRINT(EM_DIAGRAM):   end;
199252    +            end;
MPRINT(EM_DIAGRAM):   end;
199253    +         end;
MPRINT(EM_DIAGRAM):   end;
199254    +      end;
MPRINT(EM_DIAGRAM):   end;
199255    +   end;
MPRINT(EM_DIAGRAM):   end;
199256    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199257    +      if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
199258    +         if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
199259    +            if _dm10 <= '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2002' then do;
199260    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
199261    +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
199262    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199263    +               end;
MPRINT(EM_DIAGRAM):   end;
199264    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199265    +                  if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
199266    +                     Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
199267    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199268    +                  end;
MPRINT(EM_DIAGRAM):   end;
199269    +               end;
MPRINT(EM_DIAGRAM):   end;
199270    +            end;
MPRINT(EM_DIAGRAM):   end;
199271    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199272    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
199273    +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
199274    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199275    +               end;
MPRINT(EM_DIAGRAM):   end;
199276    +            end;
MPRINT(EM_DIAGRAM):   end;
199277    +         end;
MPRINT(EM_DIAGRAM):   end;
199278    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199279    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
199280    +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
199281    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199282    +            end;
MPRINT(EM_DIAGRAM):   end;
199283    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199284    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
199285    +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
199286    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199287    +               end;
MPRINT(EM_DIAGRAM):   end;
199288    +            end;
MPRINT(EM_DIAGRAM):   end;
199289    +         end;
MPRINT(EM_DIAGRAM):   end;
199290    +      end;
MPRINT(EM_DIAGRAM):   end;
199291    +      else do;
MPRINT(EM_DIAGRAM):   else do;
199292    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
199293    +            if _dm10 <= '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2007' then do;
199294    +               if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
199295    +                  Date2006 = 1;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
199296    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199297    +               end;
MPRINT(EM_DIAGRAM):   end;
199298    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199299    +                  if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
199300    +                     Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
199301    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199302    +                  end;
MPRINT(EM_DIAGRAM):   end;
199303    +               end;
MPRINT(EM_DIAGRAM):   end;
199304    +            end;
MPRINT(EM_DIAGRAM):   end;
199305    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199306    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
199307    +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
199308    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199309    +               end;
MPRINT(EM_DIAGRAM):   end;
199310    +            end;
MPRINT(EM_DIAGRAM):   end;
199311    +         end;
MPRINT(EM_DIAGRAM):   end;
199312    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199313    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
199314    +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
199315    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199316    +            end;
MPRINT(EM_DIAGRAM):   end;
199317    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199318    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
199319    +                  Date1990 = -1;
MPRINT(EM_DIAGRAM):   Date1990 = -1;
199320    +                  Date1991 = -1;
MPRINT(EM_DIAGRAM):   Date1991 = -1;
199321    +                  Date1992 = -1;
MPRINT(EM_DIAGRAM):   Date1992 = -1;
199322    +                  Date1993 = -1;
MPRINT(EM_DIAGRAM):   Date1993 = -1;
199323    +                  Date1994 = -1;
MPRINT(EM_DIAGRAM):   Date1994 = -1;
199324    +                  Date1995 = -1;
MPRINT(EM_DIAGRAM):   Date1995 = -1;
199325    +                  Date1996 = -1;
MPRINT(EM_DIAGRAM):   Date1996 = -1;
199326    +                  Date1997 = -1;
MPRINT(EM_DIAGRAM):   Date1997 = -1;
199327    +                  Date1998 = -1;
MPRINT(EM_DIAGRAM):   Date1998 = -1;
199328    +                  Date1999 = -1;
MPRINT(EM_DIAGRAM):   Date1999 = -1;
199329    +                  Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
199330    +                  Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
199331    +                  Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
199332    +                  Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
199333    +                  Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
199334    +                  Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
199335    +                  Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
199336    +                  Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
199337    +                  Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
199338    +                  Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
199339    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199340    +               end;
MPRINT(EM_DIAGRAM):   end;
199341    +            end;
MPRINT(EM_DIAGRAM):   end;
199342    +         end;
MPRINT(EM_DIAGRAM):   end;
199343    +      end;
MPRINT(EM_DIAGRAM):   end;
199344    +   end;
MPRINT(EM_DIAGRAM):   end;
199345    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
199346    +      Date1990 = .;
MPRINT(EM_DIAGRAM):   Date1990 = .;
199347    +      Date1991 = .;
MPRINT(EM_DIAGRAM):   Date1991 = .;
199348    +      Date1992 = .;
MPRINT(EM_DIAGRAM):   Date1992 = .;
199349    +      Date1993 = .;
MPRINT(EM_DIAGRAM):   Date1993 = .;
199350    +      Date1994 = .;
MPRINT(EM_DIAGRAM):   Date1994 = .;
199351    +      Date1995 = .;
MPRINT(EM_DIAGRAM):   Date1995 = .;
199352    +      Date1996 = .;
MPRINT(EM_DIAGRAM):   Date1996 = .;
199353    +      Date1997 = .;
MPRINT(EM_DIAGRAM):   Date1997 = .;
199354    +      Date1998 = .;
MPRINT(EM_DIAGRAM):   Date1998 = .;
199355    +      Date1999 = .;
MPRINT(EM_DIAGRAM):   Date1999 = .;
199356    +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
199357    +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
199358    +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
199359    +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
199360    +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
199361    +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
199362    +      Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
199363    +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
199364    +      Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
199365    +      Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
199366    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199367    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199368    +   end;
MPRINT(EM_DIAGRAM):   end;
199369    +end;
MPRINT(EM_DIAGRAM):   end;
199370    +
199371    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
199372    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
199373    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
199374    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
199375    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
199376    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
199377    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
199378    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
199379    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
199380    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
199381    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
199382    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
199383    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
199384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199386    +end;
MPRINT(EM_DIAGRAM):   end;
199387    +else do;
MPRINT(EM_DIAGRAM):   else do;
199388    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
199389    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
199390    +   if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'ASTHMA' then do;
199391    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
199392    +   end;
MPRINT(EM_DIAGRAM):   end;
199393    +   else if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
199394    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
199395    +   end;
MPRINT(EM_DIAGRAM):   end;
199396    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
199397    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
199398    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
199399    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
199400    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
199401    +   end;
MPRINT(EM_DIAGRAM):   end;
199402    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
199403    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
199404    +   end;
MPRINT(EM_DIAGRAM):   end;
199405    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
199406    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
199407    +   end;
MPRINT(EM_DIAGRAM):   end;
199408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199409    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
199410    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
199411    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
199412    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
199413    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199414    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199415    +   end;
MPRINT(EM_DIAGRAM):   end;
199416    +end;
MPRINT(EM_DIAGRAM):   end;
199417    +
199418    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
199419    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
199420    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
199421    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
199422    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
199423    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199424    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199425    +end;
MPRINT(EM_DIAGRAM):   end;
199426    +else do;
MPRINT(EM_DIAGRAM):   else do;
199427    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
199428    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
199429    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
199430    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
199431    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
199432    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
199433    +   end;
MPRINT(EM_DIAGRAM):   end;
199434    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
199435    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
199436    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
199437    +   end;
MPRINT(EM_DIAGRAM):   end;
199438    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
199439    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
199440    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
199441    +   end;
MPRINT(EM_DIAGRAM):   end;
199442    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199443    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
199444    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
199445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199447    +   end;
MPRINT(EM_DIAGRAM):   end;
199448    +end;
MPRINT(EM_DIAGRAM):   end;
199449    +
199450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199451    +*** Checking missing input Interval
199452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
199453    +
199454    +IF NMISS(
199455    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
199456    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
199457    +
199458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199459    +END;
MPRINT(EM_DIAGRAM):   END;
199460    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199461    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
199462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199463    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
199464    +   S_Population_in_thousands  =    -1.07937284241798 +     0.00004492080679 *
199465    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.07937284241798 + 0.00004492080679 * Population_in_thousands ;
199466    +END;
MPRINT(EM_DIAGRAM):   END;
199467    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
199468    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
199469    +   ELSE S_Population_in_thousands
199470    +          =    -1.07937284241798 +     0.00004492080679 *
199471    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.07937284241798 + 0.00004492080679 * Population_in_thousands ;
199472    +END;
MPRINT(EM_DIAGRAM):   END;
199473    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199474    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
199475    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199476    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199477    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
199478    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199479    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
199480    +   H11  =    -4.69352130447972 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = -4.69352130447972 * S_Population_in_thousands ;
199481    +   H12  =     5.06599717292821 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = 5.06599717292821 * S_Population_in_thousands ;
199482    +   H13  =     9.80634004124476 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 9.80634004124476 * S_Population_in_thousands ;
199483    +   H14  =     3.31228883566718 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = 3.31228883566718 * S_Population_in_thousands ;
199484    +   H15  =     2.65204463622264 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 2.65204463622264 * S_Population_in_thousands ;
199485    +   H11  = H11  +    -2.07549456644559 * Age_group0_17
199486    +          +     1.89028492207963 * Age_group18_24  +     0.22053737030127 *
199487    +        Age_group25_44  +     0.69659443678365 * Date1990
199488    +          +     0.76034786483757 * Date1991  +      1.5555930805213 * Date1992
199489    +          +     0.48544690836429 * Date1993  +     0.39299434842502 * Date1994
199490    +          +     0.69548660210847 * Date1995  +     0.64404991008731 * Date1996
199491    +          +     0.81679921845806 * Date1997  +     0.53332314724246 * Date1998
199492    +          +     1.07150299228461 * Date1999  +      0.7453160964498 * Date2000
199493    +          +     0.90624856895714 * Date2001  +     1.25713648304045 * Date2002
199494    +          +     0.83267142151879 * Date2003  +       1.214226605094 * Date2004
199495    +          +     1.09288669379468 * Date2005  +     0.28321292187401 * Date2006
199496    +          +     1.13140317909567 * Date2007  +     1.02313288593481 * Date2008
199497    +          +     0.99491883505772 * Date2009  +    -7.71401550934144 *
199498    +        DiseaseAsthma  +     1.59964499587479 * DiseaseCancer__all
199499    +          +     0.70480948708574 * DiseaseDementia_and_Alzheimer_
199500    +          +     0.72797177718724 * DiseaseOsteoarthritis
199501    +          +     0.46530598096977 * GenderAll  +     1.18299451025555 *
199502    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -2.07549456644559 * Age_group0_17 + 1.89028492207963 * Age_group18_24 + 0.22053737030127 * Age_group25_44 + 0.69659443678365 * Date1990 + 0.76034786483757 * Date1991 + 1.5555930805213 * Date1992 + 0.48544690836429 *
Date1993 + 0.39299434842502 * Date1994 + 0.69548660210847 * Date1995 + 0.64404991008731 * Date1996 + 0.81679921845806 * Date1997 + 0.53332314724246 * Date1998 + 1.07150299228461 * Date1999 + 0.7453160964498 * Date2000 + 0.90624856895714 * Date2001 +
1.25713648304045 * Date2002 + 0.83267142151879 * Date2003 + 1.214226605094 * Date2004 + 1.09288669379468 * Date2005 + 0.28321292187401 * Date2006 + 1.13140317909567 * Date2007 + 1.02313288593481 * Date2008 + 0.99491883505772 * Date2009 + -7.71401550934144
* DiseaseAsthma + 1.59964499587479 * DiseaseCancer__all + 0.70480948708574 * DiseaseDementia_and_Alzheimer_ + 0.72797177718724 * DiseaseOsteoarthritis + 0.46530598096977 * GenderAll + 1.18299451025555 * GenderFemale ;
199503    +   H12  = H12  +      7.3312221277029 * Age_group0_17
199504    +          +     5.73850136241549 * Age_group18_24  +     10.6973185841868 *
199505    +        Age_group25_44  +     -1.3553395840109 * Date1990
199506    +          +    -1.64661531486796 * Date1991  +    -0.38696387838105 * Date1992
199507    +          +    -1.07583510589596 * Date1993  +    -1.20049741606894 * Date1994
199508    +          +    -1.48670117795664 * Date1995  +     0.56202204438682 * Date1996
199509    +          +    -0.70377483370229 * Date1997  +    -1.70290790819299 * Date1998
199510    +          +    -2.15232681013713 * Date1999  +     -1.3734118962421 * Date2000
199511    +          +    -1.53351964013452 * Date2001  +    -2.41748704002257 * Date2002
199512    +          +    -0.09137745061889 * Date2003  +    -1.22928905028318 * Date2004
199513    +          +    -2.52486294132669 * Date2005  +    -2.83313300695631 * Date2006
199514    +          +    -2.38969371440024 * Date2007  +    -1.97455468478895 * Date2008
199515    +          +    -2.79577318369912 * Date2009  +     10.0930545342347 *
199516    +        DiseaseAsthma  +     2.53463690769088 * DiseaseCancer__all
199517    +          +    -5.44974536050982 * DiseaseDementia_and_Alzheimer_
199518    +          +    -6.66366786440493 * DiseaseOsteoarthritis
199519    +          +    -13.7993284481877 * GenderAll  +    -11.2856836835284 *
199520    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 7.3312221277029 * Age_group0_17 + 5.73850136241549 * Age_group18_24 + 10.6973185841868 * Age_group25_44 + -1.3553395840109 * Date1990 + -1.64661531486796 * Date1991 + -0.38696387838105 * Date1992 + -1.07583510589596 *
Date1993 + -1.20049741606894 * Date1994 + -1.48670117795664 * Date1995 + 0.56202204438682 * Date1996 + -0.70377483370229 * Date1997 + -1.70290790819299 * Date1998 + -2.15232681013713 * Date1999 + -1.3734118962421 * Date2000 + -1.53351964013452 * Date2001
+ -2.41748704002257 * Date2002 + -0.09137745061889 * Date2003 + -1.22928905028318 * Date2004 + -2.52486294132669 * Date2005 + -2.83313300695631 * Date2006 + -2.38969371440024 * Date2007 + -1.97455468478895 * Date2008 + -2.79577318369912 * Date2009 +
10.0930545342347 * DiseaseAsthma + 2.53463690769088 * DiseaseCancer__all + -5.44974536050982 * DiseaseDementia_and_Alzheimer_ + -6.66366786440493 * DiseaseOsteoarthritis + -13.7993284481877 * GenderAll + -11.2856836835284 * GenderFemale ;
199521    +   H13  = H13  +     11.5320728758474 * Age_group0_17
199522    +          +     2.55083959476408 * Age_group18_24  +     9.45497681685949 *
199523    +        Age_group25_44  +    -2.22305273880915 * Date1990
199524    +          +     0.71228320972948 * Date1991  +    -1.69671242363179 * Date1992
199525    +          +    -2.07096834302197 * Date1993  +    -1.48125572009704 * Date1994
199526    +          +     -0.8875899757714 * Date1995  +      -2.421179817414 * Date1996
199527    +          +    -1.64953820814596 * Date1997  +     0.05899063834564 * Date1998
199528    +          +    -0.65976162782464 * Date1999  +    -2.12021732370381 * Date2000
199529    +          +    -0.23218871697767 * Date2001  +     0.49680053450197 * Date2002
199530    +          +    -3.37070416383577 * Date2003  +    -3.19700960081452 * Date2004
199531    +          +    -1.44905372985012 * Date2005  +    -0.35504408925028 * Date2006
199532    +          +    -2.42366014359047 * Date2007  +      1.4891459456614 * Date2008
199533    +          +    -0.95536468399431 * Date2009  +    -16.2644106277431 *
199534    +        DiseaseAsthma  +    -1.07420198692332 * DiseaseCancer__all
199535    +          +     2.30579249007472 * DiseaseDementia_and_Alzheimer_
199536    +          +     3.20017776671941 * DiseaseOsteoarthritis
199537    +          +    -4.15046784729369 * GenderAll  +    -5.78061485020609 *
199538    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 11.5320728758474 * Age_group0_17 + 2.55083959476408 * Age_group18_24 + 9.45497681685949 * Age_group25_44 + -2.22305273880915 * Date1990 + 0.71228320972948 * Date1991 + -1.69671242363179 * Date1992 + -2.07096834302197 *
Date1993 + -1.48125572009704 * Date1994 + -0.8875899757714 * Date1995 + -2.421179817414 * Date1996 + -1.64953820814596 * Date1997 + 0.05899063834564 * Date1998 + -0.65976162782464 * Date1999 + -2.12021732370381 * Date2000 + -0.23218871697767 * Date2001 +
0.49680053450197 * Date2002 + -3.37070416383577 * Date2003 + -3.19700960081452 * Date2004 + -1.44905372985012 * Date2005 + -0.35504408925028 * Date2006 + -2.42366014359047 * Date2007 + 1.4891459456614 * Date2008 + -0.95536468399431 * Date2009 +
-16.2644106277431 * DiseaseAsthma + -1.07420198692332 * DiseaseCancer__all + 2.30579249007472 * DiseaseDementia_and_Alzheimer_ + 3.20017776671941 * DiseaseOsteoarthritis + -4.15046784729369 * GenderAll + -5.78061485020609 * GenderFemale ;
199539    +   H14  = H14  +    -1.55108658966307 * Age_group0_17
199540    +          +    -10.3789605699185 * Age_group18_24  +    -1.95904692133192 *
199541    +        Age_group25_44  +    -0.91391521151454 * Date1990
199542    +          +     0.51833472596654 * Date1991  +    -0.97926312698119 * Date1992
199543    +          +     0.18708730131971 * Date1993  +     0.60637947309503 * Date1994
199544    +          +    -0.26873764949416 * Date1995  +    -0.16817982853005 * Date1996
199545    +          +    -0.46955908040279 * Date1997  +     0.35343370229359 * Date1998
199546    +          +    -0.36562316393328 * Date1999  +     0.19705393231327 * Date2000
199547    +          +     0.37838157041407 * Date2001  +    -0.71736834843823 * Date2002
199548    +          +      0.2251319319131 * Date2003  +    -0.52219814910984 * Date2004
199549    +          +    -0.37183668462567 * Date2005  +     0.18776533343514 * Date2006
199550    +          +    -0.52283406693355 * Date2007  +     0.27924787632052 * Date2008
199551    +          +    -0.18114426047562 * Date2009  +     11.6289452155843 *
199552    +        DiseaseAsthma  +     1.69855966477549 * DiseaseCancer__all
199553    +          +     4.07538413528311 * DiseaseDementia_and_Alzheimer_
199554    +          +     4.80541528234248 * DiseaseOsteoarthritis
199555    +          +     4.09040653943265 * GenderAll  +     5.64960081562795 *
199556    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.55108658966307 * Age_group0_17 + -10.3789605699185 * Age_group18_24 + -1.95904692133192 * Age_group25_44 + -0.91391521151454 * Date1990 + 0.51833472596654 * Date1991 + -0.97926312698119 * Date1992 + 0.18708730131971 *
Date1993 + 0.60637947309503 * Date1994 + -0.26873764949416 * Date1995 + -0.16817982853005 * Date1996 + -0.46955908040279 * Date1997 + 0.35343370229359 * Date1998 + -0.36562316393328 * Date1999 + 0.19705393231327 * Date2000 + 0.37838157041407 * Date2001 +
-0.71736834843823 * Date2002 + 0.2251319319131 * Date2003 + -0.52219814910984 * Date2004 + -0.37183668462567 * Date2005 + 0.18776533343514 * Date2006 + -0.52283406693355 * Date2007 + 0.27924787632052 * Date2008 + -0.18114426047562 * Date2009 +
11.6289452155843 * DiseaseAsthma + 1.69855966477549 * DiseaseCancer__all + 4.07538413528311 * DiseaseDementia_and_Alzheimer_ + 4.80541528234248 * DiseaseOsteoarthritis + 4.09040653943265 * GenderAll + 5.64960081562795 * GenderFemale ;
199557    +   H15  = H15  +      1.0377579474386 * Age_group0_17
199558    +          +    -7.41619727993334 * Age_group18_24  +    -4.56557554204821 *
199559    +        Age_group25_44  +    -0.51974691842413 * Date1990
199560    +          +     0.18036839777598 * Date1991  +    -0.35174707148871 * Date1992
199561    +          +     0.71100844589891 * Date1993  +    -0.43490457226145 * Date1994
199562    +          +    -0.17077200125489 * Date1995  +     0.14632687316425 * Date1996
199563    +          +    -0.04997436214043 * Date1997  +     0.22148905595863 * Date1998
199564    +          +    -0.75589634680008 * Date1999  +    -0.06995609300308 * Date2000
199565    +          +     0.30369084965141 * Date2001  +    -0.63422767137316 * Date2002
199566    +          +     -0.1622350831455 * Date2003  +     0.36661113505189 * Date2004
199567    +          +    -0.23801941735777 * Date2005  +     0.69380511406108 * Date2006
199568    +          +    -0.04835278994052 * Date2007  +     0.17415908606882 * Date2008
199569    +          +     0.41739592966721 * Date2009  +     8.22227335247361 *
199570    +        DiseaseAsthma  +    -1.93468543480133 * DiseaseCancer__all
199571    +          +    -0.44345159476264 * DiseaseDementia_and_Alzheimer_
199572    +          +    -0.67155128279256 * DiseaseOsteoarthritis
199573    +          +     -3.5896398512769 * GenderAll  +    -3.19425758541995 *
199574    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.0377579474386 * Age_group0_17 + -7.41619727993334 * Age_group18_24 + -4.56557554204821 * Age_group25_44 + -0.51974691842413 * Date1990 + 0.18036839777598 * Date1991 + -0.35174707148871 * Date1992 + 0.71100844589891 *
Date1993 + -0.43490457226145 * Date1994 + -0.17077200125489 * Date1995 + 0.14632687316425 * Date1996 + -0.04997436214043 * Date1997 + 0.22148905595863 * Date1998 + -0.75589634680008 * Date1999 + -0.06995609300308 * Date2000 + 0.30369084965141 * Date2001 +
-0.63422767137316 * Date2002 + -0.1622350831455 * Date2003 + 0.36661113505189 * Date2004 + -0.23801941735777 * Date2005 + 0.69380511406108 * Date2006 + -0.04835278994052 * Date2007 + 0.17415908606882 * Date2008 + 0.41739592966721 * Date2009 +
8.22227335247361 * DiseaseAsthma + -1.93468543480133 * DiseaseCancer__all + -0.44345159476264 * DiseaseDementia_and_Alzheimer_ + -0.67155128279256 * DiseaseOsteoarthritis + -3.5896398512769 * GenderAll + -3.19425758541995 * GenderFemale ;
199575    +   H11  =    -0.67879361033073 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.67879361033073 + H11 ;
199576    +   H12  =    -10.2997091319747 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -10.2997091319747 + H12 ;
199577    +   H13  =     -18.993712447529 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -18.993712447529 + H13 ;
199578    +   H14  =    -5.80002297793079 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -5.80002297793079 + H14 ;
199579    +   H15  =     3.27949226428233 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 3.27949226428233 + H15 ;
199580    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
199581    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
199582    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
199583    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
199584    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
199585    +END;
MPRINT(EM_DIAGRAM):   END;
199586    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
199587    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
199588    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
199589    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
199590    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
199591    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
199592    +END;
MPRINT(EM_DIAGRAM):   END;
199593    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199594    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
199595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
199596    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
199597    +   P_Cases_in_1000s  =     6.20558898162838 * H11  +     28.0802050542927 *
199598    +        H12  +     -19.925743519177 * H13  +    -8.37268681364557 * H14
199599    +          +    -6.13796165178146 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.20558898162838 * H11 + 28.0802050542927 * H12 + -19.925743519177 * H13 + -8.37268681364557 * H14 + -6.13796165178146 * H15 ;
199600    +   P_Cases_in_1000s  = P_Cases_in_1000s  +     19.0677178757299 *
199601    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + 19.0677178757299 * S_Population_in_thousands ;
199602    +   P_Cases_in_1000s  = P_Cases_in_1000s  +     1.84323898299894 *
199603    +        Age_group0_17  +    -32.2129039547762 * Age_group18_24
199604    +          +    -5.87042279413697 * Age_group25_44  +     0.64644874320222 *
199605    +        Date1990  +    -0.61767104718305 * Date1991  +     2.10674090462058 *
199606    +        Date1992  +     1.84201515067404 * Date1993  +    -2.61852689637743 *
199607    +        Date1994  +     0.56014165474937 * Date1995  +     2.14278607761748 *
199608    +        Date1996  +     3.23282628380366 * Date1997  +    -0.43138647584633 *
199609    +        Date1998  +    -1.08959810703247 * Date1999  +     1.41287345304834 *
199610    +        Date2000  +     0.48675488348262 * Date2001  +    -1.09566933054394 *
199611    +        Date2002  +     3.59139119254411 * Date2003  +     6.02349786881733 *
199612    +        Date2004  +    -2.58297796573657 * Date2005  +     2.68750938943843 *
199613    +        Date2006  +     2.97573207261795 * Date2007  +     -1.6913818668857 *
199614    +        Date2008  +     3.26943114185455 * Date2009  +     28.1005313349182 *
199615    +        DiseaseAsthma  +     8.57749337260825 * DiseaseCancer__all
199616    +          +    -13.3693815595488 * DiseaseDementia_and_Alzheimer_
199617    +          +    -15.7176459386255 * DiseaseOsteoarthritis
199618    +          +     15.9878679482132 * GenderAll  +     4.75599475926515 *
199619    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + 1.84323898299894 * Age_group0_17 + -32.2129039547762 * Age_group18_24 + -5.87042279413697 * Age_group25_44 + 0.64644874320222 * Date1990 + -0.61767104718305 * Date1991 + 2.10674090462058 *
Date1992 + 1.84201515067404 * Date1993 + -2.61852689637743 * Date1994 + 0.56014165474937 * Date1995 + 2.14278607761748 * Date1996 + 3.23282628380366 * Date1997 + -0.43138647584633 * Date1998 + -1.08959810703247 * Date1999 + 1.41287345304834 * Date2000 +
0.48675488348262 * Date2001 + -1.09566933054394 * Date2002 + 3.59139119254411 * Date2003 + 6.02349786881733 * Date2004 + -2.58297796573657 * Date2005 + 2.68750938943843 * Date2006 + 2.97573207261795 * Date2007 + -1.6913818668857 * Date2008 +
3.26943114185455 * Date2009 + 28.1005313349182 * DiseaseAsthma + 8.57749337260825 * DiseaseCancer__all + -13.3693815595488 * DiseaseDementia_and_Alzheimer_ + -15.7176459386255 * DiseaseOsteoarthritis + 15.9878679482132 * GenderAll + 4.75599475926515 *
GenderFemale ;
199620    +   P_Cases_in_1000s  =     21.2149380922315 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 21.2149380922315 + P_Cases_in_1000s ;
199621    +END;
MPRINT(EM_DIAGRAM):   END;
199622    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
199623    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
199624    +END;
MPRINT(EM_DIAGRAM):   END;
199625    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
199626    +   P_Cases_in_1000s  =     22.4354838709677;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 22.4354838709677;
199627    +END;
MPRINT(EM_DIAGRAM):   END;
199628    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
199629    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
199630    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
199631    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
199632    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
199633    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
199634    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
199635    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
199636    +drop
199637    +S_Population_in_thousands
199638    +H11
199639    +H12
199640    +H13
199641    +H14
199642    +H15
199643    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
199644     run;
 
NOTE: DATA STEP view saved on file EMWS2.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
199645     quit;
199646     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
199647     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
199648     *------------------------------------------------------------*;
199649     * Neural: Scoring VALIDATE data;
199650     *------------------------------------------------------------*;
199651     data EMWS2.Neural_VALIDATE
199652     / view=EMWS2.Neural_VALIDATE
199653     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_VALIDATE / view=EMWS2.Neural_VALIDATE ;
199654     set EMWS2.Part_VALIDATE
199655     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_VALIDATE ;
199656     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
199657    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199658    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
199659    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
199660    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
199661    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
199662    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
199663    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
199664    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
199665    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
199666    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
199667    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
199668    +LENGTH _WARN_ $4
199669    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
199670    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
199671    +
199672    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
199673    +
199674    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
199675    +
199676    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
199677    +
199678    +      label Date1990 = 'Dummy: Date=1990' ;
MPRINT(EM_DIAGRAM):   label Date1990 = 'Dummy: Date=1990' ;
199679    +
199680    +      label Date1991 = 'Dummy: Date=1991' ;
MPRINT(EM_DIAGRAM):   label Date1991 = 'Dummy: Date=1991' ;
199681    +
199682    +      label Date1992 = 'Dummy: Date=1992' ;
MPRINT(EM_DIAGRAM):   label Date1992 = 'Dummy: Date=1992' ;
199683    +
199684    +      label Date1993 = 'Dummy: Date=1993' ;
MPRINT(EM_DIAGRAM):   label Date1993 = 'Dummy: Date=1993' ;
199685    +
199686    +      label Date1994 = 'Dummy: Date=1994' ;
MPRINT(EM_DIAGRAM):   label Date1994 = 'Dummy: Date=1994' ;
199687    +
199688    +      label Date1995 = 'Dummy: Date=1995' ;
MPRINT(EM_DIAGRAM):   label Date1995 = 'Dummy: Date=1995' ;
199689    +
199690    +      label Date1996 = 'Dummy: Date=1996' ;
MPRINT(EM_DIAGRAM):   label Date1996 = 'Dummy: Date=1996' ;
199691    +
199692    +      label Date1997 = 'Dummy: Date=1997' ;
MPRINT(EM_DIAGRAM):   label Date1997 = 'Dummy: Date=1997' ;
199693    +
199694    +      label Date1998 = 'Dummy: Date=1998' ;
MPRINT(EM_DIAGRAM):   label Date1998 = 'Dummy: Date=1998' ;
199695    +
199696    +      label Date1999 = 'Dummy: Date=1999' ;
MPRINT(EM_DIAGRAM):   label Date1999 = 'Dummy: Date=1999' ;
199697    +
199698    +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
199699    +
199700    +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
199701    +
199702    +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
199703    +
199704    +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
199705    +
199706    +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
199707    +
199708    +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
199709    +
199710    +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
199711    +
199712    +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
199713    +
199714    +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
199715    +
199716    +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
199717    +
199718    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
199719    +
199720    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
199721    +
199722    +      label DiseaseDementia_and_Alzheimer_ =
199723    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
199724    +
199725    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
199726    +
199727    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
199728    +
199729    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
199730    +
199731    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
199732    +
199733    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
199734    +
199735    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
199736    +
199737    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
199738    +
199739    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
199740    +
199741    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
199742    +
199743    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
199744    +
199745    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
199746    +
199747    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
199748    +drop Age_group0_17 Age_group18_24 Age_group25_44 ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 ;
199749    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
199750    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
199751    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
199752    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
199753    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199754    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199755    +end;
MPRINT(EM_DIAGRAM):   end;
199756    +else do;
MPRINT(EM_DIAGRAM):   else do;
199757    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
199758    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
199759    +   if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '18-24' then do;
199760    +      Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
199761    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
199762    +      Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
199763    +   end;
MPRINT(EM_DIAGRAM):   end;
199764    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
199765    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
199766    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
199767    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
199768    +   end;
MPRINT(EM_DIAGRAM):   end;
199769    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
199770    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
199771    +      Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
199772    +      Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
199773    +   end;
MPRINT(EM_DIAGRAM):   end;
199774    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
199775    +      Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
199776    +      Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
199777    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
199778    +   end;
MPRINT(EM_DIAGRAM):   end;
199779    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199780    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
199781    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
199782    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
199783    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
199784    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199785    +   end;
MPRINT(EM_DIAGRAM):   end;
199786    +end;
MPRINT(EM_DIAGRAM):   end;
199787    +
199788    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
199789    +drop Date1990 Date1991 Date1992 Date1993 Date1994 Date1995 Date1996 Date1997
199790    +        Date1998 Date1999 Date2000 Date2001 Date2002 Date2003 Date2004
199791    +        Date2005 Date2006 Date2007 Date2008 Date2009 ;
MPRINT(EM_DIAGRAM):   drop Date1990 Date1991 Date1992 Date1993 Date1994 Date1995 Date1996 Date1997 Date1998 Date1999 Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 ;
199792    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
199793    +Date1990 = 0;
MPRINT(EM_DIAGRAM):   Date1990 = 0;
199794    +Date1991 = 0;
MPRINT(EM_DIAGRAM):   Date1991 = 0;
199795    +Date1992 = 0;
MPRINT(EM_DIAGRAM):   Date1992 = 0;
199796    +Date1993 = 0;
MPRINT(EM_DIAGRAM):   Date1993 = 0;
199797    +Date1994 = 0;
MPRINT(EM_DIAGRAM):   Date1994 = 0;
199798    +Date1995 = 0;
MPRINT(EM_DIAGRAM):   Date1995 = 0;
199799    +Date1996 = 0;
MPRINT(EM_DIAGRAM):   Date1996 = 0;
199800    +Date1997 = 0;
MPRINT(EM_DIAGRAM):   Date1997 = 0;
199801    +Date1998 = 0;
MPRINT(EM_DIAGRAM):   Date1998 = 0;
199802    +Date1999 = 0;
MPRINT(EM_DIAGRAM):   Date1999 = 0;
199803    +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
199804    +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
199805    +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
199806    +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
199807    +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
199808    +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
199809    +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
199810    +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
199811    +Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
199812    +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
199813    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
199814    +   Date1990 = .;
MPRINT(EM_DIAGRAM):   Date1990 = .;
199815    +   Date1991 = .;
MPRINT(EM_DIAGRAM):   Date1991 = .;
199816    +   Date1992 = .;
MPRINT(EM_DIAGRAM):   Date1992 = .;
199817    +   Date1993 = .;
MPRINT(EM_DIAGRAM):   Date1993 = .;
199818    +   Date1994 = .;
MPRINT(EM_DIAGRAM):   Date1994 = .;
199819    +   Date1995 = .;
MPRINT(EM_DIAGRAM):   Date1995 = .;
199820    +   Date1996 = .;
MPRINT(EM_DIAGRAM):   Date1996 = .;
199821    +   Date1997 = .;
MPRINT(EM_DIAGRAM):   Date1997 = .;
199822    +   Date1998 = .;
MPRINT(EM_DIAGRAM):   Date1998 = .;
199823    +   Date1999 = .;
MPRINT(EM_DIAGRAM):   Date1999 = .;
199824    +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
199825    +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
199826    +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
199827    +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
199828    +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
199829    +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
199830    +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
199831    +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
199832    +   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
199833    +   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
199834    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
199835    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
199836    +end;
MPRINT(EM_DIAGRAM):   end;
199837    +else do;
MPRINT(EM_DIAGRAM):   else do;
199838    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
199839    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
199840    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
199841    +   if _dm10 <= '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2000' then do;
199842    +      if _dm10 <= '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1995' then do;
199843    +         if _dm10 <= '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1992' then do;
199844    +            if _dm10 <= '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1991' then do;
199845    +               if _dm10 = '1990'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1990' then do;
199846    +                  Date1990 = 1;
MPRINT(EM_DIAGRAM):   Date1990 = 1;
199847    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199848    +               end;
MPRINT(EM_DIAGRAM):   end;
199849    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199850    +                  if _dm10 = '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1991' then do;
199851    +                     Date1991 = 1;
MPRINT(EM_DIAGRAM):   Date1991 = 1;
199852    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199853    +                  end;
MPRINT(EM_DIAGRAM):   end;
199854    +               end;
MPRINT(EM_DIAGRAM):   end;
199855    +            end;
MPRINT(EM_DIAGRAM):   end;
199856    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199857    +               if _dm10 = '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1992' then do;
199858    +                  Date1992 = 1;
MPRINT(EM_DIAGRAM):   Date1992 = 1;
199859    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199860    +               end;
MPRINT(EM_DIAGRAM):   end;
199861    +            end;
MPRINT(EM_DIAGRAM):   end;
199862    +         end;
MPRINT(EM_DIAGRAM):   end;
199863    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199864    +            if _dm10 <= '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1994' then do;
199865    +               if _dm10 = '1993'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1993' then do;
199866    +                  Date1993 = 1;
MPRINT(EM_DIAGRAM):   Date1993 = 1;
199867    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199868    +               end;
MPRINT(EM_DIAGRAM):   end;
199869    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199870    +                  if _dm10 = '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1994' then do;
199871    +                     Date1994 = 1;
MPRINT(EM_DIAGRAM):   Date1994 = 1;
199872    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199873    +                  end;
MPRINT(EM_DIAGRAM):   end;
199874    +               end;
MPRINT(EM_DIAGRAM):   end;
199875    +            end;
MPRINT(EM_DIAGRAM):   end;
199876    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199877    +               if _dm10 = '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1995' then do;
199878    +                  Date1995 = 1;
MPRINT(EM_DIAGRAM):   Date1995 = 1;
199879    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199880    +               end;
MPRINT(EM_DIAGRAM):   end;
199881    +            end;
MPRINT(EM_DIAGRAM):   end;
199882    +         end;
MPRINT(EM_DIAGRAM):   end;
199883    +      end;
MPRINT(EM_DIAGRAM):   end;
199884    +      else do;
MPRINT(EM_DIAGRAM):   else do;
199885    +         if _dm10 <= '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1998' then do;
199886    +            if _dm10 <= '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1997' then do;
199887    +               if _dm10 = '1996'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1996' then do;
199888    +                  Date1996 = 1;
MPRINT(EM_DIAGRAM):   Date1996 = 1;
199889    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199890    +               end;
MPRINT(EM_DIAGRAM):   end;
199891    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199892    +                  if _dm10 = '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1997' then do;
199893    +                     Date1997 = 1;
MPRINT(EM_DIAGRAM):   Date1997 = 1;
199894    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199895    +                  end;
MPRINT(EM_DIAGRAM):   end;
199896    +               end;
MPRINT(EM_DIAGRAM):   end;
199897    +            end;
MPRINT(EM_DIAGRAM):   end;
199898    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199899    +               if _dm10 = '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1998' then do;
199900    +                  Date1998 = 1;
MPRINT(EM_DIAGRAM):   Date1998 = 1;
199901    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199902    +               end;
MPRINT(EM_DIAGRAM):   end;
199903    +            end;
MPRINT(EM_DIAGRAM):   end;
199904    +         end;
MPRINT(EM_DIAGRAM):   end;
199905    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199906    +            if _dm10 = '1999'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1999' then do;
199907    +               Date1999 = 1;
MPRINT(EM_DIAGRAM):   Date1999 = 1;
199908    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199909    +            end;
MPRINT(EM_DIAGRAM):   end;
199910    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199911    +               if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
199912    +                  Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
199913    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199914    +               end;
MPRINT(EM_DIAGRAM):   end;
199915    +            end;
MPRINT(EM_DIAGRAM):   end;
199916    +         end;
MPRINT(EM_DIAGRAM):   end;
199917    +      end;
MPRINT(EM_DIAGRAM):   end;
199918    +   end;
MPRINT(EM_DIAGRAM):   end;
199919    +   else do;
MPRINT(EM_DIAGRAM):   else do;
199920    +      if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
199921    +         if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
199922    +            if _dm10 <= '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2002' then do;
199923    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
199924    +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
199925    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199926    +               end;
MPRINT(EM_DIAGRAM):   end;
199927    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199928    +                  if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
199929    +                     Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
199930    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199931    +                  end;
MPRINT(EM_DIAGRAM):   end;
199932    +               end;
MPRINT(EM_DIAGRAM):   end;
199933    +            end;
MPRINT(EM_DIAGRAM):   end;
199934    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199935    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
199936    +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
199937    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199938    +               end;
MPRINT(EM_DIAGRAM):   end;
199939    +            end;
MPRINT(EM_DIAGRAM):   end;
199940    +         end;
MPRINT(EM_DIAGRAM):   end;
199941    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199942    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
199943    +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
199944    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199945    +            end;
MPRINT(EM_DIAGRAM):   end;
199946    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199947    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
199948    +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
199949    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199950    +               end;
MPRINT(EM_DIAGRAM):   end;
199951    +            end;
MPRINT(EM_DIAGRAM):   end;
199952    +         end;
MPRINT(EM_DIAGRAM):   end;
199953    +      end;
MPRINT(EM_DIAGRAM):   end;
199954    +      else do;
MPRINT(EM_DIAGRAM):   else do;
199955    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
199956    +            if _dm10 <= '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2007' then do;
199957    +               if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
199958    +                  Date2006 = 1;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
199959    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199960    +               end;
MPRINT(EM_DIAGRAM):   end;
199961    +               else do;
MPRINT(EM_DIAGRAM):   else do;
199962    +                  if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
199963    +                     Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
199964    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199965    +                  end;
MPRINT(EM_DIAGRAM):   end;
199966    +               end;
MPRINT(EM_DIAGRAM):   end;
199967    +            end;
MPRINT(EM_DIAGRAM):   end;
199968    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199969    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
199970    +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
199971    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199972    +               end;
MPRINT(EM_DIAGRAM):   end;
199973    +            end;
MPRINT(EM_DIAGRAM):   end;
199974    +         end;
MPRINT(EM_DIAGRAM):   end;
199975    +         else do;
MPRINT(EM_DIAGRAM):   else do;
199976    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
199977    +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
199978    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
199979    +            end;
MPRINT(EM_DIAGRAM):   end;
199980    +            else do;
MPRINT(EM_DIAGRAM):   else do;
199981    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
199982    +                  Date1990 = -1;
MPRINT(EM_DIAGRAM):   Date1990 = -1;
199983    +                  Date1991 = -1;
MPRINT(EM_DIAGRAM):   Date1991 = -1;
199984    +                  Date1992 = -1;
MPRINT(EM_DIAGRAM):   Date1992 = -1;
199985    +                  Date1993 = -1;
MPRINT(EM_DIAGRAM):   Date1993 = -1;
199986    +                  Date1994 = -1;
MPRINT(EM_DIAGRAM):   Date1994 = -1;
199987    +                  Date1995 = -1;
MPRINT(EM_DIAGRAM):   Date1995 = -1;
199988    +                  Date1996 = -1;
MPRINT(EM_DIAGRAM):   Date1996 = -1;
199989    +                  Date1997 = -1;
MPRINT(EM_DIAGRAM):   Date1997 = -1;
199990    +                  Date1998 = -1;
MPRINT(EM_DIAGRAM):   Date1998 = -1;
199991    +                  Date1999 = -1;
MPRINT(EM_DIAGRAM):   Date1999 = -1;
199992    +                  Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
199993    +                  Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
199994    +                  Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
199995    +                  Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
199996    +                  Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
199997    +                  Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
199998    +                  Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
199999    +                  Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
200000    +                  Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
200001    +                  Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
200002    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200003    +               end;
MPRINT(EM_DIAGRAM):   end;
200004    +            end;
MPRINT(EM_DIAGRAM):   end;
200005    +         end;
MPRINT(EM_DIAGRAM):   end;
200006    +      end;
MPRINT(EM_DIAGRAM):   end;
200007    +   end;
MPRINT(EM_DIAGRAM):   end;
200008    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
200009    +      Date1990 = .;
MPRINT(EM_DIAGRAM):   Date1990 = .;
200010    +      Date1991 = .;
MPRINT(EM_DIAGRAM):   Date1991 = .;
200011    +      Date1992 = .;
MPRINT(EM_DIAGRAM):   Date1992 = .;
200012    +      Date1993 = .;
MPRINT(EM_DIAGRAM):   Date1993 = .;
200013    +      Date1994 = .;
MPRINT(EM_DIAGRAM):   Date1994 = .;
200014    +      Date1995 = .;
MPRINT(EM_DIAGRAM):   Date1995 = .;
200015    +      Date1996 = .;
MPRINT(EM_DIAGRAM):   Date1996 = .;
200016    +      Date1997 = .;
MPRINT(EM_DIAGRAM):   Date1997 = .;
200017    +      Date1998 = .;
MPRINT(EM_DIAGRAM):   Date1998 = .;
200018    +      Date1999 = .;
MPRINT(EM_DIAGRAM):   Date1999 = .;
200019    +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
200020    +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
200021    +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
200022    +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
200023    +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
200024    +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
200025    +      Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
200026    +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
200027    +      Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
200028    +      Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
200029    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200030    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200031    +   end;
MPRINT(EM_DIAGRAM):   end;
200032    +end;
MPRINT(EM_DIAGRAM):   end;
200033    +
200034    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
200035    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
200036    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
200037    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200038    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
200039    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
200040    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
200041    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
200042    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
200043    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
200044    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
200045    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
200046    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
200047    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200049    +end;
MPRINT(EM_DIAGRAM):   end;
200050    +else do;
MPRINT(EM_DIAGRAM):   else do;
200051    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
200052    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
200053    +   if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'ASTHMA' then do;
200054    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
200055    +   end;
MPRINT(EM_DIAGRAM):   end;
200056    +   else if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
200057    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
200058    +   end;
MPRINT(EM_DIAGRAM):   end;
200059    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
200060    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
200061    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
200062    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
200063    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
200064    +   end;
MPRINT(EM_DIAGRAM):   end;
200065    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
200066    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
200067    +   end;
MPRINT(EM_DIAGRAM):   end;
200068    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
200069    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
200070    +   end;
MPRINT(EM_DIAGRAM):   end;
200071    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200072    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
200073    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
200074    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
200075    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
200076    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200077    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200078    +   end;
MPRINT(EM_DIAGRAM):   end;
200079    +end;
MPRINT(EM_DIAGRAM):   end;
200080    +
200081    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
200082    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
200083    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
200084    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
200085    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
200086    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200087    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200088    +end;
MPRINT(EM_DIAGRAM):   end;
200089    +else do;
MPRINT(EM_DIAGRAM):   else do;
200090    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
200091    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
200092    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200093    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
200094    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
200095    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
200096    +   end;
MPRINT(EM_DIAGRAM):   end;
200097    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
200098    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
200099    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
200100    +   end;
MPRINT(EM_DIAGRAM):   end;
200101    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
200102    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
200103    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
200104    +   end;
MPRINT(EM_DIAGRAM):   end;
200105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200106    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
200107    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
200108    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200109    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200110    +   end;
MPRINT(EM_DIAGRAM):   end;
200111    +end;
MPRINT(EM_DIAGRAM):   end;
200112    +
200113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200114    +*** Checking missing input Interval
200115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
200116    +
200117    +IF NMISS(
200118    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
200119    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
200120    +
200121    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200122    +END;
MPRINT(EM_DIAGRAM):   END;
200123    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200124    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
200125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200126    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200127    +   S_Population_in_thousands  =    -1.07937284241798 +     0.00004492080679 *
200128    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.07937284241798 + 0.00004492080679 * Population_in_thousands ;
200129    +END;
MPRINT(EM_DIAGRAM):   END;
200130    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200131    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
200132    +   ELSE S_Population_in_thousands
200133    +          =    -1.07937284241798 +     0.00004492080679 *
200134    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.07937284241798 + 0.00004492080679 * Population_in_thousands ;
200135    +END;
MPRINT(EM_DIAGRAM):   END;
200136    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200137    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
200138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200139    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200140    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
200141    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200142    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200143    +   H11  =    -4.69352130447972 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = -4.69352130447972 * S_Population_in_thousands ;
200144    +   H12  =     5.06599717292821 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = 5.06599717292821 * S_Population_in_thousands ;
200145    +   H13  =     9.80634004124476 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 9.80634004124476 * S_Population_in_thousands ;
200146    +   H14  =     3.31228883566718 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = 3.31228883566718 * S_Population_in_thousands ;
200147    +   H15  =     2.65204463622264 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 2.65204463622264 * S_Population_in_thousands ;
200148    +   H11  = H11  +    -2.07549456644559 * Age_group0_17
200149    +          +     1.89028492207963 * Age_group18_24  +     0.22053737030127 *
200150    +        Age_group25_44  +     0.69659443678365 * Date1990
200151    +          +     0.76034786483757 * Date1991  +      1.5555930805213 * Date1992
200152    +          +     0.48544690836429 * Date1993  +     0.39299434842502 * Date1994
200153    +          +     0.69548660210847 * Date1995  +     0.64404991008731 * Date1996
200154    +          +     0.81679921845806 * Date1997  +     0.53332314724246 * Date1998
200155    +          +     1.07150299228461 * Date1999  +      0.7453160964498 * Date2000
200156    +          +     0.90624856895714 * Date2001  +     1.25713648304045 * Date2002
200157    +          +     0.83267142151879 * Date2003  +       1.214226605094 * Date2004
200158    +          +     1.09288669379468 * Date2005  +     0.28321292187401 * Date2006
200159    +          +     1.13140317909567 * Date2007  +     1.02313288593481 * Date2008
200160    +          +     0.99491883505772 * Date2009  +    -7.71401550934144 *
200161    +        DiseaseAsthma  +     1.59964499587479 * DiseaseCancer__all
200162    +          +     0.70480948708574 * DiseaseDementia_and_Alzheimer_
200163    +          +     0.72797177718724 * DiseaseOsteoarthritis
200164    +          +     0.46530598096977 * GenderAll  +     1.18299451025555 *
200165    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -2.07549456644559 * Age_group0_17 + 1.89028492207963 * Age_group18_24 + 0.22053737030127 * Age_group25_44 + 0.69659443678365 * Date1990 + 0.76034786483757 * Date1991 + 1.5555930805213 * Date1992 + 0.48544690836429 *
Date1993 + 0.39299434842502 * Date1994 + 0.69548660210847 * Date1995 + 0.64404991008731 * Date1996 + 0.81679921845806 * Date1997 + 0.53332314724246 * Date1998 + 1.07150299228461 * Date1999 + 0.7453160964498 * Date2000 + 0.90624856895714 * Date2001 +
1.25713648304045 * Date2002 + 0.83267142151879 * Date2003 + 1.214226605094 * Date2004 + 1.09288669379468 * Date2005 + 0.28321292187401 * Date2006 + 1.13140317909567 * Date2007 + 1.02313288593481 * Date2008 + 0.99491883505772 * Date2009 + -7.71401550934144
* DiseaseAsthma + 1.59964499587479 * DiseaseCancer__all + 0.70480948708574 * DiseaseDementia_and_Alzheimer_ + 0.72797177718724 * DiseaseOsteoarthritis + 0.46530598096977 * GenderAll + 1.18299451025555 * GenderFemale ;
200166    +   H12  = H12  +      7.3312221277029 * Age_group0_17
200167    +          +     5.73850136241549 * Age_group18_24  +     10.6973185841868 *
200168    +        Age_group25_44  +     -1.3553395840109 * Date1990
200169    +          +    -1.64661531486796 * Date1991  +    -0.38696387838105 * Date1992
200170    +          +    -1.07583510589596 * Date1993  +    -1.20049741606894 * Date1994
200171    +          +    -1.48670117795664 * Date1995  +     0.56202204438682 * Date1996
200172    +          +    -0.70377483370229 * Date1997  +    -1.70290790819299 * Date1998
200173    +          +    -2.15232681013713 * Date1999  +     -1.3734118962421 * Date2000
200174    +          +    -1.53351964013452 * Date2001  +    -2.41748704002257 * Date2002
200175    +          +    -0.09137745061889 * Date2003  +    -1.22928905028318 * Date2004
200176    +          +    -2.52486294132669 * Date2005  +    -2.83313300695631 * Date2006
200177    +          +    -2.38969371440024 * Date2007  +    -1.97455468478895 * Date2008
200178    +          +    -2.79577318369912 * Date2009  +     10.0930545342347 *
200179    +        DiseaseAsthma  +     2.53463690769088 * DiseaseCancer__all
200180    +          +    -5.44974536050982 * DiseaseDementia_and_Alzheimer_
200181    +          +    -6.66366786440493 * DiseaseOsteoarthritis
200182    +          +    -13.7993284481877 * GenderAll  +    -11.2856836835284 *
200183    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 7.3312221277029 * Age_group0_17 + 5.73850136241549 * Age_group18_24 + 10.6973185841868 * Age_group25_44 + -1.3553395840109 * Date1990 + -1.64661531486796 * Date1991 + -0.38696387838105 * Date1992 + -1.07583510589596 *
Date1993 + -1.20049741606894 * Date1994 + -1.48670117795664 * Date1995 + 0.56202204438682 * Date1996 + -0.70377483370229 * Date1997 + -1.70290790819299 * Date1998 + -2.15232681013713 * Date1999 + -1.3734118962421 * Date2000 + -1.53351964013452 * Date2001
+ -2.41748704002257 * Date2002 + -0.09137745061889 * Date2003 + -1.22928905028318 * Date2004 + -2.52486294132669 * Date2005 + -2.83313300695631 * Date2006 + -2.38969371440024 * Date2007 + -1.97455468478895 * Date2008 + -2.79577318369912 * Date2009 +
10.0930545342347 * DiseaseAsthma + 2.53463690769088 * DiseaseCancer__all + -5.44974536050982 * DiseaseDementia_and_Alzheimer_ + -6.66366786440493 * DiseaseOsteoarthritis + -13.7993284481877 * GenderAll + -11.2856836835284 * GenderFemale ;
200184    +   H13  = H13  +     11.5320728758474 * Age_group0_17
200185    +          +     2.55083959476408 * Age_group18_24  +     9.45497681685949 *
200186    +        Age_group25_44  +    -2.22305273880915 * Date1990
200187    +          +     0.71228320972948 * Date1991  +    -1.69671242363179 * Date1992
200188    +          +    -2.07096834302197 * Date1993  +    -1.48125572009704 * Date1994
200189    +          +     -0.8875899757714 * Date1995  +      -2.421179817414 * Date1996
200190    +          +    -1.64953820814596 * Date1997  +     0.05899063834564 * Date1998
200191    +          +    -0.65976162782464 * Date1999  +    -2.12021732370381 * Date2000
200192    +          +    -0.23218871697767 * Date2001  +     0.49680053450197 * Date2002
200193    +          +    -3.37070416383577 * Date2003  +    -3.19700960081452 * Date2004
200194    +          +    -1.44905372985012 * Date2005  +    -0.35504408925028 * Date2006
200195    +          +    -2.42366014359047 * Date2007  +      1.4891459456614 * Date2008
200196    +          +    -0.95536468399431 * Date2009  +    -16.2644106277431 *
200197    +        DiseaseAsthma  +    -1.07420198692332 * DiseaseCancer__all
200198    +          +     2.30579249007472 * DiseaseDementia_and_Alzheimer_
200199    +          +     3.20017776671941 * DiseaseOsteoarthritis
200200    +          +    -4.15046784729369 * GenderAll  +    -5.78061485020609 *
200201    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 11.5320728758474 * Age_group0_17 + 2.55083959476408 * Age_group18_24 + 9.45497681685949 * Age_group25_44 + -2.22305273880915 * Date1990 + 0.71228320972948 * Date1991 + -1.69671242363179 * Date1992 + -2.07096834302197 *
Date1993 + -1.48125572009704 * Date1994 + -0.8875899757714 * Date1995 + -2.421179817414 * Date1996 + -1.64953820814596 * Date1997 + 0.05899063834564 * Date1998 + -0.65976162782464 * Date1999 + -2.12021732370381 * Date2000 + -0.23218871697767 * Date2001 +
0.49680053450197 * Date2002 + -3.37070416383577 * Date2003 + -3.19700960081452 * Date2004 + -1.44905372985012 * Date2005 + -0.35504408925028 * Date2006 + -2.42366014359047 * Date2007 + 1.4891459456614 * Date2008 + -0.95536468399431 * Date2009 +
-16.2644106277431 * DiseaseAsthma + -1.07420198692332 * DiseaseCancer__all + 2.30579249007472 * DiseaseDementia_and_Alzheimer_ + 3.20017776671941 * DiseaseOsteoarthritis + -4.15046784729369 * GenderAll + -5.78061485020609 * GenderFemale ;
200202    +   H14  = H14  +    -1.55108658966307 * Age_group0_17
200203    +          +    -10.3789605699185 * Age_group18_24  +    -1.95904692133192 *
200204    +        Age_group25_44  +    -0.91391521151454 * Date1990
200205    +          +     0.51833472596654 * Date1991  +    -0.97926312698119 * Date1992
200206    +          +     0.18708730131971 * Date1993  +     0.60637947309503 * Date1994
200207    +          +    -0.26873764949416 * Date1995  +    -0.16817982853005 * Date1996
200208    +          +    -0.46955908040279 * Date1997  +     0.35343370229359 * Date1998
200209    +          +    -0.36562316393328 * Date1999  +     0.19705393231327 * Date2000
200210    +          +     0.37838157041407 * Date2001  +    -0.71736834843823 * Date2002
200211    +          +      0.2251319319131 * Date2003  +    -0.52219814910984 * Date2004
200212    +          +    -0.37183668462567 * Date2005  +     0.18776533343514 * Date2006
200213    +          +    -0.52283406693355 * Date2007  +     0.27924787632052 * Date2008
200214    +          +    -0.18114426047562 * Date2009  +     11.6289452155843 *
200215    +        DiseaseAsthma  +     1.69855966477549 * DiseaseCancer__all
200216    +          +     4.07538413528311 * DiseaseDementia_and_Alzheimer_
200217    +          +     4.80541528234248 * DiseaseOsteoarthritis
200218    +          +     4.09040653943265 * GenderAll  +     5.64960081562795 *
200219    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.55108658966307 * Age_group0_17 + -10.3789605699185 * Age_group18_24 + -1.95904692133192 * Age_group25_44 + -0.91391521151454 * Date1990 + 0.51833472596654 * Date1991 + -0.97926312698119 * Date1992 + 0.18708730131971 *
Date1993 + 0.60637947309503 * Date1994 + -0.26873764949416 * Date1995 + -0.16817982853005 * Date1996 + -0.46955908040279 * Date1997 + 0.35343370229359 * Date1998 + -0.36562316393328 * Date1999 + 0.19705393231327 * Date2000 + 0.37838157041407 * Date2001 +
-0.71736834843823 * Date2002 + 0.2251319319131 * Date2003 + -0.52219814910984 * Date2004 + -0.37183668462567 * Date2005 + 0.18776533343514 * Date2006 + -0.52283406693355 * Date2007 + 0.27924787632052 * Date2008 + -0.18114426047562 * Date2009 +
11.6289452155843 * DiseaseAsthma + 1.69855966477549 * DiseaseCancer__all + 4.07538413528311 * DiseaseDementia_and_Alzheimer_ + 4.80541528234248 * DiseaseOsteoarthritis + 4.09040653943265 * GenderAll + 5.64960081562795 * GenderFemale ;
200220    +   H15  = H15  +      1.0377579474386 * Age_group0_17
200221    +          +    -7.41619727993334 * Age_group18_24  +    -4.56557554204821 *
200222    +        Age_group25_44  +    -0.51974691842413 * Date1990
200223    +          +     0.18036839777598 * Date1991  +    -0.35174707148871 * Date1992
200224    +          +     0.71100844589891 * Date1993  +    -0.43490457226145 * Date1994
200225    +          +    -0.17077200125489 * Date1995  +     0.14632687316425 * Date1996
200226    +          +    -0.04997436214043 * Date1997  +     0.22148905595863 * Date1998
200227    +          +    -0.75589634680008 * Date1999  +    -0.06995609300308 * Date2000
200228    +          +     0.30369084965141 * Date2001  +    -0.63422767137316 * Date2002
200229    +          +     -0.1622350831455 * Date2003  +     0.36661113505189 * Date2004
200230    +          +    -0.23801941735777 * Date2005  +     0.69380511406108 * Date2006
200231    +          +    -0.04835278994052 * Date2007  +     0.17415908606882 * Date2008
200232    +          +     0.41739592966721 * Date2009  +     8.22227335247361 *
200233    +        DiseaseAsthma  +    -1.93468543480133 * DiseaseCancer__all
200234    +          +    -0.44345159476264 * DiseaseDementia_and_Alzheimer_
200235    +          +    -0.67155128279256 * DiseaseOsteoarthritis
200236    +          +     -3.5896398512769 * GenderAll  +    -3.19425758541995 *
200237    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.0377579474386 * Age_group0_17 + -7.41619727993334 * Age_group18_24 + -4.56557554204821 * Age_group25_44 + -0.51974691842413 * Date1990 + 0.18036839777598 * Date1991 + -0.35174707148871 * Date1992 + 0.71100844589891 *
Date1993 + -0.43490457226145 * Date1994 + -0.17077200125489 * Date1995 + 0.14632687316425 * Date1996 + -0.04997436214043 * Date1997 + 0.22148905595863 * Date1998 + -0.75589634680008 * Date1999 + -0.06995609300308 * Date2000 + 0.30369084965141 * Date2001 +
-0.63422767137316 * Date2002 + -0.1622350831455 * Date2003 + 0.36661113505189 * Date2004 + -0.23801941735777 * Date2005 + 0.69380511406108 * Date2006 + -0.04835278994052 * Date2007 + 0.17415908606882 * Date2008 + 0.41739592966721 * Date2009 +
8.22227335247361 * DiseaseAsthma + -1.93468543480133 * DiseaseCancer__all + -0.44345159476264 * DiseaseDementia_and_Alzheimer_ + -0.67155128279256 * DiseaseOsteoarthritis + -3.5896398512769 * GenderAll + -3.19425758541995 * GenderFemale ;
200238    +   H11  =    -0.67879361033073 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.67879361033073 + H11 ;
200239    +   H12  =    -10.2997091319747 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -10.2997091319747 + H12 ;
200240    +   H13  =     -18.993712447529 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -18.993712447529 + H13 ;
200241    +   H14  =    -5.80002297793079 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -5.80002297793079 + H14 ;
200242    +   H15  =     3.27949226428233 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 3.27949226428233 + H15 ;
200243    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
200244    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
200245    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
200246    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
200247    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
200248    +END;
MPRINT(EM_DIAGRAM):   END;
200249    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200250    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
200251    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
200252    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
200253    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
200254    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
200255    +END;
MPRINT(EM_DIAGRAM):   END;
200256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200257    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
200258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200259    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200260    +   P_Cases_in_1000s  =     6.20558898162838 * H11  +     28.0802050542927 *
200261    +        H12  +     -19.925743519177 * H13  +    -8.37268681364557 * H14
200262    +          +    -6.13796165178146 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.20558898162838 * H11 + 28.0802050542927 * H12 + -19.925743519177 * H13 + -8.37268681364557 * H14 + -6.13796165178146 * H15 ;
200263    +   P_Cases_in_1000s  = P_Cases_in_1000s  +     19.0677178757299 *
200264    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + 19.0677178757299 * S_Population_in_thousands ;
200265    +   P_Cases_in_1000s  = P_Cases_in_1000s  +     1.84323898299894 *
200266    +        Age_group0_17  +    -32.2129039547762 * Age_group18_24
200267    +          +    -5.87042279413697 * Age_group25_44  +     0.64644874320222 *
200268    +        Date1990  +    -0.61767104718305 * Date1991  +     2.10674090462058 *
200269    +        Date1992  +     1.84201515067404 * Date1993  +    -2.61852689637743 *
200270    +        Date1994  +     0.56014165474937 * Date1995  +     2.14278607761748 *
200271    +        Date1996  +     3.23282628380366 * Date1997  +    -0.43138647584633 *
200272    +        Date1998  +    -1.08959810703247 * Date1999  +     1.41287345304834 *
200273    +        Date2000  +     0.48675488348262 * Date2001  +    -1.09566933054394 *
200274    +        Date2002  +     3.59139119254411 * Date2003  +     6.02349786881733 *
200275    +        Date2004  +    -2.58297796573657 * Date2005  +     2.68750938943843 *
200276    +        Date2006  +     2.97573207261795 * Date2007  +     -1.6913818668857 *
200277    +        Date2008  +     3.26943114185455 * Date2009  +     28.1005313349182 *
200278    +        DiseaseAsthma  +     8.57749337260825 * DiseaseCancer__all
200279    +          +    -13.3693815595488 * DiseaseDementia_and_Alzheimer_
200280    +          +    -15.7176459386255 * DiseaseOsteoarthritis
200281    +          +     15.9878679482132 * GenderAll  +     4.75599475926515 *
200282    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + 1.84323898299894 * Age_group0_17 + -32.2129039547762 * Age_group18_24 + -5.87042279413697 * Age_group25_44 + 0.64644874320222 * Date1990 + -0.61767104718305 * Date1991 + 2.10674090462058 *
Date1992 + 1.84201515067404 * Date1993 + -2.61852689637743 * Date1994 + 0.56014165474937 * Date1995 + 2.14278607761748 * Date1996 + 3.23282628380366 * Date1997 + -0.43138647584633 * Date1998 + -1.08959810703247 * Date1999 + 1.41287345304834 * Date2000 +
0.48675488348262 * Date2001 + -1.09566933054394 * Date2002 + 3.59139119254411 * Date2003 + 6.02349786881733 * Date2004 + -2.58297796573657 * Date2005 + 2.68750938943843 * Date2006 + 2.97573207261795 * Date2007 + -1.6913818668857 * Date2008 +
3.26943114185455 * Date2009 + 28.1005313349182 * DiseaseAsthma + 8.57749337260825 * DiseaseCancer__all + -13.3693815595488 * DiseaseDementia_and_Alzheimer_ + -15.7176459386255 * DiseaseOsteoarthritis + 15.9878679482132 * GenderAll + 4.75599475926515 *
GenderFemale ;
200283    +   P_Cases_in_1000s  =     21.2149380922315 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 21.2149380922315 + P_Cases_in_1000s ;
200284    +END;
MPRINT(EM_DIAGRAM):   END;
200285    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200286    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
200287    +END;
MPRINT(EM_DIAGRAM):   END;
200288    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
200289    +   P_Cases_in_1000s  =     22.4354838709677;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 22.4354838709677;
200290    +END;
MPRINT(EM_DIAGRAM):   END;
200291    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
200292    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
200293    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
200294    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
200295    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
200296    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200297    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
200298    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200299    +drop
200300    +S_Population_in_thousands
200301    +H11
200302    +H12
200303    +H13
200304    +H14
200305    +H15
200306    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
200307     run;
 
NOTE: DATA STEP view saved on file EMWS2.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
200308     quit;
200309     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
200310     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
200311     *------------------------------------------------------------*;
200312     * Neural: Scoring TEST data;
200313     *------------------------------------------------------------*;
200314     data EMWS2.Neural_TEST
200315     / view=EMWS2.Neural_TEST
200316     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TEST / view=EMWS2.Neural_TEST ;
200317     set EMWS2.Part_TEST
200318     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TEST ;
200319     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
200320    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
200321    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
200322    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
200323    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
200324    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
200325    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
200326    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
200327    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
200328    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
200329    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
200330    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
200331    +LENGTH _WARN_ $4
200332    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
200333    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
200334    +
200335    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
200336    +
200337    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
200338    +
200339    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
200340    +
200341    +      label Date1990 = 'Dummy: Date=1990' ;
MPRINT(EM_DIAGRAM):   label Date1990 = 'Dummy: Date=1990' ;
200342    +
200343    +      label Date1991 = 'Dummy: Date=1991' ;
MPRINT(EM_DIAGRAM):   label Date1991 = 'Dummy: Date=1991' ;
200344    +
200345    +      label Date1992 = 'Dummy: Date=1992' ;
MPRINT(EM_DIAGRAM):   label Date1992 = 'Dummy: Date=1992' ;
200346    +
200347    +      label Date1993 = 'Dummy: Date=1993' ;
MPRINT(EM_DIAGRAM):   label Date1993 = 'Dummy: Date=1993' ;
200348    +
200349    +      label Date1994 = 'Dummy: Date=1994' ;
MPRINT(EM_DIAGRAM):   label Date1994 = 'Dummy: Date=1994' ;
200350    +
200351    +      label Date1995 = 'Dummy: Date=1995' ;
MPRINT(EM_DIAGRAM):   label Date1995 = 'Dummy: Date=1995' ;
200352    +
200353    +      label Date1996 = 'Dummy: Date=1996' ;
MPRINT(EM_DIAGRAM):   label Date1996 = 'Dummy: Date=1996' ;
200354    +
200355    +      label Date1997 = 'Dummy: Date=1997' ;
MPRINT(EM_DIAGRAM):   label Date1997 = 'Dummy: Date=1997' ;
200356    +
200357    +      label Date1998 = 'Dummy: Date=1998' ;
MPRINT(EM_DIAGRAM):   label Date1998 = 'Dummy: Date=1998' ;
200358    +
200359    +      label Date1999 = 'Dummy: Date=1999' ;
MPRINT(EM_DIAGRAM):   label Date1999 = 'Dummy: Date=1999' ;
200360    +
200361    +      label Date2000 = 'Dummy: Date=2000' ;
MPRINT(EM_DIAGRAM):   label Date2000 = 'Dummy: Date=2000' ;
200362    +
200363    +      label Date2001 = 'Dummy: Date=2001' ;
MPRINT(EM_DIAGRAM):   label Date2001 = 'Dummy: Date=2001' ;
200364    +
200365    +      label Date2002 = 'Dummy: Date=2002' ;
MPRINT(EM_DIAGRAM):   label Date2002 = 'Dummy: Date=2002' ;
200366    +
200367    +      label Date2003 = 'Dummy: Date=2003' ;
MPRINT(EM_DIAGRAM):   label Date2003 = 'Dummy: Date=2003' ;
200368    +
200369    +      label Date2004 = 'Dummy: Date=2004' ;
MPRINT(EM_DIAGRAM):   label Date2004 = 'Dummy: Date=2004' ;
200370    +
200371    +      label Date2005 = 'Dummy: Date=2005' ;
MPRINT(EM_DIAGRAM):   label Date2005 = 'Dummy: Date=2005' ;
200372    +
200373    +      label Date2006 = 'Dummy: Date=2006' ;
MPRINT(EM_DIAGRAM):   label Date2006 = 'Dummy: Date=2006' ;
200374    +
200375    +      label Date2007 = 'Dummy: Date=2007' ;
MPRINT(EM_DIAGRAM):   label Date2007 = 'Dummy: Date=2007' ;
200376    +
200377    +      label Date2008 = 'Dummy: Date=2008' ;
MPRINT(EM_DIAGRAM):   label Date2008 = 'Dummy: Date=2008' ;
200378    +
200379    +      label Date2009 = 'Dummy: Date=2009' ;
MPRINT(EM_DIAGRAM):   label Date2009 = 'Dummy: Date=2009' ;
200380    +
200381    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
200382    +
200383    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
200384    +
200385    +      label DiseaseDementia_and_Alzheimer_ =
200386    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
200387    +
200388    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
200389    +
200390    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
200391    +
200392    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
200393    +
200394    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
200395    +
200396    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
200397    +
200398    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
200399    +
200400    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
200401    +
200402    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
200403    +
200404    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
200405    +
200406    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
200407    +
200408    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
200409    +
200410    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
200411    +drop Age_group0_17 Age_group18_24 Age_group25_44 ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 ;
200412    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
200413    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
200414    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
200415    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
200416    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200417    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200418    +end;
MPRINT(EM_DIAGRAM):   end;
200419    +else do;
MPRINT(EM_DIAGRAM):   else do;
200420    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
200421    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
200422    +   if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '18-24' then do;
200423    +      Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
200424    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
200425    +      Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
200426    +   end;
MPRINT(EM_DIAGRAM):   end;
200427    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
200428    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
200429    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
200430    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
200431    +   end;
MPRINT(EM_DIAGRAM):   end;
200432    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
200433    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
200434    +      Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
200435    +      Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
200436    +   end;
MPRINT(EM_DIAGRAM):   end;
200437    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
200438    +      Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
200439    +      Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
200440    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
200441    +   end;
MPRINT(EM_DIAGRAM):   end;
200442    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200443    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
200444    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
200445    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
200446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200448    +   end;
MPRINT(EM_DIAGRAM):   end;
200449    +end;
MPRINT(EM_DIAGRAM):   end;
200450    +
200451    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
200452    +drop Date1990 Date1991 Date1992 Date1993 Date1994 Date1995 Date1996 Date1997
200453    +        Date1998 Date1999 Date2000 Date2001 Date2002 Date2003 Date2004
200454    +        Date2005 Date2006 Date2007 Date2008 Date2009 ;
MPRINT(EM_DIAGRAM):   drop Date1990 Date1991 Date1992 Date1993 Date1994 Date1995 Date1996 Date1997 Date1998 Date1999 Date2000 Date2001 Date2002 Date2003 Date2004 Date2005 Date2006 Date2007 Date2008 Date2009 ;
200455    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200456    +Date1990 = 0;
MPRINT(EM_DIAGRAM):   Date1990 = 0;
200457    +Date1991 = 0;
MPRINT(EM_DIAGRAM):   Date1991 = 0;
200458    +Date1992 = 0;
MPRINT(EM_DIAGRAM):   Date1992 = 0;
200459    +Date1993 = 0;
MPRINT(EM_DIAGRAM):   Date1993 = 0;
200460    +Date1994 = 0;
MPRINT(EM_DIAGRAM):   Date1994 = 0;
200461    +Date1995 = 0;
MPRINT(EM_DIAGRAM):   Date1995 = 0;
200462    +Date1996 = 0;
MPRINT(EM_DIAGRAM):   Date1996 = 0;
200463    +Date1997 = 0;
MPRINT(EM_DIAGRAM):   Date1997 = 0;
200464    +Date1998 = 0;
MPRINT(EM_DIAGRAM):   Date1998 = 0;
200465    +Date1999 = 0;
MPRINT(EM_DIAGRAM):   Date1999 = 0;
200466    +Date2000 = 0;
MPRINT(EM_DIAGRAM):   Date2000 = 0;
200467    +Date2001 = 0;
MPRINT(EM_DIAGRAM):   Date2001 = 0;
200468    +Date2002 = 0;
MPRINT(EM_DIAGRAM):   Date2002 = 0;
200469    +Date2003 = 0;
MPRINT(EM_DIAGRAM):   Date2003 = 0;
200470    +Date2004 = 0;
MPRINT(EM_DIAGRAM):   Date2004 = 0;
200471    +Date2005 = 0;
MPRINT(EM_DIAGRAM):   Date2005 = 0;
200472    +Date2006 = 0;
MPRINT(EM_DIAGRAM):   Date2006 = 0;
200473    +Date2007 = 0;
MPRINT(EM_DIAGRAM):   Date2007 = 0;
200474    +Date2008 = 0;
MPRINT(EM_DIAGRAM):   Date2008 = 0;
200475    +Date2009 = 0;
MPRINT(EM_DIAGRAM):   Date2009 = 0;
200476    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
200477    +   Date1990 = .;
MPRINT(EM_DIAGRAM):   Date1990 = .;
200478    +   Date1991 = .;
MPRINT(EM_DIAGRAM):   Date1991 = .;
200479    +   Date1992 = .;
MPRINT(EM_DIAGRAM):   Date1992 = .;
200480    +   Date1993 = .;
MPRINT(EM_DIAGRAM):   Date1993 = .;
200481    +   Date1994 = .;
MPRINT(EM_DIAGRAM):   Date1994 = .;
200482    +   Date1995 = .;
MPRINT(EM_DIAGRAM):   Date1995 = .;
200483    +   Date1996 = .;
MPRINT(EM_DIAGRAM):   Date1996 = .;
200484    +   Date1997 = .;
MPRINT(EM_DIAGRAM):   Date1997 = .;
200485    +   Date1998 = .;
MPRINT(EM_DIAGRAM):   Date1998 = .;
200486    +   Date1999 = .;
MPRINT(EM_DIAGRAM):   Date1999 = .;
200487    +   Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
200488    +   Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
200489    +   Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
200490    +   Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
200491    +   Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
200492    +   Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
200493    +   Date2006 = .;
MPRINT(EM_DIAGRAM):   Date2006 = .;
200494    +   Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
200495    +   Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
200496    +   Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
200497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200499    +end;
MPRINT(EM_DIAGRAM):   end;
200500    +else do;
MPRINT(EM_DIAGRAM):   else do;
200501    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
200502    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
200503    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
200504    +   if _dm10 <= '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2000' then do;
200505    +      if _dm10 <= '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1995' then do;
200506    +         if _dm10 <= '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1992' then do;
200507    +            if _dm10 <= '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1991' then do;
200508    +               if _dm10 = '1990'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1990' then do;
200509    +                  Date1990 = 1;
MPRINT(EM_DIAGRAM):   Date1990 = 1;
200510    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200511    +               end;
MPRINT(EM_DIAGRAM):   end;
200512    +               else do;
MPRINT(EM_DIAGRAM):   else do;
200513    +                  if _dm10 = '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1991' then do;
200514    +                     Date1991 = 1;
MPRINT(EM_DIAGRAM):   Date1991 = 1;
200515    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200516    +                  end;
MPRINT(EM_DIAGRAM):   end;
200517    +               end;
MPRINT(EM_DIAGRAM):   end;
200518    +            end;
MPRINT(EM_DIAGRAM):   end;
200519    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200520    +               if _dm10 = '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1992' then do;
200521    +                  Date1992 = 1;
MPRINT(EM_DIAGRAM):   Date1992 = 1;
200522    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200523    +               end;
MPRINT(EM_DIAGRAM):   end;
200524    +            end;
MPRINT(EM_DIAGRAM):   end;
200525    +         end;
MPRINT(EM_DIAGRAM):   end;
200526    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200527    +            if _dm10 <= '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1994' then do;
200528    +               if _dm10 = '1993'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1993' then do;
200529    +                  Date1993 = 1;
MPRINT(EM_DIAGRAM):   Date1993 = 1;
200530    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200531    +               end;
MPRINT(EM_DIAGRAM):   end;
200532    +               else do;
MPRINT(EM_DIAGRAM):   else do;
200533    +                  if _dm10 = '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1994' then do;
200534    +                     Date1994 = 1;
MPRINT(EM_DIAGRAM):   Date1994 = 1;
200535    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200536    +                  end;
MPRINT(EM_DIAGRAM):   end;
200537    +               end;
MPRINT(EM_DIAGRAM):   end;
200538    +            end;
MPRINT(EM_DIAGRAM):   end;
200539    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200540    +               if _dm10 = '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1995' then do;
200541    +                  Date1995 = 1;
MPRINT(EM_DIAGRAM):   Date1995 = 1;
200542    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200543    +               end;
MPRINT(EM_DIAGRAM):   end;
200544    +            end;
MPRINT(EM_DIAGRAM):   end;
200545    +         end;
MPRINT(EM_DIAGRAM):   end;
200546    +      end;
MPRINT(EM_DIAGRAM):   end;
200547    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200548    +         if _dm10 <= '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1998' then do;
200549    +            if _dm10 <= '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1997' then do;
200550    +               if _dm10 = '1996'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1996' then do;
200551    +                  Date1996 = 1;
MPRINT(EM_DIAGRAM):   Date1996 = 1;
200552    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200553    +               end;
MPRINT(EM_DIAGRAM):   end;
200554    +               else do;
MPRINT(EM_DIAGRAM):   else do;
200555    +                  if _dm10 = '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1997' then do;
200556    +                     Date1997 = 1;
MPRINT(EM_DIAGRAM):   Date1997 = 1;
200557    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200558    +                  end;
MPRINT(EM_DIAGRAM):   end;
200559    +               end;
MPRINT(EM_DIAGRAM):   end;
200560    +            end;
MPRINT(EM_DIAGRAM):   end;
200561    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200562    +               if _dm10 = '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1998' then do;
200563    +                  Date1998 = 1;
MPRINT(EM_DIAGRAM):   Date1998 = 1;
200564    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200565    +               end;
MPRINT(EM_DIAGRAM):   end;
200566    +            end;
MPRINT(EM_DIAGRAM):   end;
200567    +         end;
MPRINT(EM_DIAGRAM):   end;
200568    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200569    +            if _dm10 = '1999'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1999' then do;
200570    +               Date1999 = 1;
MPRINT(EM_DIAGRAM):   Date1999 = 1;
200571    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200572    +            end;
MPRINT(EM_DIAGRAM):   end;
200573    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200574    +               if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
200575    +                  Date2000 = 1;
MPRINT(EM_DIAGRAM):   Date2000 = 1;
200576    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200577    +               end;
MPRINT(EM_DIAGRAM):   end;
200578    +            end;
MPRINT(EM_DIAGRAM):   end;
200579    +         end;
MPRINT(EM_DIAGRAM):   end;
200580    +      end;
MPRINT(EM_DIAGRAM):   end;
200581    +   end;
MPRINT(EM_DIAGRAM):   end;
200582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200583    +      if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
200584    +         if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
200585    +            if _dm10 <= '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2002' then do;
200586    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
200587    +                  Date2001 = 1;
MPRINT(EM_DIAGRAM):   Date2001 = 1;
200588    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200589    +               end;
MPRINT(EM_DIAGRAM):   end;
200590    +               else do;
MPRINT(EM_DIAGRAM):   else do;
200591    +                  if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
200592    +                     Date2002 = 1;
MPRINT(EM_DIAGRAM):   Date2002 = 1;
200593    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200594    +                  end;
MPRINT(EM_DIAGRAM):   end;
200595    +               end;
MPRINT(EM_DIAGRAM):   end;
200596    +            end;
MPRINT(EM_DIAGRAM):   end;
200597    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200598    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
200599    +                  Date2003 = 1;
MPRINT(EM_DIAGRAM):   Date2003 = 1;
200600    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200601    +               end;
MPRINT(EM_DIAGRAM):   end;
200602    +            end;
MPRINT(EM_DIAGRAM):   end;
200603    +         end;
MPRINT(EM_DIAGRAM):   end;
200604    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200605    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
200606    +               Date2004 = 1;
MPRINT(EM_DIAGRAM):   Date2004 = 1;
200607    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200608    +            end;
MPRINT(EM_DIAGRAM):   end;
200609    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200610    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
200611    +                  Date2005 = 1;
MPRINT(EM_DIAGRAM):   Date2005 = 1;
200612    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200613    +               end;
MPRINT(EM_DIAGRAM):   end;
200614    +            end;
MPRINT(EM_DIAGRAM):   end;
200615    +         end;
MPRINT(EM_DIAGRAM):   end;
200616    +      end;
MPRINT(EM_DIAGRAM):   end;
200617    +      else do;
MPRINT(EM_DIAGRAM):   else do;
200618    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
200619    +            if _dm10 <= '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2007' then do;
200620    +               if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
200621    +                  Date2006 = 1;
MPRINT(EM_DIAGRAM):   Date2006 = 1;
200622    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200623    +               end;
MPRINT(EM_DIAGRAM):   end;
200624    +               else do;
MPRINT(EM_DIAGRAM):   else do;
200625    +                  if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
200626    +                     Date2007 = 1;
MPRINT(EM_DIAGRAM):   Date2007 = 1;
200627    +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200628    +                  end;
MPRINT(EM_DIAGRAM):   end;
200629    +               end;
MPRINT(EM_DIAGRAM):   end;
200630    +            end;
MPRINT(EM_DIAGRAM):   end;
200631    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200632    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
200633    +                  Date2008 = 1;
MPRINT(EM_DIAGRAM):   Date2008 = 1;
200634    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200635    +               end;
MPRINT(EM_DIAGRAM):   end;
200636    +            end;
MPRINT(EM_DIAGRAM):   end;
200637    +         end;
MPRINT(EM_DIAGRAM):   end;
200638    +         else do;
MPRINT(EM_DIAGRAM):   else do;
200639    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
200640    +               Date2009 = 1;
MPRINT(EM_DIAGRAM):   Date2009 = 1;
200641    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200642    +            end;
MPRINT(EM_DIAGRAM):   end;
200643    +            else do;
MPRINT(EM_DIAGRAM):   else do;
200644    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
200645    +                  Date1990 = -1;
MPRINT(EM_DIAGRAM):   Date1990 = -1;
200646    +                  Date1991 = -1;
MPRINT(EM_DIAGRAM):   Date1991 = -1;
200647    +                  Date1992 = -1;
MPRINT(EM_DIAGRAM):   Date1992 = -1;
200648    +                  Date1993 = -1;
MPRINT(EM_DIAGRAM):   Date1993 = -1;
200649    +                  Date1994 = -1;
MPRINT(EM_DIAGRAM):   Date1994 = -1;
200650    +                  Date1995 = -1;
MPRINT(EM_DIAGRAM):   Date1995 = -1;
200651    +                  Date1996 = -1;
MPRINT(EM_DIAGRAM):   Date1996 = -1;
200652    +                  Date1997 = -1;
MPRINT(EM_DIAGRAM):   Date1997 = -1;
200653    +                  Date1998 = -1;
MPRINT(EM_DIAGRAM):   Date1998 = -1;
200654    +                  Date1999 = -1;
MPRINT(EM_DIAGRAM):   Date1999 = -1;
200655    +                  Date2000 = -1;
MPRINT(EM_DIAGRAM):   Date2000 = -1;
200656    +                  Date2001 = -1;
MPRINT(EM_DIAGRAM):   Date2001 = -1;
200657    +                  Date2002 = -1;
MPRINT(EM_DIAGRAM):   Date2002 = -1;
200658    +                  Date2003 = -1;
MPRINT(EM_DIAGRAM):   Date2003 = -1;
200659    +                  Date2004 = -1;
MPRINT(EM_DIAGRAM):   Date2004 = -1;
200660    +                  Date2005 = -1;
MPRINT(EM_DIAGRAM):   Date2005 = -1;
200661    +                  Date2006 = -1;
MPRINT(EM_DIAGRAM):   Date2006 = -1;
200662    +                  Date2007 = -1;
MPRINT(EM_DIAGRAM):   Date2007 = -1;
200663    +                  Date2008 = -1;
MPRINT(EM_DIAGRAM):   Date2008 = -1;
200664    +                  Date2009 = -1;
MPRINT(EM_DIAGRAM):   Date2009 = -1;
200665    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
200666    +               end;
MPRINT(EM_DIAGRAM):   end;
200667    +            end;
MPRINT(EM_DIAGRAM):   end;
200668    +         end;
MPRINT(EM_DIAGRAM):   end;
200669    +      end;
MPRINT(EM_DIAGRAM):   end;
200670    +   end;
MPRINT(EM_DIAGRAM):   end;
200671    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
200672    +      Date1990 = .;
MPRINT(EM_DIAGRAM):   Date1990 = .;
200673    +      Date1991 = .;
MPRINT(EM_DIAGRAM):   Date1991 = .;
200674    +      Date1992 = .;
MPRINT(EM_DIAGRAM):   Date1992 = .;
200675    +      Date1993 = .;
MPRINT(EM_DIAGRAM):   Date1993 = .;
200676    +      Date1994 = .;
MPRINT(EM_DIAGRAM):   Date1994 = .;
200677    +      Date1995 = .;
MPRINT(EM_DIAGRAM):   Date1995 = .;
200678    +      Date1996 = .;
MPRINT(EM_DIAGRAM):   Date1996 = .;
200679    +      Date1997 = .;
MPRINT(EM_DIAGRAM):   Date1997 = .;
200680    +      Date1998 = .;
MPRINT(EM_DIAGRAM):   Date1998 = .;
200681    +      Date1999 = .;
MPRINT(EM_DIAGRAM):   Date1999 = .;
200682    +      Date2000 = .;
MPRINT(EM_DIAGRAM):   Date2000 = .;
200683    +      Date2001 = .;
MPRINT(EM_DIAGRAM):   Date2001 = .;
200684    +      Date2002 = .;
MPRINT(EM_DIAGRAM):   Date2002 = .;
200685    +      Date2003 = .;
MPRINT(EM_DIAGRAM):   Date2003 = .;
200686    +      Date2004 = .;
MPRINT(EM_DIAGRAM):   Date2004 = .;
200687    +      Date2005 = .;
MPRINT(EM_DIAGRAM):   Date2005 = .;
200688    +      Date2006 = .;
The SAS System
 
MPRINT(EM_DIAGRAM):   Date2006 = .;
200689    +      Date2007 = .;
MPRINT(EM_DIAGRAM):   Date2007 = .;
200690    +      Date2008 = .;
MPRINT(EM_DIAGRAM):   Date2008 = .;
200691    +      Date2009 = .;
MPRINT(EM_DIAGRAM):   Date2009 = .;
200692    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200693    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200694    +   end;
MPRINT(EM_DIAGRAM):   end;
200695    +end;
MPRINT(EM_DIAGRAM):   end;
200696    +
200697    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
200698    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
200699    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
200700    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
200701    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
200702    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
200703    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
200704    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
200705    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
200706    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
200707    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
200708    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
200709    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
200710    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200712    +end;
MPRINT(EM_DIAGRAM):   end;
200713    +else do;
MPRINT(EM_DIAGRAM):   else do;
200714    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
200715    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
200716    +   if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'ASTHMA' then do;
200717    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
200718    +   end;
MPRINT(EM_DIAGRAM):   end;
200719    +   else if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
200720    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
200721    +   end;
MPRINT(EM_DIAGRAM):   end;
200722    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
200723    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
200724    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
200725    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
200726    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
200727    +   end;
MPRINT(EM_DIAGRAM):   end;
200728    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
200729    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
200730    +   end;
MPRINT(EM_DIAGRAM):   end;
200731    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
200732    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
200733    +   end;
MPRINT(EM_DIAGRAM):   end;
200734    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200735    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
200736    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
200737    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
200738    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
200739    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200740    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200741    +   end;
MPRINT(EM_DIAGRAM):   end;
200742    +end;
MPRINT(EM_DIAGRAM):   end;
200743    +
200744    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
200745    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
200746    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
200747    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
200748    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
200749    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
200750    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200751    +end;
MPRINT(EM_DIAGRAM):   end;
200752    +else do;
MPRINT(EM_DIAGRAM):   else do;
200753    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
200754    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
200755    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
200756    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
200757    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
200758    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
200759    +   end;
MPRINT(EM_DIAGRAM):   end;
200760    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
200761    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
200762    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
200763    +   end;
MPRINT(EM_DIAGRAM):   end;
200764    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
200765    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
200766    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
200767    +   end;
MPRINT(EM_DIAGRAM):   end;
200768    +   else do;
MPRINT(EM_DIAGRAM):   else do;
200769    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
200770    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
200771    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
200772    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200773    +   end;
MPRINT(EM_DIAGRAM):   end;
200774    +end;
MPRINT(EM_DIAGRAM):   end;
200775    +
200776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200777    +*** Checking missing input Interval
200778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
200779    +
200780    +IF NMISS(
200781    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
200782    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
200783    +
200784    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
200785    +END;
MPRINT(EM_DIAGRAM):   END;
200786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200787    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
200788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200790    +   S_Population_in_thousands  =    -1.07937284241798 +     0.00004492080679 *
200791    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.07937284241798 + 0.00004492080679 * Population_in_thousands ;
200792    +END;
MPRINT(EM_DIAGRAM):   END;
200793    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200794    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
200795    +   ELSE S_Population_in_thousands
200796    +          =    -1.07937284241798 +     0.00004492080679 *
200797    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.07937284241798 + 0.00004492080679 * Population_in_thousands ;
200798    +END;
MPRINT(EM_DIAGRAM):   END;
200799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200800    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
200801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200803    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
200804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200805    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200806    +   H11  =    -4.69352130447972 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = -4.69352130447972 * S_Population_in_thousands ;
200807    +   H12  =     5.06599717292821 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = 5.06599717292821 * S_Population_in_thousands ;
200808    +   H13  =     9.80634004124476 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 9.80634004124476 * S_Population_in_thousands ;
200809    +   H14  =     3.31228883566718 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = 3.31228883566718 * S_Population_in_thousands ;
200810    +   H15  =     2.65204463622264 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 2.65204463622264 * S_Population_in_thousands ;
200811    +   H11  = H11  +    -2.07549456644559 * Age_group0_17
200812    +          +     1.89028492207963 * Age_group18_24  +     0.22053737030127 *
200813    +        Age_group25_44  +     0.69659443678365 * Date1990
200814    +          +     0.76034786483757 * Date1991  +      1.5555930805213 * Date1992
200815    +          +     0.48544690836429 * Date1993  +     0.39299434842502 * Date1994
200816    +          +     0.69548660210847 * Date1995  +     0.64404991008731 * Date1996
200817    +          +     0.81679921845806 * Date1997  +     0.53332314724246 * Date1998
200818    +          +     1.07150299228461 * Date1999  +      0.7453160964498 * Date2000
200819    +          +     0.90624856895714 * Date2001  +     1.25713648304045 * Date2002
200820    +          +     0.83267142151879 * Date2003  +       1.214226605094 * Date2004
200821    +          +     1.09288669379468 * Date2005  +     0.28321292187401 * Date2006
200822    +          +     1.13140317909567 * Date2007  +     1.02313288593481 * Date2008
200823    +          +     0.99491883505772 * Date2009  +    -7.71401550934144 *
200824    +        DiseaseAsthma  +     1.59964499587479 * DiseaseCancer__all
200825    +          +     0.70480948708574 * DiseaseDementia_and_Alzheimer_
200826    +          +     0.72797177718724 * DiseaseOsteoarthritis
200827    +          +     0.46530598096977 * GenderAll  +     1.18299451025555 *
200828    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -2.07549456644559 * Age_group0_17 + 1.89028492207963 * Age_group18_24 + 0.22053737030127 * Age_group25_44 + 0.69659443678365 * Date1990 + 0.76034786483757 * Date1991 + 1.5555930805213 * Date1992 + 0.48544690836429 *
Date1993 + 0.39299434842502 * Date1994 + 0.69548660210847 * Date1995 + 0.64404991008731 * Date1996 + 0.81679921845806 * Date1997 + 0.53332314724246 * Date1998 + 1.07150299228461 * Date1999 + 0.7453160964498 * Date2000 + 0.90624856895714 * Date2001 +
1.25713648304045 * Date2002 + 0.83267142151879 * Date2003 + 1.214226605094 * Date2004 + 1.09288669379468 * Date2005 + 0.28321292187401 * Date2006 + 1.13140317909567 * Date2007 + 1.02313288593481 * Date2008 + 0.99491883505772 * Date2009 + -7.71401550934144
* DiseaseAsthma + 1.59964499587479 * DiseaseCancer__all + 0.70480948708574 * DiseaseDementia_and_Alzheimer_ + 0.72797177718724 * DiseaseOsteoarthritis + 0.46530598096977 * GenderAll + 1.18299451025555 * GenderFemale ;
200829    +   H12  = H12  +      7.3312221277029 * Age_group0_17
200830    +          +     5.73850136241549 * Age_group18_24  +     10.6973185841868 *
200831    +        Age_group25_44  +     -1.3553395840109 * Date1990
200832    +          +    -1.64661531486796 * Date1991  +    -0.38696387838105 * Date1992
200833    +          +    -1.07583510589596 * Date1993  +    -1.20049741606894 * Date1994
200834    +          +    -1.48670117795664 * Date1995  +     0.56202204438682 * Date1996
200835    +          +    -0.70377483370229 * Date1997  +    -1.70290790819299 * Date1998
200836    +          +    -2.15232681013713 * Date1999  +     -1.3734118962421 * Date2000
200837    +          +    -1.53351964013452 * Date2001  +    -2.41748704002257 * Date2002
200838    +          +    -0.09137745061889 * Date2003  +    -1.22928905028318 * Date2004
200839    +          +    -2.52486294132669 * Date2005  +    -2.83313300695631 * Date2006
200840    +          +    -2.38969371440024 * Date2007  +    -1.97455468478895 * Date2008
200841    +          +    -2.79577318369912 * Date2009  +     10.0930545342347 *
200842    +        DiseaseAsthma  +     2.53463690769088 * DiseaseCancer__all
200843    +          +    -5.44974536050982 * DiseaseDementia_and_Alzheimer_
200844    +          +    -6.66366786440493 * DiseaseOsteoarthritis
200845    +          +    -13.7993284481877 * GenderAll  +    -11.2856836835284 *
200846    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 7.3312221277029 * Age_group0_17 + 5.73850136241549 * Age_group18_24 + 10.6973185841868 * Age_group25_44 + -1.3553395840109 * Date1990 + -1.64661531486796 * Date1991 + -0.38696387838105 * Date1992 + -1.07583510589596 *
Date1993 + -1.20049741606894 * Date1994 + -1.48670117795664 * Date1995 + 0.56202204438682 * Date1996 + -0.70377483370229 * Date1997 + -1.70290790819299 * Date1998 + -2.15232681013713 * Date1999 + -1.3734118962421 * Date2000 + -1.53351964013452 * Date2001
+ -2.41748704002257 * Date2002 + -0.09137745061889 * Date2003 + -1.22928905028318 * Date2004 + -2.52486294132669 * Date2005 + -2.83313300695631 * Date2006 + -2.38969371440024 * Date2007 + -1.97455468478895 * Date2008 + -2.79577318369912 * Date2009 +
10.0930545342347 * DiseaseAsthma + 2.53463690769088 * DiseaseCancer__all + -5.44974536050982 * DiseaseDementia_and_Alzheimer_ + -6.66366786440493 * DiseaseOsteoarthritis + -13.7993284481877 * GenderAll + -11.2856836835284 * GenderFemale ;
200847    +   H13  = H13  +     11.5320728758474 * Age_group0_17
200848    +          +     2.55083959476408 * Age_group18_24  +     9.45497681685949 *
200849    +        Age_group25_44  +    -2.22305273880915 * Date1990
200850    +          +     0.71228320972948 * Date1991  +    -1.69671242363179 * Date1992
200851    +          +    -2.07096834302197 * Date1993  +    -1.48125572009704 * Date1994
200852    +          +     -0.8875899757714 * Date1995  +      -2.421179817414 * Date1996
200853    +          +    -1.64953820814596 * Date1997  +     0.05899063834564 * Date1998
200854    +          +    -0.65976162782464 * Date1999  +    -2.12021732370381 * Date2000
200855    +          +    -0.23218871697767 * Date2001  +     0.49680053450197 * Date2002
200856    +          +    -3.37070416383577 * Date2003  +    -3.19700960081452 * Date2004
200857    +          +    -1.44905372985012 * Date2005  +    -0.35504408925028 * Date2006
200858    +          +    -2.42366014359047 * Date2007  +      1.4891459456614 * Date2008
200859    +          +    -0.95536468399431 * Date2009  +    -16.2644106277431 *
200860    +        DiseaseAsthma  +    -1.07420198692332 * DiseaseCancer__all
200861    +          +     2.30579249007472 * DiseaseDementia_and_Alzheimer_
200862    +          +     3.20017776671941 * DiseaseOsteoarthritis
200863    +          +    -4.15046784729369 * GenderAll  +    -5.78061485020609 *
200864    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 11.5320728758474 * Age_group0_17 + 2.55083959476408 * Age_group18_24 + 9.45497681685949 * Age_group25_44 + -2.22305273880915 * Date1990 + 0.71228320972948 * Date1991 + -1.69671242363179 * Date1992 + -2.07096834302197 *
Date1993 + -1.48125572009704 * Date1994 + -0.8875899757714 * Date1995 + -2.421179817414 * Date1996 + -1.64953820814596 * Date1997 + 0.05899063834564 * Date1998 + -0.65976162782464 * Date1999 + -2.12021732370381 * Date2000 + -0.23218871697767 * Date2001 +
0.49680053450197 * Date2002 + -3.37070416383577 * Date2003 + -3.19700960081452 * Date2004 + -1.44905372985012 * Date2005 + -0.35504408925028 * Date2006 + -2.42366014359047 * Date2007 + 1.4891459456614 * Date2008 + -0.95536468399431 * Date2009 +
-16.2644106277431 * DiseaseAsthma + -1.07420198692332 * DiseaseCancer__all + 2.30579249007472 * DiseaseDementia_and_Alzheimer_ + 3.20017776671941 * DiseaseOsteoarthritis + -4.15046784729369 * GenderAll + -5.78061485020609 * GenderFemale ;
200865    +   H14  = H14  +    -1.55108658966307 * Age_group0_17
200866    +          +    -10.3789605699185 * Age_group18_24  +    -1.95904692133192 *
200867    +        Age_group25_44  +    -0.91391521151454 * Date1990
200868    +          +     0.51833472596654 * Date1991  +    -0.97926312698119 * Date1992
200869    +          +     0.18708730131971 * Date1993  +     0.60637947309503 * Date1994
200870    +          +    -0.26873764949416 * Date1995  +    -0.16817982853005 * Date1996
200871    +          +    -0.46955908040279 * Date1997  +     0.35343370229359 * Date1998
200872    +          +    -0.36562316393328 * Date1999  +     0.19705393231327 * Date2000
200873    +          +     0.37838157041407 * Date2001  +    -0.71736834843823 * Date2002
200874    +          +      0.2251319319131 * Date2003  +    -0.52219814910984 * Date2004
200875    +          +    -0.37183668462567 * Date2005  +     0.18776533343514 * Date2006
200876    +          +    -0.52283406693355 * Date2007  +     0.27924787632052 * Date2008
200877    +          +    -0.18114426047562 * Date2009  +     11.6289452155843 *
200878    +        DiseaseAsthma  +     1.69855966477549 * DiseaseCancer__all
200879    +          +     4.07538413528311 * DiseaseDementia_and_Alzheimer_
200880    +          +     4.80541528234248 * DiseaseOsteoarthritis
200881    +          +     4.09040653943265 * GenderAll  +     5.64960081562795 *
200882    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.55108658966307 * Age_group0_17 + -10.3789605699185 * Age_group18_24 + -1.95904692133192 * Age_group25_44 + -0.91391521151454 * Date1990 + 0.51833472596654 * Date1991 + -0.97926312698119 * Date1992 + 0.18708730131971 *
Date1993 + 0.60637947309503 * Date1994 + -0.26873764949416 * Date1995 + -0.16817982853005 * Date1996 + -0.46955908040279 * Date1997 + 0.35343370229359 * Date1998 + -0.36562316393328 * Date1999 + 0.19705393231327 * Date2000 + 0.37838157041407 * Date2001 +
-0.71736834843823 * Date2002 + 0.2251319319131 * Date2003 + -0.52219814910984 * Date2004 + -0.37183668462567 * Date2005 + 0.18776533343514 * Date2006 + -0.52283406693355 * Date2007 + 0.27924787632052 * Date2008 + -0.18114426047562 * Date2009 +
11.6289452155843 * DiseaseAsthma + 1.69855966477549 * DiseaseCancer__all + 4.07538413528311 * DiseaseDementia_and_Alzheimer_ + 4.80541528234248 * DiseaseOsteoarthritis + 4.09040653943265 * GenderAll + 5.64960081562795 * GenderFemale ;
200883    +   H15  = H15  +      1.0377579474386 * Age_group0_17
200884    +          +    -7.41619727993334 * Age_group18_24  +    -4.56557554204821 *
200885    +        Age_group25_44  +    -0.51974691842413 * Date1990
200886    +          +     0.18036839777598 * Date1991  +    -0.35174707148871 * Date1992
200887    +          +     0.71100844589891 * Date1993  +    -0.43490457226145 * Date1994
200888    +          +    -0.17077200125489 * Date1995  +     0.14632687316425 * Date1996
200889    +          +    -0.04997436214043 * Date1997  +     0.22148905595863 * Date1998
200890    +          +    -0.75589634680008 * Date1999  +    -0.06995609300308 * Date2000
200891    +          +     0.30369084965141 * Date2001  +    -0.63422767137316 * Date2002
200892    +          +     -0.1622350831455 * Date2003  +     0.36661113505189 * Date2004
200893    +          +    -0.23801941735777 * Date2005  +     0.69380511406108 * Date2006
200894    +          +    -0.04835278994052 * Date2007  +     0.17415908606882 * Date2008
200895    +          +     0.41739592966721 * Date2009  +     8.22227335247361 *
200896    +        DiseaseAsthma  +    -1.93468543480133 * DiseaseCancer__all
200897    +          +    -0.44345159476264 * DiseaseDementia_and_Alzheimer_
200898    +          +    -0.67155128279256 * DiseaseOsteoarthritis
200899    +          +     -3.5896398512769 * GenderAll  +    -3.19425758541995 *
200900    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.0377579474386 * Age_group0_17 + -7.41619727993334 * Age_group18_24 + -4.56557554204821 * Age_group25_44 + -0.51974691842413 * Date1990 + 0.18036839777598 * Date1991 + -0.35174707148871 * Date1992 + 0.71100844589891 *
Date1993 + -0.43490457226145 * Date1994 + -0.17077200125489 * Date1995 + 0.14632687316425 * Date1996 + -0.04997436214043 * Date1997 + 0.22148905595863 * Date1998 + -0.75589634680008 * Date1999 + -0.06995609300308 * Date2000 + 0.30369084965141 * Date2001 +
-0.63422767137316 * Date2002 + -0.1622350831455 * Date2003 + 0.36661113505189 * Date2004 + -0.23801941735777 * Date2005 + 0.69380511406108 * Date2006 + -0.04835278994052 * Date2007 + 0.17415908606882 * Date2008 + 0.41739592966721 * Date2009 +
8.22227335247361 * DiseaseAsthma + -1.93468543480133 * DiseaseCancer__all + -0.44345159476264 * DiseaseDementia_and_Alzheimer_ + -0.67155128279256 * DiseaseOsteoarthritis + -3.5896398512769 * GenderAll + -3.19425758541995 * GenderFemale ;
200901    +   H11  =    -0.67879361033073 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.67879361033073 + H11 ;
200902    +   H12  =    -10.2997091319747 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -10.2997091319747 + H12 ;
200903    +   H13  =     -18.993712447529 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -18.993712447529 + H13 ;
200904    +   H14  =    -5.80002297793079 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -5.80002297793079 + H14 ;
200905    +   H15  =     3.27949226428233 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 3.27949226428233 + H15 ;
200906    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
200907    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
200908    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
200909    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
200910    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
200911    +END;
MPRINT(EM_DIAGRAM):   END;
200912    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200913    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
200914    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
200915    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
200916    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
200917    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
200918    +END;
MPRINT(EM_DIAGRAM):   END;
200919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200920    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
200921    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
200922    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
200923    +   P_Cases_in_1000s  =     6.20558898162838 * H11  +     28.0802050542927 *
200924    +        H12  +     -19.925743519177 * H13  +    -8.37268681364557 * H14
200925    +          +    -6.13796165178146 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 6.20558898162838 * H11 + 28.0802050542927 * H12 + -19.925743519177 * H13 + -8.37268681364557 * H14 + -6.13796165178146 * H15 ;
200926    +   P_Cases_in_1000s  = P_Cases_in_1000s  +     19.0677178757299 *
200927    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + 19.0677178757299 * S_Population_in_thousands ;
200928    +   P_Cases_in_1000s  = P_Cases_in_1000s  +     1.84323898299894 *
200929    +        Age_group0_17  +    -32.2129039547762 * Age_group18_24
200930    +          +    -5.87042279413697 * Age_group25_44  +     0.64644874320222 *
200931    +        Date1990  +    -0.61767104718305 * Date1991  +     2.10674090462058 *
200932    +        Date1992  +     1.84201515067404 * Date1993  +    -2.61852689637743 *
200933    +        Date1994  +     0.56014165474937 * Date1995  +     2.14278607761748 *
200934    +        Date1996  +     3.23282628380366 * Date1997  +    -0.43138647584633 *
200935    +        Date1998  +    -1.08959810703247 * Date1999  +     1.41287345304834 *
200936    +        Date2000  +     0.48675488348262 * Date2001  +    -1.09566933054394 *
200937    +        Date2002  +     3.59139119254411 * Date2003  +     6.02349786881733 *
200938    +        Date2004  +    -2.58297796573657 * Date2005  +     2.68750938943843 *
200939    +        Date2006  +     2.97573207261795 * Date2007  +     -1.6913818668857 *
200940    +        Date2008  +     3.26943114185455 * Date2009  +     28.1005313349182 *
200941    +        DiseaseAsthma  +     8.57749337260825 * DiseaseCancer__all
200942    +          +    -13.3693815595488 * DiseaseDementia_and_Alzheimer_
200943    +          +    -15.7176459386255 * DiseaseOsteoarthritis
200944    +          +     15.9878679482132 * GenderAll  +     4.75599475926515 *
200945    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + 1.84323898299894 * Age_group0_17 + -32.2129039547762 * Age_group18_24 + -5.87042279413697 * Age_group25_44 + 0.64644874320222 * Date1990 + -0.61767104718305 * Date1991 + 2.10674090462058 *
Date1992 + 1.84201515067404 * Date1993 + -2.61852689637743 * Date1994 + 0.56014165474937 * Date1995 + 2.14278607761748 * Date1996 + 3.23282628380366 * Date1997 + -0.43138647584633 * Date1998 + -1.08959810703247 * Date1999 + 1.41287345304834 * Date2000 +
0.48675488348262 * Date2001 + -1.09566933054394 * Date2002 + 3.59139119254411 * Date2003 + 6.02349786881733 * Date2004 + -2.58297796573657 * Date2005 + 2.68750938943843 * Date2006 + 2.97573207261795 * Date2007 + -1.6913818668857 * Date2008 +
3.26943114185455 * Date2009 + 28.1005313349182 * DiseaseAsthma + 8.57749337260825 * DiseaseCancer__all + -13.3693815595488 * DiseaseDementia_and_Alzheimer_ + -15.7176459386255 * DiseaseOsteoarthritis + 15.9878679482132 * GenderAll + 4.75599475926515 *
GenderFemale ;
200946    +   P_Cases_in_1000s  =     21.2149380922315 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 21.2149380922315 + P_Cases_in_1000s ;
200947    +END;
MPRINT(EM_DIAGRAM):   END;
200948    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
200949    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
200950    +END;
MPRINT(EM_DIAGRAM):   END;
200951    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
200952    +   P_Cases_in_1000s  =     22.4354838709677;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 22.4354838709677;
200953    +END;
MPRINT(EM_DIAGRAM):   END;
200954    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
200955    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
200956    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
200957    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
200958    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
200959    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200960    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
200961    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
200962    +drop
200963    +S_Population_in_thousands
200964    +H11
200965    +H12
200966    +H13
200967    +H14
200968    +H15
200969    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
200970     run;
 
NOTE: DATA STEP view saved on file EMWS2.NEURAL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
200971     quit;
200972     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
200973     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
200974     * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
200975     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Neural_TRAIN out=WORK.M2JMSO74 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JMSO74;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JMSO74(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JMSO74;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JMSO74;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2WXLEFW NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QN1MVF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   set WORK.M2WXLEFW;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_CASES_IN_1000S") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_CASES_IN_1000S") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("CASES_IN_1000S") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
201323     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
201324     set EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO;
201325     where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
201326     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201327     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMINFO;
201328     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
201329     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
201330     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
201334     run;
201335     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
201336     set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
201337     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201338     proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
201339     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201341     proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
201342     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201343     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201344     proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
201345     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201346     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201347     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
201348     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
201349     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
201350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201351     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
201352     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
201353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
201354     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS2.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS2.NEURAL_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:45:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 04, 2019
Time:                13:45:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2RAPJUA "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2RAPJUA new;
MPRINT(EM_DIAGRAM):   run;
201378     data EMWS2.Neural_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMOUTFIT(rename=(_NAME_=TARGET));
201379     set EMWS2.Neural_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_OUTFIT(where=(_NAME_ eq 'OVERALL'));
201380     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
201381     if _NAME_='OVERALL' then _NAME_='Cases_in_1000s';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='Cases_in_1000s';
201382     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
201383     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS2.NEURAL_EMOUTFIT has 1 observations and 58 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201384     proc sort data=EMWS2.Neural_EMOUTFIT nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_EMOUTFIT nodupkey;
201385     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
201386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.NEURAL_EMOUTFIT has 1 observations and 58 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201387     data EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMOUTFIT;
201388     set EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMOUTFIT;
201389     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
201390     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
201391     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
NOTE: The data set EMWS2.NEURAL_EMOUTFIT has 1 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201392     proc sort data=EMWS2.Neural_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Neural_EMREPORTFIT nothreads;
201393     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
201394     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.NEURAL_EMREPORTFIT.
NOTE: The data set EMWS2.NEURAL_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201395     %let _EMwarndup = 0;
201396     %let _EMtargetdup =;
201397     %let _EMASEtargetdup =;
201398     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
201399     set EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMOUTFIT;
201400     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
201401     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
201402     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
201403     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
201404     end;
MPRINT(EM_DIAGRAM):   end;
201405     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201406     proc sort data=EMWS2.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
201407     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
201408     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 7 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
201409     proc sort data=EMWS2.Neural_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
201410     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
201411     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.NEURAL_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201412     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
201413     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
201414     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
201415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 6 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 7 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
201416     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
201417     set EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_CMeta_TRAIN;
201418     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
201419     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
201420     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
201421     set EMWS2.Neural_TRAIN(keep=
201422     P_Cases_in_1000s
201423     R_Cases_in_1000s
201424     _WARN_
201425     Cases_in_1000s
201426     );
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_TRAIN(keep= P_Cases_in_1000s R_Cases_in_1000s _WARN_ Cases_in_1000s );
201427     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.NEURAL_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 378 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Neural_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Neural_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Cases_in_1000s _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Cases_in_1000s") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Cases_in_1000s Cases_in_1000s _tmpfreqvar_ WHERE = (Cases_in_1000s > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Cases_in_1000s ;
MPRINT(EM_ASSESS):   VAR Cases_in_1000s ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Cases_in_1000s" DATAROLE "TRAIN" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1 -
RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Cases_in_1000s = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Cases_in_1000s - -50.8623979420376) / 9.86444829060185), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 378);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 146.42656787;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 9.86444829060185;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
205758     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
205759     set EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_CMeta_TRAIN;
205760     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
205761     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
205762     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
205763     set EMWS2.Neural_VALIDATE(keep=
205764     P_Cases_in_1000s
205765     R_Cases_in_1000s
205766     _WARN_
205767     Cases_in_1000s
205768     );
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_VALIDATE(keep= P_Cases_in_1000s R_Cases_in_1000s _WARN_ Cases_in_1000s );
205769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS2.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 284 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 284 observations read from the data set EMWS2.NEURAL_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 284 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Neural_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Neural_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMRESIDUAL WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Cases_in_1000s _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Cases_in_1000s") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Cases_in_1000s Cases_in_1000s _tmpfreqvar_ WHERE = (Cases_in_1000s > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Cases_in_1000s ;
MPRINT(EM_ASSESS):   VAR Cases_in_1000s ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Cases_in_1000s" DATAROLE "VALIDATE" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1 -
RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Cases_in_1000s = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Cases_in_1000s - -70.2385502861862) / 10.5135902393093), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 284);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 140.0332545;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 10.5135902393093;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length P_LABEL $27;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
210110     %let _cn = %sysfunc(getoption(CENTER));
210111     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
210112     proc print data=EMWS2.Neural_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Neural_EMREPORTFIT noobs label;
210113     var STAT LABEL TRAIN
210114     VALIDATE
210115     TEST
210116     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE TEST ;
210117     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
210118     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
210119     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
210120     run;
 
NOTE: There were 21 observations read from the data set EMWS2.NEURAL_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 62.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
210121     title10;
MPRINT(EM_DIAGRAM):   title10;
210122     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
210123     proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
210124     modify Neural_EMRANK;
MPRINT(EM_DIAGRAM):   modify Neural_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
210125     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
210126     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
210127     run;
 
NOTE: MODIFY was successful for EMWS2.NEURAL_EMRANK.DATA.
210128     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
210129     %let _cn = %sysfunc(getoption(CENTER));
210130     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
210131     proc print data=EMWS2.Neural_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Neural_EMRANK label noobs;
210132     var
210133     decile N _targetMean_ _meanP_;
MPRINT(EM_DIAGRAM):   var decile N _targetMean_ _meanP_;
210134     by
210135     notsorted DATAROLE
210136     notsorted TARGET
210137     notsorted TARGETLABEL
210138     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
210139     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
210140     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
210141     run;
 
NOTE: There were 40 observations read from the data set EMWS2.NEURAL_EMRANK.
NOTE: The PROCEDURE PRINT printed page 63.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
210142     title10;
MPRINT(EM_DIAGRAM):   title10;
210143     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
210144     proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
210145     modify Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
210146     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
210147     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
210148     run;
 
NOTE: MODIFY was successful for EMWS2.NEURAL_EMSCOREDIST.DATA.
210149     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Neural_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label _targetMean_ _meanp_ n score;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Cases_in_1000s" );
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
