*------------------------------------------------------------*
User:                student
Date:                December 09, 2019
Time:                16:19:44
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 09, 2019
Time:                16:19:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1M_XEX6 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1M_XEX6 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:39" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:39" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
202813     proc freq data=EMWS2.Neural_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Neural_VariableSet noprint;
202814     table ROLE*LEVEL/out=WORK.NeuralMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.NeuralMETA;
202815     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.NEURAL_VARIABLESET.
NOTE: The data set WORK.NEURALMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
202816     proc print data=WORK.NeuralMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.NeuralMETA label noobs;
202817     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
202818     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
202819     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
202820     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
202821     run;
 
NOTE: There were 3 observations read from the data set WORK.NEURALMETA.
NOTE: The PROCEDURE PRINT printed page 56.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
202822     title10;
MPRINT(EM_DIAGRAM):   title10;
202823     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS2.Part_TRAIN EMWS2.Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN EMWS2 Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN
EMWS2.Part_TRAIN EMWS2.Part_TRAIN EMWS2 Part_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
"No decisions defined for target "Cases_in_1000s"."
202824     proc print data = EMWS2.Ids2_Cases_in_1000s_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS2.Ids2_Cases_in_1000s_DM noobs label;
202825     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
202826     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
202827     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
202828     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
202829     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
202830     run;
 
NOTE: There were 3 observations read from the data set EMWS2.IDS2_CASES_IN_1000S_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 57.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
202831     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3J0O__I;
MPRINT(EM_DIAGRAM):   set WORK.M3J0O__I;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 3 observations read from the data set EMWS2.IDS2_CASES_IN_1000S_DD.
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
NOTE: There were 3 observations read from the data set EMWS2.IDS2_CASES_IN_1000S_DD.
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
202841     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
202842     * Neural: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural: Create decision matrix;
202843     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202844     data WORK.Cases_in_1000s(label="Cases_in_1000s");
MPRINT(EM_DIAGRAM):   data WORK.Cases_in_1000s(label="Cases_in_1000s");
202845       length   Cases_in_1000s                       8
202846                ;
MPRINT(EM_DIAGRAM):   length Cases_in_1000s 8 ;
202847
202848      Cases_in_1000s=0;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=0;
202849     output;
MPRINT(EM_DIAGRAM):   output;
202850      Cases_in_1000s=801;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=801;
202851     output;
MPRINT(EM_DIAGRAM):   output;
202852      Cases_in_1000s=400.5;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=400.5;
202853     output;
MPRINT(EM_DIAGRAM):   output;
202854     ;
MPRINT(EM_DIAGRAM):   ;
202855     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202856     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
202857     modify Cases_in_1000s(type=PROFIT label=Cases_in_1000s);
MPRINT(EM_DIAGRAM):   modify Cases_in_1000s(type=PROFIT label= Cases_in_1000s);
MPRINT(EM_DIAGRAM):   run;
202858     run;
 
NOTE: MODIFY was successful for WORK.CASES_IN_1000S.DATA.
202859     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
202860     data EM_Neural;
MPRINT(EM_DIAGRAM):   data EM_Neural;
202861     set EMWS2.Part_TRAIN(keep=
202862     Age_group Cases_in_1000s Disease Gender Population_in_thousands);
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN(keep= Age_group Cases_in_1000s Disease Gender Population_in_thousands);
202863     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: The data set WORK.EM_NEURAL has 750 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202864     *------------------------------------------------------------* ;
202865     * Neural: DMDBClass Macro ;
202866     *------------------------------------------------------------* ;
202867     %macro DMDBClass;
202868         Age_group(ASC) Disease(ASC) Gender(ASC)
202869     %mend DMDBClass;
202870     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202871     * Neural: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural: DMDBVar Macro ;
202872     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202873     %macro DMDBVar;
202874         Cases_in_1000s Population_in_thousands
202875     %mend DMDBVar;
202876     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202877     * Neural: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural: Create DMDB;
202878     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202879     proc dmdb batch data=WORK.EM_Neural
202880     dmdbcat=WORK.Neural_DMDB
202881     maxlevel = 513
202882     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural dmdbcat=WORK.Neural_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
202883     class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Disease(ASC) Gender(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
202884     var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s Population_in_thousands
MPRINT(EM_DIAGRAM):  ;
202885     target
202886     Cases_in_1000s
202887     ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
202888     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 750   Memory used = 511K.
NOTE: There were 750 observations read from the data set WORK.EM_NEURAL.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
202889     quit;
202890     *--- end code ---*;
 
202891     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
202892     * Neural: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Interval Input Variables Macro ;
202893     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202894     %macro INTINPUTS;
202895         Population_in_thousands
202896     %mend INTINPUTS;
202897     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202898     * Neural: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Binary Inputs Macro ;
202899     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202900     %macro BININPUTS;
202901
202902     %mend BININPUTS;
202903     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202904     * Neural: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Nominal Inputs Macro ;
202905     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202906     %macro NOMINPUTS;
202907         Age_group Disease Gender
202908     %mend NOMINPUTS;
202909     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202910     * Neural: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural: Ordinal Inputs Macro ;
202911     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202912     %macro ORDINPUTS;
202913
202914     %mend ORDINPUTS;
202915     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202916     * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
202917     ;
MPRINT(EM_DIAGRAM):   ;
202918     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202919     proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB
202920     validdata = EMWS2.Part_VALIDATE
202921     random=12345
202922     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB validdata = EMWS2.Part_VALIDATE random=12345 ;
202923     nloptions
202924     ;
MPRINT(EM_DIAGRAM):   nloptions ;
202925     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
202926     netopts
202927     decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
202928     input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Population_in_thousands
202929     ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
202930     input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   Age_group Disease Gender
202931     ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
202932     target
202933     Cases_in_1000s
202934     / level=interval id=intervalTargets
202935     bias
202936     ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s / level=interval id=intervalTargets bias ;
202937     arch MLP
202938     Hidden=5
202939     direct
202940     ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=5 direct ;
202941     Prelim 5 preiter=10
202942     pretime=3600
202943     Outest=EMWS2.Neural_PRELIM_OUTEST
202944     ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS2.Neural_PRELIM_OUTEST ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set EMWS2.NEURAL_PRELIM_OUTEST has 11 observations and 98 variables.
202945     save network=EMWS2.Neural_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS2.Neural_NETWORK.dm_neural;
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been closed.
202946     train Maxiter=50
202947     maxtime=14400
202948     Outest=EMWS2.Neural_outest estiter=1
202949     Outfit=EMWS2.Neural_OUTFIT
202950     ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS2.Neural_outest estiter=1 Outfit=EMWS2.Neural_OUTFIT ;
WARNING: LEVMAR Optimization cannot be completed.
NOTE: LEVMAR needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set EMWS2.NEURAL_OUTEST has 136 observations and 98 variables.
NOTE: The data set EMWS2.NEURAL_OUTFIT has 104 observations and 36 variables.
202951     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL has 750 observations and 5 variables.
NOTE: The data set EMWS2.PART_VALIDATE has 563 observations and 7 variables.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 58-61.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.14 seconds
      cpu time            1.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
202952     quit;
 
202953     proc sort data=EMWS2.Neural_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Neural_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL")) out=fit_Neural;
202954     by _VMISC_;
MPRINT(EM_DIAGRAM):   by _VMISC_;
202955     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
202956     %GLOBAL ITER;
202957     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
202958     set fit_Neural(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural(obs=1);
202959     call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
202960     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202961     data EMWS2.Neural_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_INITIAL;
202962     set EMWS2.Neural_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_outest(where=(_ITER_ eq 0 and _OBJ_ ne .));
202963     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_OUTEST.
      WHERE (_ITER_=0) and (_OBJ_ not = .);
NOTE: The data set EMWS2.NEURAL_INITIAL has 1 observations and 98 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
202964     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
202965     * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
202966     ;
MPRINT(EM_DIAGRAM):   ;
202967     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202968     proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB
202969     validdata = EMWS2.Part_VALIDATE
202970     network = EMWS2.Neural_NETWORK.dm_neural
202971     random=12345
202972     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural dmdbcat=WORK.Neural_DMDB validdata = EMWS2.Part_VALIDATE network = EMWS2.Neural_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS2.NEURAL_NETWORK.DM_NEURAL has been closed.
202973     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
202974     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
202975     initial inest=EMWS2.Neural_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS2.Neural_INITIAL;
NOTE: The data set EMWS2.NEURAL_INITIAL has 1 observations and 98 variables.
202976     train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
202977     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\SCORECODE.sas"
202978     group=Neural
202979     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\SCORECODE.sas" group=Neural ;
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\SCORECODE.sas opened.
202980     ;
MPRINT(EM_DIAGRAM):   ;
202981     code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\RESIDUALSCORECODE.sas"
202982     group=Neural
202983     residual
202984     ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\RESIDUALSCORECODE.sas" group=Neural residual ;
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\RESIDUALSCORECODE.sas opened.
202985     ;
MPRINT(EM_DIAGRAM):   ;
202986     score data=EMWS2.Part_TRAIN out=_NULL_
202987     outfit=WORK.FIT1
202988     role=TRAIN
202989     outkey=EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Part_TRAIN out=_NULL_ outfit=WORK.FIT1 role=TRAIN outkey=EMWS2.Neural_OUTKEY;
NOTE: The data set EMWS2.NEURAL_OUTKEY has 21 observations and 8 variables.
NOTE: The data set EMWS2.PART_TRAIN has 750 observations and 7 variables.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
202990     score data=EMWS2.Part_VALIDATE out=_NULL_
202991     outfit=WORK.FIT2
202992     role=VALID
202993     outkey=EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Part_VALIDATE out=_NULL_ outfit=WORK.FIT2 role=VALID outkey=EMWS2.Neural_OUTKEY;
NOTE: The data set EMWS2.NEURAL_OUTKEY has 21 observations and 8 variables.
NOTE: The data set EMWS2.PART_VALIDATE has 563 observations and 7 variables.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
202994     score data=EMWS2.Part_TEST out=_NULL_
202995     outfit=WORK.FIT3
202996     role=TEST
202997     outkey=EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Part_TEST out=_NULL_ outfit=WORK.FIT3 role=TEST outkey=EMWS2.Neural_OUTKEY;
NOTE: The data set EMWS2.NEURAL_OUTKEY has 21 observations and 8 variables.
NOTE: The data set EMWS2.PART_TEST has 562 observations and 7 variables.
NOTE: The data set WORK.FIT3 has 2 observations and 25 variables.
202998     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL has 750 observations and 5 variables.
NOTE: The data set EMWS2.PART_VALIDATE has 563 observations and 7 variables.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
202999     quit;
203000     data EMWS2.Neural_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_OUTFIT;
203001     merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2 WORK.FIT3;
203002     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: There were 2 observations read from the data set WORK.FIT3.
NOTE: The data set EMWS2.NEURAL_OUTFIT has 2 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
203003     data EMWS2.Neural_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMESTIMATE;
203004     set EMWS2.Neural_outest;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_outest;
203005     if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
203006     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 136 observations read from the data set EMWS2.NEURAL_OUTEST.
NOTE: The data set EMWS2.NEURAL_EMESTIMATE has 52 observations and 98 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
203007     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
203008     delete EM_Neural;
MPRINT(EM_DIAGRAM):   delete EM_Neural;
203009     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_NEURAL (memtype=DATA).
203010     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
203011     data EMWS2.Neural_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
203012     set fit_Neural;
MPRINT(EM_DIAGRAM):   set fit_Neural;
203013     attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
203014     attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
203015     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK.FIT_NEURAL.
NOTE: The data set EMWS2.NEURAL_PLOTDS has 52 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
203016     proc sort data=EMWS2.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_PLOTDS;
203017     by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
203018     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_PLOTDS.
NOTE: The data set EMWS2.NEURAL_PLOTDS has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
203019     data EMWS2.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_PLOTDS;
203020     set EMWS2.Neural_PLOTDS;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_PLOTDS;
203021     drop _MISC_;
MPRINT(EM_DIAGRAM):   drop _MISC_;
203022     drop _WRONG_;
MPRINT(EM_DIAGRAM):   drop _WRONG_;
203023     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_PLOTDS.
NOTE: The data set EMWS2.NEURAL_PLOTDS has 52 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
203024     data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 0) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 0) );
203025     set EMWS2.Neural_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMESTIMATE;
203026     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS2.NEURAL_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 90 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
203027     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
203028     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
203029     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 90 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
203030     proc transpose data=tempweight out=EMWS2.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS2.Neural_WEIGHTDS;
203031     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
203032     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS2.NEURAL_WEIGHTDS has 88 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
203033     data EMWS2.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_WEIGHTDS;
203034     set EMWS2.Neural_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_WEIGHTDS;
203035     FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
203036     TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
203037     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
203038     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
203039     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
203040        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
203041     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
203042     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 88 observations read from the data set EMWS2.NEURAL_WEIGHTDS.
NOTE: The data set EMWS2.NEURAL_WEIGHTDS has 83 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
203043     proc sort data=EMWS2.Neural_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_WEIGHTDS nodupkey;
203044     by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
203045     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 83 observations read from the data set EMWS2.NEURAL_WEIGHTDS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.NEURAL_WEIGHTDS has 83 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:42" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 09, 2019
Time:                16:19:42
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0FW0872 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0FW0872 new;
MPRINT(EM_DIAGRAM):   run;
203147     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
203148     set EMWS2.Neural_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_OUTKEY;
203149     if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
203150     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.NEURAL_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
203151     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203152     *------------------------------------------------------------*;
203153     * Neural: Scoring DATA data;
203154     *------------------------------------------------------------*;
203155     data EMWS2.Neural_TRAIN
203156     / view=EMWS2.Neural_TRAIN
203157     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TRAIN / view=EMWS2.Neural_TRAIN ;
203158     set EMWS2.Part_TRAIN
203159     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TRAIN ;
203160     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
203161    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203162    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203163    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203164    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203165    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203166    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203167    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203168    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203169    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203170    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203171    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203172    +LENGTH _WARN_ $4
203173    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
203174    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
203175    +
203176    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
203177    +
203178    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
203179    +
203180    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
203181    +
203182    +      label Age_group45_64 = 'Dummy: Age_group=45-64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_64 = 'Dummy: Age_group=45-64' ;
203183    +
203184    +      label Age_group65_84 = 'Dummy: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Age_group65_84 = 'Dummy: Age_group=65-84' ;
203185    +
203186    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
203187    +
203188    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
203189    +
203190    +      label DiseaseDementia_and_Alzheimer_ =
203191    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
203192    +
203193    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
203194    +
203195    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
203196    +
203197    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
203198    +
203199    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203200    +
203201    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203202    +
203203    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203204    +
203205    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203206    +
203207    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203208    +
203209    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
203210    +
203211    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
203212    +
203213    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203214    +
203215    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
203216    +drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84
203217    +         ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84 ;
203218    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203219    +Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
203220    +Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
203221    +Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
203222    +Age_group45_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 0;
203223    +Age_group65_84 = 0;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0;
203224    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
203225    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203226    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203227    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203228    +   Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203229    +   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203232    +end;
MPRINT(EM_DIAGRAM):   end;
203233    +else do;
MPRINT(EM_DIAGRAM):   else do;
203234    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
203235    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203236    +   if _dm19 = '65-84'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '65-84' then do;
203237    +      Age_group65_84 = 1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 1;
203238    +   end;
MPRINT(EM_DIAGRAM):   end;
203239    +   else if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
203240    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
203241    +   end;
MPRINT(EM_DIAGRAM):   end;
203242    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
203243    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
203244    +   end;
MPRINT(EM_DIAGRAM):   end;
203245    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
203246    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
203247    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
203248    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
203249    +      Age_group45_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = -1;
203250    +      Age_group65_84 = -1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -1;
203251    +   end;
MPRINT(EM_DIAGRAM):   end;
203252    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
203253    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
203254    +   end;
MPRINT(EM_DIAGRAM):   end;
203255    +   else if _dm19 = '45-64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
203256    +      Age_group45_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 1;
203257    +   end;
MPRINT(EM_DIAGRAM):   end;
203258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203259    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203260    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203261    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203262    +      Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203263    +      Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203266    +   end;
MPRINT(EM_DIAGRAM):   end;
203267    +end;
MPRINT(EM_DIAGRAM):   end;
203268    +
203269    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
203270    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
203271    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
203272    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203273    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
203274    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
203275    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
203276    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
203277    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
203278    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203279    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203280    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203281    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203284    +end;
MPRINT(EM_DIAGRAM):   end;
203285    +else do;
MPRINT(EM_DIAGRAM):   else do;
203286    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
203287    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203288    +   if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'CANCER, ALL' then do;
203289    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
203290    +   end;
MPRINT(EM_DIAGRAM):   end;
203291    +   else if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
203292    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
203293    +   end;
MPRINT(EM_DIAGRAM):   end;
203294    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
203295    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
203296    +   end;
MPRINT(EM_DIAGRAM):   end;
203297    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
203298    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
203299    +   end;
MPRINT(EM_DIAGRAM):   end;
203300    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
203301    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
203302    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
203303    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
203304    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
203305    +   end;
MPRINT(EM_DIAGRAM):   end;
203306    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203307    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203308    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203309    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203310    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203313    +   end;
MPRINT(EM_DIAGRAM):   end;
203314    +end;
MPRINT(EM_DIAGRAM):   end;
203315    +
203316    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
203317    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
203318    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
203319    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203320    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203323    +end;
MPRINT(EM_DIAGRAM):   end;
203324    +else do;
MPRINT(EM_DIAGRAM):   else do;
203325    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
203326    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
203327    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203328    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
203329    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
203330    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
203331    +   end;
MPRINT(EM_DIAGRAM):   end;
203332    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
203333    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
203334    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
203335    +   end;
MPRINT(EM_DIAGRAM):   end;
203336    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
203337    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
203338    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
203339    +   end;
MPRINT(EM_DIAGRAM):   end;
203340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203341    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203342    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203343    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203344    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203345    +   end;
MPRINT(EM_DIAGRAM):   end;
203346    +end;
MPRINT(EM_DIAGRAM):   end;
203347    +
203348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203349    +*** Checking missing input Interval
203350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
203351    +
203352    +IF NMISS(
203353    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
203354    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
203355    +
203356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203357    +END;
MPRINT(EM_DIAGRAM):   END;
203358    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203359    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
203360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203361    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203362    +   S_Population_in_thousands  =    -1.33973697356729 +     0.00004274722206 *
203363    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203364    +END;
MPRINT(EM_DIAGRAM):   END;
203365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203366    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
203367    +   ELSE S_Population_in_thousands
203368    +          =    -1.33973697356729 +     0.00004274722206 *
203369    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203370    +END;
MPRINT(EM_DIAGRAM):   END;
203371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203372    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
203373    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203375    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
203376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203377    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203378    +   H11  =     1.35434005089982 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = 1.35434005089982 * S_Population_in_thousands ;
203379    +   H12  =    -5.86736639290222 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = -5.86736639290222 * S_Population_in_thousands ;
203380    +   H13  =     1.74534286115132 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 1.74534286115132 * S_Population_in_thousands ;
203381    +   H14  =     -1.7416965772114 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -1.7416965772114 * S_Population_in_thousands ;
203382    +   H15  =     0.32029026736697 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 0.32029026736697 * S_Population_in_thousands ;
203383    +   H11  = H11  +     1.71448870576879 * Age_group0_17
203384    +          +     1.77698251167841 * Age_group18_24  +     1.03025379631606 *
203385    +        Age_group25_44  +     -2.7956731934031 * Age_group45_64
203386    +          +    -1.03005728244483 * Age_group65_84  +    -0.94281877271546 *
203387    +        DiseaseAsthma  +      2.2147481918044 * DiseaseCancer__all
203388    +          +    -1.69110565485991 * DiseaseDementia_and_Alzheimer_
203389    +          +     1.35070603998304 * DiseaseOsteoarthritis
203390    +          +    -0.20138646157356 * GenderAll  +    -0.33007295308219 *
203391    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.71448870576879 * Age_group0_17 + 1.77698251167841 * Age_group18_24 + 1.03025379631606 * Age_group25_44 + -2.7956731934031 * Age_group45_64 + -1.03005728244483 * Age_group65_84 + -0.94281877271546 * DiseaseAsthma +
2.2147481918044 * DiseaseCancer__all + -1.69110565485991 * DiseaseDementia_and_Alzheimer_ + 1.35070603998304 * DiseaseOsteoarthritis + -0.20138646157356 * GenderAll + -0.33007295308219 * GenderFemale ;
203392    +   H12  = H12  +    -0.49834529725908 * Age_group0_17
203393    +          +     6.65737966257656 * Age_group18_24  +     0.02166950755446 *
203394    +        Age_group25_44  +    -0.30406002314189 * Age_group45_64
203395    +          +    -0.19967481942436 * Age_group65_84  +     2.48663287133045 *
203396    +        DiseaseAsthma  +    -4.17996212144142 * DiseaseCancer__all
203397    +          +     7.87749987799108 * DiseaseDementia_and_Alzheimer_
203398    +          +    -3.48018763761733 * DiseaseOsteoarthritis
203399    +          +    -0.74940371145971 * GenderAll  +     1.76509155400586 *
203400    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.49834529725908 * Age_group0_17 + 6.65737966257656 * Age_group18_24 + 0.02166950755446 * Age_group25_44 + -0.30406002314189 * Age_group45_64 + -0.19967481942436 * Age_group65_84 + 2.48663287133045 * DiseaseAsthma +
-4.17996212144142 * DiseaseCancer__all + 7.87749987799108 * DiseaseDementia_and_Alzheimer_ + -3.48018763761733 * DiseaseOsteoarthritis + -0.74940371145971 * GenderAll + 1.76509155400586 * GenderFemale ;
203401    +   H13  = H13  +     1.77452647934571 * Age_group0_17
203402    +          +     1.30242349489465 * Age_group18_24  +     4.75511761734959 *
203403    +        Age_group25_44  +    -5.04989377605042 * Age_group45_64
203404    +          +    -14.6022849415037 * Age_group65_84  +     -0.5937322268467 *
203405    +        DiseaseAsthma  +     3.59429329496977 * DiseaseCancer__all
203406    +          +    -1.42393776965241 * DiseaseDementia_and_Alzheimer_
203407    +          +     -1.1581922307743 * DiseaseOsteoarthritis
203408    +          +     0.22970325988741 * GenderAll  +     0.16544413491246 *
203409    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.77452647934571 * Age_group0_17 + 1.30242349489465 * Age_group18_24 + 4.75511761734959 * Age_group25_44 + -5.04989377605042 * Age_group45_64 + -14.6022849415037 * Age_group65_84 + -0.5937322268467 * DiseaseAsthma +
3.59429329496977 * DiseaseCancer__all + -1.42393776965241 * DiseaseDementia_and_Alzheimer_ + -1.1581922307743 * DiseaseOsteoarthritis + 0.22970325988741 * GenderAll + 0.16544413491246 * GenderFemale ;
203410    +   H14  = H14  +    -3.17942072873073 * Age_group0_17
203411    +          +    -3.71080374659487 * Age_group18_24  +    -2.41487691740168 *
203412    +        Age_group25_44  +     5.87238706134944 * Age_group45_64
203413    +          +     7.12807887019481 * Age_group65_84  +     4.95030154622387 *
203414    +        DiseaseAsthma  +    -3.98563182695072 * DiseaseCancer__all
203415    +          +     1.65479145935008 * DiseaseDementia_and_Alzheimer_
203416    +          +    -1.84356548332388 * DiseaseOsteoarthritis
203417    +          +     0.02515372327161 * GenderAll  +     0.14248788307797 *
203418    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.17942072873073 * Age_group0_17 + -3.71080374659487 * Age_group18_24 + -2.41487691740168 * Age_group25_44 + 5.87238706134944 * Age_group45_64 + 7.12807887019481 * Age_group65_84 + 4.95030154622387 * DiseaseAsthma +
-3.98563182695072 * DiseaseCancer__all + 1.65479145935008 * DiseaseDementia_and_Alzheimer_ + -1.84356548332388 * DiseaseOsteoarthritis + 0.02515372327161 * GenderAll + 0.14248788307797 * GenderFemale ;
203419    +   H15  = H15  +    -2.65499345189966 * Age_group0_17
203420    +          +    -2.52386407007236 * Age_group18_24  +    -0.08789214446679 *
203421    +        Age_group25_44  +     1.33690548242373 * Age_group45_64
203422    +          +     3.35753315084801 * Age_group65_84  +    -2.54327090277794 *
203423    +        DiseaseAsthma  +     3.22645343642654 * DiseaseCancer__all
203424    +          +     -1.7342325341365 * DiseaseDementia_and_Alzheimer_
203425    +          +     1.62294449342552 * DiseaseOsteoarthritis
203426    +          +     0.50944932247803 * GenderAll  +     1.16624523024671 *
203427    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -2.65499345189966 * Age_group0_17 + -2.52386407007236 * Age_group18_24 + -0.08789214446679 * Age_group25_44 + 1.33690548242373 * Age_group45_64 + 3.35753315084801 * Age_group65_84 + -2.54327090277794 * DiseaseAsthma +
3.22645343642654 * DiseaseCancer__all + -1.7342325341365 * DiseaseDementia_and_Alzheimer_ + 1.62294449342552 * DiseaseOsteoarthritis + 0.50944932247803 * GenderAll + 1.16624523024671 * GenderFemale ;
203428    +   H11  =    -0.16328527582879 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16328527582879 + H11 ;
203429    +   H12  =     3.43706584749845 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.43706584749845 + H12 ;
203430    +   H13  =    -3.84967331225192 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.84967331225192 + H13 ;
203431    +   H14  =     3.88592449819665 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.88592449819665 + H14 ;
203432    +   H15  =    -4.58028929812927 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.58028929812927 + H15 ;
203433    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
203434    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
203435    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
203436    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
203437    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
203438    +END;
MPRINT(EM_DIAGRAM):   END;
203439    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203440    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
203441    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
203442    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
203443    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
203444    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
203445    +END;
MPRINT(EM_DIAGRAM):   END;
203446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203447    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
203448    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203449    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203450    +   P_Cases_in_1000s  =     67.4104297195872 * H11  +    -35.8921323485021 *
203451    +        H12  +    -24.7752792694521 * H13  +     81.8360046551309 * H14
203452    +          +     66.7196227687357 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 67.4104297195872 * H11 + -35.8921323485021 * H12 + -24.7752792694521 * H13 + 81.8360046551309 * H14 + 66.7196227687357 * H15 ;
203453    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -8.68845221932159 *
203454    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -8.68845221932159 * S_Population_in_thousands ;
203455    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -42.2746060828309 *
203456    +        Age_group0_17  +     -47.143646201442 * Age_group18_24
203457    +          +    -36.7791443787182 * Age_group25_44  +      11.462692663179 *
203458    +        Age_group45_64  +      58.824895833719 * Age_group65_84
203459    +          +    -29.7087244942384 * DiseaseAsthma  +     65.9700972408222 *
203460    +        DiseaseCancer__all  +    -33.3466634179848 *
203461    +        DiseaseDementia_and_Alzheimer_  +     0.84531108399158 *
203462    +        DiseaseOsteoarthritis  +     30.4656747943978 * GenderAll
203463    +          +    -8.25358426398541 * GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -42.2746060828309 * Age_group0_17 + -47.143646201442 * Age_group18_24 + -36.7791443787182 * Age_group25_44 + 11.462692663179 * Age_group45_64 + 58.824895833719 * Age_group65_84 +
-29.7087244942384 * DiseaseAsthma + 65.9700972408222 * DiseaseCancer__all + -33.3466634179848 * DiseaseDementia_and_Alzheimer_ + 0.84531108399158 * DiseaseOsteoarthritis + 30.4656747943978 * GenderAll + -8.25358426398541 * GenderFemale ;
203464    +   P_Cases_in_1000s  =      96.558824557025 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 96.558824557025 + P_Cases_in_1000s ;
203465    +END;
MPRINT(EM_DIAGRAM):   END;
203466    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203467    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
203468    +END;
MPRINT(EM_DIAGRAM):   END;
203469    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
203470    +   P_Cases_in_1000s  =     71.1668909825033;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 71.1668909825033;
203471    +END;
MPRINT(EM_DIAGRAM):   END;
203472    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
203473    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
203474    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
203475    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
203476    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
203477    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203478    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
203479    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203480    +drop
203481    +S_Population_in_thousands
203482    +H11
203483    +H12
203484    +H13
203485    +H14
203486    +H15
203487    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
203488     run;
 
NOTE: DATA STEP view saved on file EMWS2.NEURAL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
203489     quit;
203490     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
203491     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203492     *------------------------------------------------------------*;
203493     * Neural: Scoring VALIDATE data;
203494     *------------------------------------------------------------*;
203495     data EMWS2.Neural_VALIDATE
203496     / view=EMWS2.Neural_VALIDATE
203497     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_VALIDATE / view=EMWS2.Neural_VALIDATE ;
203498     set EMWS2.Part_VALIDATE
203499     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_VALIDATE ;
203500     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
203501    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203502    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203503    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203504    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203505    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203506    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203507    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203508    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203509    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203510    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203511    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203512    +LENGTH _WARN_ $4
203513    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
203514    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
203515    +
203516    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
203517    +
203518    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
203519    +
203520    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
203521    +
203522    +      label Age_group45_64 = 'Dummy: Age_group=45-64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_64 = 'Dummy: Age_group=45-64' ;
203523    +
203524    +      label Age_group65_84 = 'Dummy: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Age_group65_84 = 'Dummy: Age_group=65-84' ;
203525    +
203526    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
203527    +
203528    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
203529    +
203530    +      label DiseaseDementia_and_Alzheimer_ =
203531    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
203532    +
203533    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
203534    +
203535    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
203536    +
203537    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
203538    +
203539    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203540    +
203541    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203542    +
203543    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203544    +
203545    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203546    +
203547    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203548    +
203549    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
203550    +
203551    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
203552    +
203553    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203554    +
203555    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
203556    +drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84
203557    +         ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84 ;
203558    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203559    +Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
203560    +Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
203561    +Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
203562    +Age_group45_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 0;
203563    +Age_group65_84 = 0;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0;
203564    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
203565    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203566    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203567    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203568    +   Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203569    +   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203570    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203571    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203572    +end;
MPRINT(EM_DIAGRAM):   end;
203573    +else do;
MPRINT(EM_DIAGRAM):   else do;
203574    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
203575    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203576    +   if _dm19 = '65-84'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '65-84' then do;
203577    +      Age_group65_84 = 1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 1;
203578    +   end;
MPRINT(EM_DIAGRAM):   end;
203579    +   else if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
203580    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
203581    +   end;
MPRINT(EM_DIAGRAM):   end;
203582    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
203583    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
203584    +   end;
MPRINT(EM_DIAGRAM):   end;
203585    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
203586    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
203587    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
203588    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
203589    +      Age_group45_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = -1;
203590    +      Age_group65_84 = -1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -1;
203591    +   end;
MPRINT(EM_DIAGRAM):   end;
203592    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
203593    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
203594    +   end;
MPRINT(EM_DIAGRAM):   end;
203595    +   else if _dm19 = '45-64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
203596    +      Age_group45_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 1;
203597    +   end;
MPRINT(EM_DIAGRAM):   end;
203598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203599    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203600    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203601    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203602    +      Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203603    +      Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203604    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203605    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203606    +   end;
MPRINT(EM_DIAGRAM):   end;
203607    +end;
MPRINT(EM_DIAGRAM):   end;
203608    +
203609    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
203610    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
203611    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
203612    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203613    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
203614    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
203615    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
203616    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
203617    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
203618    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203619    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203620    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203621    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203622    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203623    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203624    +end;
MPRINT(EM_DIAGRAM):   end;
203625    +else do;
MPRINT(EM_DIAGRAM):   else do;
203626    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
203627    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203628    +   if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'CANCER, ALL' then do;
203629    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
203630    +   end;
MPRINT(EM_DIAGRAM):   end;
203631    +   else if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
203632    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
203633    +   end;
MPRINT(EM_DIAGRAM):   end;
203634    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
203635    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
203636    +   end;
MPRINT(EM_DIAGRAM):   end;
203637    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
203638    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
203639    +   end;
MPRINT(EM_DIAGRAM):   end;
203640    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
203641    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
203642    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
203643    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
203644    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
203645    +   end;
MPRINT(EM_DIAGRAM):   end;
203646    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203647    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203648    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203649    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203650    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203653    +   end;
MPRINT(EM_DIAGRAM):   end;
203654    +end;
MPRINT(EM_DIAGRAM):   end;
203655    +
203656    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
203657    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
203658    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
203659    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203660    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203661    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203662    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203663    +end;
MPRINT(EM_DIAGRAM):   end;
203664    +else do;
MPRINT(EM_DIAGRAM):   else do;
203665    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
203666    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
203667    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203668    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
203669    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
203670    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
203671    +   end;
MPRINT(EM_DIAGRAM):   end;
203672    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
203673    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
203674    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
203675    +   end;
MPRINT(EM_DIAGRAM):   end;
203676    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
203677    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
203678    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
203679    +   end;
MPRINT(EM_DIAGRAM):   end;
203680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203681    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
203682    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
203683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203685    +   end;
MPRINT(EM_DIAGRAM):   end;
203686    +end;
MPRINT(EM_DIAGRAM):   end;
203687    +
203688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203689    +*** Checking missing input Interval
203690    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
203691    +
203692    +IF NMISS(
203693    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
203694    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
203695    +
203696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203697    +END;
MPRINT(EM_DIAGRAM):   END;
203698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203699    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
203700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203701    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203702    +   S_Population_in_thousands  =    -1.33973697356729 +     0.00004274722206 *
203703    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203704    +END;
MPRINT(EM_DIAGRAM):   END;
203705    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203706    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
203707    +   ELSE S_Population_in_thousands
203708    +          =    -1.33973697356729 +     0.00004274722206 *
203709    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
203710    +END;
MPRINT(EM_DIAGRAM):   END;
203711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203712    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
203713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203714    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203715    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
203716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203717    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203718    +   H11  =     1.35434005089982 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = 1.35434005089982 * S_Population_in_thousands ;
203719    +   H12  =    -5.86736639290222 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = -5.86736639290222 * S_Population_in_thousands ;
203720    +   H13  =     1.74534286115132 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 1.74534286115132 * S_Population_in_thousands ;
203721    +   H14  =     -1.7416965772114 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -1.7416965772114 * S_Population_in_thousands ;
203722    +   H15  =     0.32029026736697 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 0.32029026736697 * S_Population_in_thousands ;
203723    +   H11  = H11  +     1.71448870576879 * Age_group0_17
203724    +          +     1.77698251167841 * Age_group18_24  +     1.03025379631606 *
203725    +        Age_group25_44  +     -2.7956731934031 * Age_group45_64
203726    +          +    -1.03005728244483 * Age_group65_84  +    -0.94281877271546 *
203727    +        DiseaseAsthma  +      2.2147481918044 * DiseaseCancer__all
203728    +          +    -1.69110565485991 * DiseaseDementia_and_Alzheimer_
203729    +          +     1.35070603998304 * DiseaseOsteoarthritis
203730    +          +    -0.20138646157356 * GenderAll  +    -0.33007295308219 *
203731    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.71448870576879 * Age_group0_17 + 1.77698251167841 * Age_group18_24 + 1.03025379631606 * Age_group25_44 + -2.7956731934031 * Age_group45_64 + -1.03005728244483 * Age_group65_84 + -0.94281877271546 * DiseaseAsthma +
2.2147481918044 * DiseaseCancer__all + -1.69110565485991 * DiseaseDementia_and_Alzheimer_ + 1.35070603998304 * DiseaseOsteoarthritis + -0.20138646157356 * GenderAll + -0.33007295308219 * GenderFemale ;
203732    +   H12  = H12  +    -0.49834529725908 * Age_group0_17
203733    +          +     6.65737966257656 * Age_group18_24  +     0.02166950755446 *
203734    +        Age_group25_44  +    -0.30406002314189 * Age_group45_64
203735    +          +    -0.19967481942436 * Age_group65_84  +     2.48663287133045 *
203736    +        DiseaseAsthma  +    -4.17996212144142 * DiseaseCancer__all
203737    +          +     7.87749987799108 * DiseaseDementia_and_Alzheimer_
203738    +          +    -3.48018763761733 * DiseaseOsteoarthritis
203739    +          +    -0.74940371145971 * GenderAll  +     1.76509155400586 *
203740    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.49834529725908 * Age_group0_17 + 6.65737966257656 * Age_group18_24 + 0.02166950755446 * Age_group25_44 + -0.30406002314189 * Age_group45_64 + -0.19967481942436 * Age_group65_84 + 2.48663287133045 * DiseaseAsthma +
-4.17996212144142 * DiseaseCancer__all + 7.87749987799108 * DiseaseDementia_and_Alzheimer_ + -3.48018763761733 * DiseaseOsteoarthritis + -0.74940371145971 * GenderAll + 1.76509155400586 * GenderFemale ;
203741    +   H13  = H13  +     1.77452647934571 * Age_group0_17
203742    +          +     1.30242349489465 * Age_group18_24  +     4.75511761734959 *
203743    +        Age_group25_44  +    -5.04989377605042 * Age_group45_64
203744    +          +    -14.6022849415037 * Age_group65_84  +     -0.5937322268467 *
203745    +        DiseaseAsthma  +     3.59429329496977 * DiseaseCancer__all
203746    +          +    -1.42393776965241 * DiseaseDementia_and_Alzheimer_
203747    +          +     -1.1581922307743 * DiseaseOsteoarthritis
203748    +          +     0.22970325988741 * GenderAll  +     0.16544413491246 *
203749    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.77452647934571 * Age_group0_17 + 1.30242349489465 * Age_group18_24 + 4.75511761734959 * Age_group25_44 + -5.04989377605042 * Age_group45_64 + -14.6022849415037 * Age_group65_84 + -0.5937322268467 * DiseaseAsthma +
3.59429329496977 * DiseaseCancer__all + -1.42393776965241 * DiseaseDementia_and_Alzheimer_ + -1.1581922307743 * DiseaseOsteoarthritis + 0.22970325988741 * GenderAll + 0.16544413491246 * GenderFemale ;
203750    +   H14  = H14  +    -3.17942072873073 * Age_group0_17
203751    +          +    -3.71080374659487 * Age_group18_24  +    -2.41487691740168 *
203752    +        Age_group25_44  +     5.87238706134944 * Age_group45_64
203753    +          +     7.12807887019481 * Age_group65_84  +     4.95030154622387 *
203754    +        DiseaseAsthma  +    -3.98563182695072 * DiseaseCancer__all
203755    +          +     1.65479145935008 * DiseaseDementia_and_Alzheimer_
203756    +          +    -1.84356548332388 * DiseaseOsteoarthritis
203757    +          +     0.02515372327161 * GenderAll  +     0.14248788307797 *
203758    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.17942072873073 * Age_group0_17 + -3.71080374659487 * Age_group18_24 + -2.41487691740168 * Age_group25_44 + 5.87238706134944 * Age_group45_64 + 7.12807887019481 * Age_group65_84 + 4.95030154622387 * DiseaseAsthma +
-3.98563182695072 * DiseaseCancer__all + 1.65479145935008 * DiseaseDementia_and_Alzheimer_ + -1.84356548332388 * DiseaseOsteoarthritis + 0.02515372327161 * GenderAll + 0.14248788307797 * GenderFemale ;
203759    +   H15  = H15  +    -2.65499345189966 * Age_group0_17
203760    +          +    -2.52386407007236 * Age_group18_24  +    -0.08789214446679 *
203761    +        Age_group25_44  +     1.33690548242373 * Age_group45_64
203762    +          +     3.35753315084801 * Age_group65_84  +    -2.54327090277794 *
203763    +        DiseaseAsthma  +     3.22645343642654 * DiseaseCancer__all
203764    +          +     -1.7342325341365 * DiseaseDementia_and_Alzheimer_
203765    +          +     1.62294449342552 * DiseaseOsteoarthritis
203766    +          +     0.50944932247803 * GenderAll  +     1.16624523024671 *
203767    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -2.65499345189966 * Age_group0_17 + -2.52386407007236 * Age_group18_24 + -0.08789214446679 * Age_group25_44 + 1.33690548242373 * Age_group45_64 + 3.35753315084801 * Age_group65_84 + -2.54327090277794 * DiseaseAsthma +
3.22645343642654 * DiseaseCancer__all + -1.7342325341365 * DiseaseDementia_and_Alzheimer_ + 1.62294449342552 * DiseaseOsteoarthritis + 0.50944932247803 * GenderAll + 1.16624523024671 * GenderFemale ;
203768    +   H11  =    -0.16328527582879 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16328527582879 + H11 ;
203769    +   H12  =     3.43706584749845 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.43706584749845 + H12 ;
203770    +   H13  =    -3.84967331225192 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.84967331225192 + H13 ;
203771    +   H14  =     3.88592449819665 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.88592449819665 + H14 ;
203772    +   H15  =    -4.58028929812927 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.58028929812927 + H15 ;
203773    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
203774    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
203775    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
203776    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
203777    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
203778    +END;
MPRINT(EM_DIAGRAM):   END;
203779    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203780    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
203781    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
203782    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
203783    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
203784    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
203785    +END;
MPRINT(EM_DIAGRAM):   END;
203786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203787    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
203788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
203789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
203790    +   P_Cases_in_1000s  =     67.4104297195872 * H11  +    -35.8921323485021 *
203791    +        H12  +    -24.7752792694521 * H13  +     81.8360046551309 * H14
203792    +          +     66.7196227687357 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 67.4104297195872 * H11 + -35.8921323485021 * H12 + -24.7752792694521 * H13 + 81.8360046551309 * H14 + 66.7196227687357 * H15 ;
203793    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -8.68845221932159 *
203794    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -8.68845221932159 * S_Population_in_thousands ;
203795    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -42.2746060828309 *
203796    +        Age_group0_17  +     -47.143646201442 * Age_group18_24
203797    +          +    -36.7791443787182 * Age_group25_44  +      11.462692663179 *
203798    +        Age_group45_64  +      58.824895833719 * Age_group65_84
203799    +          +    -29.7087244942384 * DiseaseAsthma  +     65.9700972408222 *
203800    +        DiseaseCancer__all  +    -33.3466634179848 *
203801    +        DiseaseDementia_and_Alzheimer_  +     0.84531108399158 *
203802    +        DiseaseOsteoarthritis  +     30.4656747943978 * GenderAll
203803    +          +    -8.25358426398541 * GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -42.2746060828309 * Age_group0_17 + -47.143646201442 * Age_group18_24 + -36.7791443787182 * Age_group25_44 + 11.462692663179 * Age_group45_64 + 58.824895833719 * Age_group65_84 +
-29.7087244942384 * DiseaseAsthma + 65.9700972408222 * DiseaseCancer__all + -33.3466634179848 * DiseaseDementia_and_Alzheimer_ + 0.84531108399158 * DiseaseOsteoarthritis + 30.4656747943978 * GenderAll + -8.25358426398541 * GenderFemale ;
203804    +   P_Cases_in_1000s  =      96.558824557025 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 96.558824557025 + P_Cases_in_1000s ;
203805    +END;
MPRINT(EM_DIAGRAM):   END;
203806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
203807    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
203808    +END;
MPRINT(EM_DIAGRAM):   END;
203809    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
203810    +   P_Cases_in_1000s  =     71.1668909825033;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 71.1668909825033;
203811    +END;
MPRINT(EM_DIAGRAM):   END;
203812    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
203813    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
203814    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
203815    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
203816    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
203817    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203818    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
203819    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
203820    +drop
203821    +S_Population_in_thousands
203822    +H11
203823    +H12
203824    +H13
203825    +H14
203826    +H15
203827    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
203828     run;
 
NOTE: DATA STEP view saved on file EMWS2.NEURAL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
203829     quit;
203830     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
203831     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203832     *------------------------------------------------------------*;
203833     * Neural: Scoring TEST data;
203834     *------------------------------------------------------------*;
203835     data EMWS2.Neural_TEST
203836     / view=EMWS2.Neural_TEST
203837     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_TEST / view=EMWS2.Neural_TEST ;
203838     set EMWS2.Part_TEST
203839     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Part_TEST ;
203840     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMFLOWSCORE.sas.
203841    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203842    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203843    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203844    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203845    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203846    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203847    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203848    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203849    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203850    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203851    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203852    +LENGTH _WARN_ $4
203853    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
203854    +      label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
MPRINT(EM_DIAGRAM):   label S_Population_in_thousands = 'Standard: Population_in_thousands' ;
203855    +
203856    +      label Age_group0_17 = 'Dummy: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Age_group0_17 = 'Dummy: Age_group=0-17' ;
203857    +
203858    +      label Age_group18_24 = 'Dummy: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Age_group18_24 = 'Dummy: Age_group=18-24' ;
203859    +
203860    +      label Age_group25_44 = 'Dummy: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Age_group25_44 = 'Dummy: Age_group=25-44' ;
203861    +
203862    +      label Age_group45_64 = 'Dummy: Age_group=45-64' ;
MPRINT(EM_DIAGRAM):   label Age_group45_64 = 'Dummy: Age_group=45-64' ;
203863    +
203864    +      label Age_group65_84 = 'Dummy: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Age_group65_84 = 'Dummy: Age_group=65-84' ;
203865    +
203866    +      label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
MPRINT(EM_DIAGRAM):   label DiseaseAsthma = 'Dummy: Disease=Asthma' ;
203867    +
203868    +      label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
MPRINT(EM_DIAGRAM):   label DiseaseCancer__all = 'Dummy: Disease=Cancer, all' ;
203869    +
203870    +      label DiseaseDementia_and_Alzheimer_ =
203871    +'Dummy: Disease=Dementia and Alzheimer''s disease' ;
MPRINT(EM_DIAGRAM):   label DiseaseDementia_and_Alzheimer_ = 'Dummy: Disease=Dementia and Alzheimer''s disease' ;
203872    +
203873    +      label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
MPRINT(EM_DIAGRAM):   label DiseaseOsteoarthritis = 'Dummy: Disease=Osteoarthritis' ;
203874    +
203875    +      label GenderAll = 'Dummy: Gender=All' ;
MPRINT(EM_DIAGRAM):   label GenderAll = 'Dummy: Gender=All' ;
203876    +
203877    +      label GenderFemale = 'Dummy: Gender=Female' ;
MPRINT(EM_DIAGRAM):   label GenderFemale = 'Dummy: Gender=Female' ;
203878    +
203879    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203880    +
203881    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203882    +
203883    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203884    +
203885    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203886    +
203887    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203888    +
203889    +      label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
203890    +
203891    +      label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
203892    +
203893    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203894    +
203895    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
203896    +drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84
203897    +         ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group45_64 Age_group65_84 ;
203898    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203899    +Age_group0_17 = 0;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0;
203900    +Age_group18_24 = 0;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0;
203901    +Age_group25_44 = 0;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0;
203902    +Age_group45_64 = 0;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 0;
203903    +Age_group65_84 = 0;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0;
203904    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
203905    +   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203906    +   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203907    +   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203908    +   Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203909    +   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203912    +end;
MPRINT(EM_DIAGRAM):   end;
203913    +else do;
MPRINT(EM_DIAGRAM):   else do;
203914    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
203915    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203916    +   if _dm19 = '65-84'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '65-84' then do;
203917    +      Age_group65_84 = 1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 1;
203918    +   end;
MPRINT(EM_DIAGRAM):   end;
203919    +   else if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
203920    +      Age_group18_24 = 1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 1;
203921    +   end;
MPRINT(EM_DIAGRAM):   end;
203922    +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
203923    +      Age_group0_17 = 1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 1;
203924    +   end;
MPRINT(EM_DIAGRAM):   end;
203925    +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
203926    +      Age_group0_17 = -1;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -1;
203927    +      Age_group18_24 = -1;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -1;
203928    +      Age_group25_44 = -1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -1;
203929    +      Age_group45_64 = -1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = -1;
203930    +      Age_group65_84 = -1;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -1;
203931    +   end;
MPRINT(EM_DIAGRAM):   end;
203932    +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
203933    +      Age_group25_44 = 1;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 1;
203934    +   end;
MPRINT(EM_DIAGRAM):   end;
203935    +   else if _dm19 = '45-64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45-64' then do;
203936    +      Age_group45_64 = 1;
MPRINT(EM_DIAGRAM):   Age_group45_64 = 1;
203937    +   end;
MPRINT(EM_DIAGRAM):   end;
203938    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203939    +      Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
203940    +      Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
203941    +      Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
203942    +      Age_group45_64 = .;
MPRINT(EM_DIAGRAM):   Age_group45_64 = .;
203943    +      Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
203944    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203945    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203946    +   end;
MPRINT(EM_DIAGRAM):   end;
203947    +end;
MPRINT(EM_DIAGRAM):   end;
203948    +
203949    +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
203950    +drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_
203951    +        DiseaseOsteoarthritis ;
MPRINT(EM_DIAGRAM):   drop DiseaseAsthma DiseaseCancer__all DiseaseDementia_and_Alzheimer_ DiseaseOsteoarthritis ;
203952    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
203953    +DiseaseAsthma = 0;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 0;
203954    +DiseaseCancer__all = 0;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 0;
203955    +DiseaseDementia_and_Alzheimer_ = 0;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 0;
203956    +DiseaseOsteoarthritis = 0;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 0;
203957    +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
203958    +   DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203959    +   DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203960    +   DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203961    +   DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203964    +end;
MPRINT(EM_DIAGRAM):   end;
203965    +else do;
MPRINT(EM_DIAGRAM):   else do;
203966    +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
203967    +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
203968    +   if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'CANCER, ALL' then do;
203969    +      DiseaseCancer__all = 1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = 1;
203970    +   end;
MPRINT(EM_DIAGRAM):   end;
203971    +   else if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'ASTHMA' then do;
203972    +      DiseaseAsthma = 1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = 1;
203973    +   end;
MPRINT(EM_DIAGRAM):   end;
203974    +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
203975    +      DiseaseOsteoarthritis = 1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = 1;
203976    +   end;
MPRINT(EM_DIAGRAM):   end;
203977    +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
203978    +      DiseaseDementia_and_Alzheimer_ = 1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = 1;
203979    +   end;
MPRINT(EM_DIAGRAM):   end;
203980    +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
203981    +      DiseaseAsthma = -1;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = -1;
203982    +      DiseaseCancer__all = -1;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = -1;
203983    +      DiseaseDementia_and_Alzheimer_ = -1;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = -1;
203984    +      DiseaseOsteoarthritis = -1;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = -1;
203985    +   end;
MPRINT(EM_DIAGRAM):   end;
203986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203987    +      DiseaseAsthma = .;
MPRINT(EM_DIAGRAM):   DiseaseAsthma = .;
203988    +      DiseaseCancer__all = .;
MPRINT(EM_DIAGRAM):   DiseaseCancer__all = .;
203989    +      DiseaseDementia_and_Alzheimer_ = .;
MPRINT(EM_DIAGRAM):   DiseaseDementia_and_Alzheimer_ = .;
203990    +      DiseaseOsteoarthritis = .;
MPRINT(EM_DIAGRAM):   DiseaseOsteoarthritis = .;
203991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203993    +   end;
MPRINT(EM_DIAGRAM):   end;
203994    +end;
MPRINT(EM_DIAGRAM):   end;
203995    +
203996    +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
203997    +drop GenderAll GenderFemale ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale ;
203998    +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
203999    +   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
204000    +   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
204001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204003    +end;
MPRINT(EM_DIAGRAM):   end;
204004    +else do;
MPRINT(EM_DIAGRAM):   else do;
204005    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
204006    +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
204007    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204008    +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
204009    +      GenderAll = 1;
MPRINT(EM_DIAGRAM):   GenderAll = 1;
204010    +      GenderFemale = 0;
MPRINT(EM_DIAGRAM):   GenderFemale = 0;
204011    +   end;
MPRINT(EM_DIAGRAM):   end;
204012    +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
204013    +      GenderAll = -1;
MPRINT(EM_DIAGRAM):   GenderAll = -1;
204014    +      GenderFemale = -1;
MPRINT(EM_DIAGRAM):   GenderFemale = -1;
204015    +   end;
MPRINT(EM_DIAGRAM):   end;
204016    +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
204017    +      GenderAll = 0;
MPRINT(EM_DIAGRAM):   GenderAll = 0;
204018    +      GenderFemale = 1;
MPRINT(EM_DIAGRAM):   GenderFemale = 1;
204019    +   end;
MPRINT(EM_DIAGRAM):   end;
204020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204021    +      GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderAll = .;
204022    +      GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
204023    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204024    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204025    +   end;
MPRINT(EM_DIAGRAM):   end;
204026    +end;
MPRINT(EM_DIAGRAM):   end;
204027    +
204028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204029    +*** Checking missing input Interval
204030    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
204031    +
204032    +IF NMISS(
204033    +   Population_in_thousands   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Population_in_thousands ) THEN DO;
204034    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
204035    +
204036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204037    +END;
MPRINT(EM_DIAGRAM):   END;
204038    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204039    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
204040    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204041    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204042    +   S_Population_in_thousands  =    -1.33973697356729 +     0.00004274722206 *
204043    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
204044    +END;
MPRINT(EM_DIAGRAM):   END;
204045    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204046    +   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN S_Population_in_thousands = . ;
204047    +   ELSE S_Population_in_thousands
204048    +          =    -1.33973697356729 +     0.00004274722206 *
204049    +        Population_in_thousands ;
MPRINT(EM_DIAGRAM):   ELSE S_Population_in_thousands = -1.33973697356729 + 0.00004274722206 * Population_in_thousands ;
204050    +END;
MPRINT(EM_DIAGRAM):   END;
204051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204052    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
204053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204055    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
204056    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204057    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204058    +   H11  =     1.35434005089982 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H11 = 1.35434005089982 * S_Population_in_thousands ;
204059    +   H12  =    -5.86736639290222 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H12 = -5.86736639290222 * S_Population_in_thousands ;
204060    +   H13  =     1.74534286115132 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H13 = 1.74534286115132 * S_Population_in_thousands ;
204061    +   H14  =     -1.7416965772114 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H14 = -1.7416965772114 * S_Population_in_thousands ;
204062    +   H15  =     0.32029026736697 * S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   H15 = 0.32029026736697 * S_Population_in_thousands ;
204063    +   H11  = H11  +     1.71448870576879 * Age_group0_17
204064    +          +     1.77698251167841 * Age_group18_24  +     1.03025379631606 *
204065    +        Age_group25_44  +     -2.7956731934031 * Age_group45_64
204066    +          +    -1.03005728244483 * Age_group65_84  +    -0.94281877271546 *
204067    +        DiseaseAsthma  +      2.2147481918044 * DiseaseCancer__all
204068    +          +    -1.69110565485991 * DiseaseDementia_and_Alzheimer_
204069    +          +     1.35070603998304 * DiseaseOsteoarthritis
204070    +          +    -0.20138646157356 * GenderAll  +    -0.33007295308219 *
204071    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.71448870576879 * Age_group0_17 + 1.77698251167841 * Age_group18_24 + 1.03025379631606 * Age_group25_44 + -2.7956731934031 * Age_group45_64 + -1.03005728244483 * Age_group65_84 + -0.94281877271546 * DiseaseAsthma +
2.2147481918044 * DiseaseCancer__all + -1.69110565485991 * DiseaseDementia_and_Alzheimer_ + 1.35070603998304 * DiseaseOsteoarthritis + -0.20138646157356 * GenderAll + -0.33007295308219 * GenderFemale ;
204072    +   H12  = H12  +    -0.49834529725908 * Age_group0_17
204073    +          +     6.65737966257656 * Age_group18_24  +     0.02166950755446 *
204074    +        Age_group25_44  +    -0.30406002314189 * Age_group45_64
204075    +          +    -0.19967481942436 * Age_group65_84  +     2.48663287133045 *
204076    +        DiseaseAsthma  +    -4.17996212144142 * DiseaseCancer__all
204077    +          +     7.87749987799108 * DiseaseDementia_and_Alzheimer_
204078    +          +    -3.48018763761733 * DiseaseOsteoarthritis
204079    +          +    -0.74940371145971 * GenderAll  +     1.76509155400586 *
204080    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.49834529725908 * Age_group0_17 + 6.65737966257656 * Age_group18_24 + 0.02166950755446 * Age_group25_44 + -0.30406002314189 * Age_group45_64 + -0.19967481942436 * Age_group65_84 + 2.48663287133045 * DiseaseAsthma +
-4.17996212144142 * DiseaseCancer__all + 7.87749987799108 * DiseaseDementia_and_Alzheimer_ + -3.48018763761733 * DiseaseOsteoarthritis + -0.74940371145971 * GenderAll + 1.76509155400586 * GenderFemale ;
204081    +   H13  = H13  +     1.77452647934571 * Age_group0_17
204082    +          +     1.30242349489465 * Age_group18_24  +     4.75511761734959 *
204083    +        Age_group25_44  +    -5.04989377605042 * Age_group45_64
204084    +          +    -14.6022849415037 * Age_group65_84  +     -0.5937322268467 *
204085    +        DiseaseAsthma  +     3.59429329496977 * DiseaseCancer__all
204086    +          +    -1.42393776965241 * DiseaseDementia_and_Alzheimer_
204087    +          +     -1.1581922307743 * DiseaseOsteoarthritis
204088    +          +     0.22970325988741 * GenderAll  +     0.16544413491246 *
204089    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 1.77452647934571 * Age_group0_17 + 1.30242349489465 * Age_group18_24 + 4.75511761734959 * Age_group25_44 + -5.04989377605042 * Age_group45_64 + -14.6022849415037 * Age_group65_84 + -0.5937322268467 * DiseaseAsthma +
3.59429329496977 * DiseaseCancer__all + -1.42393776965241 * DiseaseDementia_and_Alzheimer_ + -1.1581922307743 * DiseaseOsteoarthritis + 0.22970325988741 * GenderAll + 0.16544413491246 * GenderFemale ;
204090    +   H14  = H14  +    -3.17942072873073 * Age_group0_17
204091    +          +    -3.71080374659487 * Age_group18_24  +    -2.41487691740168 *
204092    +        Age_group25_44  +     5.87238706134944 * Age_group45_64
204093    +          +     7.12807887019481 * Age_group65_84  +     4.95030154622387 *
204094    +        DiseaseAsthma  +    -3.98563182695072 * DiseaseCancer__all
204095    +          +     1.65479145935008 * DiseaseDementia_and_Alzheimer_
204096    +          +    -1.84356548332388 * DiseaseOsteoarthritis
204097    +          +     0.02515372327161 * GenderAll  +     0.14248788307797 *
204098    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.17942072873073 * Age_group0_17 + -3.71080374659487 * Age_group18_24 + -2.41487691740168 * Age_group25_44 + 5.87238706134944 * Age_group45_64 + 7.12807887019481 * Age_group65_84 + 4.95030154622387 * DiseaseAsthma +
-3.98563182695072 * DiseaseCancer__all + 1.65479145935008 * DiseaseDementia_and_Alzheimer_ + -1.84356548332388 * DiseaseOsteoarthritis + 0.02515372327161 * GenderAll + 0.14248788307797 * GenderFemale ;
204099    +   H15  = H15  +    -2.65499345189966 * Age_group0_17
204100    +          +    -2.52386407007236 * Age_group18_24  +    -0.08789214446679 *
204101    +        Age_group25_44  +     1.33690548242373 * Age_group45_64
204102    +          +     3.35753315084801 * Age_group65_84  +    -2.54327090277794 *
204103    +        DiseaseAsthma  +     3.22645343642654 * DiseaseCancer__all
204104    +          +     -1.7342325341365 * DiseaseDementia_and_Alzheimer_
204105    +          +     1.62294449342552 * DiseaseOsteoarthritis
204106    +          +     0.50944932247803 * GenderAll  +     1.16624523024671 *
204107    +        GenderFemale ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -2.65499345189966 * Age_group0_17 + -2.52386407007236 * Age_group18_24 + -0.08789214446679 * Age_group25_44 + 1.33690548242373 * Age_group45_64 + 3.35753315084801 * Age_group65_84 + -2.54327090277794 * DiseaseAsthma +
3.22645343642654 * DiseaseCancer__all + -1.7342325341365 * DiseaseDementia_and_Alzheimer_ + 1.62294449342552 * DiseaseOsteoarthritis + 0.50944932247803 * GenderAll + 1.16624523024671 * GenderFemale ;
204108    +   H11  =    -0.16328527582879 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16328527582879 + H11 ;
204109    +   H12  =     3.43706584749845 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 3.43706584749845 + H12 ;
204110    +   H13  =    -3.84967331225192 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -3.84967331225192 + H13 ;
204111    +   H14  =     3.88592449819665 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.88592449819665 + H14 ;
204112    +   H15  =    -4.58028929812927 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -4.58028929812927 + H15 ;
204113    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
204114    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
204115    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
204116    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
204117    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
204118    +END;
MPRINT(EM_DIAGRAM):   END;
204119    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204120    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
204121    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
204122    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
204123    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
204124    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
204125    +END;
MPRINT(EM_DIAGRAM):   END;
204126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204127    +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
204128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204129    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204130    +   P_Cases_in_1000s  =     67.4104297195872 * H11  +    -35.8921323485021 *
204131    +        H12  +    -24.7752792694521 * H13  +     81.8360046551309 * H14
204132    +          +     66.7196227687357 * H15 ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 67.4104297195872 * H11 + -35.8921323485021 * H12 + -24.7752792694521 * H13 + 81.8360046551309 * H14 + 66.7196227687357 * H15 ;
204133    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -8.68845221932159 *
204134    +        S_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -8.68845221932159 * S_Population_in_thousands ;
204135    +   P_Cases_in_1000s  = P_Cases_in_1000s  +    -42.2746060828309 *
204136    +        Age_group0_17  +     -47.143646201442 * Age_group18_24
204137    +          +    -36.7791443787182 * Age_group25_44  +      11.462692663179 *
204138    +        Age_group45_64  +      58.824895833719 * Age_group65_84
204139    +          +    -29.7087244942384 * DiseaseAsthma  +     65.9700972408222 *
204140    +        DiseaseCancer__all  +    -33.3466634179848 *
204141    +        DiseaseDementia_and_Alzheimer_  +     0.84531108399158 *
204142    +        DiseaseOsteoarthritis  +     30.4656747943978 * GenderAll
204143    +          +    -8.25358426398541 * GenderFemale ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = P_Cases_in_1000s + -42.2746060828309 * Age_group0_17 + -47.143646201442 * Age_group18_24 + -36.7791443787182 * Age_group25_44 + 11.462692663179 * Age_group45_64 + 58.824895833719 * Age_group65_84 +
-29.7087244942384 * DiseaseAsthma + 65.9700972408222 * DiseaseCancer__all + -33.3466634179848 * DiseaseDementia_and_Alzheimer_ + 0.84531108399158 * DiseaseOsteoarthritis + 30.4656747943978 * GenderAll + -8.25358426398541 * GenderFemale ;
204144    +   P_Cases_in_1000s  =      96.558824557025 + P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 96.558824557025 + P_Cases_in_1000s ;
204145    +END;
MPRINT(EM_DIAGRAM):   END;
204146    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204147    +   P_Cases_in_1000s  = .;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = .;
204148    +END;
MPRINT(EM_DIAGRAM):   END;
204149    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
204150    +   P_Cases_in_1000s  =     71.1668909825033;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = 71.1668909825033;
204151    +END;
MPRINT(EM_DIAGRAM):   END;
204152    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
204153    +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
204154    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
204155    +IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Cases_in_1000s ) THEN R_Cases_in_1000s = . ;
204156    +ELSE R_Cases_in_1000s  = Cases_in_1000s  - P_Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   ELSE R_Cases_in_1000s = Cases_in_1000s - P_Cases_in_1000s ;
204157    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204158    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
204159    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204160    +drop
204161    +S_Population_in_thousands
204162    +H11
204163    +H12
204164    +H13
204165    +H14
204166    +H15
204167    +;
MPRINT(EM_DIAGRAM):   drop S_Population_in_thousands H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
204168     run;
 
NOTE: DATA STEP view saved on file EMWS2.NEURAL_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
204169     quit;
204170     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
204171     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
204172     * Neural: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural: Computing metadata for TRAIN data;
204173     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Neural_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Neural_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Neural_TRAIN out=WORK.M2VG2SI0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VG2SI0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VG2SI0(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2VG2SI0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2VG2SI0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3RQ_XVL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WLZ08N(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   set WORK.M3RQ_XVL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_CASES_IN_1000S") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("R_CASES_IN_1000S") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural";
MPRINT(EM_DIAGRAM):   when("CASES_IN_1000S") model = "Neural";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
204521     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
204522     set EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO;
204523     where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
204524     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.NEURAL_EMINFO.
      WHERE (DATA='Neural') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204525     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMINFO;
204526     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
204527     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
204528     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
204532     run;
204533     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
204534     set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMINFO WORK.MODELTEMP_INFO;
204535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204536     proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Neural_EMINFO NOTHREADS;
204537     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204539     proc sort data = EMWS2.Ids2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
204540     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204541     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.IDS2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
204542     proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Neural_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
204543     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204544     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204545     data EMWS2.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMINFO;
204546     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
204547     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
204548     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.NEURAL_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
204549     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
204550     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
204551     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
204552     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS2.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS2.NEURAL_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:43" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 09, 2019
Time:                16:19:43
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3W916_H "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Neural\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3W916_H new;
MPRINT(EM_DIAGRAM):   run;
204576     data EMWS2.Neural_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMOUTFIT(rename=(_NAME_=TARGET));
204577     set EMWS2.Neural_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_OUTFIT(where=(_NAME_ eq 'OVERALL'));
204578     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
204579     if _NAME_='OVERALL' then _NAME_='Cases_in_1000s';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='Cases_in_1000s';
204580     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
204581     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS2.NEURAL_EMOUTFIT has 1 observations and 58 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
204582     proc sort data=EMWS2.Neural_EMOUTFIT nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_EMOUTFIT nodupkey;
204583     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
204584     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS2.NEURAL_EMOUTFIT has 1 observations and 58 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
204585     data EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMOUTFIT;
204586     set EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMOUTFIT;
204587     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
204588     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
204589     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
NOTE: The data set EMWS2.NEURAL_EMOUTFIT has 1 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204590     proc sort data=EMWS2.Neural_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Neural_EMREPORTFIT nothreads;
204591     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
204592     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS2.NEURAL_EMREPORTFIT.
NOTE: The data set EMWS2.NEURAL_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
204593     %let _EMwarndup = 0;
204594     %let _EMtargetdup =;
204595     %let _EMASEtargetdup =;
204596     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
204597     set EMWS2.Neural_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMOUTFIT;
204598     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
204599     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
204600     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
204601     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
204602     end;
MPRINT(EM_DIAGRAM):   end;
204603     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.NEURAL_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204604     proc sort data=EMWS2.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
204605     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
204606     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.PART_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 6 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204607     proc sort data=EMWS2.Neural_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Neural_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
204608     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
204609     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set EMWS2.NEURAL_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 5 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204610     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
204611     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
204612     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
204613     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 5 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 6 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
204614     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
204615     set EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_CMeta_TRAIN;
204616     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
204617     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
204618     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
204619     set EMWS2.Neural_TRAIN(keep=
204620     P_Cases_in_1000s
204621     R_Cases_in_1000s
204622     _WARN_
204623     Cases_in_1000s
204624     );
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_TRAIN(keep= P_Cases_in_1000s R_Cases_in_1000s _WARN_ Cases_in_1000s );
204625     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS2.NEURAL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: There were 750 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 750 observations read from the data set EMWS2.NEURAL_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 750 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Neural_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Neural_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Cases_in_1000s _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Cases_in_1000s") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Cases_in_1000s Cases_in_1000s _tmpfreqvar_ WHERE = (Cases_in_1000s > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Cases_in_1000s ;
MPRINT(EM_ASSESS):   VAR Cases_in_1000s ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Cases_in_1000s" DATAROLE "TRAIN" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1 -
RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Cases_in_1000s = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Cases_in_1000s - -52.0513880726929) / 28.1345482126346), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 750);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 510.63957618;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 28.1345482126346;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
208956     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
208957     set EMWS2.Neural_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_CMeta_TRAIN;
208958     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
208959     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.NEURAL_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
208960     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
208961     set EMWS2.Neural_VALIDATE(keep=
208962     P_Cases_in_1000s
208963     R_Cases_in_1000s
208964     _WARN_
208965     Cases_in_1000s
208966     );
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_VALIDATE(keep= P_Cases_in_1000s R_Cases_in_1000s _WARN_ Cases_in_1000s );
208967     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS2.NEURAL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 563 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 563 observations read from the data set EMWS2.NEURAL_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 563 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Neural_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Neural_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.NeuralBOXDATA out=WORK.NeuralBOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.NeuralBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Neural_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMRESIDUAL WORK.NeuralBOXDATA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Cases_in_1000s _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Cases_in_1000s") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Cases_in_1000s Cases_in_1000s _tmpfreqvar_ WHERE = (Cases_in_1000s > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Cases_in_1000s ;
MPRINT(EM_ASSESS):   VAR Cases_in_1000s ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Cases_in_1000s" DATAROLE "VALIDATE" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1 -
RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Cases_in_1000s = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Cases_in_1000s - -51.611025767678) / 28.0040802553839), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 563);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 508.47057934;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 28.0040802553839;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length P_LABEL $27;
MPRINT(EM_DIAGRAM):   set EMWS2.Neural_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
213308     %let _cn = %sysfunc(getoption(CENTER));
213309     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
213310     proc print data=EMWS2.Neural_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Neural_EMREPORTFIT noobs label;
213311     var STAT LABEL TRAIN
213312     VALIDATE
213313     TEST
213314     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE TEST ;
213315     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
213316     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
213317     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
213318     run;
 
NOTE: There were 21 observations read from the data set EMWS2.NEURAL_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 62.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
213319     title10;
MPRINT(EM_DIAGRAM):   title10;
213320     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
213321     proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
213322     modify Neural_EMRANK;
MPRINT(EM_DIAGRAM):   modify Neural_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
213323     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
213324     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
213325     run;
 
NOTE: MODIFY was successful for EMWS2.NEURAL_EMRANK.DATA.
213326     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
213327     %let _cn = %sysfunc(getoption(CENTER));
213328     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
213329     proc print data=EMWS2.Neural_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Neural_EMRANK label noobs;
213330     var
213331     decile N _targetMean_ _meanP_;
MPRINT(EM_DIAGRAM):   var decile N _targetMean_ _meanP_;
213332     by
213333     notsorted DATAROLE
213334     notsorted TARGET
213335     notsorted TARGETLABEL
213336     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
213337     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
213338     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
213339     run;
 
NOTE: There were 40 observations read from the data set EMWS2.NEURAL_EMRANK.
NOTE: The PROCEDURE PRINT printed page 63.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
213340     title10;
MPRINT(EM_DIAGRAM):   title10;
213341     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
213342     proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
213343     modify Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Neural_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
213344     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
213345     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
213346     run;
 
NOTE: MODIFY was successful for EMWS2.NEURAL_EMSCOREDIST.DATA.
213347     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Neural_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label _targetMean_ _meanp_ n score;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Cases_in_1000s" );
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
