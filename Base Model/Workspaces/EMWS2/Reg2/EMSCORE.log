MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:19:46" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 21, 2019
Time:                16:19:46
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O01RXEX4 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O01RXEX4 new;
MPRINT(EM_DIAGRAM):   run;
162021     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
162022     *------------------------------------------------------------*;
162023     * Reg2: Scoring DATA data;
162024     *------------------------------------------------------------*;
162025     data EMWS2.Reg2_TRAIN
162026     / view=EMWS2.Reg2_TRAIN
162027     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_TRAIN / view=EMWS2.Reg2_TRAIN ;
162028     set EMWS2.Trans_TRAIN
162029     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TRAIN ;
162030     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas.
162031    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162032    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
162033    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162034    +
162035    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
162036    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
162037    +
162038    +drop _Y;
MPRINT(EM_DIAGRAM):   drop _Y;
162039    +_Y = Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   _Y = Sum_Labor_Force_Pop ;
162040    +
162041    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
162042    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
162043    +
162044    +*** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
162045    +if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
162046    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162047    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162048    +end;
MPRINT(EM_DIAGRAM):   end;
162049    +
162050    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
162051    +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
162052    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
162053    +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
162054    +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
162055    +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
162056    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162057    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162058    +end;
MPRINT(EM_DIAGRAM):   end;
162059    +else do;
MPRINT(EM_DIAGRAM):   else do;
162060    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
162061    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
162062    +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
162063    +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
162064    +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
162065    +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
162066    +   end;
MPRINT(EM_DIAGRAM):   end;
162067    +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
162068    +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
162069    +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
162070    +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
162071    +   end;
MPRINT(EM_DIAGRAM):   end;
162072    +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
162073    +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
162074    +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
162075    +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
162076    +   end;
MPRINT(EM_DIAGRAM):   end;
162077    +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
162078    +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
162079    +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
162080    +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
162081    +   end;
MPRINT(EM_DIAGRAM):   end;
162082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
162083    +      _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
162084    +      _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
162085    +      _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
162086    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
162087    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162088    +   end;
MPRINT(EM_DIAGRAM):   end;
162089    +end;
MPRINT(EM_DIAGRAM):   end;
162090    +
162091    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
162092    +drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 ;
162093    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
162094    +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
162095    +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
162096    +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
162097    +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
162098    +_1_4 = 0;
MPRINT(EM_DIAGRAM):   _1_4 = 0;
162099    +_1_5 = 0;
MPRINT(EM_DIAGRAM):   _1_5 = 0;
162100    +_1_6 = 0;
MPRINT(EM_DIAGRAM):   _1_6 = 0;
162101    +_1_7 = 0;
MPRINT(EM_DIAGRAM):   _1_7 = 0;
162102    +_1_8 = 0;
MPRINT(EM_DIAGRAM):   _1_8 = 0;
162103    +_1_9 = 0;
MPRINT(EM_DIAGRAM):   _1_9 = 0;
162104    +_1_10 = 0;
MPRINT(EM_DIAGRAM):   _1_10 = 0;
162105    +_1_11 = 0;
MPRINT(EM_DIAGRAM):   _1_11 = 0;
162106    +_1_12 = 0;
MPRINT(EM_DIAGRAM):   _1_12 = 0;
162107    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
162108    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
162109    +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
162110    +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
162111    +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
162112    +   _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
162113    +   _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
162114    +   _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
162115    +   _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
162116    +   _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
162117    +   _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
162118    +   _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
162119    +   _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
162120    +   _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
162121    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162122    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162123    +end;
MPRINT(EM_DIAGRAM):   end;
162124    +else do;
MPRINT(EM_DIAGRAM):   else do;
162125    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
162126    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
162127    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
162128    +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
162129    +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
162130    +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
162131    +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
162132    +               _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
162133    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162134    +            end;
MPRINT(EM_DIAGRAM):   end;
162135    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162136    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
162137    +                  _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
162138    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162139    +               end;
MPRINT(EM_DIAGRAM):   end;
162140    +            end;
MPRINT(EM_DIAGRAM):   end;
162141    +         end;
MPRINT(EM_DIAGRAM):   end;
162142    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162143    +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
162144    +               _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
162145    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162146    +            end;
MPRINT(EM_DIAGRAM):   end;
162147    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162148    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
162149    +                  _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
162150    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162151    +               end;
MPRINT(EM_DIAGRAM):   end;
162152    +            end;
MPRINT(EM_DIAGRAM):   end;
162153    +         end;
MPRINT(EM_DIAGRAM):   end;
162154    +      end;
MPRINT(EM_DIAGRAM):   end;
162155    +      else do;
MPRINT(EM_DIAGRAM):   else do;
162156    +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
162157    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
162158    +               _1_4 = 1;
MPRINT(EM_DIAGRAM):   _1_4 = 1;
162159    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162160    +            end;
MPRINT(EM_DIAGRAM):   end;
162161    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162162    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
162163    +                  _1_5 = 1;
MPRINT(EM_DIAGRAM):   _1_5 = 1;
162164    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162165    +               end;
MPRINT(EM_DIAGRAM):   end;
162166    +            end;
MPRINT(EM_DIAGRAM):   end;
162167    +         end;
MPRINT(EM_DIAGRAM):   end;
162168    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162169    +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
162170    +               _1_6 = 1;
MPRINT(EM_DIAGRAM):   _1_6 = 1;
162171    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162172    +            end;
MPRINT(EM_DIAGRAM):   end;
162173    +         end;
MPRINT(EM_DIAGRAM):   end;
162174    +      end;
MPRINT(EM_DIAGRAM):   end;
162175    +   end;
MPRINT(EM_DIAGRAM):   end;
162176    +   else do;
MPRINT(EM_DIAGRAM):   else do;
162177    +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
162178    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
162179    +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
162180    +               _1_7 = 1;
MPRINT(EM_DIAGRAM):   _1_7 = 1;
162181    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162182    +            end;
MPRINT(EM_DIAGRAM):   end;
162183    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162184    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
162185    +                  _1_8 = 1;
MPRINT(EM_DIAGRAM):   _1_8 = 1;
162186    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162187    +               end;
MPRINT(EM_DIAGRAM):   end;
162188    +            end;
MPRINT(EM_DIAGRAM):   end;
162189    +         end;
MPRINT(EM_DIAGRAM):   end;
162190    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162191    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
162192    +               _1_9 = 1;
MPRINT(EM_DIAGRAM):   _1_9 = 1;
162193    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162194    +            end;
MPRINT(EM_DIAGRAM):   end;
162195    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162196    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
162197    +                  _1_10 = 1;
MPRINT(EM_DIAGRAM):   _1_10 = 1;
162198    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162199    +               end;
MPRINT(EM_DIAGRAM):   end;
162200    +            end;
MPRINT(EM_DIAGRAM):   end;
162201    +         end;
MPRINT(EM_DIAGRAM):   end;
162202    +      end;
MPRINT(EM_DIAGRAM):   end;
162203    +      else do;
MPRINT(EM_DIAGRAM):   else do;
162204    +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
162205    +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
162206    +               _1_11 = 1;
MPRINT(EM_DIAGRAM):   _1_11 = 1;
162207    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162208    +            end;
MPRINT(EM_DIAGRAM):   end;
162209    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162210    +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
162211    +                  _1_12 = 1;
MPRINT(EM_DIAGRAM):   _1_12 = 1;
162212    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162213    +               end;
MPRINT(EM_DIAGRAM):   end;
162214    +            end;
MPRINT(EM_DIAGRAM):   end;
162215    +         end;
MPRINT(EM_DIAGRAM):   end;
162216    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162217    +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
162218    +               _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
162219    +               _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
162220    +               _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
162221    +               _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
162222    +               _1_4 = -1;
MPRINT(EM_DIAGRAM):   _1_4 = -1;
162223    +               _1_5 = -1;
MPRINT(EM_DIAGRAM):   _1_5 = -1;
162224    +               _1_6 = -1;
MPRINT(EM_DIAGRAM):   _1_6 = -1;
162225    +               _1_7 = -1;
MPRINT(EM_DIAGRAM):   _1_7 = -1;
162226    +               _1_8 = -1;
MPRINT(EM_DIAGRAM):   _1_8 = -1;
162227    +               _1_9 = -1;
MPRINT(EM_DIAGRAM):   _1_9 = -1;
162228    +               _1_10 = -1;
MPRINT(EM_DIAGRAM):   _1_10 = -1;
162229    +               _1_11 = -1;
MPRINT(EM_DIAGRAM):   _1_11 = -1;
162230    +               _1_12 = -1;
MPRINT(EM_DIAGRAM):   _1_12 = -1;
162231    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162232    +            end;
MPRINT(EM_DIAGRAM):   end;
162233    +         end;
MPRINT(EM_DIAGRAM):   end;
162234    +      end;
MPRINT(EM_DIAGRAM):   end;
162235    +   end;
MPRINT(EM_DIAGRAM):   end;
162236    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
162237    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
162238    +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
162239    +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
162240    +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
162241    +      _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
162242    +      _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
162243    +      _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
162244    +      _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
162245    +      _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
162246    +      _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
162247    +      _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
162248    +      _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
162249    +      _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
162250    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
162251    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162252    +   end;
MPRINT(EM_DIAGRAM):   end;
162253    +end;
MPRINT(EM_DIAGRAM):   end;
162254    +
162255    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
162256    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
162257    +   _LP0 =              6735625;
MPRINT(EM_DIAGRAM):   _LP0 = 6735625;
162258    +   goto REG2DR1;
MPRINT(EM_DIAGRAM):   goto REG2DR1;
162259    +end;
MPRINT(EM_DIAGRAM):   end;
162260    +
162261    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
162262    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
162263    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
162264    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
162265    +
162266    +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
162267    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
162268    +_LP0 = _LP0 + (    -2764114.5611372) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2764114.5611372) * _TEMP * _0_0;
162269    +_LP0 = _LP0 + (    5768711.41333865) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5768711.41333865) * _TEMP * _0_1;
162270    +_LP0 = _LP0 + (    2379678.90163291) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2379678.90163291) * _TEMP * _0_2;
162271    +
162272    +***  Effect: Date ;
MPRINT(EM_DIAGRAM):   *** Effect: Date ;
162273    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
162274    +_LP0 = _LP0 + (   -144259.781641143) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -144259.781641143) * _TEMP * _1_0;
162275    +_LP0 = _LP0 + (    399665.924091749) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 399665.924091749) * _TEMP * _1_1;
162276    +_LP0 = _LP0 + (   -1505727.84273972) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1505727.84273972) * _TEMP * _1_2;
162277    +_LP0 = _LP0 + (     316017.71323023) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 316017.71323023) * _TEMP * _1_3;
162278    +_LP0 = _LP0 + (   -170069.983375704) * _TEMP * _1_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -170069.983375704) * _TEMP * _1_4;
162279    +_LP0 = _LP0 + (   -628034.279507059) * _TEMP * _1_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -628034.279507059) * _TEMP * _1_5;
162280    +_LP0 = _LP0 + (   -727974.892331428) * _TEMP * _1_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -727974.892331428) * _TEMP * _1_6;
162281    +_LP0 = _LP0 + (    1359086.18741455) * _TEMP * _1_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1359086.18741455) * _TEMP * _1_7;
162282    +_LP0 = _LP0 + (     1523785.4243861) * _TEMP * _1_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1523785.4243861) * _TEMP * _1_8;
162283    +_LP0 = _LP0 + (   -729403.539714783) * _TEMP * _1_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -729403.539714783) * _TEMP * _1_9;
162284    +_LP0 = _LP0 + (   -637953.514437682) * _TEMP * _1_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -637953.514437682) * _TEMP * _1_10;
162285    +_LP0 = _LP0 + (    564348.209020541) * _TEMP * _1_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 564348.209020541) * _TEMP * _1_11;
162286    +_LP0 = _LP0 + (     204360.78660139) * _TEMP * _1_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 204360.78660139) * _TEMP * _1_12;
162287    +
162288    +***  Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
162289    +_TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
162290    +_LP0 = _LP0 + (    22.9298269350997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 22.9298269350997 * _TEMP);
162291    +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
162292    +_LP0 = _LP0 + (    5860645.63878544);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5860645.63878544);
162293    +
162294    +REG2DR1:
162295    +
162296    +*** Predicted Value, Error, and Residual;
MPRINT(EM_DIAGRAM):   REG2DR1: *** Predicted Value, Error, and Residual;
162297    +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
162298    +P_Sum_Labor_Force_Pop = _LP0;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _LP0;
162299    +
162300    +drop _R;
MPRINT(EM_DIAGRAM):   drop _R;
162301    +if _Y = . then do;
MPRINT(EM_DIAGRAM):   if _Y = . then do;
162302    +   R_Sum_Labor_Force_Pop = .;
MPRINT(EM_DIAGRAM):   R_Sum_Labor_Force_Pop = .;
162303    +end;
MPRINT(EM_DIAGRAM):   end;
162304    +else do;
MPRINT(EM_DIAGRAM):   else do;
162305    +   _R = _Y - _LP0;
MPRINT(EM_DIAGRAM):   _R = _Y - _LP0;
162306    +    label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
162307    +   R_Sum_Labor_Force_Pop = _R;
MPRINT(EM_DIAGRAM):   R_Sum_Labor_Force_Pop = _R;
162308    +end;
MPRINT(EM_DIAGRAM):   end;
162309    +
162310    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162311    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
162312    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
162313     run;

NOTE: DATA STEP view saved on file EMWS2.REG2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
162314     quit;
162315     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
162316     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
162317     *------------------------------------------------------------*;
162318     * Reg2: Scoring VALIDATE data;
162319     *------------------------------------------------------------*;
162320     data EMWS2.Reg2_VALIDATE
162321     / view=EMWS2.Reg2_VALIDATE
162322     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_VALIDATE / view=EMWS2.Reg2_VALIDATE ;
162323     set EMWS2.Trans_VALIDATE
162324     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_VALIDATE ;
162325     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas.
162326    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162327    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
162328    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162329    +
162330    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
162331    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
162332    +
162333    +drop _Y;
MPRINT(EM_DIAGRAM):   drop _Y;
162334    +_Y = Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   _Y = Sum_Labor_Force_Pop ;
162335    +
162336    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
162337    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
162338    +
162339    +*** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
162340    +if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
162341    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162342    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162343    +end;
MPRINT(EM_DIAGRAM):   end;
162344    +
162345    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
162346    +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
162347    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
162348    +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
162349    +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
162350    +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
162351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162353    +end;
MPRINT(EM_DIAGRAM):   end;
162354    +else do;
MPRINT(EM_DIAGRAM):   else do;
162355    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
162356    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
162357    +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
162358    +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
162359    +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
162360    +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
162361    +   end;
MPRINT(EM_DIAGRAM):   end;
162362    +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
162363    +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
162364    +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
162365    +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
162366    +   end;
MPRINT(EM_DIAGRAM):   end;
162367    +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
162368    +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
162369    +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
162370    +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
162371    +   end;
MPRINT(EM_DIAGRAM):   end;
162372    +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
162373    +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
162374    +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
162375    +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
162376    +   end;
MPRINT(EM_DIAGRAM):   end;
162377    +   else do;
MPRINT(EM_DIAGRAM):   else do;
162378    +      _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
162379    +      _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
162380    +      _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
162381    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
162382    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162383    +   end;
MPRINT(EM_DIAGRAM):   end;
162384    +end;
MPRINT(EM_DIAGRAM):   end;
162385    +
162386    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
162387    +drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 ;
162388    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
162389    +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
162390    +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
162391    +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
162392    +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
162393    +_1_4 = 0;
MPRINT(EM_DIAGRAM):   _1_4 = 0;
162394    +_1_5 = 0;
MPRINT(EM_DIAGRAM):   _1_5 = 0;
162395    +_1_6 = 0;
MPRINT(EM_DIAGRAM):   _1_6 = 0;
162396    +_1_7 = 0;
MPRINT(EM_DIAGRAM):   _1_7 = 0;
162397    +_1_8 = 0;
MPRINT(EM_DIAGRAM):   _1_8 = 0;
162398    +_1_9 = 0;
MPRINT(EM_DIAGRAM):   _1_9 = 0;
162399    +_1_10 = 0;
MPRINT(EM_DIAGRAM):   _1_10 = 0;
162400    +_1_11 = 0;
MPRINT(EM_DIAGRAM):   _1_11 = 0;
162401    +_1_12 = 0;
MPRINT(EM_DIAGRAM):   _1_12 = 0;
162402    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
162403    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
162404    +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
162405    +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
162406    +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
162407    +   _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
162408    +   _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
162409    +   _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
162410    +   _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
162411    +   _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
162412    +   _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
162413    +   _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
162414    +   _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
162415    +   _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
162416    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162417    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162418    +end;
MPRINT(EM_DIAGRAM):   end;
162419    +else do;
MPRINT(EM_DIAGRAM):   else do;
162420    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
162421    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
162422    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
162423    +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
162424    +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
162425    +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
162426    +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
162427    +               _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
162428    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162429    +            end;
MPRINT(EM_DIAGRAM):   end;
162430    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162431    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
162432    +                  _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
162433    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162434    +               end;
MPRINT(EM_DIAGRAM):   end;
162435    +            end;
MPRINT(EM_DIAGRAM):   end;
162436    +         end;
MPRINT(EM_DIAGRAM):   end;
162437    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162438    +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
162439    +               _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
162440    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162441    +            end;
MPRINT(EM_DIAGRAM):   end;
162442    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162443    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
162444    +                  _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
162445    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162446    +               end;
MPRINT(EM_DIAGRAM):   end;
162447    +            end;
MPRINT(EM_DIAGRAM):   end;
162448    +         end;
MPRINT(EM_DIAGRAM):   end;
162449    +      end;
MPRINT(EM_DIAGRAM):   end;
162450    +      else do;
MPRINT(EM_DIAGRAM):   else do;
162451    +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
162452    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
162453    +               _1_4 = 1;
MPRINT(EM_DIAGRAM):   _1_4 = 1;
162454    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162455    +            end;
MPRINT(EM_DIAGRAM):   end;
162456    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162457    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
162458    +                  _1_5 = 1;
MPRINT(EM_DIAGRAM):   _1_5 = 1;
162459    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162460    +               end;
MPRINT(EM_DIAGRAM):   end;
162461    +            end;
MPRINT(EM_DIAGRAM):   end;
162462    +         end;
MPRINT(EM_DIAGRAM):   end;
162463    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162464    +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
162465    +               _1_6 = 1;
MPRINT(EM_DIAGRAM):   _1_6 = 1;
162466    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162467    +            end;
MPRINT(EM_DIAGRAM):   end;
162468    +         end;
MPRINT(EM_DIAGRAM):   end;
162469    +      end;
MPRINT(EM_DIAGRAM):   end;
162470    +   end;
MPRINT(EM_DIAGRAM):   end;
162471    +   else do;
MPRINT(EM_DIAGRAM):   else do;
162472    +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
162473    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
162474    +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
162475    +               _1_7 = 1;
MPRINT(EM_DIAGRAM):   _1_7 = 1;
162476    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162477    +            end;
MPRINT(EM_DIAGRAM):   end;
162478    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162479    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
162480    +                  _1_8 = 1;
MPRINT(EM_DIAGRAM):   _1_8 = 1;
162481    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162482    +               end;
MPRINT(EM_DIAGRAM):   end;
162483    +            end;
MPRINT(EM_DIAGRAM):   end;
162484    +         end;
MPRINT(EM_DIAGRAM):   end;
162485    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162486    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
162487    +               _1_9 = 1;
MPRINT(EM_DIAGRAM):   _1_9 = 1;
162488    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162489    +            end;
MPRINT(EM_DIAGRAM):   end;
162490    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162491    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
162492    +                  _1_10 = 1;
MPRINT(EM_DIAGRAM):   _1_10 = 1;
162493    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162494    +               end;
MPRINT(EM_DIAGRAM):   end;
162495    +            end;
MPRINT(EM_DIAGRAM):   end;
162496    +         end;
MPRINT(EM_DIAGRAM):   end;
162497    +      end;
MPRINT(EM_DIAGRAM):   end;
162498    +      else do;
MPRINT(EM_DIAGRAM):   else do;
162499    +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
162500    +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
162501    +               _1_11 = 1;
MPRINT(EM_DIAGRAM):   _1_11 = 1;
162502    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162503    +            end;
MPRINT(EM_DIAGRAM):   end;
162504    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162505    +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
162506    +                  _1_12 = 1;
MPRINT(EM_DIAGRAM):   _1_12 = 1;
162507    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162508    +               end;
MPRINT(EM_DIAGRAM):   end;
162509    +            end;
MPRINT(EM_DIAGRAM):   end;
162510    +         end;
MPRINT(EM_DIAGRAM):   end;
162511    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162512    +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
162513    +               _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
162514    +               _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
162515    +               _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
162516    +               _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
162517    +               _1_4 = -1;
MPRINT(EM_DIAGRAM):   _1_4 = -1;
162518    +               _1_5 = -1;
MPRINT(EM_DIAGRAM):   _1_5 = -1;
162519    +               _1_6 = -1;
MPRINT(EM_DIAGRAM):   _1_6 = -1;
162520    +               _1_7 = -1;
MPRINT(EM_DIAGRAM):   _1_7 = -1;
162521    +               _1_8 = -1;
MPRINT(EM_DIAGRAM):   _1_8 = -1;
162522    +               _1_9 = -1;
MPRINT(EM_DIAGRAM):   _1_9 = -1;
162523    +               _1_10 = -1;
MPRINT(EM_DIAGRAM):   _1_10 = -1;
162524    +               _1_11 = -1;
MPRINT(EM_DIAGRAM):   _1_11 = -1;
162525    +               _1_12 = -1;
MPRINT(EM_DIAGRAM):   _1_12 = -1;
162526    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162527    +            end;
MPRINT(EM_DIAGRAM):   end;
162528    +         end;
MPRINT(EM_DIAGRAM):   end;
162529    +      end;
MPRINT(EM_DIAGRAM):   end;
162530    +   end;
MPRINT(EM_DIAGRAM):   end;
162531    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
162532    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
162533    +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
162534    +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
162535    +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
162536    +      _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
162537    +      _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
162538    +      _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
162539    +      _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
162540    +      _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
162541    +      _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
162542    +      _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
162543    +      _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
162544    +      _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
162545    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
162546    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162547    +   end;
MPRINT(EM_DIAGRAM):   end;
162548    +end;
MPRINT(EM_DIAGRAM):   end;
162549    +
162550    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
162551    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
162552    +   _LP0 =              6735625;
MPRINT(EM_DIAGRAM):   _LP0 = 6735625;
162553    +   goto REG2DR1;
MPRINT(EM_DIAGRAM):   goto REG2DR1;
162554    +end;
MPRINT(EM_DIAGRAM):   end;
162555    +
162556    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
162557    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
162558    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
162559    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
162560    +
162561    +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
162562    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
162563    +_LP0 = _LP0 + (    -2764114.5611372) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2764114.5611372) * _TEMP * _0_0;
162564    +_LP0 = _LP0 + (    5768711.41333865) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5768711.41333865) * _TEMP * _0_1;
162565    +_LP0 = _LP0 + (    2379678.90163291) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2379678.90163291) * _TEMP * _0_2;
162566    +
162567    +***  Effect: Date ;
MPRINT(EM_DIAGRAM):   *** Effect: Date ;
162568    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
162569    +_LP0 = _LP0 + (   -144259.781641143) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -144259.781641143) * _TEMP * _1_0;
162570    +_LP0 = _LP0 + (    399665.924091749) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 399665.924091749) * _TEMP * _1_1;
162571    +_LP0 = _LP0 + (   -1505727.84273972) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1505727.84273972) * _TEMP * _1_2;
162572    +_LP0 = _LP0 + (     316017.71323023) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 316017.71323023) * _TEMP * _1_3;
162573    +_LP0 = _LP0 + (   -170069.983375704) * _TEMP * _1_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -170069.983375704) * _TEMP * _1_4;
162574    +_LP0 = _LP0 + (   -628034.279507059) * _TEMP * _1_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -628034.279507059) * _TEMP * _1_5;
162575    +_LP0 = _LP0 + (   -727974.892331428) * _TEMP * _1_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -727974.892331428) * _TEMP * _1_6;
162576    +_LP0 = _LP0 + (    1359086.18741455) * _TEMP * _1_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1359086.18741455) * _TEMP * _1_7;
162577    +_LP0 = _LP0 + (     1523785.4243861) * _TEMP * _1_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1523785.4243861) * _TEMP * _1_8;
162578    +_LP0 = _LP0 + (   -729403.539714783) * _TEMP * _1_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -729403.539714783) * _TEMP * _1_9;
162579    +_LP0 = _LP0 + (   -637953.514437682) * _TEMP * _1_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -637953.514437682) * _TEMP * _1_10;
162580    +_LP0 = _LP0 + (    564348.209020541) * _TEMP * _1_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 564348.209020541) * _TEMP * _1_11;
162581    +_LP0 = _LP0 + (     204360.78660139) * _TEMP * _1_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 204360.78660139) * _TEMP * _1_12;
162582    +
162583    +***  Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
162584    +_TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
162585    +_LP0 = _LP0 + (    22.9298269350997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 22.9298269350997 * _TEMP);
162586    +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
162587    +_LP0 = _LP0 + (    5860645.63878544);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5860645.63878544);
162588    +
162589    +REG2DR1:
162590    +
162591    +*** Predicted Value, Error, and Residual;
MPRINT(EM_DIAGRAM):   REG2DR1: *** Predicted Value, Error, and Residual;
162592    +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
162593    +P_Sum_Labor_Force_Pop = _LP0;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _LP0;
162594    +
162595    +drop _R;
MPRINT(EM_DIAGRAM):   drop _R;
162596    +if _Y = . then do;
MPRINT(EM_DIAGRAM):   if _Y = . then do;
162597    +   R_Sum_Labor_Force_Pop = .;
MPRINT(EM_DIAGRAM):   R_Sum_Labor_Force_Pop = .;
162598    +end;
MPRINT(EM_DIAGRAM):   end;
162599    +else do;
MPRINT(EM_DIAGRAM):   else do;
162600    +   _R = _Y - _LP0;
MPRINT(EM_DIAGRAM):   _R = _Y - _LP0;
162601    +    label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
162602    +   R_Sum_Labor_Force_Pop = _R;
MPRINT(EM_DIAGRAM):   R_Sum_Labor_Force_Pop = _R;
162603    +end;
MPRINT(EM_DIAGRAM):   end;
162604    +
162605    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162606    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
162607    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
162608     run;

NOTE: DATA STEP view saved on file EMWS2.REG2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
162609     quit;
162610     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
162611     filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
162612     *------------------------------------------------------------*;
162613     * Reg2: Scoring TEST data;
162614     *------------------------------------------------------------*;
162615     data EMWS2.Reg2_TEST
162616     / view=EMWS2.Reg2_TEST
162617     ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_TEST / view=EMWS2.Reg2_TEST ;
162618     set EMWS2.Trans_TEST
162619     ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TEST ;
162620     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas.
162621    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162622    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
162623    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162624    +
162625    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
162626    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
162627    +
162628    +drop _Y;
MPRINT(EM_DIAGRAM):   drop _Y;
162629    +_Y = Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   _Y = Sum_Labor_Force_Pop ;
162630    +
162631    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
162632    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
162633    +
162634    +*** Check Population_in_thousands for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Population_in_thousands for missing values ;
162635    +if missing( Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   if missing( Population_in_thousands ) then do;
162636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162638    +end;
MPRINT(EM_DIAGRAM):   end;
162639    +
162640    +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
162641    +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
162642    +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
162643    +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
162644    +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
162645    +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
162646    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162647    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162648    +end;
MPRINT(EM_DIAGRAM):   end;
162649    +else do;
MPRINT(EM_DIAGRAM):   else do;
162650    +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
162651    +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
162652    +   if _dm19 = '25 TO 44'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '25 TO 44' then do;
162653    +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
162654    +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
162655    +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
162656    +   end;
MPRINT(EM_DIAGRAM):   end;
162657    +   else if _dm19 = '65+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65+' then do;
162658    +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
162659    +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
162660    +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
162661    +   end;
MPRINT(EM_DIAGRAM):   end;
162662    +   else if _dm19 = '16 TO 24'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '16 TO 24' then do;
162663    +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
162664    +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
162665    +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
162666    +   end;
MPRINT(EM_DIAGRAM):   end;
162667    +   else if _dm19 = '45 TO 64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '45 TO 64' then do;
162668    +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
162669    +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
162670    +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
162671    +   end;
MPRINT(EM_DIAGRAM):   end;
162672    +   else do;
MPRINT(EM_DIAGRAM):   else do;
162673    +      _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
162674    +      _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
162675    +      _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
162676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
162677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162678    +   end;
MPRINT(EM_DIAGRAM):   end;
162679    +end;
MPRINT(EM_DIAGRAM):   end;
162680    +
162681    +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
162682    +drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 ;
162683    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
162684    +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
162685    +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
162686    +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
162687    +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
162688    +_1_4 = 0;
MPRINT(EM_DIAGRAM):   _1_4 = 0;
162689    +_1_5 = 0;
MPRINT(EM_DIAGRAM):   _1_5 = 0;
162690    +_1_6 = 0;
MPRINT(EM_DIAGRAM):   _1_6 = 0;
162691    +_1_7 = 0;
MPRINT(EM_DIAGRAM):   _1_7 = 0;
162692    +_1_8 = 0;
MPRINT(EM_DIAGRAM):   _1_8 = 0;
162693    +_1_9 = 0;
MPRINT(EM_DIAGRAM):   _1_9 = 0;
162694    +_1_10 = 0;
MPRINT(EM_DIAGRAM):   _1_10 = 0;
162695    +_1_11 = 0;
MPRINT(EM_DIAGRAM):   _1_11 = 0;
162696    +_1_12 = 0;
MPRINT(EM_DIAGRAM):   _1_12 = 0;
162697    +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
162698    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
162699    +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
162700    +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
162701    +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
162702    +   _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
162703    +   _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
162704    +   _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
162705    +   _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
162706    +   _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
162707    +   _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
162708    +   _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
162709    +   _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
162710    +   _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
162711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
162712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162713    +end;
MPRINT(EM_DIAGRAM):   end;
162714    +else do;
MPRINT(EM_DIAGRAM):   else do;
162715    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
162716    +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
162717    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
162718    +   if _dm10 <= '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2006' then do;
162719    +      if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
162720    +         if _dm10 <= '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2001' then do;
162721    +            if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
162722    +               _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
162723    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162724    +            end;
MPRINT(EM_DIAGRAM):   end;
162725    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162726    +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
162727    +                  _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
162728    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162729    +               end;
MPRINT(EM_DIAGRAM):   end;
162730    +            end;
MPRINT(EM_DIAGRAM):   end;
162731    +         end;
MPRINT(EM_DIAGRAM):   end;
162732    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162733    +            if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
162734    +               _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
162735    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162736    +            end;
MPRINT(EM_DIAGRAM):   end;
162737    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162738    +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
162739    +                  _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
162740    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162741    +               end;
MPRINT(EM_DIAGRAM):   end;
162742    +            end;
MPRINT(EM_DIAGRAM):   end;
162743    +         end;
MPRINT(EM_DIAGRAM):   end;
162744    +      end;
MPRINT(EM_DIAGRAM):   end;
162745    +      else do;
MPRINT(EM_DIAGRAM):   else do;
162746    +         if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
162747    +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
162748    +               _1_4 = 1;
MPRINT(EM_DIAGRAM):   _1_4 = 1;
162749    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162750    +            end;
MPRINT(EM_DIAGRAM):   end;
162751    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162752    +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
162753    +                  _1_5 = 1;
MPRINT(EM_DIAGRAM):   _1_5 = 1;
162754    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162755    +               end;
MPRINT(EM_DIAGRAM):   end;
162756    +            end;
MPRINT(EM_DIAGRAM):   end;
162757    +         end;
MPRINT(EM_DIAGRAM):   end;
162758    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162759    +            if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
162760    +               _1_6 = 1;
MPRINT(EM_DIAGRAM):   _1_6 = 1;
162761    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162762    +            end;
MPRINT(EM_DIAGRAM):   end;
162763    +         end;
MPRINT(EM_DIAGRAM):   end;
162764    +      end;
MPRINT(EM_DIAGRAM):   end;
162765    +   end;
MPRINT(EM_DIAGRAM):   end;
162766    +   else do;
MPRINT(EM_DIAGRAM):   else do;
162767    +      if _dm10 <= '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2010' then do;
162768    +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
162769    +            if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
162770    +               _1_7 = 1;
MPRINT(EM_DIAGRAM):   _1_7 = 1;
162771    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162772    +            end;
MPRINT(EM_DIAGRAM):   end;
162773    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162774    +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
162775    +                  _1_8 = 1;
MPRINT(EM_DIAGRAM):   _1_8 = 1;
162776    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162777    +               end;
MPRINT(EM_DIAGRAM):   end;
162778    +            end;
MPRINT(EM_DIAGRAM):   end;
162779    +         end;
MPRINT(EM_DIAGRAM):   end;
162780    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162781    +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
162782    +               _1_9 = 1;
MPRINT(EM_DIAGRAM):   _1_9 = 1;
162783    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162784    +            end;
MPRINT(EM_DIAGRAM):   end;
162785    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162786    +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
162787    +                  _1_10 = 1;
MPRINT(EM_DIAGRAM):   _1_10 = 1;
162788    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162789    +               end;
MPRINT(EM_DIAGRAM):   end;
162790    +            end;
MPRINT(EM_DIAGRAM):   end;
162791    +         end;
MPRINT(EM_DIAGRAM):   end;
162792    +      end;
MPRINT(EM_DIAGRAM):   end;
162793    +      else do;
MPRINT(EM_DIAGRAM):   else do;
162794    +         if _dm10 <= '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2012' then do;
162795    +            if _dm10 = '2011'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2011' then do;
162796    +               _1_11 = 1;
MPRINT(EM_DIAGRAM):   _1_11 = 1;
162797    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162798    +            end;
MPRINT(EM_DIAGRAM):   end;
162799    +            else do;
MPRINT(EM_DIAGRAM):   else do;
162800    +               if _dm10 = '2012'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2012' then do;
162801    +                  _1_12 = 1;
MPRINT(EM_DIAGRAM):   _1_12 = 1;
162802    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162803    +               end;
MPRINT(EM_DIAGRAM):   end;
162804    +            end;
MPRINT(EM_DIAGRAM):   end;
162805    +         end;
MPRINT(EM_DIAGRAM):   end;
162806    +         else do;
MPRINT(EM_DIAGRAM):   else do;
162807    +            if _dm10 = '2013'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2013' then do;
162808    +               _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
162809    +               _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
162810    +               _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
162811    +               _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
162812    +               _1_4 = -1;
MPRINT(EM_DIAGRAM):   _1_4 = -1;
162813    +               _1_5 = -1;
MPRINT(EM_DIAGRAM):   _1_5 = -1;
162814    +               _1_6 = -1;
MPRINT(EM_DIAGRAM):   _1_6 = -1;
162815    +               _1_7 = -1;
MPRINT(EM_DIAGRAM):   _1_7 = -1;
162816    +               _1_8 = -1;
MPRINT(EM_DIAGRAM):   _1_8 = -1;
162817    +               _1_9 = -1;
MPRINT(EM_DIAGRAM):   _1_9 = -1;
162818    +               _1_10 = -1;
MPRINT(EM_DIAGRAM):   _1_10 = -1;
162819    +               _1_11 = -1;
MPRINT(EM_DIAGRAM):   _1_11 = -1;
162820    +               _1_12 = -1;
MPRINT(EM_DIAGRAM):   _1_12 = -1;
162821    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
162822    +            end;
MPRINT(EM_DIAGRAM):   end;
162823    +         end;
MPRINT(EM_DIAGRAM):   end;
162824    +      end;
MPRINT(EM_DIAGRAM):   end;
162825    +   end;
MPRINT(EM_DIAGRAM):   end;
162826    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
162827    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
162828    +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
162829    +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
162830    +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
162831    +      _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
162832    +      _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
162833    +      _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
162834    +      _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
162835    +      _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
162836    +      _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
162837    +      _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
162838    +      _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
162839    +      _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
162840    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
162841    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
162842    +   end;
MPRINT(EM_DIAGRAM):   end;
162843    +end;
MPRINT(EM_DIAGRAM):   end;
162844    +
162845    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
162846    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
162847    +   _LP0 =              6735625;
MPRINT(EM_DIAGRAM):   _LP0 = 6735625;
162848    +   goto REG2DR1;
MPRINT(EM_DIAGRAM):   goto REG2DR1;
162849    +end;
MPRINT(EM_DIAGRAM):   end;
162850    +
162851    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
162852    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
162853    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
162854    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
162855    +
162856    +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
162857    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
162858    +_LP0 = _LP0 + (    -2764114.5611372) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2764114.5611372) * _TEMP * _0_0;
162859    +_LP0 = _LP0 + (    5768711.41333865) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5768711.41333865) * _TEMP * _0_1;
162860    +_LP0 = _LP0 + (    2379678.90163291) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2379678.90163291) * _TEMP * _0_2;
162861    +
162862    +***  Effect: Date ;
MPRINT(EM_DIAGRAM):   *** Effect: Date ;
162863    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
162864    +_LP0 = _LP0 + (   -144259.781641143) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -144259.781641143) * _TEMP * _1_0;
162865    +_LP0 = _LP0 + (    399665.924091749) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 399665.924091749) * _TEMP * _1_1;
162866    +_LP0 = _LP0 + (   -1505727.84273972) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1505727.84273972) * _TEMP * _1_2;
162867    +_LP0 = _LP0 + (     316017.71323023) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 316017.71323023) * _TEMP * _1_3;
162868    +_LP0 = _LP0 + (   -170069.983375704) * _TEMP * _1_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -170069.983375704) * _TEMP * _1_4;
162869    +_LP0 = _LP0 + (   -628034.279507059) * _TEMP * _1_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -628034.279507059) * _TEMP * _1_5;
162870    +_LP0 = _LP0 + (   -727974.892331428) * _TEMP * _1_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -727974.892331428) * _TEMP * _1_6;
162871    +_LP0 = _LP0 + (    1359086.18741455) * _TEMP * _1_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1359086.18741455) * _TEMP * _1_7;
162872    +_LP0 = _LP0 + (     1523785.4243861) * _TEMP * _1_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1523785.4243861) * _TEMP * _1_8;
162873    +_LP0 = _LP0 + (   -729403.539714783) * _TEMP * _1_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -729403.539714783) * _TEMP * _1_9;
162874    +_LP0 = _LP0 + (   -637953.514437682) * _TEMP * _1_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -637953.514437682) * _TEMP * _1_10;
162875    +_LP0 = _LP0 + (    564348.209020541) * _TEMP * _1_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 564348.209020541) * _TEMP * _1_11;
162876    +_LP0 = _LP0 + (     204360.78660139) * _TEMP * _1_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 204360.78660139) * _TEMP * _1_12;
162877    +
162878    +***  Effect: Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Effect: Population_in_thousands ;
162879    +_TEMP = Population_in_thousands ;
MPRINT(EM_DIAGRAM):   _TEMP = Population_in_thousands ;
162880    +_LP0 = _LP0 + (    22.9298269350997 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 22.9298269350997 * _TEMP);
162881    +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
162882    +_LP0 = _LP0 + (    5860645.63878544);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5860645.63878544);
162883    +
162884    +REG2DR1:
162885    +
162886    +*** Predicted Value, Error, and Residual;
MPRINT(EM_DIAGRAM):   REG2DR1: *** Predicted Value, Error, and Residual;
162887    +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
162888    +P_Sum_Labor_Force_Pop = _LP0;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _LP0;
162889    +
162890    +drop _R;
MPRINT(EM_DIAGRAM):   drop _R;
162891    +if _Y = . then do;
MPRINT(EM_DIAGRAM):   if _Y = . then do;
162892    +   R_Sum_Labor_Force_Pop = .;
MPRINT(EM_DIAGRAM):   R_Sum_Labor_Force_Pop = .;
162893    +end;
MPRINT(EM_DIAGRAM):   end;
162894    +else do;
MPRINT(EM_DIAGRAM):   else do;
162895    +   _R = _Y - _LP0;
MPRINT(EM_DIAGRAM):   _R = _Y - _LP0;
162896    +    label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
162897    +   R_Sum_Labor_Force_Pop = _R;
MPRINT(EM_DIAGRAM):   R_Sum_Labor_Force_Pop = _R;
162898    +end;
MPRINT(EM_DIAGRAM):   end;
162899    +
162900    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
162901    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
162902    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
162903     run;

NOTE: DATA STEP view saved on file EMWS2.REG2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TEST.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
162904     quit;
162905     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
162906     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
162907     * Reg2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg2: Computing metadata for TRAIN data;
162908     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Reg2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Reg2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Reg2_TRAIN out=WORK.M3WWT8V0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WWT8V0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WWT8V0(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WWT8V0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WWT8V0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1C9S350 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TPQR9R(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   set WORK.M1C9S350;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_SUM_LABOR_FORCE_POP") creator = "Reg2";
MPRINT(EM_DIAGRAM):   when("R_SUM_LABOR_FORCE_POP") creator = "Reg2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg2";
MPRINT(EM_DIAGRAM):   when("SUM_LABOR_FORCE_POP") model = "Reg2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
163256     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
163257     set EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMINFO;
163258     where DATA='Reg2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
163259     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS2.REG2_EMINFO.
      WHERE (DATA='Reg2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

163260     data EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg2_EMINFO;
163261     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
163262     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
163263     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS2.REG2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
163267     run;
163268     data EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMINFO;
163269     set EMWS2.Reg2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMINFO WORK.MODELTEMP_INFO;
163270     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.REG2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.REG2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

163271     proc sort data = EMWS2.Reg2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Reg2_EMINFO NOTHREADS;
163272     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
163273     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.REG2_EMINFO.
NOTE: The data set EMWS2.REG2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

163274     proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
163275     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
163276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS2.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

163277     proc sort data = EMWS2.Reg2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Reg2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
163278     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
163279     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.REG2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

163280     data EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMINFO;
163281     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
163282     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
163283     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.REG2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

163284     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
163285     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
163286     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
163287     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS2.REG2_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      
NOTE: View EMWS2.REG2_TEST.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
