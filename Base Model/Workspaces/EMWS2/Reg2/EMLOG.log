*------------------------------------------------------------*
User:                student
Date:                December 04, 2019
Time:                13:49:09
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:05" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 04, 2019
Time:                13:49:05
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0DYHNM5 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0DYHNM5 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:05" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:05" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
69950      proc freq data=EMWS2.Reg2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Reg2_VariableSet noprint;
69951      table ROLE*LEVEL/out=WORK.Reg2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Reg2META;
69952      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_VARIABLESET.
NOTE: The data set WORK.REG2META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
69953      proc print data=WORK.Reg2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Reg2META label noobs;
69954      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
69955      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
69956      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
69957      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
69958      run;
 
NOTE: There were 2 observations read from the data set WORK.REG2META.
NOTE: The PROCEDURE PRINT printed page 19.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
69959      title10;
MPRINT(EM_DIAGRAM):   title10;
69960      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS2.Trans_TRAIN EMWS2.Trans_TRAIN
EMWS2.Trans_TRAIN EMWS2.Trans_TRAIN EMWS2 Trans_TRAIN
EMWS2.Trans_TRAIN EMWS2.Trans_TRAIN
EMWS2.Trans_TRAIN EMWS2.Trans_TRAIN EMWS2 Trans_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
"No decisions defined for target "Cases_in_1000s"."
69961      proc print data = EMWS2.Ids_Cases_in_1000s_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS2.Ids_Cases_in_1000s_DM noobs label;
69962      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
69963      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
69964      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
69965      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
69966      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
69967      run;
 
NOTE: There were 3 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 20.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
69968      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Preparing metadata for Training *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2NC4ES5;
MPRINT(EM_DIAGRAM):   set WORK.M2NC4ES5;
MPRINT(EM_DIAGRAM):   where use = 'Y' or (role = 'INPUT' and use = 'D') ;
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if use = 'D' then use = 'Y';
MPRINT(EM_DIAGRAM):   run;
NOTE: There were 3 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DD.
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
NOTE: There were 3 observations read from the data set EMWS2.IDS_CASES_IN_1000S_DD.
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
69978      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
69979      * Reg2: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Reg2: Create decision matrix;
69980      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69981      data WORK.Cases_in_1000s(label="Cases_in_1000s");
MPRINT(EM_DIAGRAM):   data WORK.Cases_in_1000s(label="Cases_in_1000s");
69982        length   Cases_in_1000s                       8
69983                 ;
MPRINT(EM_DIAGRAM):   length Cases_in_1000s 8 ;
69984
69985       Cases_in_1000s=0;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=0;
69986      output;
MPRINT(EM_DIAGRAM):   output;
69987       Cases_in_1000s=229;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=229;
69988      output;
MPRINT(EM_DIAGRAM):   output;
69989       Cases_in_1000s=114.5;
MPRINT(EM_DIAGRAM):   Cases_in_1000s=114.5;
69990      output;
MPRINT(EM_DIAGRAM):   output;
69991      ;
MPRINT(EM_DIAGRAM):   ;
69992      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.CASES_IN_1000S has 3 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
69993      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
69994      modify Cases_in_1000s(type=PROFIT label=Cases_in_1000s);
MPRINT(EM_DIAGRAM):   modify Cases_in_1000s(type=PROFIT label= Cases_in_1000s);
MPRINT(EM_DIAGRAM):   run;
69995      run;
 
NOTE: MODIFY was successful for WORK.CASES_IN_1000S.DATA.
69996      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
69997      data EM_DMREG / view=EM_DMREG;
MPRINT(EM_DIAGRAM):   data EM_DMREG / view=EM_DMREG;
69998      set EMWS2.Trans_TRAIN(keep=
69999      Age_group Cases_in_1000s Date Disease Gender OPT_Population_in_thousands);
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TRAIN(keep= Age_group Cases_in_1000s Date Disease Gender OPT_Population_in_thousands);
70000      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file WORK.EM_DMREG.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Reg2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70001      *------------------------------------------------------------* ;
70002      * Reg2: DMDBClass Macro ;
70003      *------------------------------------------------------------* ;
70004      %macro DMDBClass;
70005          Age_group(ASC) Date(ASC) Disease(ASC) Gender(ASC)
70006         OPT_Population_in_thousands(ASC)
70007      %mend DMDBClass;
70008      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70009      * Reg2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Reg2: DMDBVar Macro ;
70010      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
70011      %macro DMDBVar;
70012          Cases_in_1000s
70013      %mend DMDBVar;
70014      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70015      * Reg2: Create DMDB;
MPRINT(EM_DIAGRAM):   * Reg2: Create DMDB;
70016      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70017      proc dmdb batch data=WORK.EM_DMREG
70018      dmdbcat=WORK.Reg2_DMDB
70019      maxlevel = 513
70020      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_DMREG dmdbcat=WORK.Reg2_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
70021      class %DMDBClass;
MPRINT(DMDBCLASS):   Age_group(ASC) Date(ASC) Disease(ASC) Gender(ASC) OPT_Population_in_thousands(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
70022      var %DMDBVar;
MPRINT(DMDBVAR):   Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
70023      target
70024      Cases_in_1000s
70025      ;
MPRINT(EM_DIAGRAM):   target Cases_in_1000s ;
70026      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 378   Memory used = 511K.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: There were 378 observations read from the data set WORK.EM_DMREG.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
70027      quit;
70028      *--- end code ---*;
 
70029      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
70030      * Reg2: Run DMREG procedure;
MPRINT(EM_DIAGRAM):   * Reg2: Run DMREG procedure;
70031      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70032      proc dmreg data=EM_DMREG dmdbcat=WORK.Reg2_DMDB
70033      validata = EMWS2.Trans_VALIDATE
70034      outest = EMWS2.Reg2_EMESTIMATE
70035      outterms = EMWS2.Reg2_OUTTERMS
70036      outmap= EMWS2.Reg2_MAPDS namelen=200
70037      ;
MPRINT(EM_DIAGRAM):   proc dmreg data=EM_DMREG dmdbcat=WORK.Reg2_DMDB validata = EMWS2.Trans_VALIDATE outest = EMWS2.Reg2_EMESTIMATE outterms = EMWS2.Reg2_OUTTERMS outmap= EMWS2.Reg2_MAPDS namelen=200 ;
70038      class
70039      Age_group
70040      Date
70041      Disease
70042      Gender
70043      OPT_Population_in_thousands
70044      ;
MPRINT(EM_DIAGRAM):   class Age_group Date Disease Gender OPT_Population_in_thousands ;
70045      model Cases_in_1000s =
70046      Age_group
70047      Date
70048      Disease
70049      Gender
70050      OPT_Population_in_thousands
70051      /error=normal
70052      coding=DEVIATION
70053      nodesignprint
70054      ;
MPRINT(EM_DIAGRAM):   model Cases_in_1000s = Age_group Date Disease Gender OPT_Population_in_thousands /error=normal coding=DEVIATION nodesignprint ;
70055      ;
MPRINT(EM_DIAGRAM):   ;
70056      score data=EMWS2.Trans_TEST
70057      out=_null_
70058      outfit=EMWS2.Reg2_FITTEST
70059      role = TEST
70060      ;
MPRINT(EM_DIAGRAM):   score data=EMWS2.Trans_TEST out=_null_ outfit=EMWS2.Reg2_FITTEST role = TEST ;
70061      code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMPUBLISHSCORE.sas"
70062      group=Reg2
70063      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMPUBLISHSCORE.sas" group=Reg2 ;
70064      code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas"
70065      group=Reg2
70066      residual
70067      ;
MPRINT(EM_DIAGRAM):   code file="C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas" group=Reg2 residual ;
70068      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: 6 observations in the training data were not used due to missing values in the target or input variables or to invalid frequency values.
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMPUBLISHSCORE.sas opened.
NOTE: External file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas opened.
NOTE: There were 283 observations read from the data set EMWS2.PART_TEST.
NOTE: View EMWS2.TRANS_TEST.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
NOTE: There were 283 observations read from the data set EMWS2.IMPT_TEST.
NOTE: There were 284 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: View EMWS2.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.24 seconds
      cpu time            0.21 seconds
 
NOTE: There were 284 observations read from the data set EMWS2.IMPT_VALIDATE.
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: View WORK.EM_DMREG.VIEW used (Total process time):
      real time           0.35 seconds
      cpu time            0.34 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: There were 378 observations read from the data set WORK.EM_DMREG.
NOTE: There were 284 observations read from the data set EMWS2.TRANS_VALIDATE.
NOTE: There were 283 observations read from the data set EMWS2.TRANS_TEST.
NOTE: The data set EMWS2.REG2_EMESTIMATE has 3 observations and 65 variables.
NOTE: The data set EMWS2.REG2_OUTTERMS has 33 observations and 6 variables.
NOTE: The data set EMWS2.REG2_MAPDS has 2 observations and 34 variables.
NOTE: The data set EMWS2.REG2_FITTEST has 1 observations and 13 variables.
NOTE: The PROCEDURE DMREG printed page 21.
NOTE: PROCEDURE DMREG used (Total process time):
      real time           0.42 seconds
      cpu time            0.40 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
70069      quit;
 
70070      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
70071      delete Reg2_DMDB;
MPRINT(EM_DIAGRAM):   delete Reg2_DMDB;
70072      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file WORK.REG2_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
70073      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70074      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
70075      delete Reg2_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Reg2_DMDB / memtype=catalog;
70076      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.REG2_DMDB (memtype=CATALOG).
70077      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70078      data WORK.ESTIMATE;
MPRINT(EM_DIAGRAM):    data WORK.ESTIMATE;
70079      length _NAME_ $32;
MPRINT(EM_DIAGRAM):   length _NAME_ $32;
70080      set EMWS2.Reg2_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMESTIMATE;
70081      drop _AIC_--_VSUMW_
70082      ;
MPRINT(EM_DIAGRAM):   drop _AIC_--_VSUMW_ ;
70083      where _TYPE_ in('PARMS', 'T', 'P');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('PARMS', 'T', 'P');
70084      select(_TYPE_);
MPRINT(EM_DIAGRAM):   select(_TYPE_);
70085      when('PARMS') _NAME_='Coefficient';
MPRINT(EM_DIAGRAM):   when('PARMS') _NAME_='Coefficient';
70086      when('T') _NAME_='tValue';
MPRINT(EM_DIAGRAM):   when('T') _NAME_='tValue';
70087      when('P') _NAME_='PValue';
MPRINT(EM_DIAGRAM):   when('P') _NAME_='PValue';
70088      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
70089      end;
MPRINT(EM_DIAGRAM):   end;
70090      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.REG2_EMESTIMATE.
      WHERE _TYPE_ in ('P', 'PARMS', 'T');
NOTE: The data set WORK.ESTIMATE has 3 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70091      proc transpose data=WORK.ESTIMATE out=WORK.ESTIMATE(rename=(_NAME_=Effect));
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.ESTIMATE out=WORK.ESTIMATE(rename=(_NAME_=Effect));
70092      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.ESTIMATE.
NOTE: The data set WORK.ESTIMATE has 33 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
70093      proc transpose data=EMWS2.Reg2_MAPDS out=WORK.MAP(rename=(_NAME_=Effect INPUT=Variable
70094      ));
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS2.Reg2_MAPDS out=WORK.MAP(rename=(_NAME_=Effect INPUT=Variable ));
70095      var 'Age_group0N17'n--'OPT_Population_in_thousands03_34'n;
MPRINT(EM_DIAGRAM):   var 'Age_group0N17'n--'OPT_Population_in_thousands03_34'n;
70096      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS2.REG2_MAPDS.
NOTE: The data set WORK.MAP has 32 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
70097      proc sort data=WORK.MAP;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MAP;
70098      by Effect;
MPRINT(EM_DIAGRAM):   by Effect;
70099      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set WORK.MAP.
NOTE: The data set WORK.MAP has 32 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70100      proc sort data=WORK.ESTIMATE;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ESTIMATE;
70101      by Effect;
MPRINT(EM_DIAGRAM):   by Effect;
70102      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK.ESTIMATE.
NOTE: The data set WORK.ESTIMATE has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
70103      data EMWS2.Reg2_EFFECTS(rename=(_LABEL_=EffectLabel));
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EFFECTS(rename=(_LABEL_=EffectLabel));
70104      length Variable ClassLevel $32;
MPRINT(EM_DIAGRAM):   length Variable ClassLevel $32;
70105      merge WORK.ESTIMATE WORK.MAP;
MPRINT(EM_DIAGRAM):   merge WORK.ESTIMATE WORK.MAP;
70106      by Effect;
MPRINT(EM_DIAGRAM):   by Effect;
70107      label Effect = "%sysfunc(sasmsg(sashelp.dmine, rpt_effect_vlabel, NOQUOTE))" Variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" Sign = "%sysfunc(sasmsg(sashelp.dmine, rpt_sign_vlabel, NOQUOTE))" ClassLevel =
70108         "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))" Abscoefficient = "%sysfunc(sasmsg(sashelp.dmine, rpt_abscoefficient_vlabel, NOQUOTE))" Coefficient = "%sysfunc(sasmsg(sashelp.dmine, rpt_coefficient_vlabel, NOQUOTE))" _LABEL_ =
70109         "%sysfunc(sasmsg(sashelp.dmine, rpt_effectLabel_vlabel, NOQUOTE))" CODE = "%sysfunc(sasmsg(sashelp.dmine, rpt_scorecodevar_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Effect = "Effect" Variable = "Variable" Sign = "Sign" ClassLevel = "Level" Abscoefficient = "Absolute Coefficient" Coefficient = "Coefficient" _LABEL_ = "Effect Label" CODE = "Score Code Variable";
70110      label tvalue = "%sysfunc(sasmsg(sashelp.dmine, rpt_tvalue_vlabel,         NOQUOTE))" abstvalue = "%sysfunc(sasmsg(sashelp.dmine, rpt_absoluteTvalue_vlabel, NOQUOTE))" PValue = "%sysfunc(sasmsg(sashelp.dmine, rpt_pvalue_vlabel,         NOQUOTE))"
70110    ! ;
MPRINT(EM_DIAGRAM):   label tvalue = "T-value" abstvalue = "Absolute T-value" PValue = "P Value";
70111      abstvalue = abs(tValue);
MPRINT(EM_DIAGRAM):   abstvalue = abs(tValue);
70112      if index(Effect, 'Intercept') then do;
MPRINT(EM_DIAGRAM):   if index(Effect, 'Intercept') then do;
70113      variable = 'Intercept';
MPRINT(EM_DIAGRAM):   variable = 'Intercept';
70114      classLevel = scan(_LABEL_, 2, '=');
MPRINT(EM_DIAGRAM):   classLevel = scan(_LABEL_, 2, '=');
70115      end;
MPRINT(EM_DIAGRAM):   end;
70116      if ^indexc(variable, '*') then do;
MPRINT(EM_DIAGRAM):   if ^indexc(variable, '*') then do;
70117      if length(effect)>length(variable) then classlevel = substr(Effect, length(variable)+1);
MPRINT(EM_DIAGRAM):   if length(effect)>length(variable) then classlevel = substr(Effect, length(variable)+1);
70118      end;
MPRINT(EM_DIAGRAM):   end;
70119      if Effect eq '' then Effect = Variable;
MPRINT(EM_DIAGRAM):   if Effect eq '' then Effect = Variable;
70120      if coefficient < 0 then sign = '-';
MPRINT(EM_DIAGRAM):   if coefficient < 0 then sign = '-';
70121      else sign = '+';
MPRINT(EM_DIAGRAM):   else sign = '+';
70122      abscoefficient = abs(coefficient);
MPRINT(EM_DIAGRAM):   abscoefficient = abs(coefficient);
70123      if _LABEL_ = '' then _LABEL_ = Effect;
MPRINT(EM_DIAGRAM):   if _LABEL_ = '' then _LABEL_ = Effect;
70124      if coefficient ne . then output;
MPRINT(EM_DIAGRAM):   if coefficient ne . then output;
70125      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      1 at 70111:13   1 at 70122:18
NOTE: There were 33 observations read from the data set WORK.ESTIMATE.
NOTE: There were 32 observations read from the data set WORK.MAP.
NOTE: The data set EMWS2.REG2_EFFECTS has 32 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
70126      proc sort data =EMWS2.Reg2_EFFECTS;
MPRINT(EM_DIAGRAM):    proc sort data =EMWS2.Reg2_EFFECTS;
70127      by
70128      descending abstvalue;
MPRINT(EM_DIAGRAM):   by descending abstvalue;
70129      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS2.REG2_EFFECTS.
NOTE: The data set EMWS2.REG2_EFFECTS has 32 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
70130      data EMWS2.Reg2_EFFECTS;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EFFECTS;
70131      set EMWS2.Reg2_EFFECTS;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EFFECTS;
70132      format TEffectNum 3.;
MPRINT(EM_DIAGRAM):   format TEffectNum 3.;
70133      label TEffectNum = "%sysfunc(sasmsg(sashelp.dmine, rpt_teffectnum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label TEffectNum = "TScore Number";
70134      retain TEffectNum;
MPRINT(EM_DIAGRAM):   retain TEffectNum;
70135      TEffectNum = _N_;
MPRINT(EM_DIAGRAM):   TEffectNum = _N_;
70136      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS2.REG2_EFFECTS.
NOTE: The data set EMWS2.REG2_EFFECTS has 32 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
70137      proc sort data =EMWS2.Reg2_EFFECTS;
MPRINT(EM_DIAGRAM):    proc sort data =EMWS2.Reg2_EFFECTS;
70138      by
70139      descending absCoefficient;
MPRINT(EM_DIAGRAM):   by descending absCoefficient;
70140      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS2.REG2_EFFECTS.
NOTE: The data set EMWS2.REG2_EFFECTS has 32 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
70141      data EMWS2.Reg2_EFFECTS;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EFFECTS;
70142      set EMWS2.Reg2_EFFECTS;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EFFECTS;
70143      format EffectNum 3.;
MPRINT(EM_DIAGRAM):   format EffectNum 3.;
70144      label EffectNum = "%sysfunc(sasmsg(sashelp.dmine, rpt_effectnum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label EffectNum = "Effect Number";
70145      retain EffectNum;
MPRINT(EM_DIAGRAM):   retain EffectNum;
70146      EffectNum = _N_;
MPRINT(EM_DIAGRAM):   EffectNum = _N_;
70147      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 32 observations read from the data set EMWS2.REG2_EFFECTS.
NOTE: The data set EMWS2.REG2_EFFECTS has 32 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:06" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 04, 2019
Time:                13:49:06
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0W_BLW7 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0W_BLW7 new;
MPRINT(EM_DIAGRAM):   run;
70249      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70250      *------------------------------------------------------------*;
70251      * Reg2: Scoring DATA data;
70252      *------------------------------------------------------------*;
70253      data EMWS2.Reg2_TRAIN
70254      / view=EMWS2.Reg2_TRAIN
70255      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_TRAIN / view=EMWS2.Reg2_TRAIN ;
70256      set EMWS2.Trans_TRAIN
70257      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TRAIN ;
70258      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas.
70259     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
70260     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
70261     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
70262     +
70263     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
70264     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
70265     +
70266     +drop _Y;
MPRINT(EM_DIAGRAM):   drop _Y;
70267     +_Y = Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   _Y = Cases_in_1000s ;
70268     +
70269     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
70270     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
70271     +
70272     +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
70273     +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
70274     +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
70275     +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
70276     +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
70277     +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
70278     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70279     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70280     +end;
MPRINT(EM_DIAGRAM):   end;
70281     +else do;
MPRINT(EM_DIAGRAM):   else do;
70282     +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
70283     +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
70284     +   if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '18-24' then do;
70285     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
70286     +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
70287     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
70288     +   end;
MPRINT(EM_DIAGRAM):   end;
70289     +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
70290     +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
70291     +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
70292     +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
70293     +   end;
MPRINT(EM_DIAGRAM):   end;
70294     +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
70295     +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
70296     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
70297     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
70298     +   end;
MPRINT(EM_DIAGRAM):   end;
70299     +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
70300     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
70301     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
70302     +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
70303     +   end;
MPRINT(EM_DIAGRAM):   end;
70304     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70305     +      _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
70306     +      _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
70307     +      _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
70308     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70309     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70310     +   end;
MPRINT(EM_DIAGRAM):   end;
70311     +end;
MPRINT(EM_DIAGRAM):   end;
70312     +
70313     +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
70314     +drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 _1_13
70315     +         _1_14 _1_15 _1_16 _1_17 _1_18 _1_19 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 _1_13 _1_14 _1_15 _1_16 _1_17 _1_18 _1_19 ;
70316     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70317     +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
70318     +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
70319     +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
70320     +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
70321     +_1_4 = 0;
MPRINT(EM_DIAGRAM):   _1_4 = 0;
70322     +_1_5 = 0;
MPRINT(EM_DIAGRAM):   _1_5 = 0;
70323     +_1_6 = 0;
MPRINT(EM_DIAGRAM):   _1_6 = 0;
70324     +_1_7 = 0;
MPRINT(EM_DIAGRAM):   _1_7 = 0;
70325     +_1_8 = 0;
MPRINT(EM_DIAGRAM):   _1_8 = 0;
70326     +_1_9 = 0;
MPRINT(EM_DIAGRAM):   _1_9 = 0;
70327     +_1_10 = 0;
MPRINT(EM_DIAGRAM):   _1_10 = 0;
70328     +_1_11 = 0;
MPRINT(EM_DIAGRAM):   _1_11 = 0;
70329     +_1_12 = 0;
MPRINT(EM_DIAGRAM):   _1_12 = 0;
70330     +_1_13 = 0;
MPRINT(EM_DIAGRAM):   _1_13 = 0;
70331     +_1_14 = 0;
MPRINT(EM_DIAGRAM):   _1_14 = 0;
70332     +_1_15 = 0;
MPRINT(EM_DIAGRAM):   _1_15 = 0;
70333     +_1_16 = 0;
MPRINT(EM_DIAGRAM):   _1_16 = 0;
70334     +_1_17 = 0;
MPRINT(EM_DIAGRAM):   _1_17 = 0;
70335     +_1_18 = 0;
MPRINT(EM_DIAGRAM):   _1_18 = 0;
70336     +_1_19 = 0;
MPRINT(EM_DIAGRAM):   _1_19 = 0;
70337     +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
70338     +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
70339     +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
70340     +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
70341     +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
70342     +   _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
70343     +   _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
70344     +   _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
70345     +   _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
70346     +   _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
70347     +   _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
70348     +   _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
70349     +   _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
70350     +   _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
70351     +   _1_13 = .;
MPRINT(EM_DIAGRAM):   _1_13 = .;
70352     +   _1_14 = .;
MPRINT(EM_DIAGRAM):   _1_14 = .;
70353     +   _1_15 = .;
MPRINT(EM_DIAGRAM):   _1_15 = .;
70354     +   _1_16 = .;
MPRINT(EM_DIAGRAM):   _1_16 = .;
70355     +   _1_17 = .;
MPRINT(EM_DIAGRAM):   _1_17 = .;
70356     +   _1_18 = .;
MPRINT(EM_DIAGRAM):   _1_18 = .;
70357     +   _1_19 = .;
MPRINT(EM_DIAGRAM):   _1_19 = .;
70358     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70359     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70360     +end;
MPRINT(EM_DIAGRAM):   end;
70361     +else do;
MPRINT(EM_DIAGRAM):   else do;
70362     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
70363     +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
70364     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
70365     +   if _dm10 <= '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2000' then do;
70366     +      if _dm10 <= '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1995' then do;
70367     +         if _dm10 <= '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1992' then do;
70368     +            if _dm10 <= '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1991' then do;
70369     +               if _dm10 = '1990'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1990' then do;
70370     +                  _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
70371     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70372     +               end;
MPRINT(EM_DIAGRAM):   end;
70373     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70374     +                  if _dm10 = '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1991' then do;
70375     +                     _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
70376     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70377     +                  end;
MPRINT(EM_DIAGRAM):   end;
70378     +               end;
MPRINT(EM_DIAGRAM):   end;
70379     +            end;
MPRINT(EM_DIAGRAM):   end;
70380     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70381     +               if _dm10 = '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1992' then do;
70382     +                  _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
70383     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70384     +               end;
MPRINT(EM_DIAGRAM):   end;
70385     +            end;
MPRINT(EM_DIAGRAM):   end;
70386     +         end;
MPRINT(EM_DIAGRAM):   end;
70387     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70388     +            if _dm10 <= '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1994' then do;
70389     +               if _dm10 = '1993'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1993' then do;
70390     +                  _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
70391     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70392     +               end;
MPRINT(EM_DIAGRAM):   end;
70393     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70394     +                  if _dm10 = '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1994' then do;
70395     +                     _1_4 = 1;
MPRINT(EM_DIAGRAM):   _1_4 = 1;
70396     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70397     +                  end;
MPRINT(EM_DIAGRAM):   end;
70398     +               end;
MPRINT(EM_DIAGRAM):   end;
70399     +            end;
MPRINT(EM_DIAGRAM):   end;
70400     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70401     +               if _dm10 = '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1995' then do;
70402     +                  _1_5 = 1;
MPRINT(EM_DIAGRAM):   _1_5 = 1;
70403     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70404     +               end;
MPRINT(EM_DIAGRAM):   end;
70405     +            end;
MPRINT(EM_DIAGRAM):   end;
70406     +         end;
MPRINT(EM_DIAGRAM):   end;
70407     +      end;
MPRINT(EM_DIAGRAM):   end;
70408     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70409     +         if _dm10 <= '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1998' then do;
70410     +            if _dm10 <= '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1997' then do;
70411     +               if _dm10 = '1996'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1996' then do;
70412     +                  _1_6 = 1;
MPRINT(EM_DIAGRAM):   _1_6 = 1;
70413     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70414     +               end;
MPRINT(EM_DIAGRAM):   end;
70415     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70416     +                  if _dm10 = '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1997' then do;
70417     +                     _1_7 = 1;
MPRINT(EM_DIAGRAM):   _1_7 = 1;
70418     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70419     +                  end;
MPRINT(EM_DIAGRAM):   end;
70420     +               end;
MPRINT(EM_DIAGRAM):   end;
70421     +            end;
MPRINT(EM_DIAGRAM):   end;
70422     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70423     +               if _dm10 = '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1998' then do;
70424     +                  _1_8 = 1;
MPRINT(EM_DIAGRAM):   _1_8 = 1;
70425     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70426     +               end;
MPRINT(EM_DIAGRAM):   end;
70427     +            end;
MPRINT(EM_DIAGRAM):   end;
70428     +         end;
MPRINT(EM_DIAGRAM):   end;
70429     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70430     +            if _dm10 = '1999'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1999' then do;
70431     +               _1_9 = 1;
MPRINT(EM_DIAGRAM):   _1_9 = 1;
70432     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70433     +            end;
MPRINT(EM_DIAGRAM):   end;
70434     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70435     +               if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
70436     +                  _1_10 = 1;
MPRINT(EM_DIAGRAM):   _1_10 = 1;
70437     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70438     +               end;
MPRINT(EM_DIAGRAM):   end;
70439     +            end;
MPRINT(EM_DIAGRAM):   end;
70440     +         end;
MPRINT(EM_DIAGRAM):   end;
70441     +      end;
MPRINT(EM_DIAGRAM):   end;
70442     +   end;
MPRINT(EM_DIAGRAM):   end;
70443     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70444     +      if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
70445     +         if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
70446     +            if _dm10 <= '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2002' then do;
70447     +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
70448     +                  _1_11 = 1;
MPRINT(EM_DIAGRAM):   _1_11 = 1;
70449     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70450     +               end;
MPRINT(EM_DIAGRAM):   end;
70451     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70452     +                  if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
70453     +                     _1_12 = 1;
MPRINT(EM_DIAGRAM):   _1_12 = 1;
70454     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70455     +                  end;
MPRINT(EM_DIAGRAM):   end;
70456     +               end;
MPRINT(EM_DIAGRAM):   end;
70457     +            end;
MPRINT(EM_DIAGRAM):   end;
70458     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70459     +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
70460     +                  _1_13 = 1;
MPRINT(EM_DIAGRAM):   _1_13 = 1;
70461     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70462     +               end;
MPRINT(EM_DIAGRAM):   end;
70463     +            end;
MPRINT(EM_DIAGRAM):   end;
70464     +         end;
MPRINT(EM_DIAGRAM):   end;
70465     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70466     +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
70467     +               _1_14 = 1;
MPRINT(EM_DIAGRAM):   _1_14 = 1;
70468     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70469     +            end;
MPRINT(EM_DIAGRAM):   end;
70470     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70471     +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
70472     +                  _1_15 = 1;
MPRINT(EM_DIAGRAM):   _1_15 = 1;
70473     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70474     +               end;
MPRINT(EM_DIAGRAM):   end;
70475     +            end;
MPRINT(EM_DIAGRAM):   end;
70476     +         end;
MPRINT(EM_DIAGRAM):   end;
70477     +      end;
MPRINT(EM_DIAGRAM):   end;
70478     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70479     +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
70480     +            if _dm10 <= '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2007' then do;
70481     +               if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
70482     +                  _1_16 = 1;
MPRINT(EM_DIAGRAM):   _1_16 = 1;
70483     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70484     +               end;
MPRINT(EM_DIAGRAM):   end;
70485     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70486     +                  if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
70487     +                     _1_17 = 1;
MPRINT(EM_DIAGRAM):   _1_17 = 1;
70488     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70489     +                  end;
MPRINT(EM_DIAGRAM):   end;
70490     +               end;
MPRINT(EM_DIAGRAM):   end;
70491     +            end;
MPRINT(EM_DIAGRAM):   end;
70492     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70493     +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
70494     +                  _1_18 = 1;
MPRINT(EM_DIAGRAM):   _1_18 = 1;
70495     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70496     +               end;
MPRINT(EM_DIAGRAM):   end;
70497     +            end;
MPRINT(EM_DIAGRAM):   end;
70498     +         end;
MPRINT(EM_DIAGRAM):   end;
70499     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70500     +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
70501     +               _1_19 = 1;
MPRINT(EM_DIAGRAM):   _1_19 = 1;
70502     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70503     +            end;
MPRINT(EM_DIAGRAM):   end;
70504     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70505     +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
70506     +                  _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
70507     +                  _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
70508     +                  _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
70509     +                  _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
70510     +                  _1_4 = -1;
MPRINT(EM_DIAGRAM):   _1_4 = -1;
70511     +                  _1_5 = -1;
MPRINT(EM_DIAGRAM):   _1_5 = -1;
70512     +                  _1_6 = -1;
MPRINT(EM_DIAGRAM):   _1_6 = -1;
70513     +                  _1_7 = -1;
MPRINT(EM_DIAGRAM):   _1_7 = -1;
70514     +                  _1_8 = -1;
MPRINT(EM_DIAGRAM):   _1_8 = -1;
70515     +                  _1_9 = -1;
MPRINT(EM_DIAGRAM):   _1_9 = -1;
70516     +                  _1_10 = -1;
MPRINT(EM_DIAGRAM):   _1_10 = -1;
70517     +                  _1_11 = -1;
MPRINT(EM_DIAGRAM):   _1_11 = -1;
70518     +                  _1_12 = -1;
MPRINT(EM_DIAGRAM):   _1_12 = -1;
70519     +                  _1_13 = -1;
MPRINT(EM_DIAGRAM):   _1_13 = -1;
70520     +                  _1_14 = -1;
MPRINT(EM_DIAGRAM):   _1_14 = -1;
70521     +                  _1_15 = -1;
MPRINT(EM_DIAGRAM):   _1_15 = -1;
70522     +                  _1_16 = -1;
MPRINT(EM_DIAGRAM):   _1_16 = -1;
70523     +                  _1_17 = -1;
MPRINT(EM_DIAGRAM):   _1_17 = -1;
70524     +                  _1_18 = -1;
MPRINT(EM_DIAGRAM):   _1_18 = -1;
70525     +                  _1_19 = -1;
MPRINT(EM_DIAGRAM):   _1_19 = -1;
70526     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70527     +               end;
MPRINT(EM_DIAGRAM):   end;
70528     +            end;
MPRINT(EM_DIAGRAM):   end;
70529     +         end;
MPRINT(EM_DIAGRAM):   end;
70530     +      end;
MPRINT(EM_DIAGRAM):   end;
70531     +   end;
MPRINT(EM_DIAGRAM):   end;
70532     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
70533     +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
70534     +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
70535     +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
70536     +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
70537     +      _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
70538     +      _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
70539     +      _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
70540     +      _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
70541     +      _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
70542     +      _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
70543     +      _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
70544     +      _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
70545     +      _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
70546     +      _1_13 = .;
MPRINT(EM_DIAGRAM):   _1_13 = .;
70547     +      _1_14 = .;
MPRINT(EM_DIAGRAM):   _1_14 = .;
70548     +      _1_15 = .;
MPRINT(EM_DIAGRAM):   _1_15 = .;
70549     +      _1_16 = .;
MPRINT(EM_DIAGRAM):   _1_16 = .;
70550     +      _1_17 = .;
MPRINT(EM_DIAGRAM):   _1_17 = .;
70551     +      _1_18 = .;
MPRINT(EM_DIAGRAM):   _1_18 = .;
70552     +      _1_19 = .;
MPRINT(EM_DIAGRAM):   _1_19 = .;
70553     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70554     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70555     +   end;
MPRINT(EM_DIAGRAM):   end;
70556     +end;
MPRINT(EM_DIAGRAM):   end;
70557     +
70558     +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
70559     +drop _2_0 _2_1 _2_2 _2_3 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 _2_3 ;
70560     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70561     +_2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
70562     +_2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
70563     +_2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
70564     +_2_3 = 0;
MPRINT(EM_DIAGRAM):   _2_3 = 0;
70565     +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
70566     +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
70567     +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
70568     +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
70569     +   _2_3 = .;
MPRINT(EM_DIAGRAM):   _2_3 = .;
70570     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70571     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70572     +end;
MPRINT(EM_DIAGRAM):   end;
70573     +else do;
MPRINT(EM_DIAGRAM):   else do;
70574     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
70575     +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
70576     +   if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'ASTHMA' then do;
70577     +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
70578     +   end;
MPRINT(EM_DIAGRAM):   end;
70579     +   else if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
70580     +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
70581     +   end;
MPRINT(EM_DIAGRAM):   end;
70582     +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
70583     +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
70584     +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
70585     +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
70586     +      _2_3 = -1;
MPRINT(EM_DIAGRAM):   _2_3 = -1;
70587     +   end;
MPRINT(EM_DIAGRAM):   end;
70588     +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
70589     +      _2_3 = 1;
MPRINT(EM_DIAGRAM):   _2_3 = 1;
70590     +   end;
MPRINT(EM_DIAGRAM):   end;
70591     +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
70592     +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
70593     +   end;
MPRINT(EM_DIAGRAM):   end;
70594     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70595     +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
70596     +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
70597     +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
70598     +      _2_3 = .;
MPRINT(EM_DIAGRAM):   _2_3 = .;
70599     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70600     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70601     +   end;
MPRINT(EM_DIAGRAM):   end;
70602     +end;
MPRINT(EM_DIAGRAM):   end;
70603     +
70604     +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
70605     +drop _3_0 _3_1 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 ;
70606     +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
70607     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
70608     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
70609     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70610     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70611     +end;
MPRINT(EM_DIAGRAM):   end;
70612     +else do;
MPRINT(EM_DIAGRAM):   else do;
70613     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
70614     +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
70615     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70616     +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
70617     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
70618     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
70619     +   end;
MPRINT(EM_DIAGRAM):   end;
70620     +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
70621     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
70622     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
70623     +   end;
MPRINT(EM_DIAGRAM):   end;
70624     +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
70625     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
70626     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
70627     +   end;
MPRINT(EM_DIAGRAM):   end;
70628     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70629     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
70630     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
70631     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70632     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70633     +   end;
MPRINT(EM_DIAGRAM):   end;
70634     +end;
MPRINT(EM_DIAGRAM):   end;
70635     +
70636     +*** Generate dummy variables for OPT_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_Population_in_thousands ;
70637     +drop _4_0 _4_1 _4_2 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 ;
70638     +if missing( OPT_Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   if missing( OPT_Population_in_thousands ) then do;
70639     +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
70640     +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
70641     +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
70642     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70643     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70644     +end;
MPRINT(EM_DIAGRAM):   end;
70645     +else do;
MPRINT(EM_DIAGRAM):   else do;
70646     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
70647     +   %DMNORMCP( OPT_Population_in_thousands , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_Population_in_thousands,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
70648     +   if _dm32 = '02:8773.6505-34177.5, MISSING'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = '02:8773.6505-34177.5, MISSING' then do;
70649     +      _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
70650     +      _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
70651     +      _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
70652     +   end;
MPRINT(EM_DIAGRAM):   end;
70653     +   else if _dm32 = '01:LOW-8773.6505'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-8773.6505' then do;
70654     +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
70655     +      _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
70656     +      _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
70657     +   end;
MPRINT(EM_DIAGRAM):   end;
70658     +   else if _dm32 = '03:34177.5-72628.5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '03:34177.5-72628.5' then do;
70659     +      _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
70660     +      _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
70661     +      _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
70662     +   end;
MPRINT(EM_DIAGRAM):   end;
70663     +   else if _dm32 = '04:72628.5-HIGH'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '04:72628.5-HIGH' then do;
70664     +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
70665     +      _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
70666     +      _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
70667     +   end;
MPRINT(EM_DIAGRAM):   end;
70668     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70669     +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
70670     +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
70671     +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
70672     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70673     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70674     +   end;
MPRINT(EM_DIAGRAM):   end;
70675     +end;
MPRINT(EM_DIAGRAM):   end;
70676     +
70677     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
70678     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
70679     +   _LP0 =     22.4354838709677;
MPRINT(EM_DIAGRAM):   _LP0 = 22.4354838709677;
70680     +   goto REG2DR1;
MPRINT(EM_DIAGRAM):   goto REG2DR1;
70681     +end;
MPRINT(EM_DIAGRAM):   end;
70682     +
70683     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
70684     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
70685     +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
70686     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
70687     +
70688     +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
70689     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
70690     +_LP0 = _LP0 + (   -2.37601423285391) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.37601423285391) * _TEMP * _0_0;
70691     +_LP0 = _LP0 + (   -11.5032044757618) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.5032044757618) * _TEMP * _0_1;
70692     +_LP0 = _LP0 + (     13.880816803998) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.880816803998) * _TEMP * _0_2;
70693     +
70694     +***  Effect: Date ;
MPRINT(EM_DIAGRAM):   *** Effect: Date ;
70695     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
70696     +_LP0 = _LP0 + (    2.24616472990107) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.24616472990107) * _TEMP * _1_0;
70697     +_LP0 = _LP0 + (   -6.13240139877714) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.13240139877714) * _TEMP * _1_1;
70698     +_LP0 = _LP0 + (    7.32121895343001) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.32121895343001) * _TEMP * _1_2;
70699     +_LP0 = _LP0 + (    2.80827805772321) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.80827805772321) * _TEMP * _1_3;
70700     +_LP0 = _LP0 + (   -6.45892184894138) * _TEMP * _1_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.45892184894138) * _TEMP * _1_4;
70701     +_LP0 = _LP0 + (   -1.31556098880476) * _TEMP * _1_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.31556098880476) * _TEMP * _1_5;
70702     +_LP0 = _LP0 + (    3.46921127615725) * _TEMP * _1_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.46921127615725) * _TEMP * _1_6;
70703     +_LP0 = _LP0 + (    5.75111158015781) * _TEMP * _1_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.75111158015781) * _TEMP * _1_7;
70704     +_LP0 = _LP0 + (     -4.481076621042) * _TEMP * _1_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.481076621042) * _TEMP * _1_8;
70705     +_LP0 = _LP0 + (   -2.49533933059043) * _TEMP * _1_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.49533933059043) * _TEMP * _1_9;
70706     +_LP0 = _LP0 + (    1.76670264226018) * _TEMP * _1_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.76670264226018) * _TEMP * _1_10;
70707     +_LP0 = _LP0 + (    -1.8915906193288) * _TEMP * _1_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.8915906193288) * _TEMP * _1_11;
70708     +_LP0 = _LP0 + (   -4.14883233660799) * _TEMP * _1_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.14883233660799) * _TEMP * _1_12;
70709     +_LP0 = _LP0 + (    4.45384569915666) * _TEMP * _1_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.45384569915666) * _TEMP * _1_13;
70710     +_LP0 = _LP0 + (    10.4880723112567) * _TEMP * _1_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.4880723112567) * _TEMP * _1_14;
70711     +_LP0 = _LP0 + (   -2.42979223787572) * _TEMP * _1_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.42979223787572) * _TEMP * _1_15;
70712     +_LP0 = _LP0 + (    1.29114412200599) * _TEMP * _1_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.29114412200599) * _TEMP * _1_16;
70713     +_LP0 = _LP0 + (    2.55351200783408) * _TEMP * _1_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.55351200783408) * _TEMP * _1_17;
70714     +_LP0 = _LP0 + (   -5.10991692425811) * _TEMP * _1_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -5.10991692425811) * _TEMP * _1_18;
70715     +_LP0 = _LP0 + (    5.64231982967194) * _TEMP * _1_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.64231982967194) * _TEMP * _1_19;
70716     +
70717     +***  Effect: Disease ;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
70718     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
70719     +_LP0 = _LP0 + (    23.8144456058887) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.8144456058887) * _TEMP * _2_0;
70720     +_LP0 = _LP0 + (    6.17241906776287) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6.17241906776287) * _TEMP * _2_1;
70721     +_LP0 = _LP0 + (   -13.7078634471084) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.7078634471084) * _TEMP * _2_2;
70722     +_LP0 = _LP0 + (   -13.9913005416553) * _TEMP * _2_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.9913005416553) * _TEMP * _2_3;
70723     +
70724     +***  Effect: Gender ;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
70725     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
70726     +_LP0 = _LP0 + (    9.05872441749821) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.05872441749821) * _TEMP * _3_0;
70727     +_LP0 = _LP0 + (   -3.23831856399694) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23831856399694) * _TEMP * _3_1;
70728     +
70729     +***  Effect: OPT_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_Population_in_thousands ;
70730     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
70731     +_LP0 = _LP0 + (   -1.19074151505959) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.19074151505959) * _TEMP * _4_0;
70732     +_LP0 = _LP0 + (   -16.0522869236569) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -16.0522869236569) * _TEMP * _4_1;
70733     +_LP0 = _LP0 + (                   0) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0) * _TEMP * _4_2;
70734     +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
70735     +_LP0 = _LP0 + (    29.6164686515964);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 29.6164686515964);
70736     +
70737     +REG2DR1:
70738     +
70739     +*** Predicted Value, Error, and Residual;
MPRINT(EM_DIAGRAM):   REG2DR1: *** Predicted Value, Error, and Residual;
70740     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
70741     +P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
70742     +
70743     +drop _R;
MPRINT(EM_DIAGRAM):   drop _R;
70744     +if _Y = . then do;
MPRINT(EM_DIAGRAM):   if _Y = . then do;
70745     +   R_Cases_in_1000s = .;
MPRINT(EM_DIAGRAM):   R_Cases_in_1000s = .;
70746     +end;
MPRINT(EM_DIAGRAM):   end;
70747     +else do;
MPRINT(EM_DIAGRAM):   else do;
70748     +   _R = _Y - _LP0;
MPRINT(EM_DIAGRAM):   _R = _Y - _LP0;
70749     +    label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
70750     +   R_Cases_in_1000s = _R;
MPRINT(EM_DIAGRAM):   R_Cases_in_1000s = _R;
70751     +end;
MPRINT(EM_DIAGRAM):   end;
70752     +
70753     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
70754     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
70755     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
70756      run;
 
NOTE: DATA STEP view saved on file EMWS2.REG2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
70757      quit;
70758      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
70759      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70760      *------------------------------------------------------------*;
70761      * Reg2: Scoring VALIDATE data;
70762      *------------------------------------------------------------*;
70763      data EMWS2.Reg2_VALIDATE
70764      / view=EMWS2.Reg2_VALIDATE
70765      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_VALIDATE / view=EMWS2.Reg2_VALIDATE ;
70766      set EMWS2.Trans_VALIDATE
70767      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_VALIDATE ;
70768      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas.
70769     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
70770     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
70771     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
70772     +
70773     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
70774     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
70775     +
70776     +drop _Y;
MPRINT(EM_DIAGRAM):   drop _Y;
70777     +_Y = Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   _Y = Cases_in_1000s ;
70778     +
70779     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
70780     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
70781     +
70782     +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
70783     +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
70784     +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
70785     +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
70786     +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
70787     +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
70788     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70789     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70790     +end;
MPRINT(EM_DIAGRAM):   end;
70791     +else do;
MPRINT(EM_DIAGRAM):   else do;
70792     +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
70793     +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
70794     +   if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '18-24' then do;
70795     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
70796     +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
70797     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
70798     +   end;
MPRINT(EM_DIAGRAM):   end;
70799     +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
70800     +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
70801     +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
70802     +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
70803     +   end;
MPRINT(EM_DIAGRAM):   end;
70804     +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
70805     +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
70806     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
70807     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
70808     +   end;
MPRINT(EM_DIAGRAM):   end;
70809     +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
70810     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
70811     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
70812     +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
70813     +   end;
MPRINT(EM_DIAGRAM):   end;
70814     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70815     +      _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
70816     +      _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
70817     +      _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
70818     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70819     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70820     +   end;
MPRINT(EM_DIAGRAM):   end;
70821     +end;
MPRINT(EM_DIAGRAM):   end;
70822     +
70823     +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
70824     +drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 _1_13
70825     +         _1_14 _1_15 _1_16 _1_17 _1_18 _1_19 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 _1_13 _1_14 _1_15 _1_16 _1_17 _1_18 _1_19 ;
70826     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70827     +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
70828     +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
70829     +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
70830     +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
70831     +_1_4 = 0;
MPRINT(EM_DIAGRAM):   _1_4 = 0;
70832     +_1_5 = 0;
MPRINT(EM_DIAGRAM):   _1_5 = 0;
70833     +_1_6 = 0;
MPRINT(EM_DIAGRAM):   _1_6 = 0;
70834     +_1_7 = 0;
MPRINT(EM_DIAGRAM):   _1_7 = 0;
70835     +_1_8 = 0;
MPRINT(EM_DIAGRAM):   _1_8 = 0;
70836     +_1_9 = 0;
MPRINT(EM_DIAGRAM):   _1_9 = 0;
70837     +_1_10 = 0;
MPRINT(EM_DIAGRAM):   _1_10 = 0;
70838     +_1_11 = 0;
MPRINT(EM_DIAGRAM):   _1_11 = 0;
70839     +_1_12 = 0;
MPRINT(EM_DIAGRAM):   _1_12 = 0;
70840     +_1_13 = 0;
MPRINT(EM_DIAGRAM):   _1_13 = 0;
70841     +_1_14 = 0;
MPRINT(EM_DIAGRAM):   _1_14 = 0;
70842     +_1_15 = 0;
MPRINT(EM_DIAGRAM):   _1_15 = 0;
70843     +_1_16 = 0;
MPRINT(EM_DIAGRAM):   _1_16 = 0;
70844     +_1_17 = 0;
MPRINT(EM_DIAGRAM):   _1_17 = 0;
70845     +_1_18 = 0;
MPRINT(EM_DIAGRAM):   _1_18 = 0;
70846     +_1_19 = 0;
MPRINT(EM_DIAGRAM):   _1_19 = 0;
70847     +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
70848     +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
70849     +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
70850     +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
70851     +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
70852     +   _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
70853     +   _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
70854     +   _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
70855     +   _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
70856     +   _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
70857     +   _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
70858     +   _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
70859     +   _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
70860     +   _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
70861     +   _1_13 = .;
MPRINT(EM_DIAGRAM):   _1_13 = .;
70862     +   _1_14 = .;
MPRINT(EM_DIAGRAM):   _1_14 = .;
70863     +   _1_15 = .;
MPRINT(EM_DIAGRAM):   _1_15 = .;
70864     +   _1_16 = .;
MPRINT(EM_DIAGRAM):   _1_16 = .;
70865     +   _1_17 = .;
MPRINT(EM_DIAGRAM):   _1_17 = .;
70866     +   _1_18 = .;
MPRINT(EM_DIAGRAM):   _1_18 = .;
70867     +   _1_19 = .;
MPRINT(EM_DIAGRAM):   _1_19 = .;
70868     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70869     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70870     +end;
MPRINT(EM_DIAGRAM):   end;
70871     +else do;
MPRINT(EM_DIAGRAM):   else do;
70872     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
70873     +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
70874     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
70875     +   if _dm10 <= '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2000' then do;
70876     +      if _dm10 <= '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1995' then do;
70877     +         if _dm10 <= '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1992' then do;
70878     +            if _dm10 <= '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1991' then do;
70879     +               if _dm10 = '1990'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1990' then do;
70880     +                  _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
70881     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70882     +               end;
MPRINT(EM_DIAGRAM):   end;
70883     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70884     +                  if _dm10 = '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1991' then do;
70885     +                     _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
70886     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70887     +                  end;
MPRINT(EM_DIAGRAM):   end;
70888     +               end;
MPRINT(EM_DIAGRAM):   end;
70889     +            end;
MPRINT(EM_DIAGRAM):   end;
70890     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70891     +               if _dm10 = '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1992' then do;
70892     +                  _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
70893     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70894     +               end;
MPRINT(EM_DIAGRAM):   end;
70895     +            end;
MPRINT(EM_DIAGRAM):   end;
70896     +         end;
MPRINT(EM_DIAGRAM):   end;
70897     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70898     +            if _dm10 <= '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1994' then do;
70899     +               if _dm10 = '1993'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1993' then do;
70900     +                  _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
70901     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70902     +               end;
MPRINT(EM_DIAGRAM):   end;
70903     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70904     +                  if _dm10 = '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1994' then do;
70905     +                     _1_4 = 1;
MPRINT(EM_DIAGRAM):   _1_4 = 1;
70906     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70907     +                  end;
MPRINT(EM_DIAGRAM):   end;
70908     +               end;
MPRINT(EM_DIAGRAM):   end;
70909     +            end;
MPRINT(EM_DIAGRAM):   end;
70910     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70911     +               if _dm10 = '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1995' then do;
70912     +                  _1_5 = 1;
MPRINT(EM_DIAGRAM):   _1_5 = 1;
70913     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70914     +               end;
MPRINT(EM_DIAGRAM):   end;
70915     +            end;
MPRINT(EM_DIAGRAM):   end;
70916     +         end;
MPRINT(EM_DIAGRAM):   end;
70917     +      end;
MPRINT(EM_DIAGRAM):   end;
70918     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70919     +         if _dm10 <= '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1998' then do;
70920     +            if _dm10 <= '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1997' then do;
70921     +               if _dm10 = '1996'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1996' then do;
70922     +                  _1_6 = 1;
MPRINT(EM_DIAGRAM):   _1_6 = 1;
70923     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70924     +               end;
MPRINT(EM_DIAGRAM):   end;
70925     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70926     +                  if _dm10 = '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1997' then do;
70927     +                     _1_7 = 1;
MPRINT(EM_DIAGRAM):   _1_7 = 1;
70928     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70929     +                  end;
MPRINT(EM_DIAGRAM):   end;
70930     +               end;
MPRINT(EM_DIAGRAM):   end;
70931     +            end;
MPRINT(EM_DIAGRAM):   end;
70932     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70933     +               if _dm10 = '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1998' then do;
70934     +                  _1_8 = 1;
MPRINT(EM_DIAGRAM):   _1_8 = 1;
70935     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70936     +               end;
MPRINT(EM_DIAGRAM):   end;
70937     +            end;
MPRINT(EM_DIAGRAM):   end;
70938     +         end;
MPRINT(EM_DIAGRAM):   end;
70939     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70940     +            if _dm10 = '1999'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1999' then do;
70941     +               _1_9 = 1;
MPRINT(EM_DIAGRAM):   _1_9 = 1;
70942     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70943     +            end;
MPRINT(EM_DIAGRAM):   end;
70944     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70945     +               if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
70946     +                  _1_10 = 1;
MPRINT(EM_DIAGRAM):   _1_10 = 1;
70947     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70948     +               end;
MPRINT(EM_DIAGRAM):   end;
70949     +            end;
MPRINT(EM_DIAGRAM):   end;
70950     +         end;
MPRINT(EM_DIAGRAM):   end;
70951     +      end;
MPRINT(EM_DIAGRAM):   end;
70952     +   end;
MPRINT(EM_DIAGRAM):   end;
70953     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70954     +      if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
70955     +         if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
70956     +            if _dm10 <= '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2002' then do;
70957     +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
70958     +                  _1_11 = 1;
MPRINT(EM_DIAGRAM):   _1_11 = 1;
70959     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70960     +               end;
MPRINT(EM_DIAGRAM):   end;
70961     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70962     +                  if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
70963     +                     _1_12 = 1;
MPRINT(EM_DIAGRAM):   _1_12 = 1;
70964     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70965     +                  end;
MPRINT(EM_DIAGRAM):   end;
70966     +               end;
MPRINT(EM_DIAGRAM):   end;
70967     +            end;
MPRINT(EM_DIAGRAM):   end;
70968     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70969     +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
70970     +                  _1_13 = 1;
MPRINT(EM_DIAGRAM):   _1_13 = 1;
70971     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70972     +               end;
MPRINT(EM_DIAGRAM):   end;
70973     +            end;
MPRINT(EM_DIAGRAM):   end;
70974     +         end;
MPRINT(EM_DIAGRAM):   end;
70975     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70976     +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
70977     +               _1_14 = 1;
MPRINT(EM_DIAGRAM):   _1_14 = 1;
70978     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70979     +            end;
MPRINT(EM_DIAGRAM):   end;
70980     +            else do;
MPRINT(EM_DIAGRAM):   else do;
70981     +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
70982     +                  _1_15 = 1;
MPRINT(EM_DIAGRAM):   _1_15 = 1;
70983     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70984     +               end;
MPRINT(EM_DIAGRAM):   end;
70985     +            end;
MPRINT(EM_DIAGRAM):   end;
70986     +         end;
MPRINT(EM_DIAGRAM):   end;
70987     +      end;
MPRINT(EM_DIAGRAM):   end;
70988     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70989     +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
70990     +            if _dm10 <= '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2007' then do;
70991     +               if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
70992     +                  _1_16 = 1;
MPRINT(EM_DIAGRAM):   _1_16 = 1;
70993     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70994     +               end;
MPRINT(EM_DIAGRAM):   end;
70995     +               else do;
MPRINT(EM_DIAGRAM):   else do;
70996     +                  if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
70997     +                     _1_17 = 1;
MPRINT(EM_DIAGRAM):   _1_17 = 1;
70998     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70999     +                  end;
MPRINT(EM_DIAGRAM):   end;
71000     +               end;
MPRINT(EM_DIAGRAM):   end;
71001     +            end;
MPRINT(EM_DIAGRAM):   end;
71002     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71003     +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
71004     +                  _1_18 = 1;
MPRINT(EM_DIAGRAM):   _1_18 = 1;
71005     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71006     +               end;
MPRINT(EM_DIAGRAM):   end;
71007     +            end;
MPRINT(EM_DIAGRAM):   end;
71008     +         end;
MPRINT(EM_DIAGRAM):   end;
71009     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71010     +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
71011     +               _1_19 = 1;
MPRINT(EM_DIAGRAM):   _1_19 = 1;
71012     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71013     +            end;
MPRINT(EM_DIAGRAM):   end;
71014     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71015     +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
71016     +                  _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
71017     +                  _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
71018     +                  _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
71019     +                  _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
71020     +                  _1_4 = -1;
MPRINT(EM_DIAGRAM):   _1_4 = -1;
71021     +                  _1_5 = -1;
MPRINT(EM_DIAGRAM):   _1_5 = -1;
71022     +                  _1_6 = -1;
MPRINT(EM_DIAGRAM):   _1_6 = -1;
71023     +                  _1_7 = -1;
MPRINT(EM_DIAGRAM):   _1_7 = -1;
71024     +                  _1_8 = -1;
MPRINT(EM_DIAGRAM):   _1_8 = -1;
71025     +                  _1_9 = -1;
MPRINT(EM_DIAGRAM):   _1_9 = -1;
71026     +                  _1_10 = -1;
MPRINT(EM_DIAGRAM):   _1_10 = -1;
71027     +                  _1_11 = -1;
MPRINT(EM_DIAGRAM):   _1_11 = -1;
71028     +                  _1_12 = -1;
MPRINT(EM_DIAGRAM):   _1_12 = -1;
71029     +                  _1_13 = -1;
MPRINT(EM_DIAGRAM):   _1_13 = -1;
71030     +                  _1_14 = -1;
MPRINT(EM_DIAGRAM):   _1_14 = -1;
71031     +                  _1_15 = -1;
MPRINT(EM_DIAGRAM):   _1_15 = -1;
71032     +                  _1_16 = -1;
MPRINT(EM_DIAGRAM):   _1_16 = -1;
71033     +                  _1_17 = -1;
MPRINT(EM_DIAGRAM):   _1_17 = -1;
71034     +                  _1_18 = -1;
MPRINT(EM_DIAGRAM):   _1_18 = -1;
71035     +                  _1_19 = -1;
MPRINT(EM_DIAGRAM):   _1_19 = -1;
71036     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71037     +               end;
MPRINT(EM_DIAGRAM):   end;
71038     +            end;
MPRINT(EM_DIAGRAM):   end;
71039     +         end;
MPRINT(EM_DIAGRAM):   end;
71040     +      end;
MPRINT(EM_DIAGRAM):   end;
71041     +   end;
MPRINT(EM_DIAGRAM):   end;
71042     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
71043     +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
71044     +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
71045     +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
71046     +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
71047     +      _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
71048     +      _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
71049     +      _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
71050     +      _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
71051     +      _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
71052     +      _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
71053     +      _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
71054     +      _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
71055     +      _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
71056     +      _1_13 = .;
MPRINT(EM_DIAGRAM):   _1_13 = .;
71057     +      _1_14 = .;
MPRINT(EM_DIAGRAM):   _1_14 = .;
71058     +      _1_15 = .;
MPRINT(EM_DIAGRAM):   _1_15 = .;
71059     +      _1_16 = .;
MPRINT(EM_DIAGRAM):   _1_16 = .;
71060     +      _1_17 = .;
MPRINT(EM_DIAGRAM):   _1_17 = .;
71061     +      _1_18 = .;
MPRINT(EM_DIAGRAM):   _1_18 = .;
71062     +      _1_19 = .;
MPRINT(EM_DIAGRAM):   _1_19 = .;
71063     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71064     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71065     +   end;
MPRINT(EM_DIAGRAM):   end;
71066     +end;
MPRINT(EM_DIAGRAM):   end;
71067     +
71068     +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
71069     +drop _2_0 _2_1 _2_2 _2_3 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 _2_3 ;
71070     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71071     +_2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
71072     +_2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
71073     +_2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
71074     +_2_3 = 0;
MPRINT(EM_DIAGRAM):   _2_3 = 0;
71075     +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
71076     +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
71077     +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
71078     +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
71079     +   _2_3 = .;
MPRINT(EM_DIAGRAM):   _2_3 = .;
71080     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71081     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71082     +end;
MPRINT(EM_DIAGRAM):   end;
71083     +else do;
MPRINT(EM_DIAGRAM):   else do;
71084     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
71085     +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
71086     +   if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'ASTHMA' then do;
71087     +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
71088     +   end;
MPRINT(EM_DIAGRAM):   end;
71089     +   else if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
71090     +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
71091     +   end;
MPRINT(EM_DIAGRAM):   end;
71092     +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
71093     +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
71094     +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
71095     +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
71096     +      _2_3 = -1;
MPRINT(EM_DIAGRAM):   _2_3 = -1;
71097     +   end;
MPRINT(EM_DIAGRAM):   end;
71098     +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
71099     +      _2_3 = 1;
MPRINT(EM_DIAGRAM):   _2_3 = 1;
71100     +   end;
MPRINT(EM_DIAGRAM):   end;
71101     +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
71102     +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
71103     +   end;
MPRINT(EM_DIAGRAM):   end;
71104     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71105     +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
71106     +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
71107     +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
71108     +      _2_3 = .;
MPRINT(EM_DIAGRAM):   _2_3 = .;
71109     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71110     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71111     +   end;
MPRINT(EM_DIAGRAM):   end;
71112     +end;
MPRINT(EM_DIAGRAM):   end;
71113     +
71114     +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
71115     +drop _3_0 _3_1 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 ;
71116     +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
71117     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
71118     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
71119     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71120     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71121     +end;
MPRINT(EM_DIAGRAM):   end;
71122     +else do;
MPRINT(EM_DIAGRAM):   else do;
71123     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
71124     +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
71125     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71126     +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
71127     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
71128     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
71129     +   end;
MPRINT(EM_DIAGRAM):   end;
71130     +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
71131     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
71132     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
71133     +   end;
MPRINT(EM_DIAGRAM):   end;
71134     +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
71135     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
71136     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
71137     +   end;
MPRINT(EM_DIAGRAM):   end;
71138     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71139     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
71140     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
71141     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71142     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71143     +   end;
MPRINT(EM_DIAGRAM):   end;
71144     +end;
MPRINT(EM_DIAGRAM):   end;
71145     +
71146     +*** Generate dummy variables for OPT_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_Population_in_thousands ;
71147     +drop _4_0 _4_1 _4_2 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 ;
71148     +if missing( OPT_Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   if missing( OPT_Population_in_thousands ) then do;
71149     +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
71150     +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
71151     +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
71152     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71153     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71154     +end;
MPRINT(EM_DIAGRAM):   end;
71155     +else do;
MPRINT(EM_DIAGRAM):   else do;
71156     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
71157     +   %DMNORMCP( OPT_Population_in_thousands , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_Population_in_thousands,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
71158     +   if _dm32 = '02:8773.6505-34177.5, MISSING'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = '02:8773.6505-34177.5, MISSING' then do;
71159     +      _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
71160     +      _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
71161     +      _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
71162     +   end;
MPRINT(EM_DIAGRAM):   end;
71163     +   else if _dm32 = '01:LOW-8773.6505'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-8773.6505' then do;
71164     +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
71165     +      _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
71166     +      _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
71167     +   end;
MPRINT(EM_DIAGRAM):   end;
71168     +   else if _dm32 = '03:34177.5-72628.5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '03:34177.5-72628.5' then do;
71169     +      _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
71170     +      _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
71171     +      _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
71172     +   end;
MPRINT(EM_DIAGRAM):   end;
71173     +   else if _dm32 = '04:72628.5-HIGH'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '04:72628.5-HIGH' then do;
71174     +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
71175     +      _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
71176     +      _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
71177     +   end;
MPRINT(EM_DIAGRAM):   end;
71178     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71179     +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
71180     +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
71181     +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
71182     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71183     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71184     +   end;
MPRINT(EM_DIAGRAM):   end;
71185     +end;
MPRINT(EM_DIAGRAM):   end;
71186     +
71187     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
71188     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
71189     +   _LP0 =     22.4354838709677;
MPRINT(EM_DIAGRAM):   _LP0 = 22.4354838709677;
71190     +   goto REG2DR1;
MPRINT(EM_DIAGRAM):   goto REG2DR1;
71191     +end;
MPRINT(EM_DIAGRAM):   end;
71192     +
71193     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
71194     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
71195     +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
71196     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
71197     +
71198     +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
71199     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71200     +_LP0 = _LP0 + (   -2.37601423285391) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.37601423285391) * _TEMP * _0_0;
71201     +_LP0 = _LP0 + (   -11.5032044757618) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.5032044757618) * _TEMP * _0_1;
71202     +_LP0 = _LP0 + (     13.880816803998) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.880816803998) * _TEMP * _0_2;
71203     +
71204     +***  Effect: Date ;
MPRINT(EM_DIAGRAM):   *** Effect: Date ;
71205     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71206     +_LP0 = _LP0 + (    2.24616472990107) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.24616472990107) * _TEMP * _1_0;
71207     +_LP0 = _LP0 + (   -6.13240139877714) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.13240139877714) * _TEMP * _1_1;
71208     +_LP0 = _LP0 + (    7.32121895343001) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.32121895343001) * _TEMP * _1_2;
71209     +_LP0 = _LP0 + (    2.80827805772321) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.80827805772321) * _TEMP * _1_3;
71210     +_LP0 = _LP0 + (   -6.45892184894138) * _TEMP * _1_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.45892184894138) * _TEMP * _1_4;
71211     +_LP0 = _LP0 + (   -1.31556098880476) * _TEMP * _1_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.31556098880476) * _TEMP * _1_5;
71212     +_LP0 = _LP0 + (    3.46921127615725) * _TEMP * _1_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.46921127615725) * _TEMP * _1_6;
71213     +_LP0 = _LP0 + (    5.75111158015781) * _TEMP * _1_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.75111158015781) * _TEMP * _1_7;
71214     +_LP0 = _LP0 + (     -4.481076621042) * _TEMP * _1_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.481076621042) * _TEMP * _1_8;
71215     +_LP0 = _LP0 + (   -2.49533933059043) * _TEMP * _1_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.49533933059043) * _TEMP * _1_9;
71216     +_LP0 = _LP0 + (    1.76670264226018) * _TEMP * _1_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.76670264226018) * _TEMP * _1_10;
71217     +_LP0 = _LP0 + (    -1.8915906193288) * _TEMP * _1_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.8915906193288) * _TEMP * _1_11;
71218     +_LP0 = _LP0 + (   -4.14883233660799) * _TEMP * _1_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.14883233660799) * _TEMP * _1_12;
71219     +_LP0 = _LP0 + (    4.45384569915666) * _TEMP * _1_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.45384569915666) * _TEMP * _1_13;
71220     +_LP0 = _LP0 + (    10.4880723112567) * _TEMP * _1_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.4880723112567) * _TEMP * _1_14;
71221     +_LP0 = _LP0 + (   -2.42979223787572) * _TEMP * _1_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.42979223787572) * _TEMP * _1_15;
71222     +_LP0 = _LP0 + (    1.29114412200599) * _TEMP * _1_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.29114412200599) * _TEMP * _1_16;
71223     +_LP0 = _LP0 + (    2.55351200783408) * _TEMP * _1_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.55351200783408) * _TEMP * _1_17;
71224     +_LP0 = _LP0 + (   -5.10991692425811) * _TEMP * _1_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -5.10991692425811) * _TEMP * _1_18;
71225     +_LP0 = _LP0 + (    5.64231982967194) * _TEMP * _1_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.64231982967194) * _TEMP * _1_19;
71226     +
71227     +***  Effect: Disease ;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
71228     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71229     +_LP0 = _LP0 + (    23.8144456058887) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.8144456058887) * _TEMP * _2_0;
71230     +_LP0 = _LP0 + (    6.17241906776287) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6.17241906776287) * _TEMP * _2_1;
71231     +_LP0 = _LP0 + (   -13.7078634471084) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.7078634471084) * _TEMP * _2_2;
71232     +_LP0 = _LP0 + (   -13.9913005416553) * _TEMP * _2_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.9913005416553) * _TEMP * _2_3;
71233     +
71234     +***  Effect: Gender ;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
71235     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71236     +_LP0 = _LP0 + (    9.05872441749821) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.05872441749821) * _TEMP * _3_0;
71237     +_LP0 = _LP0 + (   -3.23831856399694) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23831856399694) * _TEMP * _3_1;
71238     +
71239     +***  Effect: OPT_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_Population_in_thousands ;
71240     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71241     +_LP0 = _LP0 + (   -1.19074151505959) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.19074151505959) * _TEMP * _4_0;
71242     +_LP0 = _LP0 + (   -16.0522869236569) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -16.0522869236569) * _TEMP * _4_1;
71243     +_LP0 = _LP0 + (                   0) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0) * _TEMP * _4_2;
71244     +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
71245     +_LP0 = _LP0 + (    29.6164686515964);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 29.6164686515964);
71246     +
71247     +REG2DR1:
71248     +
71249     +*** Predicted Value, Error, and Residual;
MPRINT(EM_DIAGRAM):   REG2DR1: *** Predicted Value, Error, and Residual;
71250     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
71251     +P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
71252     +
71253     +drop _R;
MPRINT(EM_DIAGRAM):   drop _R;
71254     +if _Y = . then do;
MPRINT(EM_DIAGRAM):   if _Y = . then do;
71255     +   R_Cases_in_1000s = .;
MPRINT(EM_DIAGRAM):   R_Cases_in_1000s = .;
71256     +end;
MPRINT(EM_DIAGRAM):   end;
71257     +else do;
MPRINT(EM_DIAGRAM):   else do;
71258     +   _R = _Y - _LP0;
MPRINT(EM_DIAGRAM):   _R = _Y - _LP0;
71259     +    label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
71260     +   R_Cases_in_1000s = _R;
MPRINT(EM_DIAGRAM):   R_Cases_in_1000s = _R;
71261     +end;
MPRINT(EM_DIAGRAM):   end;
71262     +
71263     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
71264     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
71265     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71266      run;
 
NOTE: DATA STEP view saved on file EMWS2.REG2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
71267      quit;
71268      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
71269      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71270      *------------------------------------------------------------*;
71271      * Reg2: Scoring TEST data;
71272      *------------------------------------------------------------*;
71273      data EMWS2.Reg2_TEST
71274      / view=EMWS2.Reg2_TEST
71275      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_TEST / view=EMWS2.Reg2_TEST ;
71276      set EMWS2.Trans_TEST
71277      ;
MPRINT(EM_DIAGRAM):   set EMWS2.Trans_TEST ;
71278      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMFLOWSCORE.sas.
71279     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
71280     +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
71281     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
71282     +
71283     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
71284     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
71285     +
71286     +drop _Y;
MPRINT(EM_DIAGRAM):   drop _Y;
71287     +_Y = Cases_in_1000s ;
MPRINT(EM_DIAGRAM):   _Y = Cases_in_1000s ;
71288     +
71289     +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
71290     +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
71291     +
71292     +*** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
71293     +drop _0_0 _0_1 _0_2 ;
MPRINT(EM_DIAGRAM):   drop _0_0 _0_1 _0_2 ;
71294     +if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
71295     +   _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
71296     +   _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
71297     +   _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
71298     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71299     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71300     +end;
MPRINT(EM_DIAGRAM):   end;
71301     +else do;
MPRINT(EM_DIAGRAM):   else do;
71302     +   length _dm19 $ 19; drop _dm19 ;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
71303     +   %DMNORMCP( Age_group , _dm19 )
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
71304     +   if _dm19 = '18-24'  then do;
MPRINT(EM_DIAGRAM):   if _dm19 = '18-24' then do;
71305     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
71306     +      _0_1 = 1;
MPRINT(EM_DIAGRAM):   _0_1 = 1;
71307     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
71308     +   end;
MPRINT(EM_DIAGRAM):   end;
71309     +   else if _dm19 = '85+'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
71310     +      _0_0 = -1;
MPRINT(EM_DIAGRAM):   _0_0 = -1;
71311     +      _0_1 = -1;
MPRINT(EM_DIAGRAM):   _0_1 = -1;
71312     +      _0_2 = -1;
MPRINT(EM_DIAGRAM):   _0_2 = -1;
71313     +   end;
MPRINT(EM_DIAGRAM):   end;
71314     +   else if _dm19 = '0-17'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '0-17' then do;
71315     +      _0_0 = 1;
MPRINT(EM_DIAGRAM):   _0_0 = 1;
71316     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
71317     +      _0_2 = 0;
MPRINT(EM_DIAGRAM):   _0_2 = 0;
71318     +   end;
MPRINT(EM_DIAGRAM):   end;
71319     +   else if _dm19 = '25-44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
71320     +      _0_0 = 0;
MPRINT(EM_DIAGRAM):   _0_0 = 0;
71321     +      _0_1 = 0;
MPRINT(EM_DIAGRAM):   _0_1 = 0;
71322     +      _0_2 = 1;
MPRINT(EM_DIAGRAM):   _0_2 = 1;
71323     +   end;
MPRINT(EM_DIAGRAM):   end;
71324     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71325     +      _0_0 = .;
MPRINT(EM_DIAGRAM):   _0_0 = .;
71326     +      _0_1 = .;
MPRINT(EM_DIAGRAM):   _0_1 = .;
71327     +      _0_2 = .;
MPRINT(EM_DIAGRAM):   _0_2 = .;
71328     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71329     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71330     +   end;
MPRINT(EM_DIAGRAM):   end;
71331     +end;
MPRINT(EM_DIAGRAM):   end;
71332     +
71333     +*** Generate dummy variables for Date ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Date ;
71334     +drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 _1_13
71335     +         _1_14 _1_15 _1_16 _1_17 _1_18 _1_19 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 _1_2 _1_3 _1_4 _1_5 _1_6 _1_7 _1_8 _1_9 _1_10 _1_11 _1_12 _1_13 _1_14 _1_15 _1_16 _1_17 _1_18 _1_19 ;
71336     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71337     +_1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
71338     +_1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
71339     +_1_2 = 0;
MPRINT(EM_DIAGRAM):   _1_2 = 0;
71340     +_1_3 = 0;
MPRINT(EM_DIAGRAM):   _1_3 = 0;
71341     +_1_4 = 0;
MPRINT(EM_DIAGRAM):   _1_4 = 0;
71342     +_1_5 = 0;
MPRINT(EM_DIAGRAM):   _1_5 = 0;
71343     +_1_6 = 0;
MPRINT(EM_DIAGRAM):   _1_6 = 0;
71344     +_1_7 = 0;
MPRINT(EM_DIAGRAM):   _1_7 = 0;
71345     +_1_8 = 0;
MPRINT(EM_DIAGRAM):   _1_8 = 0;
71346     +_1_9 = 0;
MPRINT(EM_DIAGRAM):   _1_9 = 0;
71347     +_1_10 = 0;
MPRINT(EM_DIAGRAM):   _1_10 = 0;
71348     +_1_11 = 0;
MPRINT(EM_DIAGRAM):   _1_11 = 0;
71349     +_1_12 = 0;
MPRINT(EM_DIAGRAM):   _1_12 = 0;
71350     +_1_13 = 0;
MPRINT(EM_DIAGRAM):   _1_13 = 0;
71351     +_1_14 = 0;
MPRINT(EM_DIAGRAM):   _1_14 = 0;
71352     +_1_15 = 0;
MPRINT(EM_DIAGRAM):   _1_15 = 0;
71353     +_1_16 = 0;
MPRINT(EM_DIAGRAM):   _1_16 = 0;
71354     +_1_17 = 0;
MPRINT(EM_DIAGRAM):   _1_17 = 0;
71355     +_1_18 = 0;
MPRINT(EM_DIAGRAM):   _1_18 = 0;
71356     +_1_19 = 0;
MPRINT(EM_DIAGRAM):   _1_19 = 0;
71357     +if missing( Date ) then do;
MPRINT(EM_DIAGRAM):   if missing( Date ) then do;
71358     +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
71359     +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
71360     +   _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
71361     +   _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
71362     +   _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
71363     +   _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
71364     +   _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
71365     +   _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
71366     +   _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
71367     +   _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
71368     +   _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
71369     +   _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
71370     +   _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
71371     +   _1_13 = .;
MPRINT(EM_DIAGRAM):   _1_13 = .;
71372     +   _1_14 = .;
MPRINT(EM_DIAGRAM):   _1_14 = .;
71373     +   _1_15 = .;
MPRINT(EM_DIAGRAM):   _1_15 = .;
71374     +   _1_16 = .;
MPRINT(EM_DIAGRAM):   _1_16 = .;
71375     +   _1_17 = .;
MPRINT(EM_DIAGRAM):   _1_17 = .;
71376     +   _1_18 = .;
MPRINT(EM_DIAGRAM):   _1_18 = .;
71377     +   _1_19 = .;
MPRINT(EM_DIAGRAM):   _1_19 = .;
71378     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71379     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71380     +end;
MPRINT(EM_DIAGRAM):   end;
71381     +else do;
MPRINT(EM_DIAGRAM):   else do;
71382     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
71383     +   %DMNORMCP( Date , _dm10 )
MPRINT(DMNORMCP):   _dm10=dmnorm(Date,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
71384     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
71385     +   if _dm10 <= '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2000' then do;
71386     +      if _dm10 <= '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1995' then do;
71387     +         if _dm10 <= '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1992' then do;
71388     +            if _dm10 <= '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1991' then do;
71389     +               if _dm10 = '1990'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1990' then do;
71390     +                  _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
71391     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71392     +               end;
MPRINT(EM_DIAGRAM):   end;
71393     +               else do;
MPRINT(EM_DIAGRAM):   else do;
71394     +                  if _dm10 = '1991'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1991' then do;
71395     +                     _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
71396     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71397     +                  end;
MPRINT(EM_DIAGRAM):   end;
71398     +               end;
MPRINT(EM_DIAGRAM):   end;
71399     +            end;
MPRINT(EM_DIAGRAM):   end;
71400     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71401     +               if _dm10 = '1992'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1992' then do;
71402     +                  _1_2 = 1;
MPRINT(EM_DIAGRAM):   _1_2 = 1;
71403     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71404     +               end;
MPRINT(EM_DIAGRAM):   end;
71405     +            end;
MPRINT(EM_DIAGRAM):   end;
71406     +         end;
MPRINT(EM_DIAGRAM):   end;
71407     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71408     +            if _dm10 <= '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1994' then do;
71409     +               if _dm10 = '1993'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1993' then do;
71410     +                  _1_3 = 1;
MPRINT(EM_DIAGRAM):   _1_3 = 1;
71411     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71412     +               end;
MPRINT(EM_DIAGRAM):   end;
71413     +               else do;
MPRINT(EM_DIAGRAM):   else do;
71414     +                  if _dm10 = '1994'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1994' then do;
71415     +                     _1_4 = 1;
MPRINT(EM_DIAGRAM):   _1_4 = 1;
71416     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71417     +                  end;
MPRINT(EM_DIAGRAM):   end;
71418     +               end;
MPRINT(EM_DIAGRAM):   end;
71419     +            end;
MPRINT(EM_DIAGRAM):   end;
71420     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71421     +               if _dm10 = '1995'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1995' then do;
71422     +                  _1_5 = 1;
MPRINT(EM_DIAGRAM):   _1_5 = 1;
71423     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71424     +               end;
MPRINT(EM_DIAGRAM):   end;
71425     +            end;
MPRINT(EM_DIAGRAM):   end;
71426     +         end;
MPRINT(EM_DIAGRAM):   end;
71427     +      end;
MPRINT(EM_DIAGRAM):   end;
71428     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71429     +         if _dm10 <= '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1998' then do;
71430     +            if _dm10 <= '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '1997' then do;
71431     +               if _dm10 = '1996'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1996' then do;
71432     +                  _1_6 = 1;
MPRINT(EM_DIAGRAM):   _1_6 = 1;
71433     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71434     +               end;
MPRINT(EM_DIAGRAM):   end;
71435     +               else do;
MPRINT(EM_DIAGRAM):   else do;
71436     +                  if _dm10 = '1997'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1997' then do;
71437     +                     _1_7 = 1;
MPRINT(EM_DIAGRAM):   _1_7 = 1;
71438     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71439     +                  end;
MPRINT(EM_DIAGRAM):   end;
71440     +               end;
MPRINT(EM_DIAGRAM):   end;
71441     +            end;
MPRINT(EM_DIAGRAM):   end;
71442     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71443     +               if _dm10 = '1998'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1998' then do;
71444     +                  _1_8 = 1;
MPRINT(EM_DIAGRAM):   _1_8 = 1;
71445     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71446     +               end;
MPRINT(EM_DIAGRAM):   end;
71447     +            end;
MPRINT(EM_DIAGRAM):   end;
71448     +         end;
MPRINT(EM_DIAGRAM):   end;
71449     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71450     +            if _dm10 = '1999'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '1999' then do;
71451     +               _1_9 = 1;
MPRINT(EM_DIAGRAM):   _1_9 = 1;
71452     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71453     +            end;
MPRINT(EM_DIAGRAM):   end;
71454     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71455     +               if _dm10 = '2000'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2000' then do;
71456     +                  _1_10 = 1;
MPRINT(EM_DIAGRAM):   _1_10 = 1;
71457     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71458     +               end;
MPRINT(EM_DIAGRAM):   end;
71459     +            end;
MPRINT(EM_DIAGRAM):   end;
71460     +         end;
MPRINT(EM_DIAGRAM):   end;
71461     +      end;
MPRINT(EM_DIAGRAM):   end;
71462     +   end;
MPRINT(EM_DIAGRAM):   end;
71463     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71464     +      if _dm10 <= '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2005' then do;
71465     +         if _dm10 <= '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2003' then do;
71466     +            if _dm10 <= '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2002' then do;
71467     +               if _dm10 = '2001'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2001' then do;
71468     +                  _1_11 = 1;
MPRINT(EM_DIAGRAM):   _1_11 = 1;
71469     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71470     +               end;
MPRINT(EM_DIAGRAM):   end;
71471     +               else do;
MPRINT(EM_DIAGRAM):   else do;
71472     +                  if _dm10 = '2002'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2002' then do;
71473     +                     _1_12 = 1;
MPRINT(EM_DIAGRAM):   _1_12 = 1;
71474     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71475     +                  end;
MPRINT(EM_DIAGRAM):   end;
71476     +               end;
MPRINT(EM_DIAGRAM):   end;
71477     +            end;
MPRINT(EM_DIAGRAM):   end;
71478     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71479     +               if _dm10 = '2003'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2003' then do;
71480     +                  _1_13 = 1;
MPRINT(EM_DIAGRAM):   _1_13 = 1;
71481     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71482     +               end;
MPRINT(EM_DIAGRAM):   end;
71483     +            end;
MPRINT(EM_DIAGRAM):   end;
71484     +         end;
MPRINT(EM_DIAGRAM):   end;
71485     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71486     +            if _dm10 = '2004'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2004' then do;
71487     +               _1_14 = 1;
MPRINT(EM_DIAGRAM):   _1_14 = 1;
71488     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71489     +            end;
MPRINT(EM_DIAGRAM):   end;
71490     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71491     +               if _dm10 = '2005'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2005' then do;
71492     +                  _1_15 = 1;
MPRINT(EM_DIAGRAM):   _1_15 = 1;
71493     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71494     +               end;
MPRINT(EM_DIAGRAM):   end;
71495     +            end;
MPRINT(EM_DIAGRAM):   end;
71496     +         end;
MPRINT(EM_DIAGRAM):   end;
71497     +      end;
MPRINT(EM_DIAGRAM):   end;
71498     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71499     +         if _dm10 <= '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2008' then do;
71500     +            if _dm10 <= '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 <= '2007' then do;
71501     +               if _dm10 = '2006'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2006' then do;
71502     +                  _1_16 = 1;
MPRINT(EM_DIAGRAM):   _1_16 = 1;
71503     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71504     +               end;
MPRINT(EM_DIAGRAM):   end;
71505     +               else do;
MPRINT(EM_DIAGRAM):   else do;
71506     +                  if _dm10 = '2007'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2007' then do;
71507     +                     _1_17 = 1;
MPRINT(EM_DIAGRAM):   _1_17 = 1;
71508     +                     _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71509     +                  end;
MPRINT(EM_DIAGRAM):   end;
71510     +               end;
MPRINT(EM_DIAGRAM):   end;
71511     +            end;
MPRINT(EM_DIAGRAM):   end;
71512     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71513     +               if _dm10 = '2008'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2008' then do;
71514     +                  _1_18 = 1;
MPRINT(EM_DIAGRAM):   _1_18 = 1;
71515     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71516     +               end;
MPRINT(EM_DIAGRAM):   end;
71517     +            end;
MPRINT(EM_DIAGRAM):   end;
71518     +         end;
MPRINT(EM_DIAGRAM):   end;
71519     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71520     +            if _dm10 = '2009'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2009' then do;
71521     +               _1_19 = 1;
MPRINT(EM_DIAGRAM):   _1_19 = 1;
71522     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71523     +            end;
MPRINT(EM_DIAGRAM):   end;
71524     +            else do;
MPRINT(EM_DIAGRAM):   else do;
71525     +               if _dm10 = '2010'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = '2010' then do;
71526     +                  _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
71527     +                  _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
71528     +                  _1_2 = -1;
MPRINT(EM_DIAGRAM):   _1_2 = -1;
71529     +                  _1_3 = -1;
MPRINT(EM_DIAGRAM):   _1_3 = -1;
71530     +                  _1_4 = -1;
MPRINT(EM_DIAGRAM):   _1_4 = -1;
71531     +                  _1_5 = -1;
MPRINT(EM_DIAGRAM):   _1_5 = -1;
71532     +                  _1_6 = -1;
MPRINT(EM_DIAGRAM):   _1_6 = -1;
71533     +                  _1_7 = -1;
MPRINT(EM_DIAGRAM):   _1_7 = -1;
71534     +                  _1_8 = -1;
MPRINT(EM_DIAGRAM):   _1_8 = -1;
71535     +                  _1_9 = -1;
MPRINT(EM_DIAGRAM):   _1_9 = -1;
71536     +                  _1_10 = -1;
MPRINT(EM_DIAGRAM):   _1_10 = -1;
71537     +                  _1_11 = -1;
MPRINT(EM_DIAGRAM):   _1_11 = -1;
71538     +                  _1_12 = -1;
MPRINT(EM_DIAGRAM):   _1_12 = -1;
71539     +                  _1_13 = -1;
MPRINT(EM_DIAGRAM):   _1_13 = -1;
71540     +                  _1_14 = -1;
MPRINT(EM_DIAGRAM):   _1_14 = -1;
71541     +                  _1_15 = -1;
MPRINT(EM_DIAGRAM):   _1_15 = -1;
71542     +                  _1_16 = -1;
MPRINT(EM_DIAGRAM):   _1_16 = -1;
71543     +                  _1_17 = -1;
MPRINT(EM_DIAGRAM):   _1_17 = -1;
71544     +                  _1_18 = -1;
MPRINT(EM_DIAGRAM):   _1_18 = -1;
71545     +                  _1_19 = -1;
MPRINT(EM_DIAGRAM):   _1_19 = -1;
71546     +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71547     +               end;
MPRINT(EM_DIAGRAM):   end;
71548     +            end;
MPRINT(EM_DIAGRAM):   end;
71549     +         end;
MPRINT(EM_DIAGRAM):   end;
71550     +      end;
MPRINT(EM_DIAGRAM):   end;
71551     +   end;
MPRINT(EM_DIAGRAM):   end;
71552     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
71553     +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
71554     +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
71555     +      _1_2 = .;
MPRINT(EM_DIAGRAM):   _1_2 = .;
71556     +      _1_3 = .;
MPRINT(EM_DIAGRAM):   _1_3 = .;
71557     +      _1_4 = .;
MPRINT(EM_DIAGRAM):   _1_4 = .;
71558     +      _1_5 = .;
MPRINT(EM_DIAGRAM):   _1_5 = .;
71559     +      _1_6 = .;
MPRINT(EM_DIAGRAM):   _1_6 = .;
71560     +      _1_7 = .;
MPRINT(EM_DIAGRAM):   _1_7 = .;
71561     +      _1_8 = .;
MPRINT(EM_DIAGRAM):   _1_8 = .;
71562     +      _1_9 = .;
MPRINT(EM_DIAGRAM):   _1_9 = .;
71563     +      _1_10 = .;
MPRINT(EM_DIAGRAM):   _1_10 = .;
71564     +      _1_11 = .;
MPRINT(EM_DIAGRAM):   _1_11 = .;
71565     +      _1_12 = .;
MPRINT(EM_DIAGRAM):   _1_12 = .;
71566     +      _1_13 = .;
MPRINT(EM_DIAGRAM):   _1_13 = .;
71567     +      _1_14 = .;
MPRINT(EM_DIAGRAM):   _1_14 = .;
71568     +      _1_15 = .;
MPRINT(EM_DIAGRAM):   _1_15 = .;
71569     +      _1_16 = .;
MPRINT(EM_DIAGRAM):   _1_16 = .;
71570     +      _1_17 = .;
MPRINT(EM_DIAGRAM):   _1_17 = .;
71571     +      _1_18 = .;
MPRINT(EM_DIAGRAM):   _1_18 = .;
71572     +      _1_19 = .;
MPRINT(EM_DIAGRAM):   _1_19 = .;
71573     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71574     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71575     +   end;
MPRINT(EM_DIAGRAM):   end;
71576     +end;
MPRINT(EM_DIAGRAM):   end;
71577     +
71578     +*** Generate dummy variables for Disease ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Disease ;
71579     +drop _2_0 _2_1 _2_2 _2_3 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 _2_3 ;
71580     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71581     +_2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
71582     +_2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
71583     +_2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
71584     +_2_3 = 0;
MPRINT(EM_DIAGRAM):   _2_3 = 0;
71585     +if missing( Disease ) then do;
MPRINT(EM_DIAGRAM):   if missing( Disease ) then do;
71586     +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
71587     +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
71588     +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
71589     +   _2_3 = .;
MPRINT(EM_DIAGRAM):   _2_3 = .;
71590     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71591     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71592     +end;
MPRINT(EM_DIAGRAM):   end;
71593     +else do;
MPRINT(EM_DIAGRAM):   else do;
71594     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
71595     +   %DMNORMCP( Disease , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(Disease,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
71596     +   if _dm32 = 'ASTHMA'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = 'ASTHMA' then do;
71597     +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
71598     +   end;
MPRINT(EM_DIAGRAM):   end;
71599     +   else if _dm32 = 'CANCER, ALL'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'CANCER, ALL' then do;
71600     +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
71601     +   end;
MPRINT(EM_DIAGRAM):   end;
71602     +   else if _dm32 = 'SEPTICEMIA'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'SEPTICEMIA' then do;
71603     +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
71604     +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
71605     +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
71606     +      _2_3 = -1;
MPRINT(EM_DIAGRAM):   _2_3 = -1;
71607     +   end;
MPRINT(EM_DIAGRAM):   end;
71608     +   else if _dm32 = 'OSTEOARTHRITIS'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'OSTEOARTHRITIS' then do;
71609     +      _2_3 = 1;
MPRINT(EM_DIAGRAM):   _2_3 = 1;
71610     +   end;
MPRINT(EM_DIAGRAM):   end;
71611     +   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = 'DEMENTIA AND ALZHEIMER''S DISEASE' then do;
71612     +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
71613     +   end;
MPRINT(EM_DIAGRAM):   end;
71614     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71615     +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
71616     +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
71617     +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
71618     +      _2_3 = .;
MPRINT(EM_DIAGRAM):   _2_3 = .;
71619     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71620     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71621     +   end;
MPRINT(EM_DIAGRAM):   end;
71622     +end;
MPRINT(EM_DIAGRAM):   end;
71623     +
71624     +*** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
71625     +drop _3_0 _3_1 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 ;
71626     +if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
71627     +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
71628     +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
71629     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71630     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71631     +end;
MPRINT(EM_DIAGRAM):   end;
71632     +else do;
MPRINT(EM_DIAGRAM):   else do;
71633     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
71634     +   _dm10 = put( Gender , $CHAR10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Gender , $CHAR10. );
71635     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71636     +   if _dm10 = 'ALL'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'ALL' then do;
71637     +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
71638     +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
71639     +   end;
MPRINT(EM_DIAGRAM):   end;
71640     +   else if _dm10 = 'MALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MALE' then do;
71641     +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
71642     +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
71643     +   end;
MPRINT(EM_DIAGRAM):   end;
71644     +   else if _dm10 = 'FEMALE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'FEMALE' then do;
71645     +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
71646     +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
71647     +   end;
MPRINT(EM_DIAGRAM):   end;
71648     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71649     +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
71650     +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
71651     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71652     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71653     +   end;
MPRINT(EM_DIAGRAM):   end;
71654     +end;
MPRINT(EM_DIAGRAM):   end;
71655     +
71656     +*** Generate dummy variables for OPT_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for OPT_Population_in_thousands ;
71657     +drop _4_0 _4_1 _4_2 ;
MPRINT(EM_DIAGRAM):   drop _4_0 _4_1 _4_2 ;
71658     +if missing( OPT_Population_in_thousands ) then do;
MPRINT(EM_DIAGRAM):   if missing( OPT_Population_in_thousands ) then do;
71659     +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
71660     +   _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
71661     +   _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
71662     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71663     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71664     +end;
MPRINT(EM_DIAGRAM):   end;
71665     +else do;
MPRINT(EM_DIAGRAM):   else do;
71666     +   length _dm32 $ 32; drop _dm32 ;
MPRINT(EM_DIAGRAM):   length _dm32 $ 32;
MPRINT(EM_DIAGRAM):   drop _dm32 ;
71667     +   %DMNORMCP( OPT_Population_in_thousands , _dm32 )
MPRINT(DMNORMCP):   _dm32=dmnorm(OPT_Population_in_thousands,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
71668     +   if _dm32 = '02:8773.6505-34177.5, MISSING'  then do;
MPRINT(EM_DIAGRAM):   if _dm32 = '02:8773.6505-34177.5, MISSING' then do;
71669     +      _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
71670     +      _4_1 = 1;
MPRINT(EM_DIAGRAM):   _4_1 = 1;
71671     +      _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
71672     +   end;
MPRINT(EM_DIAGRAM):   end;
71673     +   else if _dm32 = '01:LOW-8773.6505'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '01:LOW-8773.6505' then do;
71674     +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
71675     +      _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
71676     +      _4_2 = 0;
MPRINT(EM_DIAGRAM):   _4_2 = 0;
71677     +   end;
MPRINT(EM_DIAGRAM):   end;
71678     +   else if _dm32 = '03:34177.5-72628.5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '03:34177.5-72628.5' then do;
71679     +      _4_0 = 0;
MPRINT(EM_DIAGRAM):   _4_0 = 0;
71680     +      _4_1 = 0;
MPRINT(EM_DIAGRAM):   _4_1 = 0;
71681     +      _4_2 = 1;
MPRINT(EM_DIAGRAM):   _4_2 = 1;
71682     +   end;
MPRINT(EM_DIAGRAM):   end;
71683     +   else if _dm32 = '04:72628.5-HIGH'  then do;
MPRINT(EM_DIAGRAM):   else if _dm32 = '04:72628.5-HIGH' then do;
71684     +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
71685     +      _4_1 = -1;
MPRINT(EM_DIAGRAM):   _4_1 = -1;
71686     +      _4_2 = -1;
MPRINT(EM_DIAGRAM):   _4_2 = -1;
71687     +   end;
MPRINT(EM_DIAGRAM):   end;
71688     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71689     +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
71690     +      _4_1 = .;
MPRINT(EM_DIAGRAM):   _4_1 = .;
71691     +      _4_2 = .;
MPRINT(EM_DIAGRAM):   _4_2 = .;
71692     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71693     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71694     +   end;
MPRINT(EM_DIAGRAM):   end;
71695     +end;
MPRINT(EM_DIAGRAM):   end;
71696     +
71697     +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
71698     +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
71699     +   _LP0 =     22.4354838709677;
MPRINT(EM_DIAGRAM):   _LP0 = 22.4354838709677;
71700     +   goto REG2DR1;
MPRINT(EM_DIAGRAM):   goto REG2DR1;
71701     +end;
MPRINT(EM_DIAGRAM):   end;
71702     +
71703     +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
71704     +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
71705     +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
71706     +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
71707     +
71708     +***  Effect: Age_group ;
MPRINT(EM_DIAGRAM):   *** Effect: Age_group ;
71709     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71710     +_LP0 = _LP0 + (   -2.37601423285391) * _TEMP * _0_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.37601423285391) * _TEMP * _0_0;
71711     +_LP0 = _LP0 + (   -11.5032044757618) * _TEMP * _0_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -11.5032044757618) * _TEMP * _0_1;
71712     +_LP0 = _LP0 + (     13.880816803998) * _TEMP * _0_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 13.880816803998) * _TEMP * _0_2;
71713     +
71714     +***  Effect: Date ;
MPRINT(EM_DIAGRAM):   *** Effect: Date ;
71715     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71716     +_LP0 = _LP0 + (    2.24616472990107) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.24616472990107) * _TEMP * _1_0;
71717     +_LP0 = _LP0 + (   -6.13240139877714) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.13240139877714) * _TEMP * _1_1;
71718     +_LP0 = _LP0 + (    7.32121895343001) * _TEMP * _1_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 7.32121895343001) * _TEMP * _1_2;
71719     +_LP0 = _LP0 + (    2.80827805772321) * _TEMP * _1_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.80827805772321) * _TEMP * _1_3;
71720     +_LP0 = _LP0 + (   -6.45892184894138) * _TEMP * _1_4;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -6.45892184894138) * _TEMP * _1_4;
71721     +_LP0 = _LP0 + (   -1.31556098880476) * _TEMP * _1_5;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.31556098880476) * _TEMP * _1_5;
71722     +_LP0 = _LP0 + (    3.46921127615725) * _TEMP * _1_6;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 3.46921127615725) * _TEMP * _1_6;
71723     +_LP0 = _LP0 + (    5.75111158015781) * _TEMP * _1_7;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.75111158015781) * _TEMP * _1_7;
71724     +_LP0 = _LP0 + (     -4.481076621042) * _TEMP * _1_8;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.481076621042) * _TEMP * _1_8;
71725     +_LP0 = _LP0 + (   -2.49533933059043) * _TEMP * _1_9;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.49533933059043) * _TEMP * _1_9;
71726     +_LP0 = _LP0 + (    1.76670264226018) * _TEMP * _1_10;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.76670264226018) * _TEMP * _1_10;
71727     +_LP0 = _LP0 + (    -1.8915906193288) * _TEMP * _1_11;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.8915906193288) * _TEMP * _1_11;
71728     +_LP0 = _LP0 + (   -4.14883233660799) * _TEMP * _1_12;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -4.14883233660799) * _TEMP * _1_12;
71729     +_LP0 = _LP0 + (    4.45384569915666) * _TEMP * _1_13;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 4.45384569915666) * _TEMP * _1_13;
71730     +_LP0 = _LP0 + (    10.4880723112567) * _TEMP * _1_14;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 10.4880723112567) * _TEMP * _1_14;
71731     +_LP0 = _LP0 + (   -2.42979223787572) * _TEMP * _1_15;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.42979223787572) * _TEMP * _1_15;
71732     +_LP0 = _LP0 + (    1.29114412200599) * _TEMP * _1_16;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.29114412200599) * _TEMP * _1_16;
71733     +_LP0 = _LP0 + (    2.55351200783408) * _TEMP * _1_17;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.55351200783408) * _TEMP * _1_17;
71734     +_LP0 = _LP0 + (   -5.10991692425811) * _TEMP * _1_18;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -5.10991692425811) * _TEMP * _1_18;
71735     +_LP0 = _LP0 + (    5.64231982967194) * _TEMP * _1_19;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 5.64231982967194) * _TEMP * _1_19;
71736     +
71737     +***  Effect: Disease ;
MPRINT(EM_DIAGRAM):   *** Effect: Disease ;
71738     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71739     +_LP0 = _LP0 + (    23.8144456058887) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 23.8144456058887) * _TEMP * _2_0;
71740     +_LP0 = _LP0 + (    6.17241906776287) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 6.17241906776287) * _TEMP * _2_1;
71741     +_LP0 = _LP0 + (   -13.7078634471084) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.7078634471084) * _TEMP * _2_2;
71742     +_LP0 = _LP0 + (   -13.9913005416553) * _TEMP * _2_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -13.9913005416553) * _TEMP * _2_3;
71743     +
71744     +***  Effect: Gender ;
MPRINT(EM_DIAGRAM):   *** Effect: Gender ;
71745     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71746     +_LP0 = _LP0 + (    9.05872441749821) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 9.05872441749821) * _TEMP * _3_0;
71747     +_LP0 = _LP0 + (   -3.23831856399694) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -3.23831856399694) * _TEMP * _3_1;
71748     +
71749     +***  Effect: OPT_Population_in_thousands ;
MPRINT(EM_DIAGRAM):   *** Effect: OPT_Population_in_thousands ;
71750     +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
71751     +_LP0 = _LP0 + (   -1.19074151505959) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.19074151505959) * _TEMP * _4_0;
71752     +_LP0 = _LP0 + (   -16.0522869236569) * _TEMP * _4_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -16.0522869236569) * _TEMP * _4_1;
71753     +_LP0 = _LP0 + (                   0) * _TEMP * _4_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0) * _TEMP * _4_2;
71754     +*--- Intercept ---*;
MPRINT(EM_DIAGRAM):   *--- Intercept ---*;
71755     +_LP0 = _LP0 + (    29.6164686515964);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 29.6164686515964);
71756     +
71757     +REG2DR1:
71758     +
71759     +*** Predicted Value, Error, and Residual;
MPRINT(EM_DIAGRAM):   REG2DR1: *** Predicted Value, Error, and Residual;
71760     +label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label P_Cases_in_1000s = 'Predicted: Cases_in_1000s' ;
71761     +P_Cases_in_1000s = _LP0;
MPRINT(EM_DIAGRAM):   P_Cases_in_1000s = _LP0;
71762     +
71763     +drop _R;
MPRINT(EM_DIAGRAM):   drop _R;
71764     +if _Y = . then do;
MPRINT(EM_DIAGRAM):   if _Y = . then do;
71765     +   R_Cases_in_1000s = .;
MPRINT(EM_DIAGRAM):   R_Cases_in_1000s = .;
71766     +end;
MPRINT(EM_DIAGRAM):   end;
71767     +else do;
MPRINT(EM_DIAGRAM):   else do;
71768     +   _R = _Y - _LP0;
MPRINT(EM_DIAGRAM):   _R = _Y - _LP0;
71769     +    label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
MPRINT(EM_DIAGRAM):   label R_Cases_in_1000s = 'Residual: Cases_in_1000s' ;
71770     +   R_Cases_in_1000s = _R;
MPRINT(EM_DIAGRAM):   R_Cases_in_1000s = _R;
71771     +end;
MPRINT(EM_DIAGRAM):   end;
71772     +
71773     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
71774     +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
71775     +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71776      run;
 
NOTE: DATA STEP view saved on file EMWS2.REG2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS2.TRANS_TEST.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
71777      quit;
71778      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
71779      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
71780      * Reg2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg2: Computing metadata for TRAIN data;
71781      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS2.Reg2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS2.Reg2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS2.Reg2_TRAIN out=WORK.M2TYIQ2B noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TYIQ2B;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2TYIQ2B(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2TYIQ2B;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2TYIQ2B;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0_VPSQW NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2SSB4JE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_VPSQW;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS2.Trans_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Trans_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_CASES_IN_1000S") creator = "Reg2";
MPRINT(EM_DIAGRAM):   when("R_CASES_IN_1000S") creator = "Reg2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg2";
MPRINT(EM_DIAGRAM):   when("CASES_IN_1000S") model = "Reg2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
72129      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
72130      set EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMINFO;
72131      where DATA='Reg2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
72132      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.REG2_EMINFO.
      WHERE (DATA='Reg2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72133      data EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg2_EMINFO;
72134      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
72135      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
72136      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS2.REG2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
72140      run;
72141      data EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMINFO;
72142      set EMWS2.Reg2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMINFO WORK.MODELTEMP_INFO;
72143      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.REG2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS2.REG2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72144      proc sort data = EMWS2.Reg2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Reg2_EMINFO NOTHREADS;
72145      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
72146      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.REG2_EMINFO.
NOTE: The data set EMWS2.REG2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72147      proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS2.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
72148      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
72149      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72150      proc sort data = EMWS2.Reg2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Reg2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
72151      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
72152      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS2.REG2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72153      data EMWS2.Reg2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMINFO;
72154      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
72155      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
72156      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS2.REG2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72157      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
72158      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
72159      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
72160      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS2.REG2_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: View EMWS2.REG2_TEST.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 04, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13:49:08" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 04, 2019
Time:                13:49:08
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O13_VTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Reg2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O13_VTIN new;
MPRINT(EM_DIAGRAM):   run;
72184      data WORK.DMREGTEMP;
MPRINT(EM_DIAGRAM):    data WORK.DMREGTEMP;
72185      merge EMWS2.Reg2_EMESTIMATE EMWS2.Reg2_FITTEST;
MPRINT(EM_DIAGRAM):   merge EMWS2.Reg2_EMESTIMATE EMWS2.Reg2_FITTEST;
72186      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.REG2_EMESTIMATE.
NOTE: There were 1 observations read from the data set EMWS2.REG2_FITTEST.
NOTE: The data set WORK.DMREGTEMP has 3 observations and 78 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72187      data EMWS2.Reg2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg2_EMOUTFIT;
72188      length TARGET $32;
MPRINT(EM_DIAGRAM):   length TARGET $32;
72189      set WORK.DMREGTEMP end=eof;
MPRINT(EM_DIAGRAM):   set WORK.DMREGTEMP end=eof;
72190      where (_TYPE_='PARMS');
MPRINT(EM_DIAGRAM):   where (_TYPE_='PARMS');
72191      drop _TYPE_--OPT_Population_in_thousands03_34;
MPRINT(EM_DIAGRAM):   drop _TYPE_--OPT_Population_in_thousands03_34;
72192      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
72193      TARGET = "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   TARGET = "Cases_in_1000s";
72194      output;
MPRINT(EM_DIAGRAM):   output;
72195      end;
MPRINT(EM_DIAGRAM):   end;
72196      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.DMREGTEMP.
      WHERE _TYPE_='PARMS';
NOTE: The data set EMWS2.REG2_EMOUTFIT has 1 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72197      data EMWS2.Reg2_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg2_EMOUTFIT;
72198      set EMWS2.Reg2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMOUTFIT;
72199      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
72200      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
72201      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS2.REG2_EMOUTFIT.
NOTE: The data set EMWS2.REG2_EMOUTFIT has 1 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72202      proc sort data=EMWS2.Reg2_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Reg2_EMREPORTFIT nothreads;
72203      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
72204      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set EMWS2.REG2_EMREPORTFIT.
NOTE: The data set EMWS2.REG2_EMREPORTFIT has 19 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72205      %let _EMwarndup = 0;
72206      %let _EMtargetdup =;
72207      %let _EMASEtargetdup =;
72208      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
72209      set EMWS2.Reg2_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMOUTFIT;
72210      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
72211      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
72212      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
72213      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
72214      end;
MPRINT(EM_DIAGRAM):   end;
72215      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.REG2_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72216      proc sort data=EMWS2.Trans_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Trans_CMeta_TRAIN out=WORK.SUBSETINMETA;
72217      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72218      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS2.TRANS_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 7 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72219      proc sort data=EMWS2.Reg2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Reg2_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
72220      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72221      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.REG2_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
72222      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
72223      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
72224      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72225      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 6 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 7 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72226      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
72227      set EMWS2.Reg2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_CMeta_TRAIN;
72228      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
72229      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.REG2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
72230      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
72231      set EMWS2.Reg2_TRAIN(keep=
72232      P_Cases_in_1000s
72233      R_Cases_in_1000s
72234      _WARN_
72235      Cases_in_1000s
72236      );
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_TRAIN(keep= P_Cases_in_1000s R_Cases_in_1000s _WARN_ Cases_in_1000s );
72237      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 378 observations read from the data set EMWS2.PART_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.IMPT_TRAIN.
NOTE: View EMWS2.REG2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 378 observations read from the data set EMWS2.TRANS_TRAIN.
NOTE: There were 378 observations read from the data set EMWS2.REG2_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 378 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Reg2: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Reg2_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Reg2_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Reg2BOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Reg2BOXDATA out=WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Reg2BOXDATA out=WORK.Reg2BOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Reg2BOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg2_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Cases_in_1000s _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Cases_in_1000s") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Cases_in_1000s Cases_in_1000s _tmpfreqvar_ WHERE = (Cases_in_1000s > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Cases_in_1000s ;
MPRINT(EM_ASSESS):   VAR Cases_in_1000s ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Cases_in_1000s" DATAROLE "TRAIN" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1 -
RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Cases_in_1000s = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Cases_in_1000s - -22.8606460672369) / 5.5352685629618), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 378);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 87.844725192;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 5.5352685629618;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
76568      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
76569      set EMWS2.Reg2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_CMeta_TRAIN;
76570      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
76571      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS2.REG2_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
76572      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
76573      set EMWS2.Reg2_VALIDATE(keep=
76574      P_Cases_in_1000s
76575      R_Cases_in_1000s
76576      _WARN_
76577      Cases_in_1000s
76578      );
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_VALIDATE(keep= P_Cases_in_1000s R_Cases_in_1000s _WARN_ Cases_in_1000s );
76579      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 284 observations read from the data set EMWS2.PART_VALIDATE.
NOTE: There were 284 observations read from the data set EMWS2.IMPT_VALIDATE.
NOTE: View EMWS2.REG2_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: There were 284 observations read from the data set EMWS2.TRANS_VALIDATE.
NOTE: There were 284 observations read from the data set EMWS2.REG2_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 284 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Cases_in_1000s";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Reg2: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg2: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Reg2_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Cases_in_1000s
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Reg2_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Reg2BOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Reg2BOXDATA out=WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.Reg2BOXDATA out=WORK.Reg2BOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Reg2BOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Reg2_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMRESIDUAL WORK.Reg2BOXDATA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Cases_in_1000s _tmpfreqvar_ ;
The SAS System
 
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Cases_in_1000s") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Cases_in_1000s") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Cases_in_1000s Cases_in_1000s _tmpfreqvar_ WHERE = (Cases_in_1000s > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Cases_in_1000s ;
MPRINT(EM_ASSESS):   VAR Cases_in_1000s ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Cases_in_1000s" DATAROLE "VALIDATE" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1 -
RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Cases_in_1000s = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Cases_in_1000s - -31.0788780463074) / 5.70933212536535), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 284);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Cases_in_1000s);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Cases_in_1000s * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 83.107764461;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 5.70933212536535;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Cases_in_1000s";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Reg2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length P_LABEL $27;
MPRINT(EM_DIAGRAM):   set EMWS2.Reg2_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
80920      %let _cn = %sysfunc(getoption(CENTER));
80921      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
80922      proc print data=EMWS2.Reg2_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Reg2_EMREPORTFIT noobs label;
80923      var STAT LABEL TRAIN
80924      VALIDATE
80925      TEST
80926      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE TEST ;
80927      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
80928      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
80929      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
80930      run;
 
NOTE: There were 19 observations read from the data set EMWS2.REG2_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 22.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80931      title10;
MPRINT(EM_DIAGRAM):   title10;
80932      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
80933      proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
80934      modify Reg2_EMRANK;
MPRINT(EM_DIAGRAM):   modify Reg2_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
80935      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
80936      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
80937      run;
 
NOTE: MODIFY was successful for EMWS2.REG2_EMRANK.DATA.
80938      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
80939      %let _cn = %sysfunc(getoption(CENTER));
80940      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
80941      proc print data=EMWS2.Reg2_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Reg2_EMRANK label noobs;
80942      var
80943      decile N _targetMean_ _meanP_;
MPRINT(EM_DIAGRAM):   var decile N _targetMean_ _meanP_;
80944      by
80945      notsorted DATAROLE
80946      notsorted TARGET
80947      notsorted TARGETLABEL
80948      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
80949      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
80950      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
80951      run;
 
NOTE: There were 40 observations read from the data set EMWS2.REG2_EMRANK.
NOTE: The PROCEDURE PRINT printed page 23.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
80952      title10;
MPRINT(EM_DIAGRAM):   title10;
80953      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
80954      proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS2 nolist;
80955      modify Reg2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Reg2_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
80956      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
80957      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
80958      run;
 
NOTE: MODIFY was successful for EMWS2.REG2_EMSCOREDIST.DATA.
80959      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS2.Reg2_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label _targetMean_ _meanp_ n score;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Cases_in_1000s" );
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
