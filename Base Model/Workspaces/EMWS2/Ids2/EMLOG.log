*------------------------------------------------------------*
User:                student
Date:                December 11, 2019
Time:                14:10:27
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:10:25" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                December 11, 2019
Time:                14:10:25
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O00265IS "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O00265IS new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:10:25" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:10:25" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22053      proc freq data=EMWS2.Ids2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Ids2_VariableSet noprint;
22054      table ROLE*LEVEL/out=WORK.Ids2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ids2META;
22055      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_VARIABLESET.
NOTE: The data set WORK.IDS2META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
22056      proc print data=WORK.Ids2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ids2META label noobs;
22057      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22058      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22059      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22060      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22061      run;
 
NOTE: There were 4 observations read from the data set WORK.IDS2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
22062      title10;
MPRINT(EM_DIAGRAM):   title10;
22063      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22064      rc = libref("NEWDIS");
MPRINT(EM_DIAGRAM):   rc = libref("NEWDIS");
22065      call symput('_librc', strip(put(rc, best.)));
MPRINT(EM_DIAGRAM):   call symput('_librc', strip(put(rc, best.)));
22066      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22067      %let _engineTable =;
22068      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22069      dsid = open("NEWDIS.DISEASE_HISTORIC_JOIN_1");
MPRINT(EM_DIAGRAM):   dsid = open("NEWDIS.DISEASE_HISTORIC_JOIN_1");
22070      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
22071      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
22072      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
22073      end;
MPRINT(EM_DIAGRAM):   end;
22074      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22075      %let _lasrFile=;
22076      %let _sasiolaFile=;
22077      data null_;
MPRINT(EM_DIAGRAM):    data null_;
22078      length lasrfile sasiolaFile $2000;
MPRINT(EM_DIAGRAM):   length lasrfile sasiolaFile $2000;
22079      LASRFile = pathname("EMWS2")!!"\"!!"HPDM\"!!"hpdmlasr";
MPRINT(EM_DIAGRAM):   LASRFile = pathname("EMWS2")!!"\"!!"HPDM\"!!"hpdmlasr";
22080      SASIOLAFile = pathname("EMWS2")!!"\"!!"HPDM\"!!'sasiola.sas';
MPRINT(EM_DIAGRAM):   SASIOLAFile = pathname("EMWS2")!!"\"!!"HPDM\"!!'sasiola.sas';
22081      call symput('_lasrFile', strip(lasrfile));
MPRINT(EM_DIAGRAM):   call symput('_lasrFile', strip(lasrfile));
22082      call symput('_sasiolaFile', strip(sasiolafile));
MPRINT(EM_DIAGRAM):   call symput('_sasiolaFile', strip(sasiolafile));
22083      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.NULL_ has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22084      %let _UseGrid = 0;
22085      %hpdm_performance(data=NEWDIS.DISEASE_HISTORIC_JOIN_1, isGrid=_UseGrid);
MPRINT(EM_DIAGRAM):
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
22086      %put &_UseGrid;
0
22087      %let em_idskey =;
22088      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
22089      set EMWS2.Ids2_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_VariableSet;
22090      where ROLE = 'KEY';
MPRINT(EM_DIAGRAM):   where ROLE = 'KEY';
22091      call symput('em_idskey', strip(tranwrd(name, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('em_idskey', strip(tranwrd(name, '"', '""')));
22092      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS2.IDS2_VARIABLESET.
      WHERE ROLE='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22093      %let emexceptionstring=;
22094      %EmAdviseColumns(NEWDIS.DISEASE_HISTORIC_JOIN_1, adviseMode=BASIC, applyIntervalLevelLowerLimit=N, applyMaxPercentMissing=N, applyMaxClassLevels=N, identifyEmptyColumns=N, maxLevelDetection=0, outdata=EMWS2.Ids2_EMCMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
 
22095      %let SYSCC = 0;
22096      %let _dsidTable = 0;
22097      %let _engineTable =;
22098      data _null_;
MPRINT(EMADVISECOLUMNS):    data _null_;
22099      dsid = open('NEWDIS.DISEASE_HISTORIC_JOIN_1');
MPRINT(EMADVISECOLUMNS):   dsid = open('NEWDIS.DISEASE_HISTORIC_JOIN_1');
22100      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
22101      if dsid then do;
MPRINT(EMADVISECOLUMNS):   if dsid then do;
22102      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
22103      dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
22104      end;
MPRINT(EMADVISECOLUMNS):   end;
22105      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22106      options fmterr;
MPRINT(EMADVISECOLUMNS):    options fmterr;
22107      data _metaTestView;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
22108      set NEWDIS.DISEASE_HISTORIC_JOIN_1;
MPRINT(EMADVISECOLUMNS):   set NEWDIS.DISEASE_HISTORIC_JOIN_1;
22109      if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
22110      output;
MPRINT(EMADVISECOLUMNS):   output;
22111      stop;
MPRINT(EMADVISECOLUMNS):   stop;
22112      end;
MPRINT(EMADVISECOLUMNS):   end;
22113      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: There were 1 observations read from the data set NEWDIS.DISEASE_HISTORIC_JOIN_1.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
22114      proc contents data=NEWDIS.DISEASE_HISTORIC_JOIN_1
22115      out=WORK.M2QJYCEV noprint;
MPRINT(EMADVISECOLUMNS):    proc contents data=NEWDIS.DISEASE_HISTORIC_JOIN_1 out=WORK.M2QJYCEV noprint;
22116      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: The data set WORK.M2QJYCEV has 6 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22117      data WORK.M2QJYCEV;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QJYCEV;
22118      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
22119      label NAME =;
MPRINT(EMADVISECOLUMNS):   label NAME =;
22120      set WORK.M2QJYCEV(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   set WORK.M2QJYCEV(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
22121      if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
22122      else type = 'C';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
22123      if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
22124      if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
22125      if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
22126      else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
22127      end;
MPRINT(EMADVISECOLUMNS):   end;
22128      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
22129      end;
MPRINT(EMADVISECOLUMNS):   end;
22130      else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
22131      if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
22132      if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
22133      if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
22134      else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
22135      end;
MPRINT(EMADVISECOLUMNS):   end;
22136      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
22137      end;
MPRINT(EMADVISECOLUMNS):   end;
22138      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
22139      if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
22140      else index = "Y";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
22141      indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
22142      drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
22143      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: There were 6 observations read from the data set WORK.M2QJYCEV.
NOTE: The data set WORK.M2QJYCEV has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22144      data WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JRAXC5;
22145      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
22146      set WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JRAXC5;
22147      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
22148      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: There were 6 observations read from the data set WORK.M0JRAXC5.
NOTE: The data set WORK.M0JRAXC5 has 6 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22149      data WORK.M2QJYCEV;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QJYCEV;
22150      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
22151      set WORK.M2QJYCEV;
MPRINT(EMADVISECOLUMNS):   set WORK.M2QJYCEV;
22152      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
22153      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: There were 6 observations read from the data set WORK.M2QJYCEV.
NOTE: The data set WORK.M2QJYCEV has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2QJYCEV NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort data=WORK.M0JRAXC5 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   data WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   merge WORK.M0JRAXC5(in=_a) WORK.M2QJYCEV(in=_b);
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   if _a and ^_b then delete;
MPRINT(EMADVISECOLUMNS):   run;
22165      data WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JRAXC5;
22166      drop UNAME;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
22167      set WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JRAXC5;
22168      run;
MPRINT(EMADVISECOLUMNS):   run;
 
NOTE: There were 6 observations read from the data set WORK.M0JRAXC5.
NOTE: The data set WORK.M0JRAXC5 has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EMADVISECOLUMNS):    data WORK.M1XC52QK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   set WORK.M0JRAXC5;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.28 seconds
      cpu time            0.23 seconds
 
 
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
 
22419      %EmAdviseTable(NEWDIS.DISEASE_HISTORIC_JOIN_1, outdata=EMWS2.Ids2_EMTMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):
MPRINT(EMADVISETABLE):   proc display c=sashelp.emmeta.advisetable.scl;
MPRINT(EMADVISETABLE):   run;
 
22420      %let SYSCC = 0;
22421      data EMWS2.Ids2_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):    data EMWS2.Ids2_EMTMETADEFAULT;
22422      set EMWS2.Ids2_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):   set EMWS2.Ids2_EMTMETADEFAULT;
22423      length LIBNAME $8;
MPRINT(EMADVISETABLE):   length LIBNAME $8;
22424      LIBNAME = "NEWDIS";
MPRINT(EMADVISETABLE):   LIBNAME = "NEWDIS";
22425      run;
MPRINT(EMADVISETABLE):   run;
 
NOTE: There were 1 observations read from the data set EMWS2.IDS2_EMTMETADEFAULT.
NOTE: The data set EMWS2.IDS2_EMTMETADEFAULT has 1 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EMADVISETABLE):    data _null_;
MPRINT(EMADVISETABLE):   dsid = open("NEWDIS.DISEASE_HISTORIC_JOIN_1");
MPRINT(EMADVISETABLE):   call symput("_DSID", put(dsid,BEST.));
MPRINT(EMADVISETABLE):   if dsid > 0 then dsid = close(dsid);
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):    ods output enginehost=em_tablehost;
MPRINT(EMADVISETABLE):   ods listing close;
MPRINT(EMADVISETABLE):   proc contents data=NEWDIS.DISEASE_HISTORIC_JOIN_1;
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):   ods listing;
MPRINT(EMADVISETABLE):    data WORK.M0R3DCDF;
MPRINT(EMADVISETABLE):   length MEMNAME $ 32 MEMTYPE $ 8 MEMLABEL $ 256 TYPEMEM $ 8 ENGINE $ 8 CRDATE 8 MODATE 8 NOBS 8 NCOLS 8 NBYTES 8 ROLE $ 20 USEEXTERNALDATA $1 SAMPLINGRATE 8 SEGMENT $ 20;
MPRINT(EMADVISETABLE):   set WORK.M0R3DCDF(obs=1);
MPRINT(EMADVISETABLE):   nobs = 1040;
MPRINT(EMADVISETABLE):   ncols = 6;
MPRINT(EMADVISETABLE):   nbytes = 132096;
MPRINT(EMADVISETABLE):   memname = "DISEASE_HISTORIC_JOIN_1";
MPRINT(EMADVISETABLE):   memtype = "DATA    ";
MPRINT(EMADVISETABLE):   memlabel = "";
MPRINT(EMADVISETABLE):   typemem = "DATA    ";
MPRINT(EMADVISETABLE):   engine = "BASE    ";
MPRINT(EMADVISETABLE):   crdate = 1891534235.295;
MPRINT(EMADVISETABLE):   modate = 1891534235.295;
MPRINT(EMADVISETABLE):   format crdate datetime16.;
MPRINT(EMADVISETABLE):   format modate datetime16.;
MPRINT(EMADVISETABLE):   if role = ' ' then role = 'TRAIN';
MPRINT(EMADVISETABLE):   output;
MPRINT(EMADVISETABLE):   run;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EMADVISETABLE):
MPRINT(EM_DIAGRAM):  ;
 
22454      data EMWS2.Ids2_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    data EMWS2.Ids2_EMCMETADEFAULT;
22455      set EMWS2.Ids2_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_EMCMETADEFAULT;
22456      label DROP = "%sysfunc(sasmsg(sashelp.dmine, meta_drop_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DROP = "Drop";
22457      if DROP='' then DROP='N';
MPRINT(EM_DIAGRAM):   if DROP='' then DROP='N';
22458      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
22459      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
22460      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_EMCMETADEFAULT.
NOTE: The data set EMWS2.IDS2_EMCMETADEFAULT has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22461      proc sort data=EMWS2.Ids2_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Ids2_EMCMETADEFAULT;
22462      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_EMCMETADEFAULT.
NOTE: The data set EMWS2.IDS2_EMCMETADEFAULT has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22464      proc sort data=EMWS2.Ids2_VariableSet;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Ids2_VariableSet;
22465      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22466      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_VARIABLESET.
NOTE: The data set EMWS2.IDS2_VARIABLESET has 6 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22467      data EMWS2.Ids2_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS2.Ids2_VariableSet;
22468      merge EMWS2.Ids2_EMCMETADEFAULT(in=_a) EMWS2.Ids2_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS2.Ids2_EMCMETADEFAULT(in=_a) EMWS2.Ids2_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
22469      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
22470      if ^_a and _b then delete;
MPRINT(EM_DIAGRAM):   if ^_a and _b then delete;
22471      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
22472      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
22473      if (type ne oldtype) and (_a and _b) then do;
MPRINT(EM_DIAGRAM):   if (type ne oldtype) and (_a and _b) then do;
22474      if type ='N' then level='INTERVAL';
MPRINT(EM_DIAGRAM):   if type ='N' then level='INTERVAL';
22475      end;
MPRINT(EM_DIAGRAM):   end;
22476      drop oldtype;
MPRINT(EM_DIAGRAM):   drop oldtype;
22477      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_EMCMETADEFAULT.
NOTE: There were 6 observations read from the data set EMWS2.IDS2_VARIABLESET.
NOTE: The data set EMWS2.IDS2_VARIABLESET has 6 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22478      data EMWS2.Ids2_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS2.Ids2_CMeta_DATA;
22479      set WORK.M0S5UCT8;
MPRINT(EM_DIAGRAM):   set WORK.M0S5UCT8;
22480      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
22481      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
22482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.M0S5UCT8.
      WHERE DROP='N';
NOTE: The data set EMWS2.IDS2_CMETA_DATA has 6 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
Ids2: Using "NEWDIS.DISEASE_HISTORIC_JOIN_1" data source
*------------------------------------------------------------*
22483      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22484      * Ids2: Creating DATA data;
MPRINT(EM_DIAGRAM):   * Ids2: Creating DATA data;
22485      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22486      data EMWS2.Ids2_DATA (label="")
22487      / view=EMWS2.Ids2_DATA
22488      ;
MPRINT(EM_DIAGRAM):   data EMWS2.Ids2_DATA (label="") / view=EMWS2.Ids2_DATA ;
22489      set NEWDIS.DISEASE_HISTORIC_JOIN_1;
MPRINT(EM_DIAGRAM):   set NEWDIS.DISEASE_HISTORIC_JOIN_1;
22490      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS2.IDS2_DATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22491      data WORK.IDSOUTPUT;
MPRINT(EM_DIAGRAM):    data WORK.IDSOUTPUT;
22492      length ATTRIBUTE $20 LABEL $50 VALUE $50;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $50;
22493      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "Attribute";
22494      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "Value";
22495      ATTRIBUTE = 'OUTPUT';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUT';
22496      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutput_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Output Table";
22497      VALUE = "EMWS2.Ids2_DATA";
MPRINT(EM_DIAGRAM):   VALUE = "EMWS2.Ids2_DATA";
22498      output;
MPRINT(EM_DIAGRAM):   output;
22499      ATTRIBUTE = 'OUTPUTTYPE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUTTYPE';
22500      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutputtype_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Output Type";
22501      VALUE = "View";
MPRINT(EM_DIAGRAM):   VALUE = "View";
22502      output;
MPRINT(EM_DIAGRAM):   output;
22503      ATTRIBUTE = 'DROPVARS';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DROPVARS';
22504      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeldropvars_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Dropped Variables";
22505      VALUE = "0";
MPRINT(EM_DIAGRAM):   VALUE = "0";
22506      output;
MPRINT(EM_DIAGRAM):   output;
22507      ATTRIBUTE = 'ROLE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'ROLE';
22508      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelrole_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Data Mining Role";
22509      VALUE = "Raw";
MPRINT(EM_DIAGRAM):   VALUE = "Raw";
22510      output;
MPRINT(EM_DIAGRAM):   output;
22511      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IDSOUTPUT has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
22512      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
22513      var label value;
MPRINT(EM_DIAGRAM):   var label value;
22514      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22515      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_outTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Output Table Attributes";
MPRINT(EM_DIAGRAM):   run;
22516      run;
 
NOTE: There were 4 observations read from the data set WORK.IDSOUTPUT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22517      title10;
MPRINT(EM_DIAGRAM):   title10;
22518      proc contents noprint data=NEWDIS.DISEASE_HISTORIC_JOIN_1 out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
MPRINT(EM_DIAGRAM):    proc contents noprint data=NEWDIS.DISEASE_HISTORIC_JOIN_1 out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
22519      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IDSCONTENT has 6 observations and 28 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22520      data WORK.IDSCONTENT;
MPRINT(EM_DIAGRAM):   data WORK.IDSCONTENT;
22521      set WORK.IDSCONTENT end=eof;
MPRINT(EM_DIAGRAM):   set WORK.IDSCONTENT end=eof;
22522      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
22523      NVARS = _n_;
MPRINT(EM_DIAGRAM):   NVARS = _n_;
22524      output;
MPRINT(EM_DIAGRAM):   output;
22525      end;
MPRINT(EM_DIAGRAM):   end;
22526      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.IDSCONTENT.
NOTE: The data set WORK.IDSCONTENT has 1 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
22527      data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
MPRINT(EM_DIAGRAM):   data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
22528      length ATTRIBUTE $20 LABEL $50 VALUE $80;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $80;
22529      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "Attribute";
22530      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "Value";
22531      ;
MPRINT(EM_DIAGRAM):   ;
22532      dsid = open("WORK.IDSCONTENT");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.IDSCONTENT");
22533      rc = fetch(dsid);
MPRINT(EM_DIAGRAM):   rc = fetch(dsid);
22534      nvars = attrn(dsid, 'NVARS');
MPRINT(EM_DIAGRAM):   nvars = attrn(dsid, 'NVARS');
22535      nobs = attrn(dsid, 'NOBS');
MPRINT(EM_DIAGRAM):   nobs = attrn(dsid, 'NOBS');
22536      ATTRIBUTE = 'DATASOURCE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DATASOURCE';
22537      LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_datasource_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Data Source";
22538      VALUE="diseasehistoricjoin";
MPRINT(EM_DIAGRAM):   VALUE="diseasehistoricjoin";
22539      output;
MPRINT(EM_DIAGRAM):   output;
22540      ATTRIBUTE = '';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = '';
22541      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
22542      VALUE='';
MPRINT(EM_DIAGRAM):   VALUE='';
22543      output;
MPRINT(EM_DIAGRAM):   output;
22544      do i=1 to nvars;
MPRINT(EM_DIAGRAM):   do i=1 to nvars;
22545      ATTRIBUTE = varname(dsid, i);
MPRINT(EM_DIAGRAM):   ATTRIBUTE = varname(dsid, i);
22546      LABEL = varlabel(dsid, i);
MPRINT(EM_DIAGRAM):   LABEL = varlabel(dsid, i);
22547      if vartype(dsid,i)='C' then do;
MPRINT(EM_DIAGRAM):   if vartype(dsid,i)='C' then do;
22548      VALUE = getvarc(dsid, i);
MPRINT(EM_DIAGRAM):   VALUE = getvarc(dsid, i);
22549      end;
MPRINT(EM_DIAGRAM):   end;
22550      else do;
MPRINT(EM_DIAGRAM):   else do;
22551      NVALUE = getvarn(dsid, i);
MPRINT(EM_DIAGRAM):   NVALUE = getvarn(dsid, i);
22552      if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
MPRINT(EM_DIAGRAM):   if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
22553      else VALUE = left(put(NVALUE, BEST12.));
MPRINT(EM_DIAGRAM):   else VALUE = left(put(NVALUE, BEST12.));
22554      end;
MPRINT(EM_DIAGRAM):   end;
22555      if ATTRIBUTE = 'NVARS' then do;
MPRINT(EM_DIAGRAM):   if ATTRIBUTE = 'NVARS' then do;
22556      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelvariables_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Variables";
22557      end;
MPRINT(EM_DIAGRAM):   end;
22558      output;
MPRINT(EM_DIAGRAM):   output;
22559      end;
MPRINT(EM_DIAGRAM):   end;
22560      dsid=close(dsid);
MPRINT(EM_DIAGRAM):   dsid=close(dsid);
22561      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IDSOUTPUT has 31 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22562      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
22563      var label value;
MPRINT(EM_DIAGRAM):   var label value;
22564      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22565      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_inTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Input Table Attributes";
MPRINT(EM_DIAGRAM):   run;
22566      run;
 
NOTE: There were 31 observations read from the data set WORK.IDSOUTPUT.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc dmdb data=NEWDIS.DISEASE_HISTORIC_JOIN_1 maxlevel=32 varOut=WORK._IDS_DMDBVar ;
MPRINT(EM_DIAGRAM):   var "Cases_in_1000s"n ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ids2: Determine decision variables for Cases_in_1000s;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.Ids2_SCORE;
MPRINT(EM_DIAGRAM):   set NEWDIS.DISEASE_HISTORIC_JOIN_1;
MPRINT(EM_DIAGRAM):   keep Cases_in_1000s;
MPRINT(EM_DIAGRAM):   keep 'P_Cases_in_1000s'n;
MPRINT(EM_DIAGRAM):   'P_Cases_in_1000s'n = 0.5;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Ids2_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_ ^in('FREQ', 'BESTPROFIT', 'COMPUTEDPROFIT', 'EXPECTEDPROFIT', 'BESTLOSS', 'COMPUTEDLOSS', 'EXPECTEDLOSS', 'ROI', 'INVESTMENTCOST', 'MODELDECISION');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Cases_in_1000s(type=PROFIT label= Cases_in_1000s);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data EMWS2.Ids2_Cases_in_1000s_DM;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_Cases_in_1000s_DM end=eof;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:10:27" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 11, 2019
Time:                14:10:27
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2HJUYGE "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2HJUYGE new;
MPRINT(EM_DIAGRAM):   run;
22703      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22704      * Ids2: Computing metadata for DATA data;
MPRINT(EM_DIAGRAM):   * Ids2: Computing metadata for DATA data;
22705      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS2.IDS2_DATA.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
22706      data EMWS2.Ids2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS2.Ids2_EMINFO;
22707      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
22708      TARGET="";
MPRINT(EM_DIAGRAM):   TARGET="";
22709      KEY="IDSTABLE";
MPRINT(EM_DIAGRAM):   KEY="IDSTABLE";
22710      DATA="NEWDIS.DISEASE_HISTORIC_JOIN_1";
MPRINT(EM_DIAGRAM):   DATA="NEWDIS.DISEASE_HISTORIC_JOIN_1";
22711      output;
MPRINT(EM_DIAGRAM):   output;
22712      TARGET="Cases_in_1000s";
MPRINT(EM_DIAGRAM):   TARGET="Cases_in_1000s";
22713      KEY="DECDATA";
MPRINT(EM_DIAGRAM):   KEY="DECDATA";
22714      DATA="EMWS2.Ids2_Cases_in_1000s_DD";
MPRINT(EM_DIAGRAM):   DATA="EMWS2.Ids2_Cases_in_1000s_DD";
22715      output;
MPRINT(EM_DIAGRAM):   output;
22716      TARGET="Cases_in_1000s";
MPRINT(EM_DIAGRAM):   TARGET="Cases_in_1000s";
22717      KEY="DECMETA";
MPRINT(EM_DIAGRAM):   KEY="DECMETA";
22718      DATA="EMWS2.Ids2_Cases_in_1000s_DM";
MPRINT(EM_DIAGRAM):   DATA="EMWS2.Ids2_Cases_in_1000s_DM";
22719      output;
MPRINT(EM_DIAGRAM):   output;
22720      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS2.IDS2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: View EMWS2.IDS2_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
22721      data EMWS2.Ids2_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS2.Ids2_CMeta_DATA;
22722      set EMWS2.Ids2_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS2.Ids2_VariableSet;
22723      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
22724      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
22725      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS2.IDS2_VARIABLESET.
      WHERE DROP='N';
NOTE: The data set EMWS2.IDS2_CMETA_DATA has 6 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 11, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:10:27" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                December 11, 2019
Time:                14:10:27
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0Q_I9SE "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS2\Ids2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0Q_I9SE new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
