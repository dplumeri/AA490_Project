MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:17:45" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 12, 2019
Time:                16:17:45
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0NGIKG8 "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0NGIKG8 new;
MPRINT(EM_DIAGRAM):   run;
28496      proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS1.Clus_OUTVAR out=WORK.Clus_OUTVAR(rename=(COl2=NAME) where=(COL1='IMPUTED'));
28497      var Projected_Sum_Pop--GenderMale;
MPRINT(EM_DIAGRAM):   var Projected_Sum_Pop--GenderMale;
28498      where _TYPE_ in('TYPE' 'VARIABLE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('TYPE' 'VARIABLE');
28499      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS1.CLUS_OUTVAR.
      WHERE _TYPE_ in ('TYPE', 'VARIABLE');
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

28500      proc sort data=WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Clus_OUTVAR;
28501      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28502      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

28503      proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Clus_VariableSet(KEEP=NAME ROLE LEVEL) out=WORK.Clus_SORTEDVARS;
28504      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28505      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set EMWS1.CLUS_VARIABLESET.
NOTE: The data set WORK.CLUS_SORTEDVARS has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

28506      data WORK.Clus_OUTVAR;
MPRINT(EM_DIAGRAM):   data WORK.Clus_OUTVAR;
28507      merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
MPRINT(EM_DIAGRAM):   merge WORK.Clus_OUTVAR(in=INVAR) WORK.Clus_SORTEDVARS;
28508      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
28509      if INVAR then output;
MPRINT(EM_DIAGRAM):   if INVAR then output;
28510      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
NOTE: There were 0 observations read from the data set WORK.CLUS_OUTVAR.
NOTE: There were 5 observations read from the data set WORK.CLUS_SORTEDVARS.
NOTE: The data set WORK.CLUS_OUTVAR has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
28511      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28512      *------------------------------------------------------------*;
28513      * Clus: Scoring DATA data;
28514      *------------------------------------------------------------*;
28515      data EMWS1.Clus_TRAIN
28516      / view=EMWS1.Clus_TRAIN
28517      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TRAIN / view=EMWS1.Clus_TRAIN ;
28518      set EMWS1.Part_TRAIN
28519      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN ;
28520      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize Projected_Sum_Pop ;
MPRINT(EM_DIAGRAM):   drop T_Projected_Sum_Pop ;
MPRINT(EM_DIAGRAM):   if missing( Projected_Sum_Pop ) then T_Projected_Sum_Pop = .;
MPRINT(EM_DIAGRAM):   else T_Projected_Sum_Pop = (Projected_Sum_Pop - 1374054.76507936) * 1.2287347886416E-6;
MPRINT(EM_DIAGRAM):   *** Standardize Year ;
MPRINT(EM_DIAGRAM):   drop T_Year ;
MPRINT(EM_DIAGRAM):   if missing( Year ) then T_Year = .;
MPRINT(EM_DIAGRAM):   else T_Year = (Year - 2000.37777777777) * 0.16642398069186;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group65_84 Age_group85_ ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group85_ = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0.8806311706765;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0.88494630363511;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0.88930795645817;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = 0.88930795645817;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0.92599153206728;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group85_ = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale GenderMale ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderMale = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
MPRINT(EM_DIAGRAM):   _dm6 = put( Gender , $CHAR6. );
MPRINT(DMNORMIP):   call dmnorm(_dm6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm6 = 'ALL' then do;
MPRINT(EM_DIAGRAM):   GenderAll = 0.79307595317319;
MPRINT(EM_DIAGRAM):   GenderFemale = -0.39487878637533;
MPRINT(EM_DIAGRAM):   GenderMale = -0.40938189953869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   GenderAll = -0.41963727619358;
MPRINT(EM_DIAGRAM):   GenderFemale = -0.39487878637533;
MPRINT(EM_DIAGRAM):   GenderMale = 0.81294320334935;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   GenderAll = -0.41963727619358;
MPRINT(EM_DIAGRAM):   GenderFemale = 0.842800991816;
MPRINT(EM_DIAGRAM):   GenderMale = -0.40938189953869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderMale = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUSvads [5] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 5;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_Projected_Sum_Pop ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_Projected_Sum_Pop - -1.13864754696814 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_Projected_Sum_Pop - 0.32770877172502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_Projected_Sum_Pop - -1.13095083877626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_Projected_Sum_Pop - 1.05965016711499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_Projected_Sum_Pop - 0.8387666099787 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_Year ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_Year - 0.79194280104988 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_Year - -0.47316406567662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_Year - -0.9509205556144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_Year - -0.85600899137845 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_Year - 0.94074650440685 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( Age_group0_17 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group0_17 - 0.8806311706765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group0_17 - -0.0376843775388 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.2;
MPRINT(EM_DIAGRAM):   if not missing( Age_group18_24 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group18_24 - 0.32394725939661 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group18_24 - 0.34151535543938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Age_group25_44 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group25_44 - 0.24460613345874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group25_44 - 0.32287942217218 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.2;
MPRINT(EM_DIAGRAM):   if not missing( Age_group65_84 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group65_84 - 0.44259721136574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group65_84 - 0.16722299468171 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Age_group85_ ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group85_ - 0.34082369811486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group85_ - 0.32325560207209 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( GenderAll ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderAll - 0.03972379553625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderAll - -0.07143248756351 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderAll - -0.03196665369108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderAll - 0.00645115574609 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderAll - 0.03143288838796 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   if not missing( GenderFemale ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderFemale - 0.04581022555643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderFemale - 0.03402014666127 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderFemale - -0.02966180264674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderFemale - -0.01576966512753 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderFemale - -0.02508421850109 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   if not missing( GenderMale ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderMale - -0.08528054650019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderMale - 0.03840056389554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderMale - 0.06151383681981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderMale - 0.00907173928784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderMale - -0.00690899980726 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   _vqnvar = 4 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 4.5474735088646E-12 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 5;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (4 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
MPRINT(EM_DIAGRAM):   run;
28761      run;

NOTE: DATA STEP view saved on file EMWS1.CLUS_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
28762      quit;
28763      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
28764      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
28765      *------------------------------------------------------------*;
28766      * Clus: Scoring VALIDATE data;
28767      *------------------------------------------------------------*;
28768      data EMWS1.Clus_VALIDATE
28769      / view=EMWS1.Clus_VALIDATE
28770      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_VALIDATE / view=EMWS1.Clus_VALIDATE ;
28771      set EMWS1.Part_VALIDATE
28772      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_VALIDATE ;
28773      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize Projected_Sum_Pop ;
MPRINT(EM_DIAGRAM):   drop T_Projected_Sum_Pop ;
MPRINT(EM_DIAGRAM):   if missing( Projected_Sum_Pop ) then T_Projected_Sum_Pop = .;
MPRINT(EM_DIAGRAM):   else T_Projected_Sum_Pop = (Projected_Sum_Pop - 1374054.76507936) * 1.2287347886416E-6;
MPRINT(EM_DIAGRAM):   *** Standardize Year ;
MPRINT(EM_DIAGRAM):   drop T_Year ;
MPRINT(EM_DIAGRAM):   if missing( Year ) then T_Year = .;
MPRINT(EM_DIAGRAM):   else T_Year = (Year - 2000.37777777777) * 0.16642398069186;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group65_84 Age_group85_ ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group85_ = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0.8806311706765;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0.88494630363511;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0.88930795645817;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = 0.88930795645817;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0.92599153206728;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group85_ = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale GenderMale ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderMale = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
MPRINT(EM_DIAGRAM):   _dm6 = put( Gender , $CHAR6. );
MPRINT(DMNORMIP):   call dmnorm(_dm6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm6 = 'ALL' then do;
MPRINT(EM_DIAGRAM):   GenderAll = 0.79307595317319;
MPRINT(EM_DIAGRAM):   GenderFemale = -0.39487878637533;
MPRINT(EM_DIAGRAM):   GenderMale = -0.40938189953869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   GenderAll = -0.41963727619358;
MPRINT(EM_DIAGRAM):   GenderFemale = -0.39487878637533;
MPRINT(EM_DIAGRAM):   GenderMale = 0.81294320334935;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   GenderAll = -0.41963727619358;
MPRINT(EM_DIAGRAM):   GenderFemale = 0.842800991816;
MPRINT(EM_DIAGRAM):   GenderMale = -0.40938189953869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderMale = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUSvads [5] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 5;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_Projected_Sum_Pop ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_Projected_Sum_Pop - -1.13864754696814 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_Projected_Sum_Pop - 0.32770877172502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_Projected_Sum_Pop - -1.13095083877626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_Projected_Sum_Pop - 1.05965016711499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_Projected_Sum_Pop - 0.8387666099787 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_Year ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_Year - 0.79194280104988 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_Year - -0.47316406567662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_Year - -0.9509205556144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_Year - -0.85600899137845 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_Year - 0.94074650440685 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( Age_group0_17 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group0_17 - 0.8806311706765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group0_17 - -0.0376843775388 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.2;
MPRINT(EM_DIAGRAM):   if not missing( Age_group18_24 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group18_24 - 0.32394725939661 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group18_24 - 0.34151535543938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Age_group25_44 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group25_44 - 0.24460613345874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group25_44 - 0.32287942217218 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.2;
MPRINT(EM_DIAGRAM):   if not missing( Age_group65_84 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group65_84 - 0.44259721136574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group65_84 - 0.16722299468171 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Age_group85_ ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group85_ - 0.34082369811486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group85_ - 0.32325560207209 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( GenderAll ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderAll - 0.03972379553625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderAll - -0.07143248756351 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderAll - -0.03196665369108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderAll - 0.00645115574609 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderAll - 0.03143288838796 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   if not missing( GenderFemale ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderFemale - 0.04581022555643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderFemale - 0.03402014666127 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderFemale - -0.02966180264674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderFemale - -0.01576966512753 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderFemale - -0.02508421850109 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   if not missing( GenderMale ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderMale - -0.08528054650019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderMale - 0.03840056389554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderMale - 0.06151383681981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderMale - 0.00907173928784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderMale - -0.00690899980726 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   _vqnvar = 4 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 4.5474735088646E-12 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 5;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (4 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
29014      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.CLUS_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
29015      quit;
29016      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
29017      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29018      *------------------------------------------------------------*;
29019      * Clus: Scoring TEST data;
29020      *------------------------------------------------------------*;
29021      data EMWS1.Clus_TEST
29022      / view=EMWS1.Clus_TEST
29023      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_TEST / view=EMWS1.Clus_TEST ;
29024      set EMWS1.Part_TEST
29025      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TEST ;
29026      %inc emflow;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   *****************************************;
MPRINT(EM_DIAGRAM):   *** Begin Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   drop _dm_bad;
MPRINT(EM_DIAGRAM):   _dm_bad = 0;
MPRINT(EM_DIAGRAM):   *** Standardize Projected_Sum_Pop ;
MPRINT(EM_DIAGRAM):   drop T_Projected_Sum_Pop ;
MPRINT(EM_DIAGRAM):   if missing( Projected_Sum_Pop ) then T_Projected_Sum_Pop = .;
MPRINT(EM_DIAGRAM):   else T_Projected_Sum_Pop = (Projected_Sum_Pop - 1374054.76507936) * 1.2287347886416E-6;
MPRINT(EM_DIAGRAM):   *** Standardize Year ;
MPRINT(EM_DIAGRAM):   drop T_Year ;
MPRINT(EM_DIAGRAM):   if missing( Year ) then T_Year = .;
MPRINT(EM_DIAGRAM):   else T_Year = (Year - 2000.37777777777) * 0.16642398069186;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Age_group ;
MPRINT(EM_DIAGRAM):   drop Age_group0_17 Age_group18_24 Age_group25_44 Age_group65_84 Age_group85_ ;
MPRINT(EM_DIAGRAM):   if missing( Age_group ) then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group85_ = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm19 $ 19;
MPRINT(EM_DIAGRAM):   drop _dm19 ;
MPRINT(DMNORMCP):   _dm19=dmnorm(Age_group,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):   if _dm19 = '0-17' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = 0.8806311706765;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '25-44' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = 0.88494630363511;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '18-24' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = 0.88930795645817;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '85+' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = -0.2156418636321;
MPRINT(EM_DIAGRAM):   Age_group85_ = 0.88930795645817;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm19 = '65-84' then do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = -0.22674934334784;
MPRINT(EM_DIAGRAM):   Age_group18_24 = -0.22453699894669;
MPRINT(EM_DIAGRAM):   Age_group25_44 = -0.22564367901453;
MPRINT(EM_DIAGRAM):   Age_group65_84 = 0.92599153206728;
MPRINT(EM_DIAGRAM):   Age_group85_ = -0.22453699894669;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   Age_group0_17 = .;
MPRINT(EM_DIAGRAM):   Age_group18_24 = .;
MPRINT(EM_DIAGRAM):   Age_group25_44 = .;
MPRINT(EM_DIAGRAM):   Age_group65_84 = .;
MPRINT(EM_DIAGRAM):   Age_group85_ = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Gender ;
MPRINT(EM_DIAGRAM):   drop GenderAll GenderFemale GenderMale ;
MPRINT(EM_DIAGRAM):   if missing( Gender ) then do;
MPRINT(EM_DIAGRAM):   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderMale = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   length _dm6 $ 6;
MPRINT(EM_DIAGRAM):   drop _dm6 ;
MPRINT(EM_DIAGRAM):   _dm6 = put( Gender , $CHAR6. );
MPRINT(DMNORMIP):   call dmnorm(_dm6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm6 = 'ALL' then do;
MPRINT(EM_DIAGRAM):   GenderAll = 0.79307595317319;
MPRINT(EM_DIAGRAM):   GenderFemale = -0.39487878637533;
MPRINT(EM_DIAGRAM):   GenderMale = -0.40938189953869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'MALE' then do;
MPRINT(EM_DIAGRAM):   GenderAll = -0.41963727619358;
MPRINT(EM_DIAGRAM):   GenderFemale = -0.39487878637533;
MPRINT(EM_DIAGRAM):   GenderMale = 0.81294320334935;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm6 = 'FEMALE' then do;
MPRINT(EM_DIAGRAM):   GenderAll = -0.41963727619358;
MPRINT(EM_DIAGRAM):   GenderFemale = 0.842800991816;
MPRINT(EM_DIAGRAM):   GenderMale = -0.40938189953869;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   GenderAll = .;
MPRINT(EM_DIAGRAM):   GenderFemale = .;
MPRINT(EM_DIAGRAM):   GenderMale = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** End Class Look-up, Standardization, Replacement ;
MPRINT(EM_DIAGRAM):   *** Omitted Cases;
MPRINT(EM_DIAGRAM):   if _dm_bad then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   goto CLUSvlex ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *** omitted;
MPRINT(EM_DIAGRAM):   *** Compute Distances and Cluster Membership;
MPRINT(EM_DIAGRAM):   label _SEGMENT_ = 'Segment Id' ;
MPRINT(EM_DIAGRAM):   label Distance = 'Distance' ;
MPRINT(EM_DIAGRAM):   array CLUSvads [5] _temporary_;
MPRINT(EM_DIAGRAM):   drop _vqclus _vqmvar _vqnvar;
MPRINT(EM_DIAGRAM):   _vqmvar = 0;
MPRINT(EM_DIAGRAM):   do _vqclus = 1 to 5;
MPRINT(EM_DIAGRAM):   CLUSvads [_vqclus] = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if not missing( T_Projected_Sum_Pop ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_Projected_Sum_Pop - -1.13864754696814 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_Projected_Sum_Pop - 0.32770877172502 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_Projected_Sum_Pop - -1.13095083877626 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_Projected_Sum_Pop - 1.05965016711499 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_Projected_Sum_Pop - 0.8387666099787 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( T_Year ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( T_Year - 0.79194280104988 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( T_Year - -0.47316406567662 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( T_Year - -0.9509205556144 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( T_Year - -0.85600899137845 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( T_Year - 0.94074650440685 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 1;
MPRINT(EM_DIAGRAM):   if not missing( Age_group0_17 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group0_17 - 0.8806311706765 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group0_17 - -0.22674934334784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group0_17 - -0.0376843775388 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.2;
MPRINT(EM_DIAGRAM):   if not missing( Age_group18_24 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group18_24 - 0.32394725939661 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group18_24 - 0.34151535543938 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group18_24 - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Age_group25_44 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group25_44 - -0.22564367901453 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group25_44 - 0.24460613345874 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group25_44 - 0.32287942217218 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.2;
MPRINT(EM_DIAGRAM):   if not missing( Age_group65_84 ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group65_84 - -0.2156418636321 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group65_84 - 0.44259721136574 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group65_84 - 0.16722299468171 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( Age_group85_ ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( Age_group85_ - 0.34082369811486 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( Age_group85_ - 0.32325560207209 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( Age_group85_ - -0.22453699894669 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.19999999999999;
MPRINT(EM_DIAGRAM):   if not missing( GenderAll ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderAll - 0.03972379553625 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderAll - -0.07143248756351 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderAll - -0.03196665369108 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderAll - 0.00645115574609 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderAll - 0.03143288838796 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   if not missing( GenderFemale ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderFemale - 0.04581022555643 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderFemale - 0.03402014666127 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderFemale - -0.02966180264674 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderFemale - -0.01576966512753 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderFemale - -0.02508421850109 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   if not missing( GenderMale ) then do;
MPRINT(EM_DIAGRAM):   CLUSvads [1] + ( GenderMale - -0.08528054650019 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [2] + ( GenderMale - 0.03840056389554 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [3] + ( GenderMale - 0.06151383681981 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [4] + ( GenderMale - 0.00907173928784 )**2;
MPRINT(EM_DIAGRAM):   CLUSvads [5] + ( GenderMale - -0.00690899980726 )**2;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else _vqmvar + 0.33333333333333;
MPRINT(EM_DIAGRAM):   _vqnvar = 4 - _vqmvar;
MPRINT(EM_DIAGRAM):   if _vqnvar <= 4.5474735088646E-12 then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = .;
MPRINT(EM_DIAGRAM):   Distance = .;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = 1;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [1];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   drop _vqfzdst;
MPRINT(EM_DIAGRAM):   do _vqclus = 2 to 5;
MPRINT(EM_DIAGRAM):   if CLUSvads [_vqclus] < _vqfzdst then do;
MPRINT(EM_DIAGRAM):   _SEGMENT_ = _vqclus;
MPRINT(EM_DIAGRAM):   Distance = CLUSvads [_vqclus];
MPRINT(EM_DIAGRAM):   _vqfzdst = Distance * 0.99999999999988;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   Distance = sqrt(Distance * (4 / _vqnvar));
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   CLUSvlex :;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMVQ ***;
MPRINT(EM_DIAGRAM):   ***************************************;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Creating Segment Label;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   length _SEGMENT_LABEL_ $80;
MPRINT(EM_DIAGRAM):   label _SEGMENT_LABEL_= 'Segment Description';
MPRINT(EM_DIAGRAM):   if _SEGMENT_ = 1 then _SEGMENT_LABEL_="Cluster1";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 2 then _SEGMENT_LABEL_="Cluster2";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 3 then _SEGMENT_LABEL_="Cluster3";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 4 then _SEGMENT_LABEL_="Cluster4";
MPRINT(EM_DIAGRAM):   else if _SEGMENT_ = 5 then _SEGMENT_LABEL_="Cluster5";
29267      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA STEP view saved on file EMWS1.CLUS_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
29268      quit;
29269      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
29270      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29271      * Clus: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Clus: Computing metadata for TRAIN data;
29272      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Clus\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Clus_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Clus_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Clus_TRAIN out=WORK.M3TXW3V0 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TXW3V0;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TXW3V0(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TXW3V0;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3TXW3V0;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M27NP57A NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M284LJFA(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   set WORK.M27NP57A;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Clus_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Clus";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Clus: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   retain _segFlag_ 0;
MPRINT(EM_DIAGRAM):   drop _segFlag_;
MPRINT(EM_DIAGRAM):   if upcase(name) = '_SEGMENT_' then do;
MPRINT(EM_DIAGRAM):   _segFlag_ = 1;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = '_SEGMENT_LABEL_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = 'DISTANCE' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = '_IMPUTE_' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if ^_segFlag_ and _eof_ then do;
MPRINT(EM_DIAGRAM):   type = 'N';
MPRINT(EM_DIAGRAM):   index = 'N';
MPRINT(EM_DIAGRAM):   indexType = 'NONE';
MPRINT(EM_DIAGRAM):   format = '';
MPRINT(EM_DIAGRAM):   informat = '';
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_';
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Variable';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_SEGMENT_LABEL_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   label = 'Segment Description';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = 'Distance';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = 'Distance to Cluster Seed';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   name = '_Impute_';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   level = 'INTERVAL';
MPRINT(EM_DIAGRAM):   label = '';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.CLUS_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.CLUS_TEST.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
