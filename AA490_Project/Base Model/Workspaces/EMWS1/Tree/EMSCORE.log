MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:26:21" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 12, 2019
Time:                16:26:21
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3JWZPVN "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3JWZPVN new;
MPRINT(EM_DIAGRAM):   run;
36767      %let EMEXCEPTIONSTRING=;
36768      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36769      * SCORE: Tree;
MPRINT(EM_DIAGRAM):   * SCORE: Tree;
36770      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36771      %let EM_ACTION = SCORE;
36772      %let syscc = 0;
36773      %macro main;
36774      
36775        %if %upcase(&EM_ACTION) = CREATE %then %do;
36776          filename temp catalog 'sashelp.emmodl.tree_create.source';
36777          %include temp;
36778          filename temp;
36779      
36780          %em_tree_create;
36781        %end;
36782      
36783         %else
36784         %if %upcase(&EM_ACTION) = TRAIN %then %do;
36785      
36786             filename temp catalog 'sashelp.emmodl.tree_train.source';
36787             %include temp;
36788             filename temp;
36789             %em_tree_train;
36790         %end;
36791      
36792        %else
36793        %if %upcase(&EM_ACTION) = SCORE %then %do;
36794          filename temp catalog 'sashelp.emmodl.tree_score.source';
36795          %include temp;
36796          filename temp;
36797      
36798          %em_tree_score;
36799      
36800        %end;
36801      
36802        %else
36803        %if %upcase(&EM_ACTION) = REPORT %then %do;
36804      
36805             filename temp catalog 'sashelp.emmodl.tree_report.source';
36806             %include temp;
36807             filename temp;
36808      
36809             %em_tree_report;
36810         %end;
36811      
36812        %else
36813        %if %upcase(&EM_ACTION) = OPENINT %then %do;
36814      
36815             filename temp catalog 'sashelp.emmodl.tree_actions.source';
36816             %include temp;
36817             filename temp;
36818             %EM_TREE_OPENTREEVIEWER;
36819      
36820         %end;
36821      
36822        %else
36823        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
36824      
36825             filename temp catalog 'sashelp.emmodl.tree_actions.source';
36826             %include temp;
36827             filename temp;
36828             %EM_TREE_CLOSETREEVIEWER;
36829      
36830         %end;
36831      
36832      
36833         %doendm:
36834      %mend main;
36835      
36836      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
36838     +%macro em_tree_score;
36840     +   /* determine if multiple targets will be processed */
36841     +   %let em_tree_multipleTargets=N;
36842     +   %let em_tree_numTarget=1;
36843     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
36844     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
36845     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
36846     +         %let em_tree_multipleTargets=N;
36847     +      %end;
36848     +      %else %do;
36849     +         /* create macro array of targets  */
36850     +         data _null_;
36851     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
36852     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
36853     +           if eof then
36854     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
36855     +        run;
36857     +        %if &em_tree_numTarget gt 1 %then %do;
36858     +           %let em_tree_multipleTargets=Y;
36859     +        %end;
36860     +      %end;
36861     +   %end;
36863     +   /* build flow and publish scoring code */
36864     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
36865     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
36867     +   filename treeflow "&EM_USER_TREEFLOW";
36868     +   filename treepub "&EM_USER_TREEPUBLISH";
36870     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
36871     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
36873     +   %em_copyfile(infref=treeflow, outfref=flowref);
36874     +   %em_copyfile(infref=treepub, outfref=pubref);
36876     +   filename treeflow;
36877     +   filename treepub;
36879     +   /* if priors are used, add code to generate unadjusted residuals in export */
36880     +   %let useAdjPriors = N;
36881     +   data _null_;
36882     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
36883     +     if USE="Y" then call symput('useAdjPriors', 'Y');
36884     +   run;
36885     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
36886     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
36887     +      %include temp;
36888     +      filename temp;
36890     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
36891     +      filename adjref "&EM_USER_adjResidualCode";
36892     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
36894     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
36896     +      filename adjref;
36897     +   %end;
36899     +   /* LEAF */
36900     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
36901     +      data _null_;
36902     +        file flowref mod;
36903     +        put 'drop _LEAF_;';
36904     +      run;
36906     +      data _null_;
36907     +        file pubref mod;
36908     +        put 'drop _LEAF_;';
36909     +      run;
36911     +   %end;
36913     +   filename flowref;
36914     +   filename pubref;
36916     +   /* em_metachange code */
36917     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
36918     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
36919     +   %end;
36921     +   /* variable selection based on importance stat    */
36922     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
36923     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
36924     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
36925     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
36926     +     %let obs = %sysfunc(fetch(&dsid));
36927     +     %do %while(&obs=0);
36928     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
36929     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
36930     +       %EM_METACHANGE(name=&varname, role=REJECTED);
36931     +       %let obs = %sysfunc(fetch(&dsid));
36932     +     %end;
36933     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
36934     +   %end;
36936     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
36937     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
36938     +    %let tree_pred_vars = ;
36939     +    %let tree_pred_lvl =;
36940     +    %let numpred= 0;
36942     +    data _null_;
36943     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
36944     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
36945     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
36946     +     if eof then
36947     +       call symput('numpred', strip(put(_N_, BEST.)));
36948     +    run;
36949     +   %end;
36951     +   %if &numpred ne 0 %then %do;
36952     +    %do i=1 %to &numpred;
36953     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
36954     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
36955     +    %end;
36956     +   %end;
36958     +   /* determine if multiple targets will be processed */
36959     +   %let em_tree_multipleTargets=N;
36960     +   %let em_tree_numTarget=1;
36961     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
36962     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
36963     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
36964     +         %let em_tree_multipleTargets=N;
36965     +      %end;
36966     +      %else %do;
36967     +        data _null_;
36968     +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
36969     +          if eof then
36970     +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
36971     +        run;
36973     +        %if &em_tree_numTarget gt 1 %then %do;
36974     +           %let em_tree_multipleTargets=Y;
36975     +        %end;
36976     +     %end;
36977     +   %end;
36979     +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
36980     +   %if "&em_tree_multipleTargets" eq "N" %then %do;
36982     +      /* variable importance */
36983     +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
36984     +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
36986     +         %let validexist=0;
36987     +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
36988     +           %let validexist=1;
36989     +         %end;
36991     +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
36992     +         /* and the columns may not be generated                                                                                 */
36993     +         %let em_tree_cvexists=;
36994     +         %let em_tree_surrexists=.;
36995     +         data _null_;
36996     +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
36997     +            if eof then do ;
36998     +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
36999     +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
37000     +            end;
37001     +         run;
37003     +         data &EM_USER_OUTIMPORT;
37004     +            set &EM_USER_OUTIMPORT;
37006     +            /* format columns based on Precison value specified */
37007     +            format importance 15.&EM_PROPERTY_PRECISION
37008     +                 %if &validexist %then %do;
37009     +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
37010     +                 %end;
37011     +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
37012     +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
37013     +                 %end;
37014     +            ;
37015     +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
37016     +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
37017     +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
37018     +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
37019     +                 %if "&em_tree_surrexists" ne "" %then %do;
37020     +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
37021     +                 %end;
37022     +                 %if &validexist %then %do;
37023     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
37024     +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
37025     +                 %end;
37026     +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
37027     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
37028     +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
37029     +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
37030     +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
37031     +                 %end;
37032     +            ;
37033     +         run;
37035     +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
37036     +      %end;
37037     +   %end;
37039     +   %doendm:
37040     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=12Nov2019:16:26:21,
      Create Time=12Nov2019:16:26:07

NOTE: 254 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 70.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=12Nov2019:16:26:21,
      Create Time=12Nov2019:16:26:07

NOTE: 248 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 68.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_OG_Cases_in_Thou_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_OG_CASES_IN_THOU_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9574,
      Last Modified=12Nov2019:16:26:21,
      Create Time=12Nov2019:16:26:07

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=9301,
      Last Modified=12Nov2019:16:26:21,
      Create Time=12Nov2019:16:26:07

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_OG_Cases_in_Thou_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_OG_CASES_IN_THOU_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_OG_Cases_in_Thousands");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 4 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: The data set EMWS1.TREE_OUTIMPORT has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.22116963808479;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
37041      
37042      *------------------------------------------------------------*;
37043      * End SCORE: Tree;
37044      *------------------------------------------------------------*;

37045      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
37046      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
37047      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

37048      filename x "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
37049      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
37050      file x;
MPRINT(EM_DIAGRAM):   file x;
37051      put 'if upcase(NAME) = "Q_OG_CASES_IN_THOUSANDS" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_OG_CASES_IN_THOUSANDS" then do;';
37052      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
37053      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
37054      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
37055      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
37056      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
37057      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
37058      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
37059      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=12Nov2019:16:26:21,
      Create Time=12Nov2019:16:26:07

NOTE: 8 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

37060      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
37061      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
37062      *------------------------------------------------------------*;
37063      * Tree: Scoring DATA data;
37064      *------------------------------------------------------------*;
37065      data EMWS1.Tree_TRAIN
37066      / view=EMWS1.Tree_TRAIN
37067      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_TRAIN / view=EMWS1.Tree_TRAIN ;
37068      set EMWS1.Part2_TRAIN
37069      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TRAIN ;
37070      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
37071     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37072     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
37073     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37074     +
37075     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
37076     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
37077     +
37078     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
37079     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
37080     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
37081     +label P_OG_Cases_in_Thousands = 'Predicted: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label P_OG_Cases_in_Thousands = 'Predicted: OG_Cases_in_Thousands' ;
37082     +label V_OG_Cases_in_Thousands = 'Validated: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label V_OG_Cases_in_Thousands = 'Validated: OG_Cases_in_Thousands' ;
37083     +label R_OG_Cases_in_Thousands = 'Residual: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label R_OG_Cases_in_Thousands = 'Residual: OG_Cases_in_Thousands' ;
37084     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
37085     +
37086     +
37087     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
37088     +LENGTH _ARBFMT_6 $      6; DROP _ARBFMT_6;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_6 $ 6;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_6;
37089     +_ARBFMT_6 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = ' ';
37090     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
37091     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
37092     +
37093     +
37094     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
37095     +IF  NOT MISSING(Projected_Sum_Pop ) AND
37096     +             2194576.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 2194576.5 <= Projected_Sum_Pop THEN DO;
37097     +  _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37098     +   %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2004.5 <= Year THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 2007.5 THEN DO;
37099     +  IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
37100     +    IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
37101     +                    2004.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 83900;
37102     +      IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 83400;
37103     +        Year  <               2007.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
37104     +        _NODE_  =                   26;
37105     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   ELSE DO;
37106     +        P_OG_Cases_in_Thousands  =                83900;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
37107     +        V_OG_Cases_in_Thousands  =                83400;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
37108     +        END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 93720;
37109     +      ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 92760;
MPRINT(EM_DIAGRAM):   END;
37110     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   END;
37111     +        _LEAF_  =                   19;
37112     +        P_OG_Cases_in_Thousands  =                93720;
MPRINT(EM_DIAGRAM):   ELSE DO;
37113     +        V_OG_Cases_in_Thousands  =                92760;
37114     +        END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2002.5 <= Year THEN DO;
37115     +      END;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
37116     +    ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 79920;
37117     +      IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 81120;
37118     +                      2002.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37119     +        _NODE_  =                   25;
37120     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   ELSE DO;
37121     +        P_OG_Cases_in_Thousands  =                79920;
37122     +        V_OG_Cases_in_Thousands  =                81120;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 1999.5 <= Year THEN DO;
37123     +        END;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
37124     +      ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 69984;
37125     +        IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 71070;
37126     +                        1999.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37127     +          _NODE_  =                   39;
37128     +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   ELSE DO;
37129     +          P_OG_Cases_in_Thousands  =                69984;
MPRINT(EM_DIAGRAM):   _NODE_ = 38;
37130     +          V_OG_Cases_in_Thousands  =                71070;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
37131     +          END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 74357.5;
37132     +        ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 73430;
MPRINT(EM_DIAGRAM):   END;
37133     +          _NODE_  =                   38;
MPRINT(EM_DIAGRAM):   END;
37134     +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   END;
37135     +          P_OG_Cases_in_Thousands  =              74357.5;
MPRINT(EM_DIAGRAM):   END;
37136     +          V_OG_Cases_in_Thousands  =                73430;
37137     +          END;
MPRINT(EM_DIAGRAM):   ELSE DO;
37138     +        END;
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37139     +      END;
37140     +    END;
37141     +  ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
37142     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
37143     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
37144     +    IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 47704.6153846153;
37145     +      IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 48942;
37146     +                      2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37147     +        _NODE_  =                   29;
37148     +        _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   ELSE DO;
37149     +        P_OG_Cases_in_Thousands  =     47704.6153846153;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
37150     +        V_OG_Cases_in_Thousands  =                48942;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
37151     +        END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 41105.7142857142;
37152     +      ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 41143.2;
MPRINT(EM_DIAGRAM):   END;
37153     +        _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   END;
37154     +        _LEAF_  =                   20;
37155     +        P_OG_Cases_in_Thousands  =     41105.7142857142;
MPRINT(EM_DIAGRAM):   ELSE DO;
37156     +        V_OG_Cases_in_Thousands  =              41143.2;
37157     +        END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37158     +      END;
37159     +    ELSE DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2007.5 <= Year THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
37160     +      IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
37161     +                      2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 41448;
37162     +        IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 41448;
37163     +                        2007.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37164     +          _NODE_  =                   41;
37165     +          _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   ELSE DO;
37166     +          P_OG_Cases_in_Thousands  =                41448;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
37167     +          V_OG_Cases_in_Thousands  =                41448;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
37168     +          END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 36550.909090909;
37169     +        ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 36290;
MPRINT(EM_DIAGRAM):   END;
37170     +          _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   END;
37171     +          _LEAF_  =                   23;
37172     +          P_OG_Cases_in_Thousands  =      36550.909090909;
MPRINT(EM_DIAGRAM):   ELSE DO;
37173     +          V_OG_Cases_in_Thousands  =                36290;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
37174     +          END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
37175     +        END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 32671.4285714285;
37176     +      ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 32476.8;
MPRINT(EM_DIAGRAM):   END;
37177     +        _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   END;
37178     +        _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   END;
37179     +        P_OG_Cases_in_Thousands  =     32671.4285714285;
MPRINT(EM_DIAGRAM):   END;
37180     +        V_OG_Cases_in_Thousands  =              32476.8;
37181     +        END;
MPRINT(EM_DIAGRAM):   ELSE DO;
37182     +      END;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37183     +    END;
37184     +  END;
37185     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
37186     +  _ARBFMT_19 = PUT( Age_group , $19.);
37187     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37188     +  IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
37189     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
37190     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1996.5 THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
37191     +    IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 1112.5;
37192     +      IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 1023.33333333333;
37193     +        Year  <               1996.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
37194     +        _NODE_  =                   20;
37195     +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   ELSE DO;
37196     +        P_OG_Cases_in_Thousands  =               1112.5;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
37197     +        V_OG_Cases_in_Thousands  =     1023.33333333333;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
37198     +        END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 828.333333333333;
37199     +      ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 784.615384615384;
MPRINT(EM_DIAGRAM):   END;
37200     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   END;
37201     +        _LEAF_  =                   11;
37202     +        P_OG_Cases_in_Thousands  =     828.333333333333;
MPRINT(EM_DIAGRAM):   ELSE DO;
37203     +        V_OG_Cases_in_Thousands  =     784.615384615384;
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37204     +        END;
37205     +      END;
37206     +    ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
37207     +      _ARBFMT_6 = PUT( Gender , $CHAR6.);
37208     +       %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 281.25;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 298.5;
37209     +      IF _ARBFMT_6 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   END;
37210     +        _NODE_  =                   23;
37211     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   ELSE DO;
37212     +        P_OG_Cases_in_Thousands  =               281.25;
The SAS System

37213     +        V_OG_Cases_in_Thousands  =                298.5;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1996 THEN DO;
37214     +        END;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
37215     +      ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 709.285714285714;
37216     +        IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 664.285714285714;
37217     +          Year  <                 1996 THEN DO;
MPRINT(EM_DIAGRAM):   END;
37218     +          _NODE_  =                   36;
37219     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   ELSE DO;
37220     +          P_OG_Cases_in_Thousands  =     709.285714285714;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
37221     +          V_OG_Cases_in_Thousands  =     664.285714285714;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
37222     +          END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 392.222222222222;
37223     +        ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 480;
MPRINT(EM_DIAGRAM):   END;
37224     +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   END;
37225     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   END;
37226     +          P_OG_Cases_in_Thousands  =     392.222222222222;
MPRINT(EM_DIAGRAM):   END;
37227     +          V_OG_Cases_in_Thousands  =                  480;
37228     +          END;
MPRINT(EM_DIAGRAM):   ELSE DO;
37229     +        END;
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37230     +      END;
37231     +    END;
37232     +  ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
37233     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
37234     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 7311;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 7465.3125;
37235     +    IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   END;
37236     +      _NODE_  =                    8;
37237     +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   ELSE DO;
37238     +      P_OG_Cases_in_Thousands  =                 7311;
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37239     +      V_OG_Cases_in_Thousands  =            7465.3125;
37240     +      END;
37241     +    ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
37242     +      _ARBFMT_6 = PUT( Gender , $CHAR6.);
37243     +       %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37244     +      IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
37245     +        _ARBFMT_19 = PUT( Age_group , $19.);
37246     +         %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2004.5 <= Year THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
37247     +        IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 1848;
37248     +          IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 1841.25;
37249     +                          2004.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37250     +            _NODE_  =                   43;
37251     +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   ELSE DO;
37252     +            P_OG_Cases_in_Thousands  =                 1848;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
37253     +            V_OG_Cases_in_Thousands  =              1841.25;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
37254     +            END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 3002.72727272727;
37255     +          ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 3035.45454545454;
MPRINT(EM_DIAGRAM):   END;
37256     +            _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   END;
37257     +            _LEAF_  =                    2;
37258     +            P_OG_Cases_in_Thousands  =     3002.72727272727;
MPRINT(EM_DIAGRAM):   ELSE DO;
37259     +            V_OG_Cases_in_Thousands  =     3035.45454545454;
37260     +            END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1998.5 THEN DO;
37261     +          END;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
37262     +        ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 4423.44827586206;
37263     +          IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 4510;
37264     +            Year  <               1998.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
37265     +            _NODE_  =                   44;
37266     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   ELSE DO;
37267     +            P_OG_Cases_in_Thousands  =     4423.44827586206;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
37268     +            V_OG_Cases_in_Thousands  =                 4510;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
37269     +            END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 5169.05660377358;
37270     +          ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 5135.58139534883;
MPRINT(EM_DIAGRAM):   END;
37271     +            _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   END;
37272     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   END;
37273     +            P_OG_Cases_in_Thousands  =     5169.05660377358;
37274     +            V_OG_Cases_in_Thousands  =     5135.58139534883;
MPRINT(EM_DIAGRAM):   ELSE DO;
37275     +            END;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37276     +          END;
37277     +        END;
37278     +      ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
37279     +        _ARBFMT_19 = PUT( Age_group , $19.);
37280     +         %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2007.5 <= Year THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
37281     +        IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2544;
37282     +          IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 2550;
37283     +                          2007.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37284     +            _NODE_  =                   47;
37285     +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   ELSE DO;
37286     +            P_OG_Cases_in_Thousands  =                 2544;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
37287     +            V_OG_Cases_in_Thousands  =                 2550;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
37288     +            END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 4236;
37289     +          ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 4298.75;
MPRINT(EM_DIAGRAM):   END;
37290     +            _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   END;
37291     +            _LEAF_  =                    6;
37292     +            P_OG_Cases_in_Thousands  =                 4236;
MPRINT(EM_DIAGRAM):   ELSE DO;
37293     +            V_OG_Cases_in_Thousands  =              4298.75;
37294     +            END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37295     +          END;
MPRINT(EM_DIAGRAM):   _NODE_ = 49;
37296     +        ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2956.07142857142;
37297     +          IF  NOT MISSING(Year ) AND
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 3011.73913043478;
37298     +                          2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   END;
37299     +            _NODE_  =                   49;
37300     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   ELSE DO;
37301     +            P_OG_Cases_in_Thousands  =     2956.07142857142;
MPRINT(EM_DIAGRAM):   _NODE_ = 48;
37302     +            V_OG_Cases_in_Thousands  =     3011.73913043478;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
37303     +            END;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2311.42857142857;
37304     +          ELSE DO;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 2336.42857142857;
MPRINT(EM_DIAGRAM):   END;
37305     +            _NODE_  =                   48;
MPRINT(EM_DIAGRAM):   END;
37306     +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   END;
37307     +            P_OG_Cases_in_Thousands  =     2311.42857142857;
MPRINT(EM_DIAGRAM):   END;
37308     +            V_OG_Cases_in_Thousands  =     2336.42857142857;
MPRINT(EM_DIAGRAM):   END;
37309     +            END;
MPRINT(EM_DIAGRAM):   END;
37310     +          END;
37311     +        END;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
37312     +      END;
MPRINT(EM_DIAGRAM):   IF MISSING( OG_Cases_in_Thousands ) THEN R_OG_Cases_in_Thousands = .;
37313     +    END;
37314     +  END;
37315     +
MPRINT(EM_DIAGRAM):   ELSE R_OG_Cases_in_Thousands = OG_Cases_in_Thousands - P_OG_Cases_in_Thousands ;
37316     +*****  RESIDUALS R_ *************;
37317     +IF MISSING( OG_Cases_in_Thousands ) THEN R_OG_Cases_in_Thousands  = .;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37318     +ELSE R_OG_Cases_in_Thousands  = OG_Cases_in_Thousands  -
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37319     +        P_OG_Cases_in_Thousands ;
37320     +
MPRINT(EM_DIAGRAM):   drop _LEAF_;
37321     +****************************************************************;
37322     +******          END OF DECISION TREE SCORING CODE         ******;
37323     +****************************************************************;
37324     +
37325     +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37326      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
37327      quit;
37328      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
37329      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
37330      *------------------------------------------------------------*;
37331      * Tree: Scoring VALIDATE data;
37332      *------------------------------------------------------------*;
37333      data EMWS1.Tree_VALIDATE
37334      / view=EMWS1.Tree_VALIDATE
37335      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_VALIDATE / view=EMWS1.Tree_VALIDATE ;
37336      set EMWS1.Part2_VALIDATE
37337      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_VALIDATE ;
37338      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
37339     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37340     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
37341     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37342     +
37343     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
37344     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
37345     +
37346     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
37347     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
37348     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
37349     +label P_OG_Cases_in_Thousands = 'Predicted: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label P_OG_Cases_in_Thousands = 'Predicted: OG_Cases_in_Thousands' ;
37350     +label V_OG_Cases_in_Thousands = 'Validated: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label V_OG_Cases_in_Thousands = 'Validated: OG_Cases_in_Thousands' ;
37351     +label R_OG_Cases_in_Thousands = 'Residual: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label R_OG_Cases_in_Thousands = 'Residual: OG_Cases_in_Thousands' ;
37352     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
37353     +
37354     +
37355     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
37356     +LENGTH _ARBFMT_6 $      6; DROP _ARBFMT_6;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_6 $ 6;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_6;
37357     +_ARBFMT_6 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = ' ';
37358     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
37359     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
37360     +
37361     +
37362     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
37363     +IF  NOT MISSING(Projected_Sum_Pop ) AND
37364     +             2194576.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 2194576.5 <= Projected_Sum_Pop THEN DO;
37365     +  _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37366     +   %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37367     +  IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
37368     +    IF  NOT MISSING(Year ) AND
37369     +                    2004.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2004.5 <= Year THEN DO;
37370     +      IF  NOT MISSING(Year ) AND
37371     +        Year  <               2007.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 2007.5 THEN DO;
37372     +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
37373     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
37374     +        P_OG_Cases_in_Thousands  =                83900;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 83900;
37375     +        V_OG_Cases_in_Thousands  =                83400;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 83400;
37376     +        END;
MPRINT(EM_DIAGRAM):   END;
37377     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37378     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
37379     +        _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
37380     +        P_OG_Cases_in_Thousands  =                93720;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 93720;
37381     +        V_OG_Cases_in_Thousands  =                92760;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 92760;
37382     +        END;
MPRINT(EM_DIAGRAM):   END;
37383     +      END;
MPRINT(EM_DIAGRAM):   END;
37384     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37385     +      IF  NOT MISSING(Year ) AND
37386     +                      2002.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2002.5 <= Year THEN DO;
37387     +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
37388     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
37389     +        P_OG_Cases_in_Thousands  =                79920;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 79920;
37390     +        V_OG_Cases_in_Thousands  =                81120;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 81120;
37391     +        END;
MPRINT(EM_DIAGRAM):   END;
37392     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37393     +        IF  NOT MISSING(Year ) AND
37394     +                        1999.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 1999.5 <= Year THEN DO;
37395     +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
37396     +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
37397     +          P_OG_Cases_in_Thousands  =                69984;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 69984;
37398     +          V_OG_Cases_in_Thousands  =                71070;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 71070;
37399     +          END;
MPRINT(EM_DIAGRAM):   END;
37400     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37401     +          _NODE_  =                   38;
MPRINT(EM_DIAGRAM):   _NODE_ = 38;
37402     +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
37403     +          P_OG_Cases_in_Thousands  =              74357.5;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 74357.5;
37404     +          V_OG_Cases_in_Thousands  =                73430;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 73430;
37405     +          END;
MPRINT(EM_DIAGRAM):   END;
37406     +        END;
MPRINT(EM_DIAGRAM):   END;
37407     +      END;
MPRINT(EM_DIAGRAM):   END;
37408     +    END;
MPRINT(EM_DIAGRAM):   END;
37409     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37410     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37411     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37412     +    IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
37413     +      IF  NOT MISSING(Year ) AND
37414     +                      2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37415     +        _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
37416     +        _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
37417     +        P_OG_Cases_in_Thousands  =     47704.6153846153;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 47704.6153846153;
37418     +        V_OG_Cases_in_Thousands  =                48942;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 48942;
37419     +        END;
MPRINT(EM_DIAGRAM):   END;
37420     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37421     +        _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
37422     +        _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
37423     +        P_OG_Cases_in_Thousands  =     41105.7142857142;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 41105.7142857142;
37424     +        V_OG_Cases_in_Thousands  =              41143.2;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 41143.2;
37425     +        END;
MPRINT(EM_DIAGRAM):   END;
37426     +      END;
MPRINT(EM_DIAGRAM):   END;
37427     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37428     +      IF  NOT MISSING(Year ) AND
37429     +                      2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37430     +        IF  NOT MISSING(Year ) AND
37431     +                        2007.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2007.5 <= Year THEN DO;
37432     +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
37433     +          _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
37434     +          P_OG_Cases_in_Thousands  =                41448;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 41448;
37435     +          V_OG_Cases_in_Thousands  =                41448;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 41448;
37436     +          END;
MPRINT(EM_DIAGRAM):   END;
37437     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37438     +          _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
37439     +          _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
37440     +          P_OG_Cases_in_Thousands  =      36550.909090909;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 36550.909090909;
37441     +          V_OG_Cases_in_Thousands  =                36290;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 36290;
37442     +          END;
MPRINT(EM_DIAGRAM):   END;
37443     +        END;
MPRINT(EM_DIAGRAM):   END;
37444     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37445     +        _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
37446     +        _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
37447     +        P_OG_Cases_in_Thousands  =     32671.4285714285;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 32671.4285714285;
37448     +        V_OG_Cases_in_Thousands  =              32476.8;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 32476.8;
37449     +        END;
MPRINT(EM_DIAGRAM):   END;
37450     +      END;
MPRINT(EM_DIAGRAM):   END;
37451     +    END;
MPRINT(EM_DIAGRAM):   END;
37452     +  END;
MPRINT(EM_DIAGRAM):   END;
37453     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37454     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37455     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37456     +  IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
37457     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37458     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37459     +    IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
37460     +      IF  NOT MISSING(Year ) AND
37461     +        Year  <               1996.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1996.5 THEN DO;
37462     +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
37463     +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
37464     +        P_OG_Cases_in_Thousands  =               1112.5;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 1112.5;
37465     +        V_OG_Cases_in_Thousands  =     1023.33333333333;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 1023.33333333333;
37466     +        END;
MPRINT(EM_DIAGRAM):   END;
37467     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37468     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
37469     +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
37470     +        P_OG_Cases_in_Thousands  =     828.333333333333;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 828.333333333333;
37471     +        V_OG_Cases_in_Thousands  =     784.615384615384;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 784.615384615384;
37472     +        END;
MPRINT(EM_DIAGRAM):   END;
37473     +      END;
MPRINT(EM_DIAGRAM):   END;
37474     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37475     +      _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37476     +       %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37477     +      IF _ARBFMT_6 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('MALE' ) THEN DO;
37478     +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
37479     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
37480     +        P_OG_Cases_in_Thousands  =               281.25;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 281.25;
37481     +        V_OG_Cases_in_Thousands  =                298.5;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 298.5;
37482     +        END;
MPRINT(EM_DIAGRAM):   END;
37483     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37484     +        IF  NOT MISSING(Year ) AND
37485     +          Year  <                 1996 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1996 THEN DO;
37486     +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
37487     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
37488     +          P_OG_Cases_in_Thousands  =     709.285714285714;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 709.285714285714;
37489     +          V_OG_Cases_in_Thousands  =     664.285714285714;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 664.285714285714;
37490     +          END;
MPRINT(EM_DIAGRAM):   END;
37491     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37492     +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
37493     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
37494     +          P_OG_Cases_in_Thousands  =     392.222222222222;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 392.222222222222;
37495     +          V_OG_Cases_in_Thousands  =                  480;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 480;
37496     +          END;
MPRINT(EM_DIAGRAM):   END;
37497     +        END;
MPRINT(EM_DIAGRAM):   END;
37498     +      END;
MPRINT(EM_DIAGRAM):   END;
37499     +    END;
MPRINT(EM_DIAGRAM):   END;
37500     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37501     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37502     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37503     +    IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
37504     +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
37505     +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
37506     +      P_OG_Cases_in_Thousands  =                 7311;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 7311;
37507     +      V_OG_Cases_in_Thousands  =            7465.3125;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 7465.3125;
37508     +      END;
MPRINT(EM_DIAGRAM):   END;
37509     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37510     +      _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37511     +       %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37512     +      IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
37513     +        _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37514     +         %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37515     +        IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
37516     +          IF  NOT MISSING(Year ) AND
37517     +                          2004.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2004.5 <= Year THEN DO;
37518     +            _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
37519     +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
37520     +            P_OG_Cases_in_Thousands  =                 1848;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 1848;
37521     +            V_OG_Cases_in_Thousands  =              1841.25;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 1841.25;
37522     +            END;
MPRINT(EM_DIAGRAM):   END;
37523     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37524     +            _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
37525     +            _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
37526     +            P_OG_Cases_in_Thousands  =     3002.72727272727;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 3002.72727272727;
37527     +            V_OG_Cases_in_Thousands  =     3035.45454545454;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 3035.45454545454;
37528     +            END;
MPRINT(EM_DIAGRAM):   END;
37529     +          END;
MPRINT(EM_DIAGRAM):   END;
37530     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37531     +          IF  NOT MISSING(Year ) AND
37532     +            Year  <               1998.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1998.5 THEN DO;
37533     +            _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
37534     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
37535     +            P_OG_Cases_in_Thousands  =     4423.44827586206;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 4423.44827586206;
37536     +            V_OG_Cases_in_Thousands  =                 4510;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 4510;
37537     +            END;
MPRINT(EM_DIAGRAM):   END;
37538     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37539     +            _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
37540     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
37541     +            P_OG_Cases_in_Thousands  =     5169.05660377358;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 5169.05660377358;
37542     +            V_OG_Cases_in_Thousands  =     5135.58139534883;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 5135.58139534883;
37543     +            END;
MPRINT(EM_DIAGRAM):   END;
37544     +          END;
MPRINT(EM_DIAGRAM):   END;
37545     +        END;
MPRINT(EM_DIAGRAM):   END;
37546     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37547     +        _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37548     +         %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37549     +        IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
37550     +          IF  NOT MISSING(Year ) AND
37551     +                          2007.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2007.5 <= Year THEN DO;
37552     +            _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
37553     +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
37554     +            P_OG_Cases_in_Thousands  =                 2544;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2544;
37555     +            V_OG_Cases_in_Thousands  =                 2550;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 2550;
37556     +            END;
MPRINT(EM_DIAGRAM):   END;
37557     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37558     +            _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
37559     +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
37560     +            P_OG_Cases_in_Thousands  =                 4236;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 4236;
37561     +            V_OG_Cases_in_Thousands  =              4298.75;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 4298.75;
37562     +            END;
MPRINT(EM_DIAGRAM):   END;
37563     +          END;
MPRINT(EM_DIAGRAM):   END;
37564     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37565     +          IF  NOT MISSING(Year ) AND
37566     +                          2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37567     +            _NODE_  =                   49;
MPRINT(EM_DIAGRAM):   _NODE_ = 49;
37568     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
37569     +            P_OG_Cases_in_Thousands  =     2956.07142857142;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2956.07142857142;
37570     +            V_OG_Cases_in_Thousands  =     3011.73913043478;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 3011.73913043478;
37571     +            END;
MPRINT(EM_DIAGRAM):   END;
37572     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37573     +            _NODE_  =                   48;
MPRINT(EM_DIAGRAM):   _NODE_ = 48;
37574     +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
37575     +            P_OG_Cases_in_Thousands  =     2311.42857142857;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2311.42857142857;
37576     +            V_OG_Cases_in_Thousands  =     2336.42857142857;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 2336.42857142857;
37577     +            END;
MPRINT(EM_DIAGRAM):   END;
37578     +          END;
MPRINT(EM_DIAGRAM):   END;
37579     +        END;
MPRINT(EM_DIAGRAM):   END;
37580     +      END;
MPRINT(EM_DIAGRAM):   END;
37581     +    END;
MPRINT(EM_DIAGRAM):   END;
37582     +  END;
MPRINT(EM_DIAGRAM):   END;
37583     +
37584     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
37585     +IF MISSING( OG_Cases_in_Thousands ) THEN R_OG_Cases_in_Thousands  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( OG_Cases_in_Thousands ) THEN R_OG_Cases_in_Thousands = .;
37586     +ELSE R_OG_Cases_in_Thousands  = OG_Cases_in_Thousands  -
37587     +        P_OG_Cases_in_Thousands ;
MPRINT(EM_DIAGRAM):   ELSE R_OG_Cases_in_Thousands = OG_Cases_in_Thousands - P_OG_Cases_in_Thousands ;
37588     +
37589     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37590     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
37591     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37592     +
37593     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37594      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
37595      quit;
37596      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
37597      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
37598      *------------------------------------------------------------*;
37599      * Tree: Scoring TEST data;
37600      *------------------------------------------------------------*;
37601      data EMWS1.Tree_TEST
37602      / view=EMWS1.Tree_TEST
37603      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_TEST / view=EMWS1.Tree_TEST ;
37604      set EMWS1.Part2_TEST
37605      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part2_TEST ;
37606      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
37607     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37608     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
37609     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37610     +
37611     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
37612     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
37613     +
37614     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
37615     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
37616     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
37617     +label P_OG_Cases_in_Thousands = 'Predicted: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label P_OG_Cases_in_Thousands = 'Predicted: OG_Cases_in_Thousands' ;
37618     +label V_OG_Cases_in_Thousands = 'Validated: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label V_OG_Cases_in_Thousands = 'Validated: OG_Cases_in_Thousands' ;
37619     +label R_OG_Cases_in_Thousands = 'Residual: OG_Cases_in_Thousands' ;
MPRINT(EM_DIAGRAM):   label R_OG_Cases_in_Thousands = 'Residual: OG_Cases_in_Thousands' ;
37620     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
37621     +
37622     +
37623     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
37624     +LENGTH _ARBFMT_6 $      6; DROP _ARBFMT_6;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_6 $ 6;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_6;
37625     +_ARBFMT_6 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = ' ';
37626     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
37627     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
37628     +
37629     +
37630     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
37631     +IF  NOT MISSING(Projected_Sum_Pop ) AND
37632     +             2194576.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 2194576.5 <= Projected_Sum_Pop THEN DO;
37633     +  _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37634     +   %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37635     +  IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
37636     +    IF  NOT MISSING(Year ) AND
37637     +                    2004.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2004.5 <= Year THEN DO;
37638     +      IF  NOT MISSING(Year ) AND
37639     +        Year  <               2007.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 2007.5 THEN DO;
37640     +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
37641     +        _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
37642     +        P_OG_Cases_in_Thousands  =                83900;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 83900;
37643     +        V_OG_Cases_in_Thousands  =                83400;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 83400;
37644     +        END;
MPRINT(EM_DIAGRAM):   END;
37645     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37646     +        _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
37647     +        _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
37648     +        P_OG_Cases_in_Thousands  =                93720;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 93720;
37649     +        V_OG_Cases_in_Thousands  =                92760;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 92760;
37650     +        END;
MPRINT(EM_DIAGRAM):   END;
37651     +      END;
MPRINT(EM_DIAGRAM):   END;
37652     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37653     +      IF  NOT MISSING(Year ) AND
37654     +                      2002.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2002.5 <= Year THEN DO;
37655     +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
37656     +        _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
37657     +        P_OG_Cases_in_Thousands  =                79920;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 79920;
37658     +        V_OG_Cases_in_Thousands  =                81120;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 81120;
37659     +        END;
MPRINT(EM_DIAGRAM):   END;
37660     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37661     +        IF  NOT MISSING(Year ) AND
37662     +                        1999.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 1999.5 <= Year THEN DO;
37663     +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
37664     +          _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
37665     +          P_OG_Cases_in_Thousands  =                69984;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 69984;
37666     +          V_OG_Cases_in_Thousands  =                71070;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 71070;
37667     +          END;
MPRINT(EM_DIAGRAM):   END;
37668     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37669     +          _NODE_  =                   38;
MPRINT(EM_DIAGRAM):   _NODE_ = 38;
37670     +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
37671     +          P_OG_Cases_in_Thousands  =              74357.5;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 74357.5;
37672     +          V_OG_Cases_in_Thousands  =                73430;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 73430;
37673     +          END;
MPRINT(EM_DIAGRAM):   END;
37674     +        END;
MPRINT(EM_DIAGRAM):   END;
37675     +      END;
MPRINT(EM_DIAGRAM):   END;
37676     +    END;
MPRINT(EM_DIAGRAM):   END;
37677     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37678     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37679     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37680     +    IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
37681     +      IF  NOT MISSING(Year ) AND
37682     +                      2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37683     +        _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
37684     +        _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
37685     +        P_OG_Cases_in_Thousands  =     47704.6153846153;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 47704.6153846153;
37686     +        V_OG_Cases_in_Thousands  =                48942;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 48942;
37687     +        END;
MPRINT(EM_DIAGRAM):   END;
37688     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37689     +        _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
37690     +        _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
37691     +        P_OG_Cases_in_Thousands  =     41105.7142857142;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 41105.7142857142;
37692     +        V_OG_Cases_in_Thousands  =              41143.2;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 41143.2;
37693     +        END;
MPRINT(EM_DIAGRAM):   END;
37694     +      END;
MPRINT(EM_DIAGRAM):   END;
37695     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37696     +      IF  NOT MISSING(Year ) AND
37697     +                      2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37698     +        IF  NOT MISSING(Year ) AND
37699     +                        2007.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2007.5 <= Year THEN DO;
37700     +          _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
37701     +          _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
37702     +          P_OG_Cases_in_Thousands  =                41448;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 41448;
37703     +          V_OG_Cases_in_Thousands  =                41448;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 41448;
37704     +          END;
MPRINT(EM_DIAGRAM):   END;
37705     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37706     +          _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
37707     +          _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
37708     +          P_OG_Cases_in_Thousands  =      36550.909090909;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 36550.909090909;
37709     +          V_OG_Cases_in_Thousands  =                36290;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 36290;
37710     +          END;
MPRINT(EM_DIAGRAM):   END;
37711     +        END;
MPRINT(EM_DIAGRAM):   END;
37712     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37713     +        _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
37714     +        _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
37715     +        P_OG_Cases_in_Thousands  =     32671.4285714285;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 32671.4285714285;
37716     +        V_OG_Cases_in_Thousands  =              32476.8;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 32476.8;
37717     +        END;
MPRINT(EM_DIAGRAM):   END;
37718     +      END;
MPRINT(EM_DIAGRAM):   END;
37719     +    END;
MPRINT(EM_DIAGRAM):   END;
37720     +  END;
MPRINT(EM_DIAGRAM):   END;
37721     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37722     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37723     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37724     +  IF _ARBFMT_19 IN ('18-24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('18-24' ) THEN DO;
37725     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37726     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37727     +    IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
37728     +      IF  NOT MISSING(Year ) AND
37729     +        Year  <               1996.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1996.5 THEN DO;
37730     +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
37731     +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
37732     +        P_OG_Cases_in_Thousands  =               1112.5;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 1112.5;
37733     +        V_OG_Cases_in_Thousands  =     1023.33333333333;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 1023.33333333333;
37734     +        END;
MPRINT(EM_DIAGRAM):   END;
37735     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37736     +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
37737     +        _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
37738     +        P_OG_Cases_in_Thousands  =     828.333333333333;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 828.333333333333;
37739     +        V_OG_Cases_in_Thousands  =     784.615384615384;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 784.615384615384;
37740     +        END;
MPRINT(EM_DIAGRAM):   END;
37741     +      END;
MPRINT(EM_DIAGRAM):   END;
37742     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37743     +      _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37744     +       %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37745     +      IF _ARBFMT_6 IN ('MALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('MALE' ) THEN DO;
37746     +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
37747     +        _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
37748     +        P_OG_Cases_in_Thousands  =               281.25;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 281.25;
37749     +        V_OG_Cases_in_Thousands  =                298.5;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 298.5;
37750     +        END;
MPRINT(EM_DIAGRAM):   END;
37751     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37752     +        IF  NOT MISSING(Year ) AND
37753     +          Year  <                 1996 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1996 THEN DO;
37754     +          _NODE_  =                   36;
MPRINT(EM_DIAGRAM):   _NODE_ = 36;
37755     +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
37756     +          P_OG_Cases_in_Thousands  =     709.285714285714;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 709.285714285714;
37757     +          V_OG_Cases_in_Thousands  =     664.285714285714;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 664.285714285714;
37758     +          END;
MPRINT(EM_DIAGRAM):   END;
37759     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37760     +          _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
37761     +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
37762     +          P_OG_Cases_in_Thousands  =     392.222222222222;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 392.222222222222;
37763     +          V_OG_Cases_in_Thousands  =                  480;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 480;
37764     +          END;
MPRINT(EM_DIAGRAM):   END;
37765     +        END;
MPRINT(EM_DIAGRAM):   END;
37766     +      END;
MPRINT(EM_DIAGRAM):   END;
37767     +    END;
MPRINT(EM_DIAGRAM):   END;
37768     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37769     +    _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37770     +     %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37771     +    IF _ARBFMT_6 IN ('ALL' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('ALL' ) THEN DO;
37772     +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
37773     +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
37774     +      P_OG_Cases_in_Thousands  =                 7311;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 7311;
37775     +      V_OG_Cases_in_Thousands  =            7465.3125;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 7465.3125;
37776     +      END;
MPRINT(EM_DIAGRAM):   END;
37777     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37778     +      _ARBFMT_6 = PUT( Gender , $CHAR6.);
MPRINT(EM_DIAGRAM):   _ARBFMT_6 = PUT( Gender , $CHAR6.);
37779     +       %DMNORMIP( _ARBFMT_6);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37780     +      IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_6 IN ('FEMALE' ) THEN DO;
37781     +        _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37782     +         %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37783     +        IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
37784     +          IF  NOT MISSING(Year ) AND
37785     +                          2004.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2004.5 <= Year THEN DO;
37786     +            _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
37787     +            _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
37788     +            P_OG_Cases_in_Thousands  =                 1848;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 1848;
37789     +            V_OG_Cases_in_Thousands  =              1841.25;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 1841.25;
37790     +            END;
MPRINT(EM_DIAGRAM):   END;
37791     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37792     +            _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
37793     +            _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
37794     +            P_OG_Cases_in_Thousands  =     3002.72727272727;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 3002.72727272727;
37795     +            V_OG_Cases_in_Thousands  =     3035.45454545454;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 3035.45454545454;
37796     +            END;
MPRINT(EM_DIAGRAM):   END;
37797     +          END;
MPRINT(EM_DIAGRAM):   END;
37798     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37799     +          IF  NOT MISSING(Year ) AND
37800     +            Year  <               1998.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND Year < 1998.5 THEN DO;
37801     +            _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
37802     +            _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
37803     +            P_OG_Cases_in_Thousands  =     4423.44827586206;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 4423.44827586206;
37804     +            V_OG_Cases_in_Thousands  =                 4510;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 4510;
37805     +            END;
MPRINT(EM_DIAGRAM):   END;
37806     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37807     +            _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
37808     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
37809     +            P_OG_Cases_in_Thousands  =     5169.05660377358;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 5169.05660377358;
37810     +            V_OG_Cases_in_Thousands  =     5135.58139534883;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 5135.58139534883;
37811     +            END;
MPRINT(EM_DIAGRAM):   END;
37812     +          END;
MPRINT(EM_DIAGRAM):   END;
37813     +        END;
MPRINT(EM_DIAGRAM):   END;
37814     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37815     +        _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
37816     +         %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
37817     +        IF _ARBFMT_19 IN ('0-17' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('0-17' ) THEN DO;
37818     +          IF  NOT MISSING(Year ) AND
37819     +                          2007.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2007.5 <= Year THEN DO;
37820     +            _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
37821     +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
37822     +            P_OG_Cases_in_Thousands  =                 2544;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2544;
37823     +            V_OG_Cases_in_Thousands  =                 2550;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 2550;
37824     +            END;
MPRINT(EM_DIAGRAM):   END;
37825     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37826     +            _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
37827     +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
37828     +            P_OG_Cases_in_Thousands  =                 4236;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 4236;
37829     +            V_OG_Cases_in_Thousands  =              4298.75;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 4298.75;
37830     +            END;
MPRINT(EM_DIAGRAM):   END;
37831     +          END;
MPRINT(EM_DIAGRAM):   END;
37832     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37833     +          IF  NOT MISSING(Year ) AND
37834     +                          2003.5 <= Year  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Year ) AND 2003.5 <= Year THEN DO;
37835     +            _NODE_  =                   49;
MPRINT(EM_DIAGRAM):   _NODE_ = 49;
37836     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
37837     +            P_OG_Cases_in_Thousands  =     2956.07142857142;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2956.07142857142;
37838     +            V_OG_Cases_in_Thousands  =     3011.73913043478;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 3011.73913043478;
37839     +            END;
MPRINT(EM_DIAGRAM):   END;
37840     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
37841     +            _NODE_  =                   48;
MPRINT(EM_DIAGRAM):   _NODE_ = 48;
37842     +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
37843     +            P_OG_Cases_in_Thousands  =     2311.42857142857;
MPRINT(EM_DIAGRAM):   P_OG_Cases_in_Thousands = 2311.42857142857;
37844     +            V_OG_Cases_in_Thousands  =     2336.42857142857;
MPRINT(EM_DIAGRAM):   V_OG_Cases_in_Thousands = 2336.42857142857;
37845     +            END;
MPRINT(EM_DIAGRAM):   END;
37846     +          END;
MPRINT(EM_DIAGRAM):   END;
37847     +        END;
MPRINT(EM_DIAGRAM):   END;
37848     +      END;
MPRINT(EM_DIAGRAM):   END;
37849     +    END;
MPRINT(EM_DIAGRAM):   END;
37850     +  END;
MPRINT(EM_DIAGRAM):   END;
37851     +
37852     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
37853     +IF MISSING( OG_Cases_in_Thousands ) THEN R_OG_Cases_in_Thousands  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( OG_Cases_in_Thousands ) THEN R_OG_Cases_in_Thousands = .;
37854     +ELSE R_OG_Cases_in_Thousands  = OG_Cases_in_Thousands  -
37855     +        P_OG_Cases_in_Thousands ;
MPRINT(EM_DIAGRAM):   ELSE R_OG_Cases_in_Thousands = OG_Cases_in_Thousands - P_OG_Cases_in_Thousands ;
37856     +
37857     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37858     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
37859     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
37860     +
37861     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
37862      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
37863      quit;
37864      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
37866      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
37867      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
37868      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

37869      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
37870      * Tree: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree: Computing metadata for TRAIN data;
37871      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree_TRAIN out=WORK.M0AYVM3T noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AYVM3T;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AYVM3T(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0AYVM3T;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0AYVM3T;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M175UPRS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TVBRDD(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   set WORK.M175UPRS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("OG_CASES_IN_THOUSANDS") model = "Tree";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_OG_CASES_IN_THOUSANDS" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
38224      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree_EMINFO;
38225      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
38226      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
38227      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
38231      run;
38232      proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
38233      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38234      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

38235      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
38236      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38237      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

38238      proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
38239      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38240      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

38241      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_EMINFO;
38242      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
38243      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
38244      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

38245      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
38246      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
38247      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
38248      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.TREE_TEST.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
