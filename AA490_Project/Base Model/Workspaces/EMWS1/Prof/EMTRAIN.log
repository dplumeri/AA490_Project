MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:17:49" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 12, 2019
Time:                16:17:49
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2PV2R_1 "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2PV2R_1 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:17:49" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
The SAS System

MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 12, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:17:49" );
MPRINT(EM_DIAGRAM):   file _OUT;
The SAS System

MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA 490\Final 
Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
36614      proc freq data=EMWS1.Prof_VariableSet noprint;
The SAS System

MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof_VariableSet noprint;
36615      table ROLE*LEVEL/out=WORK.ProfMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ProfMETA;
36616      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set WORK.PROFMETA has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

36617      proc print data=WORK.ProfMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ProfMETA label noobs;
36618      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
36619      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
36619    ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
36619    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
36620      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
36621      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
36622      run;

NOTE: There were 7 observations read from the data set WORK.PROFMETA.
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

36623      title10;
MPRINT(EM_DIAGRAM):   title10;
36624      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Base Model';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Base Model';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
The SAS System

MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36970      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36971      * Prof: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Prof: Generation of macros and macro variables;
36972      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
The SAS System

MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
36973      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

36974      %let EMEXCEPTIONSTRING=;
36975      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
36976      * TRAIN: Prof;
MPRINT(EM_DIAGRAM):   * TRAIN: Prof;
36977      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
36978      %let EM_ACTION = TRAIN;
36979      %let syscc = 0;
36980      %macro main;
36981         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
36982             options MPRINT;
36983         %end;
36984      
36985         filename temp catalog 'sashelp.emexpl.profile_macros.source';
36986         %include temp;
36987         filename temp;
36988      
36989         /* Initialize property macro variables */
36990         %SetProperties;
36991      
36992         %if %upcase(&EM_ACTION) = CREATE %then %do;
36993      
36994             filename temp catalog 'sashelp.emexpl.profile_create.source';
36995             %include temp;
36996             filename temp;
36997             %create;
36998         %end;
36999         %else
37000         %if %upcase(&EM_ACTION) = TRAIN %then %do;
37001      
37002             filename temp catalog 'sashelp.emexpl.profile_train.source';
37003             %include temp;
37004             filename temp;
37005             %train;
37006         %end;
37007      %mend main;
37008      
37009      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
37010     +%macro SetProperties;
37011     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
37012     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
37013     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
37014     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
37015     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
37016     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
37017     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
The SAS System

37018     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
37019     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
37020     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
37021     +%mend SetProperties;
37022     +
37023     +
37024     +%macro makeVarMacros(level= );
37025     +
37026     +    %let numvars = 0;
37027     +    %let where   = '';
37028     +
37029     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37030     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE
37030    !+in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
37031     +    %else
37032     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT'
37032    !+and LEVEL="&level" and USE in('Y', 'D'));
37033     +
37034     +    %if &level = INTERVAL %then %do;
37035     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
37036     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37037     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
37038     +    %end;
37039     +    %else %do;
37040     +        %if &level = NOMINAL %then %do;
37041     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
37041    !+&EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
37042     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
37043     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET +
37043    !+&EM_NUM_NOMINAL_TARGET);
37044     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and
37044    !+USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y',
37044    !+'D'));
37045     +             %end;
37046     +             %else
37047     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and
37047    !+USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
37048     +
37049     +        %end;
37050     +        %else %do;
37051     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
37052     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37053     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
37054     +        %end;
37055     +    %end;
37056     +
37057     +    %if &numvars>0 %then %do;
37058     +         %let numloop = %sysfunc(ceil(&numvars/10000));
37059     +         %let loopcount = 0;
37060     +
37061     +         %do %while((&numloop - &loopcount) > 0);
37062     +             %let first = %eval((&loopcount*10000) + 1);
37063     +             %let last  = %eval(&first + 10000);
37064     +             %let loopcount = %eval(&loopcount +1);
The SAS System

37065     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
37066     +             filename X catalog "&centry";
37067     +             data _null_;
37068     +                length _STRING_ $80;
37069     +                retain _STRING_ ;
37070     +                file X;
37071     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
37072     +
37073     +                where &where;
37074     +
37075     +                if _N_=1 then
37076     +                   put '%macro _PROFVAR;';
37077     +
37078     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
37079     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
37080     +                   if eof then do;
37081     +                      put _STRING_;
37082     +                      put '%mend _PROFVAR;';
37083     +                   end;
37084     +                end;
37085     +                else do;
37086     +                   put _STRING_;
37087     +                  _string_ = TRIM(NAME);
37088     +                   if eof then do;
37089     +                      put _string_;
37090     +                      put '%mend _PROFVAR;';
37091     +                   end;
37092     +                end;
37093     +             run;
37094     +             filename X;
37095     +         %end;
37096     +    %end;
37097     +
37098     +%mend makeVarMacros;
37099     +
37100     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
37101     +%macro _looparbor(level=, target=, rules=);
37102     +    %local where;
The SAS System

37103     +
37104     +    %if (&level eq or &target eq ) %then %goto doenda;
37105     +    %if &rules eq %then &rules = _TEMPRULE;
37106     +
37107     +    %let lnumvars = 0;
37108     +    %let where   = '';
37109     +
37110     +    %if &level = INTERVAL %then %do;
37111     +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
37112     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37113     +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
37114     +    %end;
37115     +    %else %do;
37116     +        %if &level = NOMINAL %then %do;
37117     +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
37117    !+&EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
37118     +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37119     +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET +
37119    !+&EM_NUM_NOMINAL_TARGET);
37120     +        %end;
37121     +        %else %do;
37122     +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
37123     +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37124     +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
37125     +        %end;
37126     +    %end;
37127     +
37128     +    %if &lnumvars>0 %then %do;
37129     +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
37130     +         %let loopcount = 0;
37131     +
37132     +         %do %while((&numloop - &loopcount) > 0);
37133     +             %let loopcount = %eval(&loopcount +1);
37134     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
37135     +             filename X catalog "&centry";
37136     +             %inc X;
37137     +
37138     +             proc arbor data=&EM_NODEID._TMP
37139     +
37140     +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
37141     +                 Criterion=GINI Leafsize=5 Mincatsize = 5
37142     +                 Maxbranch=5 Maxdepth=1
37143     +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
37144     +             %end;
37145     +             %else %do;
37146     +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
37147     +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
37148     +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
37149     +             %end;
37150     +
37151     +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
37152     +
37153     +                input %_PROFVAR
37154     +
The SAS System

37155     +                    / level = &level;
37156     +                target _SEG / level=binary;
37157     +
37158     +                Performance Disk NodeSize=10000;
37159     +                Assess NoValidata measure=MISC;
37160     +                SUBTREE BEST;
37161     +
37162     +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
37163     +                    save IMPORTANCE=_LOOPTEMPRULE;
37164     +                %end;
37165     +                %else %do;
37166     +                    save RULES=_LOOPTEMPRULE;
37167     +                %end;
37168     +             run;
37169     +             quit;
37170     +
37171     +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
37172     +                 proc append base=&RULES data=_LOOPTEMPRULE force;
37173     +                 run;
37174     +                 proc datasets lib=work nolist mt=(DATA VIEW);
37175     +                    delete _LOOPTEMPRULE;
37176     +                 run;
37177     +                 quit;
37178     +             %end;
37179     +
37180     +
37181     +             filename X;
37182     +         %end;
37183     +     %end;
37184     +
37185     +   %doenda:
37186     +
37187     +%mend _looparbor;
37188     +
37189     +%macro _arbor(target=, rules=, fit=);
37190     +   %local _numnomvars _numordvars _numintvars;
37191     +
37192     +   %if &target eq  %then %goto doendc;
37193     +   %if &rules eq %then &rules = _TEMPRULE;
37194     +   %if &fit   eq %then &fit   = _FIT;
37195     +
37196     +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
37197     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37198     +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
37199     +
37200     +
37201     +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +
37201    !+&EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
37202     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37203     +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET +
37203    !+&EM_NUM_NOMINAL_TARGET);
37204     +
37205     +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
37206     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
The SAS System

37207     +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
37208     +
37209     +   proc arbor data=&EM_NODEID._TMP
37210     +
37211     +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
37212     +      Criterion=GINI Leafsize=5 Mincatsize = 5
37213     +      Maxbranch=5 Maxdepth=1
37214     +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
37215     +   %end;
37216     +   %else %do;
37217     +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
37218     +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
37219     +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
37220     +   %end;
37221     +
37222     +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
37223     +
37224     +      %if &_numintvars %then %do;
37225     +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
37226     +
37227     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
37228     +              %EM_INTERVAL_TARGET
37229     +          %end;
37230     +
37231     +              / level = interval;
37232     +      %end;
37233     +
37234     +
37235     +      %if &_numnomvars %then %do;
37236     +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
37237     +
37238     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
37239     +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
37240     +          %end;
37241     +
37242     +              / level = nominal;
37243     +      %end;
37244     +
37245     +      %if &_numordvars %then %do;
37246     +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
37247     +
37248     +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
37249     +              %EM_ORDINAL_TARGET
37250     +         %end;
37251     +
37252     +             / level = ordinal;
37253     +      %end;
37254     +
37255     +      target _SEG / level=binary;
37256     +
37257     +      Performance Disk NodeSize=10000;
37258     +      Assess
37259     +
37260     +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
The SAS System

37261     +          Validata=&EM_NODEID._VALIDTMP
37262     +      %end;
37263     +      %else %do;
37264     +          NoValidata
37265     +      %end;
37266     +
37267     +      measure=MISC;
37268     +      SUBTREE BEST;
37269     +
37270     +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
37271     +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
37272     +                role=TRAIN;
37273     +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
37274     +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
37275     +                role=VALID;
37276     +          %end;
37277     +
37278     +          save IMPORTANCE=_RULE;
37279     +      %end;
37280     +      %else %do;
37281     +          save RULES=_RULE;
37282     +      %end;
37283     +
37284     +      ;
37285     +   run;
37286     +   quit;
37287     +
37288     +   %if %sysfunc(exist(_RULE)) %then %do;
37289     +       proc append base=&RULES data=_RULE force;
37290     +       run;
37291     +       proc datasets lib=work nolist mt=(DATA VIEW);
37292     +          delete _RULE;
37293     +       run;
37294     +       quit;
37295     +   %end;
37296     +
37297     +   %doendc:
37298     +
37299     +%mend _arbor;
37300     +
37301     +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
37302     +   %put &EM_CODEBAR;
37303     +   %put * Filtering input variables ;
37304     +   %put * SEGMENT= &segment;
37305     +   %put &EM_CODEBAR;
37306     +
37307     +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
37308     +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
37309     +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
37310     +
37311     +  %let _SEGMENT = &SEGMENT;
37312     +
37313     +  proc freq data=&EM_IMPORT_DATA noprint ;
37314     +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
The SAS System

37315     +
37316     +    %if %EM_FREQ ne %then %do;
37317     +        weight %EM_FREQ;
37318     +        where %EM_FREQ>=0;
37319     +    %end;
37320     +
37321     +  run ;
37322     +  proc sort data=&_segment;
37323     +     by descending count ;
37324     +  run ;
37325     +
37326     +  %let dsid       = %sysfunc(open(&_segment));
37327     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
37328     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
37329     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
37330     +
37331     +  %let dsid=%sysfunc(close(&dsid));
37332     +
37333     +  %let SEGMENTS=;
37334     +  %let COUNTS=;
37335     +  %let OTHERWHERE=;
37336     +  %let numLevels=;
37337     +  data _segs;
37338     +     length SegmentVariable $32 SegmentValue $200;
37339     +     retain SegmentVariable "&_Segment";
37340     +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,
37340    !+NOQUOTE))"
37341     +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,
37341    !+NOQUOTE))";
37342     +     drop &_segment cum othercount otherpct numLevels;
37343     +     retain cum othercount otherpct numLevels 0;
37344     +     format Count 8.;
37345     +     set &_segment end=eof;
37346     +
37347     +     %if &_segformat ne %then %do;
37348     +         SegmentValue= left(put(&_segment, &_segformat));
37349     +     %end;
37350     +     %else %do;
37351     +        %if &_segtype = N %then %do;
37352     +            SegmentValue= left(put(&_segment, best12.));
37353     +        %end;
37354     +        %else %do;
37355     +            SegmentValue = &_segment;
37356     +        %end;
37357     +     %end;
37358     +
37359     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
37360     +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
37360    !+'"','""'))) ;
37361     +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
37362     +        numLevels + 1;
37363     +        output;
37364     +     %end;
37365     +     %else %do;
The SAS System

37366     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' '
37366    !+and eof) then do;
37367     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
37367    !+'"','""'))) ;
37368     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
37369     +            numLevels + 1;
37370     +            output;
37371     +         end;
37372     +         else do;
37373     +            %if &_segtype = C or &_segformat ne %then %do;
37374     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
37375     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
37376     +            %end;
37377     +            %else %do;
37378     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
37378    !+strip(SegmentValue));
37379     +            %end;
37380     +            othercount = othercount + count;
37381     +            otherpct   = otherpct + percent;
37382     +            if eof then do;
37383     +               SegmentValue = '_OTHER_';
37384     +               count   = othercount;
37385     +               percent = otherpct;
37386     +               numLevels + 1;
37387     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
37388     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count,
37388    !+best.))) ;
37389     +               output;
37390     +            end;
37391     +         end;
37392     +         cum = cum + percent;
37393     +     %end;
37394     +     if eof then
37395     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
37396     +  run ;
37397     +
37398     +  title9 " " ;
37399     +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
37400     +  proc print data=_segs noobs label ;
37401     +  run ;
37402     +  title9;
37403     +  title10;
37404     +
37405     +  proc append base=&_sizeDs data=_segs force;
37406     +  run;
37407     +
37408     +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
37409     +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
37410     +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
37411     +
37412     +  /* Loop over segments */
37413     +  %do i=1 %to &numLevels;
37414     +     %if ^&numvars %then %do;
37415     +         %if %sysfunc(exist(&_reportDs)) %then %do;
The SAS System

37416     +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
37417     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
37417    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
37418     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
37418    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
37419     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
37419    !+  NOQUOTE))"
37420     +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
37420    !+NOQUOTE))"
37421     +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,
37421    !+NOQUOTE))";
37422     +                length SegmentVariable $32 SegmentValue $200;
37423     +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
37424     +                set &_reportDs;
37425     +                Rank = _N_;
37426     +             run;
37427     +             proc append base=&_varsDs data=_TEMPRULE force;
37428     +             run;
37429     +         %end;
37430     +         %goto doskip;
37431     +     %end;
37432     +
37433     +     %if &_segformat ne %then %do;
37434     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
37435     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
37436     +         %else
37437     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
37438     +     %end;
37439     +     %else %do;
37440     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
37441     +                 %let where= &_segment in(&OTHERWHERE);
37442     +         %else %do;
37443     +             %if &_segtype eq N %then
37444     +                 %let where= &_segment = &&segments&i;
37445     +             %else
37446     +                 %let where= &_segment = "&&segments&i";
37447     +         %end;
37448     +     %end;
37449     +
37450     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
37451     +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
37451    !+%EM_INTERVAL_TARGET
37452     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
37453     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED
37453    !+%EM_NOMINAL_REJECTED
37454     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
37455     +        if &where then
37456     +           _seg= 1 ;
37457     +        else
37458     +           _seg= 0 ;
37459     +     run ;
37460     +
37461     +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or
37461    !+%sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
The SAS System

37462     +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
37463     +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
37463    !+%EM_INTERVAL_TARGET
37464     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
37465     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED
37465    !+%EM_NOMINAL_REJECTED
37466     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
37467     +
37468     +             if &where then
37469     +                _seg= 1 ;
37470     +              else
37471     +                 _seg= 0 ;
37472     +          run ;
37473     +      %end;
37474     +
37475     +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED +
37475    !+&EM_NUM_INTERVAL_TARGET +
37476     +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
37477     +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  +
37477    !+ &EM_NUM_NOMINAL_REJECTED +
37478     +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
37479     +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
37480     +     %end;
37481     +     %else %do;
37482     +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
37483     +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
37484     +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
37485     +     %end;
37486     +
37487     +     /* Keeping the important variables */
37488     +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
37489     +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
37490     +            length Name $32;
37491     +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
37492     +            retain Name;
37493     +
37494     +            set _temprule;
37495     +
37496     +            where stat in('VARIABLE','WORTH');
37497     +
37498     +            if stat = 'VARIABLE' then
37499     +               Name = character_value;
37500     +            else
37501     +               output;
37502     +         run;
37503     +
37504     +         proc sort data=_TEMPRULE;
37505     +            by descending Worth;
37506     +         run;
37507     +
37508     +         %if %sysfunc(exist(&_reportDs)) %then %do;
37509     +             data _TEMPRULE;
37510     +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
37511     +             run;
The SAS System

37512     +             proc sort data= _TEMPRULE nodupkey;
37513     +                by variable;
37514     +             run;
37515     +             proc sort data=_TEMPRULE;
37516     +                by descending Worth;
37517     +             run;
37518     +         %end;
37519     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
37520     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
37520    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
37521     +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
37521    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
37522     +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
37522    !+ NOQUOTE))"
37523     +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
37523    !+NOQUOTE))"
37524     +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,
37524    !+NOQUOTE))";
37525     +            length SegmentVariable $32 SegmentValue $200;
37526     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
37527     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
37528     +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
37529     +            %end;
37530     +            %else %do;
37531     +                set _TEMPRULE;
37532     +            %end;
37533     +            Rank = _N_;
37534     +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
37535     +               put "&EM_CODEBAR";
37536     +               put "* No input variable meet the minimum worth criterion of
37536    !+&EM_PROPERTY_MINWORTH.";
37537     +               put "* You may identify profile variables by lowering this threshold, ";
37538     +               put "* or by increasing the maximum depth of the decision tree used.";
37539     +               put "&EM_CODEBAR";
37540     +            end;
37541     +         run;
37542     +     %end;
37543     +     %else %do;
37544     +         %if %sysfunc(exist(&_reportDs)) %then %do;
37545     +             data _TEMPRULE;
37546     +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
37547     +             run;
37548     +             proc sort data= _TEMPRULE nodupkey;
37549     +                by variable;
37550     +             run;
37551     +             proc sort data=_TEMPRULE;
37552     +                by descending Importance;
37553     +             run;
37554     +         %end;
37555     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
37556     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
37556    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
37557     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
37557    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
The SAS System

37558     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
37558    !+NOQUOTE))"
37559     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,
37559    !+ NOQUOTE))"
37560     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
37560    !+NOQUOTE))";
37561     +            length SegmentVariable $32 SegmentValue $200;
37562     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
37563     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
37564     +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
37565     +            %end;
37566     +            %else %do;
37567     +                set _TEMPRULE;
37568     +            %end;
37569     +            Rank = _N_;
37570     +         run;
37571     +     %end;
37572     +
37573     +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment,
37573    !+&&segments&i, &&counts&i))";
37574     +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
37575     +
37576     +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
37577     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
37578     +             proc print data=_TEMPRULE noobs label ;
37579     +                var Variable Worth Rank;
37580     +                where worth ne .;
37581     +             run ;
37582     +             data _TEMPRULE;
37583     +                set _TEMPRULE;
37584     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
37585     +             run;
37586     +         %end;
37587     +         %else %do;
37588     +             proc print data=_TEMPRULE noobs label ;
37589     +                var Variable Importance Rank;
37590     +                where importance ne .;
37591     +             run ;
37592     +         %end;
37593     +
37594     +     %end ;
37595     +
37596     +     title9;
37597     +     title10;
37598     +
37599     +     proc append base=&_varsDs data=_TEMPRULE force;
37600     +     run;
37601     +
37602     +     %if %sysfunc(exist(_FIT)) %then %do;
37603     +         data _FIT;
37604     +            length SegmentVariable $32 SegmentValue $200;
37605     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
37606     +
37607     +            %if %sysfunc(exist(_FIT2)) %then %do;
The SAS System

37608     +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
37609     +            %end;
37610     +            %else %do;
37611     +                set _FIT(keep=_MISC_);
37612     +            %end;
37613     +
37614     +         run;
37615     +         proc append base=&_fitDs data=_FIT force;
37616     +         run;
37617     +     %end;
37618     +
37619     +     %doskip:
37620     +
37621     +     proc datasets lib=work nolist mt=(DATA VIEW);
37622     +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
37623     +
37624     +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
37625     +            _TEMPRULE
37626     +        %end;
37627     +        %if %sysfunc(exist(_FIT))>0 %then %do;
37628     +            _FIT
37629     +        %end;
37630     +        %if %sysfunc(exist(_FIT2))>0 %then %do;
37631     +            _FIT2
37632     +        %end;
37633     +     ;
37634     +     run;
37635     +     quit;
37636     +  %end ;
37637     +%mend tree_profile;
37638     +
37639     +/* This macro loops over segment variables and determines important variables */
37640     +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
37641     +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
37642     +
37643     +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
37644     +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
37645     +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
37646     +
37647     +    %if _segmentvar eq %then %do;
37648     +        %put &EM_CODEBAR;
37649     +        %put * No segment variable defined ;
37650     +        %put &EM_CODEBAR;
37651     +        %goto doendep;
37652     +    %end;
37653     +
37654     +    %let sndx = 0;
37655     +
37656     +    %let svar = &_segmentvar;
37657     +    %if &svar ne %then %do;
37658     +        %makeVarMacros(LEVEL=INTERVAL);
37659     +        %makeVarMacros(LEVEL=NOMINAL);
37660     +        %makeVarMacros(LEVEL=ORDINAL);
37661     +    %end;
The SAS System

37662     +
37663     +    %do %while(&svar ne );
37664     +        %let sndx= %eval(&sndx+1);
37665     +        %let svar = %scan(&_segmentvar, &sndx,' ');
37666     +        %if &svar ne %then
37667     +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs,
37667    !+_fitDs=&_fitDs, _reportDs=&_reportDs);
37668     +    %end ;
37669     +
37670     +    proc datasets lib=&EM_LIB nolist;
37671     +       delete &EM_NODEID._MACS(mt=catalog);
37672     +    run;
37673     +
37674     +    %doendep:
37675     +%mend em_profile;
37676     +
37677     +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
37678     +   %put &EM_CODEBAR;
37679     +   %put * Summarizing variables ;
37680     +   %put * SEGMENT= &segment;
37681     +   %put &EM_CODEBAR;
37682     +
37683     +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then
37683    !+%goto doends;
37684     +
37685     +  %let _SEGMENT = &SEGMENT;
37686     +
37687     +  %let dsid       = %sysfunc(open(&_segment));
37688     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
37689     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
37690     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
37691     +
37692     +  %let dsid=%sysfunc(close(&dsid));
37693     +
37694     +  %let SEGMENTS=;
37695     +  %let COUNTS=;
37696     +  %let OTHERWHERE=;
37697     +  %let numLevels=;
37698     +  data _null_;
37699     +     retain cum othercount otherpct  numLevels 0;
37700     +     format Count 8.;
37701     +     set &_segment end=eof;
37702     +
37703     +     %if &_segformat ne %then %do;
37704     +         SegmentValue= strip(put(&_segment, &_segformat));
37705     +     %end;
37706     +     %else %do;
37707     +        %if &_segtype = N %then %do;
37708     +            SegmentValue= strip(put(&_segment, best12.));
37709     +        %end;
37710     +        %else %do;
37711     +            SegmentValue = &_segment;
37712     +        %end;
37713     +     %end;
The SAS System

37714     +
37715     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
37716     +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
37716    !+'"','""'))) ;
37717     +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
37718     +         numLevels + 1;
37719     +         output;
37720     +     %end;
37721     +     %else %do;
37722     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' '
37722    !+and eof) then do;
37723     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue,
37723    !+'"','""'))) ;
37724     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
37725     +            numLevels + 1;
37726     +            output;
37727     +         end;
37728     +         else do;
37729     +            %if &_segtype = C or &_segformat ne %then %do;
37730     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
37731     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
37732     +            %end;
37733     +            %else %do;
37734     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
37734    !+strip(SegmentValue));
37735     +            %end;
37736     +            othercount = othercount + count;
37737     +            otherpct   = otherpct + percent;
37738     +            if eof then do;
37739     +               SegmentValue = '_OTHER_';
37740     +               count   = othercount;
37741     +               percent = otherpct;
37742     +               numLevels + 1;
37743     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
37744     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count,
37744    !+best.))) ;
37745     +               output;
37746     +            end;
37747     +         end;
37748     +         cum = cum + percent;
37749     +     %end;
37750     +     if eof then
37751     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
37752     +  run ;
37753     +
37754     +  /* Loop over segments */
37755     +  %do S = 1 %to &numLevels;
37756     +     %if &_segformat ne %then %do;
37757     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
37758     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
37759     +         %else
37760     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
37761     +     %end;
37762     +     %else %do;
The SAS System

37763     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
37764     +                 %let where= &_segment in(&OTHERWHERE);
37765     +         %else %do;
37766     +             %if &_segtype eq N %then
37767     +                 %let where= &_segment = &&segments&s;
37768     +             %else
37769     +                 %let where= &_segment = "&&segments&s";
37770     +         %end;
37771     +     %end;
37772     +
37773     +     %let SEGVARS=;
37774     +     %let SEGCLASS=;
37775     +     data _tempStat;
37776     +        set &_varsDs;
37777     +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
37778     +        if Type eq 'I' then
37779     +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
37780     +        else
37781     +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
37782     +     run ;
37783     +
37784     +     %let _nobs = 0;
37785     +     %let dsid = %sysfunc(open(_tempStat));
37786     +     %if &dsid %then %do;
37787     +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
37788     +         %let dsid = %sysfunc(close(&dsid));
37789     +     %end;
37790     +     %if &_nobs<1 %then %goto doskips;
37791     +
37792     +     proc sort data=_tempStat;
37793     +        by Variable;
37794     +     run;
37795     +
37796     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
37797     +        set &EM_IMPORT_DATA;
37798     +
37799     +        where &where;
37800     +
37801     +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
37802     +            %inc &FormatFref;
37803     +        %end;
37804     +     run;
37805     +
37806     +     /* Profile Segment */
37807     +     %if &segclass ne %then %do;
37808     +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT,
37808    !+FREQ=%EM_FREQ);
37809     +         data _CLASS;
37810     +            length SegmentVariable $32 SegmentValue $200;
37811     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
37812     +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
37812    !+NOQUOTE))"
37813     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
37814     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
The SAS System

37815     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
37815    !+NOQUOTE))";
37816     +            set _CLASS;
37817     +         run;
37818     +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
37819     +         run;
37820     +         data _tempStat;
37821     +            merge _tempStat _STAT;
37822     +            by VARIABLE;
37823     +         run;
37824     +     %end;
37825     +     %if &segvars ne %then %do;
37826     +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
37827     +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS=
37827    !+&EM_PROPERTY_NUMHISTBARS);
37828     +         data _INTERVAL;
37829     +             length SegmentVariable $32 SegmentValue $200;
37830     +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
37831     +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
37831    !+NOQUOTE))"
37832     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
37833     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
37834     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
37834    !+NOQUOTE))";
37835     +             set _INTERVAL;
37836     +         run;
37837     +
37838     +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
37839     +         run;
37840     +
37841     +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
37842     +            by VARIABLE;
37843     +         run;
37844     +         data _tempStat;
37845     +            merge _tempStat _STAT;
37846     +            by VARIABLE;
37847     +         run;
37848     +
37849     +     %end;
37850     +
37851     +     proc sort data=_tempStat;
37852     +        by Rank;
37853     +     run;
37854     +     proc append base=&EM_USER_STATS data=_tempStat force;
37855     +     run;
37856     +
37857     +     %doskips:
37858     +
37859     +     proc datasets lib=work nolist mt=(DATA VIEW);
37860     +        delete _segment &EM_NODEID._TMP _interval _class
37861     +
37862     +        %if %sysfunc(exist(_tempStat))>0 %then %do;
37863     +            _tempStat
37864     +        %end;
The SAS System

37865     +     ;
37866     +     run;
37867     +     quit;
37868     +
37869     +
37870     +  %end ;
37871     +%mend segmentSummary;
37872     +
37873     +%macro train;
37874     +
37875     +   /* Retrieve data set name */
37876     +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
37877     +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
37878     +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
37879     +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
37880     +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
37881     +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
37882     +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
37883     +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
37884     +
37885     +   /* Delete previous data sets */
37886     +   proc datasets lib=&EM_LIB nolist;
37887     +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
37888     +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
37889     +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
37890     +   run;
37891     +
37892     +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
37893     +       or (&EM_IMPORT_DATA eq ) %then %do;
37894     +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
37895     +       %goto doendpt;
37896     +   %end;
37897     +
37898     +    proc sort data=&EM_DATA_VARIABLESET;
37899     +       by Name;
37900     +    run;
37901     +
37902     +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
37903     +
37904     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
37905     +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET
37905    !+%EM_ORDINAL_TARGET;
37906     +
37907     +    /* Add report variables */
37908     +    %let REPORT_VARS = ;
37909     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
37910     +        %let REPORT_VARS = %EM_TARGET;
37911     +    %end;
37912     +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
37913     +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
37914     +    %end;
37915     +
37916     +    %if &REPORT_VARS ne %then %do;
37917     +        data _tempreport;
The SAS System

37918     +           length Variable $32;
37919     +
37920     +        %let rndx= 0 ;
37921     +        %let rvar  = &REPORT_VARS;
37922     +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
37923     +            %let rndx= %eval(&rndx+1);
37924     +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
37925     +            %if &rvar ne %then %do;
37926     +                Variable="&rvar"; output;
37927     +            %end ;
37928     +        %end;
37929     +
37930     +        run;
37931     +    %end;
37932     +
37933     +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
37934     +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
37935     +
37936     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
37937     +
37938     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
37939     +        data &EM_USER_SELVARS;
37940     +           set _tempreport;
37941     +        run;
37942     +    %end;
37943     +
37944     +    proc sort data=&EM_USER_SELVARS;
37945     +       by Variable;
37946     +    run;
37947     +    data &EM_USER_SELVARS;
37948     +       length Type $1;
37949     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
37950     +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL
37950    !+rename=(NAME=Variable));
37951     +       by Variable;
37952     +       if LABEL eq '' then LABEL=VARIABLE;
37953     +       if a then do;
37954     +          if LEVEL = 'INTERVAL' then Type = 'I';
37955     +          else Type = 'C';
37956     +           output;
37957     +       end;
37958     +       drop LEVEL;
37959     +    run;
37960     +
37961     +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
37962     +       by Variable;
37963     +    run;
37964     +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
37965     +    %else
37966     +        %let selStat = Worth;
37967     +
37968     +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat)
37968    !+;
37969     +       length Type $1;
The SAS System

37970     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
37971     +       set _SummaryVars;
37972     +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
37973     +       rank = .; &selStat=.;
37974     +       if Label eq '' then Label=Variable;
37975     +   run;
37976     +
37977     +    /* Profile Entire Data */
37978     +   %put &EM_CODEBAR;
37979     +   %put * Profile Entire Data ;
37980     +   %put &EM_CODEBAR;
37981     +
37982     +    %let segvars=;
37983     +    %let segclass=;
37984     +    data _null_;
37985     +       set  &EM_USER_STATS;
37986     +       if Type = 'I' then
37987     +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
37988     +       else
37989     +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
37990     +    run ;
37991     +
37992     +    %if &segclass ne %then %do;
37993     +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT,
37993    !+FREQ=%EM_FREQ);
37994     +        data _CLASS;
37995     +           length SegmentVariable $32 SegmentValue $200;
37996     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
37997     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
37997    !+NOQUOTE))"
37998     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
37999     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
38000     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
38000    !+NOQUOTE))";
38001     +           set _CLASS;
38002     +        run;
38003     +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
38004     +        run;
38005     +
38006     +        proc sort data=_STAT;
38007     +           by VARIABLE;
38008     +        run;
38009     +        data &EM_USER_STATS;
38010     +            merge  &EM_USER_STATS _STAT;
38011     +            by VARIABLE;
38012     +        run;
38013     +    %end;
38014     +    %if &segvars ne %then %do;
38015     +        /* Computing Min and Max for Interval Variables */
38016     +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
38017     +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS=
38017    !+&EM_PROPERTY_NUMHISTBARS);
38018     +        data _INTERVAL;
38019     +           length SegmentVariable $32 SegmentValue $200;
The SAS System

38020     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
38021     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
38021    !+NOQUOTE))"
38022     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
38023     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
38024     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
38024    !+NOQUOTE))";
38025     +           set _INTERVAL;
38026     +        run;
38027     +
38028     +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
38029     +        run;
38030     +
38031     +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS)
38031    !+OUT=_STAT;
38032     +           by VARIABLE;
38033     +        run;
38034     +        data &EM_USER_STATS;
38035     +            merge  &EM_USER_STATS _STAT;
38036     +            by VARIABLE;
38037     +        run;
38038     +    %end;
38039     +
38040     +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
38041     +
38042     +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
38043     +        proc datasets lib=&EM_LIB nolist;
38044     +           delete &EM_NODEID._INTERVAL(mt=catalog);
38045     +        run;
38046     +    %end;
38047     +
38048     +    %if %sysfunc(exist(DATA_STAT)) %then %do;
38049     +        data _null_;
38050     +           file X;
38051     +
38052     +           %let dsid    =%sysfunc(open(DATA_STAT));
38053     +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
38054     +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
38055     +           %let obs = %sysfunc(fetch(&dsid));
38056     +
38057     +           put 'format' ;
38058     +
38059     +           %let _count = 0;
38060     +           %let _VARS=;
38061     +           %do %while(&obs=0);
38062     +
38063     +               %let _count = %eval(&_count +1);
38064     +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
38065     +               %let _VARS = &_VARS &_name;
38066     +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
38067     +               %do;
38068     +                  put "&_name &_fmtname..";
38069     +               %end;
38070     +               %let obs = %sysfunc(fetch(&dsid));
The SAS System

38071     +           %end;
38072     +           %let dsid=%sysfunc(close(&dsid));
38073     +           put ';';
38074     +        run;
38075     +    %end;
38076     +
38077     +    /* Profile Segments */
38078     +    %if _segmentvar eq %then %goto doendpt;
38079     +    %let sndx = 0;
38080     +
38081     +    %let svar = &_segmentvar;
38082     +    %do %while(&svar ne );
38083     +        %let sndx= %eval(&sndx+1);
38084     +        %let svar = %scan(&_segmentvar, &sndx,' ');
38085     +        %if &svar ne %then
38086     +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
38087     +    %end ;
38088     +
38089     +    filename X;
38090     +
38091     +    %doendpt:
38092     +
38093     +
38094     +    /* Set reports for the node */
38095     +    %let _keys= SIZE STATS CLASSDIST INTDIST;
38096     +
38097     +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then
38097    !+%do;
38098     +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
38099     +            data &EM_USER_INTDIST;
38100     +               set &EM_USER_INTDIST;
38101     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
38101    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
38102     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
38102    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
38103     +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,
38103    !+NOQUOTE))";
38104     +               if SegmentVariable = '_OVERALL_' then Color = 1;
38105     +               else Color = 0;
38106     +            run;
38107     +        %end;
38108     +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
38109     +            data &EM_USER_CLASSDIST;
38110     +               set &EM_USER_CLASSDIST;
38111     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
38111    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
38112     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
38112    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
38113     +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine,
38113    !+rpt_groupIndex_vlabel,  NOQUOTE))";
38114     +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
38115     +               else GroupIndex = 1;
38116     +            run;
38117     +        %end;
The SAS System

38118     +
38119     +        %let svar = &_segmentvar;
38120     +        %let sndx = 0;
38121     +        %do %while(&svar ne );
38122     +            %let sndx= %eval(&sndx+1);
38123     +            %let svar = %scan(&_segmentvar, &sndx,' ');
38124     +            %if &svar ne %then %do;
38125     +                %let autodisplay = N;
38126     +                %if &sndx = 1 %then
38127     +                    %let autodisplay = Y;
38128     +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview,
38128    !+SEGMENTVALUE=&svar,
38129     +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST,
38129    !+AUTODISPLAY=&autodisplay, BLOCK=Plot,
38130     +                      LOCALIZE=Y, COLOR=COLOR);
38131     +            %end;
38132     +        %end ;
38133     +    %end;
38134     +
38135     +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
38136     +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
38137     +            data &EM_USER_WORTH;
38138     +               set &EM_USER_STATS;
38139     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
38139    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
38140     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
38140    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
38141     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
38141    !+  NOQUOTE))"
38142     +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
38143     +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))"
38143    !+;
38144     +               where WORTH ne .;
38145     +            run;
38146     +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE,
38146    !+FREQ=WORTH,
38147     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH,
38147    !+DESCRIPTION=profworth, BLOCK=Plot,
38148     +                  LOCALIZE=Y, NCOLS=1);
38149     +        %end;
38150     +        %else %do;
38151     +            data &EM_USER_IMPORTANCE;
38152     +               set &EM_USER_STATS;
38153     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine,
38153    !+rpt_segmentvariable_vlabel,  NOQUOTE))"
38154     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine,
38154    !+rpt_segmentvalue_vlabel,  NOQUOTE))"
38155     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,
38155    !+NOQUOTE))"
38156     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,
38156    !+ NOQUOTE))"
38157     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,
38157    !+NOQUOTE))";
38158     +               where IMPORTANCE ne .;
The SAS System

38159     +            run;
38160     +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE,
38160    !+FREQ=IMPORTANCE,
38161     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE,
38161    !+DESCRIPTION=profimportance, BLOCK=Plot,
38162     +                  LOCALIZE=Y, NCOLS=1);
38163     +       %end;
38164     +    %end;
38165     +
38166     +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
38167     +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
38168     +            data &EM_USER_SIZE;
38169     +               merge &EM_USER_SIZE &EM_USER_FIT;
38170     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
38170    !+NOQUOTE))"
38171     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
38171    !+NOQUOTE))";
38172     +               format PERCENT 5.2;
38173     +               format COUNT 12.;
38174     +            run;
38175     +        %end;
38176     +        %else %do;
38177     +            data &EM_USER_SIZE;
38178     +               set &EM_USER_SIZE;
38179     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,
38179    !+NOQUOTE))"
38180     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,
38180    !+NOQUOTE))";
38181     +               format PERCENT 5.2;
38182     +               format COUNT 12.;
38183     +            run;
38184     +        %end;
38185     +
38186     +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE,
38186    !+Y=COUNT, TIPTEXT=PERCENT,
38187     +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y,
38187    !+LOCALIZE=Y);
38188     +
38189     +    %end;
38190     +
38191     +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
38192     +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
38193     +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
38194     +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
38195     +
38196     +    proc datasets lib=&EM_LIB nolist;
38197     +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog)
38197    !+&EM_NODEID._INTERVAL(mt=catalog);
38198     +    run;
38199     +
38200     +%mend train;
38201     +
38202     +
38203     +
The SAS System

NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof_SIZE Prof_STATS Prof_FIT Prof_WORTH Prof_IMPORTANCE Prof_SELVARS 
Prof_CLASSDIST Prof_INTDIST Prof_MACS(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS1.PROF_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof_VariableSet;
MPRINT(TRAIN):   by Name;
MPRINT(TRAIN):   run;

NOTE: There were 9 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set EMWS1.PROF_VARIABLESET has 9 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data _tempreport;
MPRINT(TRAIN):   length Variable $32;
MPRINT(TRAIN):   Variable="Age_group";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   Variable="Gender";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   Variable="OG_Cases_in_Thousands";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   Variable="Projected_Sum_Pop";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   Variable="Year";
MPRINT(TRAIN):   output;
The SAS System

MPRINT(TRAIN):   Variable="_dataobs_";
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   run;

NOTE: The data set WORK._TEMPREPORT has 6 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof_MACS.INTERVAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="INTERVAL" and USE='Y') or (ROLE ='INPUT' 
and LEVEL="INTERVAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_MACS.INTERVAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 12, 2019 04:17:49 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:49 PM,
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base 
      Model\Workspaces\EMWS1\prof_macs.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             9KB,
      File Size (bytes)=9216

NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 22.
NOTE: There were 2 observations read from the data set EMWS1.PROF_VARIABLESET.
The SAS System

      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and 
      (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof_MACS.NOMINAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or 
(ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_MACS.NOMINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:49 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:49 PM,
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base 
      Model\Workspaces\EMWS1\prof_macs.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408

NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 16.
NOTE: There were 2 observations read from the data set EMWS1.PROF_VARIABLESET.
The SAS System

      WHERE ((ROLE='REJECTED') and LEVEL in ('BINARY', 'NOMINAL') and (USE='Y')) or ((ROLE='INPUT') 
      and LEVEL in ('BINARY', 'NOMINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(EM_PROFILE):  ;
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(TREE_PROFILE):   proc freq data=EMWS1.Clus_TRAIN noprint ;
MPRINT(TREE_PROFILE):   table _SEGMENT_ / missing out=_SEGMENT_(keep=_SEGMENT_ count percent) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._SEGMENT_ has 5 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_SEGMENT_;
MPRINT(TREE_PROFILE):   by descending count ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 5 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGMENT_ has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _segs;
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_";
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value";
MPRINT(TREE_PROFILE):   drop _SEGMENT_ cum othercount otherpct numLevels;
MPRINT(TREE_PROFILE):   retain cum othercount otherpct numLevels 0;
MPRINT(TREE_PROFILE):   format Count 8.;
MPRINT(TREE_PROFILE):   set _SEGMENT_ end=eof;
MPRINT(TREE_PROFILE):   SegmentValue= left(put(_SEGMENT_, best12.));
MPRINT(TREE_PROFILE):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, 
'"','""'))) ;
The SAS System

MPRINT(TREE_PROFILE):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   else do;
MPRINT(TREE_PROFILE):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! 
strip(SegmentValue));
MPRINT(TREE_PROFILE):   othercount = othercount + count;
MPRINT(TREE_PROFILE):   otherpct = otherpct + percent;
MPRINT(TREE_PROFILE):   if eof then do;
MPRINT(TREE_PROFILE):   SegmentValue = '_OTHER_';
MPRINT(TREE_PROFILE):   count = othercount;
MPRINT(TREE_PROFILE):   percent = otherpct;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, 
best.))) ;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   cum = cum + percent;
MPRINT(TREE_PROFILE):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 5 observations read from the data set WORK._SEGMENT_.
NOTE: The data set WORK._SEGS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 " " ;
MPRINT(TREE_PROFILE):   title10 "Frequencies: _SEGMENT_";
MPRINT(TREE_PROFILE):   proc print data=_segs noobs label ;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 5 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SIZE data=_segs force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._SEGS to EMWS1.PROF_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS1.PROF_SIZE has 5 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 5 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof_VALIDTMP / view=Prof_VALIDTMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_VALIDATE(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 5 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_VALIDTMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 
Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   Projected_Sum_Pop Year
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   Age_group Gender
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
NOTE: View WORK.PROF_VALIDTMP.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      
MPRINT(_ARBOR):   Assess Validata=Prof_VALIDTMP measure=MISC;
The SAS System

NOTE: 1422988 kilobytes of physical memory.
NOTE: Will use 630 out of 630 training cases.
NOTE: Using memory pool with 22795264 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 92440 bytes of work memory.
NOTE: There were 473 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 473 observations read from the data set EMWS1.CLUS_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 33 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 630 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 33 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 33 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10) _tempReport;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: There were 6 observations read from the data set WORK._TEMPREPORT.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data= _TEMPRULE nodupkey;
MPRINT(TREE_PROFILE):   by variable;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" 
Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.001) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.001";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 5 Count: 166";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.001);
MPRINT(TREE_PROFILE):   run;

The SAS System

NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.001);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS1.PROF_SELVARS has 5 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK.PROF_VALIDTMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
The SAS System

      

MPRINT(TREE_PROFILE):   data Prof_VALIDTMP / view=Prof_VALIDTMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_VALIDATE(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_VALIDTMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 
Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   Projected_Sum_Pop Year
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   Age_group Gender
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
NOTE: View WORK.PROF_VALIDTMP.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(_ARBOR):   Assess Validata=Prof_VALIDTMP measure=MISC;
NOTE: 1422578 kilobytes of physical memory.
NOTE: Will use 630 out of 630 training cases.
NOTE: Using memory pool with 22795264 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 92440 bytes of work memory.
NOTE: There were 473 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 473 observations read from the data set EMWS1.CLUS_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 4 nodes and 3 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 31 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
The SAS System

NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 630 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 31 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 31 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10) _tempReport;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: There were 6 observations read from the data set WORK._TEMPREPORT.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data= _TEMPRULE nodupkey;
MPRINT(TREE_PROFILE):   by variable;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" 
Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.001) then do;
The SAS System

MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.001";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 1 Count: 132";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.001);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.001);
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: 6 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 11 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK.PROF_VALIDTMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TREE_PROFILE):   data Prof_VALIDTMP / view=Prof_VALIDTMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_VALIDATE(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_VALIDTMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
The SAS System


MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 
Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   Projected_Sum_Pop Year
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   Age_group Gender
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
NOTE: View WORK.PROF_VALIDTMP.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(_ARBOR):   Assess Validata=Prof_VALIDTMP measure=MISC;
NOTE: 1422578 kilobytes of physical memory.
NOTE: Will use 630 out of 630 training cases.
NOTE: Using memory pool with 22795264 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 92440 bytes of work memory.
NOTE: There were 473 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 473 observations read from the data set EMWS1.CLUS_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 4 nodes and 3 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 31 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 630 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 31 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 31 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
The SAS System

      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10) _tempReport;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: There were 6 observations read from the data set WORK._TEMPREPORT.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
The SAS System

      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data= _TEMPRULE nodupkey;
MPRINT(TREE_PROFILE):   by variable;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" 
Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.001) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.001";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 3 Count: 122";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
The SAS System

MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.001);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.001);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 16 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK.PROF_VALIDTMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof_VALIDTMP / view=Prof_VALIDTMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_VALIDATE(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_VALIDTMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 
Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   Projected_Sum_Pop Year
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   Age_group Gender
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
NOTE: View WORK.PROF_VALIDTMP.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(_ARBOR):   Assess Validata=Prof_VALIDTMP measure=MISC;
NOTE: 1422578 kilobytes of physical memory.
NOTE: Will use 630 out of 630 training cases.
NOTE: Using memory pool with 22795264 bytes.
The SAS System

NOTE: Passed training data 2 times.
NOTE: Training used 92440 bytes of work memory.
NOTE: There were 473 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 473 observations read from the data set EMWS1.CLUS_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 4 nodes and 3 leaves.
NOTE: Using subtree with 4 nodes and 3 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 4 nodes and 3 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 32 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 630 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 32 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 32 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
The SAS System

MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10) _tempReport;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: There were 6 observations read from the data set WORK._TEMPREPORT.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data= _TEMPRULE nodupkey;
MPRINT(TREE_PROFILE):   by variable;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
The SAS System


NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" 
Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.001) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.001";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 4 Count: 111";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.001);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.001);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
The SAS System

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 21 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK.PROF_VALIDTMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   data Prof_TMP / view=Prof_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TREE_PROFILE):   data Prof_VALIDTMP / view=Prof_VALIDTMP ;
The SAS System

MPRINT(TREE_PROFILE):   set EMWS1.Clus_VALIDATE(keep
MPRINT(TREE_PROFILE):  =Projected_Sum_Pop Year OG_Cases_in_Thousands Age_group Gender _SEGMENT_);
MPRINT(TREE_PROFILE):   if _SEGMENT_ = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;

NOTE: DATA STEP view saved on file WORK.PROF_VALIDTMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(_ARBOR):   proc arbor data=Prof_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 
Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   Projected_Sum_Pop Year
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   Age_group Gender
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
NOTE: View WORK.PROF_VALIDTMP.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(_ARBOR):   Assess Validata=Prof_VALIDTMP measure=MISC;
NOTE: 1422578 kilobytes of physical memory.
NOTE: Will use 630 out of 630 training cases.
NOTE: Using memory pool with 22795264 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 92440 bytes of work memory.
NOTE: There were 473 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 473 observations read from the data set EMWS1.CLUS_VALIDATE.
NOTE: The subtree sequence contains 2 subtrees. The largest has 4 nodes and 3 leaves.
NOTE: Using subtree with 4 nodes and 3 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 4 nodes and 3 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 32 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;

MPRINT(_ARBOR):   quit;

NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
The SAS System

      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 630 observations read from the data set WORK.PROF_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      

MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;

NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 32 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 32 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;

NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
The SAS System


NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10) _tempReport;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: There were 6 observations read from the data set WORK._TEMPREPORT.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   proc sort data= _TEMPRULE nodupkey;
MPRINT(TREE_PROFILE):   by variable;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" 
Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.001) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.001";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
The SAS System

MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9 "Variable: _SEGMENT_ Segment: 2 Count: 99";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;

NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.001);
MPRINT(TREE_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.001);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;

NOTE: Appending WORK._TEMPRULE to EMWS1.PROF_SELVARS.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_SELVARS has 26 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof_TMP Prof_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;

NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK.PROF_VALIDTMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_PROFILE):   proc datasets lib=EMWS1 nolist;
MPRINT(EM_PROFILE):   delete Prof_MACS(mt=catalog);
MPRINT(EM_PROFILE):   run;

NOTE: Deleting EMWS1.PROF_MACS (memtype=CATALOG).
MPRINT(TRAIN):  ;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof_SELVARS;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 26 observations read from the data set EMWS1.PROF_SELVARS.
NOTE: The data set EMWS1.PROF_SELVARS has 26 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_SELVARS;
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   merge EMWS1.Prof_SELVARS(in=a) EMWS1.Prof_VariableSet(keep=NAME LEVEL LABEL 
rename=(NAME=Variable));
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   if LABEL eq '' then LABEL=VARIABLE;
MPRINT(TRAIN):   if a then do;
MPRINT(TRAIN):   if LEVEL = 'INTERVAL' then Type = 'I';
MPRINT(TRAIN):   else Type = 'C';
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   end;
MPRINT(TRAIN):   drop LEVEL;
MPRINT(TRAIN):   run;

The SAS System

WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This might 
         cause unexpected results.
NOTE: There were 26 observations read from the data set EMWS1.PROF_SELVARS.
NOTE: There were 9 observations read from the data set EMWS1.PROF_VARIABLESET.
NOTE: The data set EMWS1.PROF_SELVARS has 26 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=EMWS1.Prof_SELVARS out=_SummaryVars nodupkey;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;

NOTE: There were 26 observations read from the data set EMWS1.PROF_SELVARS.
NOTE: 20 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank 
Worth);
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   set _SummaryVars;
MPRINT(TRAIN):   SegmentVariable= "_OVERALL_";
MPRINT(TRAIN):   SegmentValue= "EMWS1.Clus_TRAIN" ;
MPRINT(TRAIN):   rank = .;
MPRINT(TRAIN):   Worth=.;
MPRINT(TRAIN):   if Label eq '' then Label=Variable;
MPRINT(TRAIN):   run;

NOTE: There were 6 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS1.PROF_STATS has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Prof_STATS;
MPRINT(TRAIN):   if Type = 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(TRAIN):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   run ;

NOTE: There were 6 observations read from the data set EMWS1.PROF_STATS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:50 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
      File Size (bytes)=5120

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38204     +%macro _vars;
38205     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.Clus_TRAIN nonorm 
classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   Age_group Gender;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 630   Memory used = 511K.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 8 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 8 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
The SAS System

NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _CLASS;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.Clus_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = 
"Percent";
MPRINT(TRAIN):   set _CLASS;
MPRINT(TRAIN):   run;

NOTE: There were 8 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8 observations read from the data set WORK._CLASS.
NOTE: The data set EMWS1.PROF_CLASSDIST has 8 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


MPRINT(TRAIN):   data EMWS1.Prof_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 6 observations read from the data set EMWS1.PROF_STATS.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF_STATS has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:50 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            17KB,
      File Size (bytes)=17408

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38206     +%macro _vars;
38207     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Clus_TRAIN(obs=1000000) 
varout=_STAT(rename=(NAME=VARIABLE));
The SAS System

MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 630   Memory used = 511K.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.Clus_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=9;
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
The SAS System

MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 630   Memory used = 511K.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: The data set WORK._CLASSOUT has 32 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<9));
MPRINT(VAR_PROFILE):   run;

NOTE: There were 32 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._COUNT has 1 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 32 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 32 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ 
RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;

The SAS System

NOTE: There were 32 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 4 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT9 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 1 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.Clus_TRAIN(keep
MPRINT(VAR_PROFILE):  = OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_ obs=1000000);
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
The SAS System

      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 
95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
NOTE: There were 630 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 5 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;

NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=DATA_STAT(rename=(_NAME_=VARIABLE COL1=MIN 
COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 4 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=DATA_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

The SAS System

NOTE: There were 4 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 4 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   set DATA_STAT;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{20};
MPRINT(VAR_PROFILE):   array _bounds{20};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/8;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/8;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
The SAS System

MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 4 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   merge DATA_STAT _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;

WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might 
         cause unexpected results.
NOTE: There were 4 observations read from the data set WORK.DATA_STAT.
NOTE: There were 1 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 4 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set DATA_STAT end=eof;
MPRINT(VAR_PROFILE):   array _bounds{18};
MPRINT(VAR_PROFILE):   array _midpoint{18};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 18-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=Tue, Nov 12, 2019 04:17:51 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\em.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             5KB,
The SAS System

      File Size (bytes)=5120

NOTE: 40 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 27.
NOTE: There were 4 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
38208     +proc format;
MPRINT(VAR_PROFILE):   proc format;
38209     +value F1_
38210     +LOW -12097.5 ="6078.75 "
38211     +12097.5 -24135 ="18116.25 "
38212     +24135 -36172.5 ="30153.75 "
38213     +36172.5 -48210 ="42191.25 "
38214     +48210 -60247.5 ="54228.75 "
38215     +60247.5 -72285 ="66266.25 "
38216     +72285 -84322.5 ="78303.75 "
38217     +84322.5 -HIGH="90341.25 "
38218     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -12097.5 ="6078.75 " 12097.5 -24135 ="18116.25 " 24135 -36172.5 
="30153.75 " 36172.5 -48210 ="42191.25 " 48210 -60247.5 ="54228.75 " 60247.5 -72285 ="66266.25 " 
72285 -84322.5 ="78303.75 " 84322.5 -HIGH="90341.25 " ;
NOTE: Format F1_ has been output.
38219     +value F2_
38220     +251809 ="251809 "
38221     +648952 ="648952 "
38222     +1640759 ="1640759 "
38223     +1921193 ="1921193 "
38224     +2467960 ="2467960 "
38225     +;
MPRINT(VAR_PROFILE):   value F2_ 251809 ="251809 " 648952 ="648952 " 1640759 ="1640759 " 1921193 
="1921193 " 2467960 ="2467960 " ;
NOTE: Format F2_ has been output.
MPRINT(VAR_PROFILE):   ;
38226     +;
38227     +value F3_
38228     +LOW -1992.5 ="1991.25 "
38229     +1992.5 -1995 ="1993.75 "
38230     +1995 -1997.5 ="1996.25 "
38231     +1997.5 -2000 ="1998.75 "
38232     +2000 -2002.5 ="2001.25 "
38233     +2002.5 -2005 ="2003.75 "
38234     +2005 -2007.5 ="2006.25 "
38235     +2007.5 -HIGH="2008.75 "
38236     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -1992.5 ="1991.25 " 1992.5 -1995 ="1993.75 " 1995 -1997.5 
="1996.25 " 1997.5 -2000 ="1998.75 " 2000 -2002.5 ="2001.25 " 2002.5 -2005 ="2003.75 " 2005 -2007.5 
="2006.25 " 2007.5 -HIGH="2008.75 " ;
NOTE: Format F3_ has been output.
The SAS System

38237     +value F4_
38238     +LOW -197 ="99 "
38239     +197 -393 ="295 "
38240     +393 -589 ="491 "
38241     +589 -785 ="687 "
38242     +785 -981 ="883 "
38243     +981 -1177 ="1079 "
38244     +1177 -1373 ="1275 "
38245     +1373 -HIGH="1471 "
38246     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -197 ="99 " 197 -393 ="295 " 393 -589 ="491 " 589 -785 ="687 " 
785 -981 ="883 " 981 -1177 ="1079 " 1177 -1373 ="1275 " 1373 -HIGH="1471 " ;
NOTE: Format F4_ has been output.
MPRINT(VAR_PROFILE):   run;
38247     +run;

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.Clus_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format OG_Cases_in_Thousands F1_. Projected_Sum_Pop F2_. Year F3_. _dataobs_ 
F4_. ;
MPRINT(VAR_PROFILE):   run;

NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) 
classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 630   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 630 observations read from the data set EMWS1.CLUS_TRAIN.
The SAS System

NOTE: There were 630 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 29 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 29 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 29 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _INTERVAL;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.Clus_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = 
"Percent";
MPRINT(TRAIN):   set _INTERVAL;
MPRINT(TRAIN):   run;

NOTE: There were 29 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 29 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
The SAS System

      

MPRINT(TRAIN):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(TRAIN):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 29 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS1.PROF_INTDIST has 29 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) 
OUT=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;

NOTE: There were 6 observations read from the data set EMWS1.PROF_STATS.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF_STATS has 6 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   filename X catalog "EMWS1.Prof_INTERVAL.FORMAT.source";
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   file X;
MPRINT(TRAIN):   put 'format' ;
MPRINT(TRAIN):   put "OG_Cases_in_Thousands F1_.";
MPRINT(TRAIN):   put "Projected_Sum_Pop F2_.";
MPRINT(TRAIN):   put "Year F3_.";
MPRINT(TRAIN):   put "_dataobs_ F4_.";
MPRINT(TRAIN):   put ';';
MPRINT(TRAIN):   run;

NOTE: The file X is:
      Catalog Name=EMWS1.PROF_INTERVAL.FORMAT.SOURCE,
      Catalog Page Size=4096,
The SAS System

      Number of Catalog Pages=4,
      Created=Tue, Nov 12, 2019 04:17:51 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base 
      Model\Workspaces\EMWS1\prof_interval.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=             9KB,
      File Size (bytes)=9216

NOTE: 6 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 26.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= _SEGMENT_
*------------------------------------------------------------*
MPRINT(SEGMENTSUMMARY):   data _null_;
MPRINT(SEGMENTSUMMARY):   retain cum othercount otherpct numLevels 0;
MPRINT(SEGMENTSUMMARY):   format Count 8.;
MPRINT(SEGMENTSUMMARY):   set _SEGMENT_ end=eof;
MPRINT(SEGMENTSUMMARY):   SegmentValue= strip(put(_SEGMENT_, best12.));
MPRINT(SEGMENTSUMMARY):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, 
'"','""'))) ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   else do;
MPRINT(SEGMENTSUMMARY):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! 
strip(SegmentValue));
MPRINT(SEGMENTSUMMARY):   othercount = othercount + count;
MPRINT(SEGMENTSUMMARY):   otherpct = otherpct + percent;
MPRINT(SEGMENTSUMMARY):   if eof then do;
MPRINT(SEGMENTSUMMARY):   SegmentValue = '_OTHER_';
MPRINT(SEGMENTSUMMARY):   count = othercount;
MPRINT(SEGMENTSUMMARY):   percent = otherpct;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, 
best.))) ;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   cum = cum + percent;
MPRINT(SEGMENTSUMMARY):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(SEGMENTSUMMARY):   run ;
The SAS System


NOTE: There were 5 observations read from the data set WORK._SEGMENT_.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="5";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 5 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='5');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 5;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
38248     +format
38249     +OG_Cases_in_Thousands F1_.
38250     +Projected_Sum_Pop F2_.
38251     +Year F3_.
38252     +_dataobs_ F4_.
38253     +;
MPRINT(SEGMENTSUMMARY):   format OG_Cases_in_Thousands F1_. Projected_Sum_Pop F2_. Year F3_. 
_dataobs_ F4_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
The SAS System

      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38254     +%macro _vars;
38255     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE 
LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   Age_group;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 166   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
The SAS System

NOTE: There were 166 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 166 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 3 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 3 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
The SAS System

MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 3 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: There were 3 observations read from the data set WORK._CLASS.
NOTE: 3 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 11 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
The SAS System


NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38256     +%macro _vars;
38257     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
The SAS System

      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 166   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 166 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 166 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

The SAS System

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE 
FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 166   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      
NOTE: There were 166 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=5;
NOTE: There were 166 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 20 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 20 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 20 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "5";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 20 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 20 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 20 observations read from the data set WORK._INTERVAL.
NOTE: 20 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 49 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS 
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_STATS has 11 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="1";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 6 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 1;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
38258     +format
38259     +OG_Cases_in_Thousands F1_.
38260     +Projected_Sum_Pop F2_.
38261     +Year F3_.
38262     +_dataobs_ F4_.
38263     +;
MPRINT(SEGMENTSUMMARY):   format OG_Cases_in_Thousands F1_. Projected_Sum_Pop F2_. Year F3_. 
_dataobs_ F4_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
The SAS System

      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38264     +%macro _vars;
38265     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE 
LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   Age_group Gender;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 132   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 132 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 132 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 5 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
The SAS System

MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 5 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
The SAS System


MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: There were 5 observations read from the data set WORK._CLASS.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 16 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
The SAS System

      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38266     +%macro _vars;
38267     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 132   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 132 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 132 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
The SAS System

      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE 
FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 132   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 132 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=1;
NOTE: There were 132 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

The SAS System

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 14 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 14 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
The SAS System

NOTE: There were 14 observations read from the data set WORK._INTERVAL.
NOTE: 14 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 63 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS 
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: 6 observations added.
NOTE: The data set EMWS1.PROF_STATS has 17 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="3";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 5 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 3;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
38268     +format
38269     +OG_Cases_in_Thousands F1_.
38270     +Projected_Sum_Pop F2_.
The SAS System

38271     +Year F3_.
38272     +_dataobs_ F4_.
38273     +;
MPRINT(SEGMENTSUMMARY):   format OG_Cases_in_Thousands F1_. Projected_Sum_Pop F2_. Year F3_. 
_dataobs_ F4_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:51 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38274     +%macro _vars;
38275     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
The SAS System

MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE 
LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   Age_group;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 122   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 122 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 122 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
The SAS System


NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
The SAS System

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 18 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:52 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
The SAS System

38276     +%macro _vars;
38277     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 122   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: There were 122 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 122 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
The SAS System

MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE 
FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 122   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 122 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=3;
NOTE: There were 122 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 12 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 12 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 12 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
The SAS System


NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 12 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 12 observations read from the data set WORK._INTERVAL.
NOTE: 12 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 75 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS 
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

The SAS System

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_STATS has 22 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
The SAS System

MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="4";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 5 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 4;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
38278     +format
38279     +OG_Cases_in_Thousands F1_.
38280     +Projected_Sum_Pop F2_.
38281     +Year F3_.
38282     +_dataobs_ F4_.
38283     +;
MPRINT(SEGMENTSUMMARY):   format OG_Cases_in_Thousands F1_. Projected_Sum_Pop F2_. Year F3_. 
_dataobs_ F4_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
The SAS System

MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:52 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38284     +%macro _vars;
38285     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE 
LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   Age_group;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 111   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 111 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 111 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

The SAS System

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 20 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:52 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38286     +%macro _vars;
38287     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

The SAS System

NOTE: Records processed = 111   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 111 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 111 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE 
FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 111   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
The SAS System

      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 111 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=4;
NOTE: There were 111 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 17 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 17 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 17 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
The SAS System


NOTE: There were 17 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 17 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 17 observations read from the data set WORK._INTERVAL.
NOTE: 17 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 92 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS 
KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
The SAS System

      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_STATS has 27 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="_SEGMENT_" and SegmentValue="2";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! 
trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;

NOTE: There were 5 observations read from the data set EMWS1.PROF_SELVARS.
      WHERE (SegmentVariable='_SEGMENT_') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
The SAS System

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   data Prof_TMP / view=Prof_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Clus_TRAIN;
MPRINT(SEGMENTSUMMARY):   where _SEGMENT_ = 2;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF_INTERVAL.FORMAT.SOURCE.
38288     +format
38289     +OG_Cases_in_Thousands F1_.
38290     +Projected_Sum_Pop F2_.
38291     +Year F3_.
38292     +_dataobs_ F4_.
38293     +;
MPRINT(SEGMENTSUMMARY):   format OG_Cases_in_Thousands F1_. Projected_Sum_Pop F2_. Year F3_. 
_dataobs_ F4_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;

NOTE: DATA STEP view saved on file WORK.PROF_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.CLUS_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:52 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
The SAS System

      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38294     +%macro _vars;
38295     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE 
LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   Age_group;
MPRINT(CLASS_PROFILE):   run;

NOTE: Records processed = 99   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 99 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;

The SAS System

NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;

NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
The SAS System


NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._CLASS to EMWS1.PROF_CLASSDIST.
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF_CLASSDIST has 21 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

*------------------------------------------------------------*
* Prof: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;

NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=Tue, Nov 12, 2019 04:17:50 PM,
      Last Modified=Tue, Nov 12, 2019 04:17:52 PM,
      Filename=C:\Users\student\AppData\Local\Temp\SAS Temporary 
      Files\_TD20232_830-5CG9310VLM_\Prc2\macros.sas7bcat,
      Release Created=9.0401M4,
      Host Created=X64_10PRO,
      Owner Name=830-5CG9310VLM\student,
The SAS System

      File Size=            21KB,
      File Size (bytes)=21504

NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
38296     +%macro _vars;
38297     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data=Prof_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 99   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 99 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.07 seconds
      

MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;

NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 9 variables.
The SAS System

NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;

NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VAR_PROFILE):   proc dmdb data = Prof_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE 
FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   OG_Cases_in_Thousands Projected_Sum_Pop Year _dataobs_;
MPRINT(VAR_PROFILE):   run;

NOTE: Records processed = 99   Memory used = 511K.
NOTE: There were 630 observations read from the data set EMWS1.PART_TRAIN.
NOTE: View WORK.PROF_TMP.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: There were 99 observations read from the data set EMWS1.CLUS_TRAIN.
      WHERE _SEGMENT_=2;
NOTE: There were 99 observations read from the data set WORK.PROF_TMP.
NOTE: The data set WORK._TEMPTAB has 15 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
The SAS System

MPRINT(VAR_PROFILE):   run;

NOTE: There were 15 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;

NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE 
      statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "_SEGMENT_" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" 
percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 15 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 15 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._INTERVAL to EMWS1.PROF_INTDIST.
NOTE: There were 15 observations read from the data set WORK._INTERVAL.
NOTE: 15 observations added.
NOTE: The data set EMWS1.PROF_INTDIST has 107 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS 
The SAS System

KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 4 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 4 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF_STATS has 32 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;

NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF_TMP (memtype=VIEW).
The SAS System

NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(TRAIN):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(TRAIN):   data EMWS1.Prof_INTDIST;
MPRINT(TRAIN):   set EMWS1.Prof_INTDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Color = 
"Color";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then Color = 1;
MPRINT(TRAIN):   else Color = 0;
MPRINT(TRAIN):   run;

NOTE: There were 107 observations read from the data set EMWS1.PROF_INTDIST.
NOTE: The data set EMWS1.PROF_INTDIST has 107 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):   data EMWS1.Prof_CLASSDIST;
MPRINT(TRAIN):   set EMWS1.Prof_CLASSDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Groupindex 
= "Group Index";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
MPRINT(TRAIN):   else GroupIndex = 1;
MPRINT(TRAIN):   run;

NOTE: There were 21 observations read from the data set EMWS1.PROF_CLASSDIST.
NOTE: The data set EMWS1.PROF_CLASSDIST has 21 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE STATS CLASSDIST INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PROFILEVIEW";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
The SAS System

MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
The SAS System

MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "Profileview";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
The SAS System

MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "COLOR";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
The SAS System

MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
The SAS System

MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
The SAS System

MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "_SEGMENT_";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
The SAS System

MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
The SAS System

MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
The SAS System

MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
The SAS System

MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.95415398616071;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof_WORTH;
MPRINT(TRAIN):   set EMWS1.Prof_STATS;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = 
"Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TRAIN):   where WORTH ne .;
MPRINT(TRAIN):   run;

NOTE: There were 16 observations read from the data set EMWS1.PROF_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS1.PROF_WORTH has 16 observations and 15 variables.
NOTE: DATA statement used (Total process time):
The SAS System

      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LATTICE";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
The SAS System

MPRINT(EM_REPORT):   VALUE = "1";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "BAR";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profworth";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "VARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60945538133823;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

The SAS System

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 264 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof_SIZE;
MPRINT(TRAIN):   set EMWS1.Prof_SIZE;
MPRINT(TRAIN):   label percent = "Percent" count = "Frequency Count";
MPRINT(TRAIN):   format PERCENT 5.2;
MPRINT(TRAIN):   format COUNT 12.;
MPRINT(TRAIN):   run;

NOTE: There were 5 observations read from the data set EMWS1.PROF_SIZE.
NOTE: The data set EMWS1.PROF_SIZE has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PIE";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "segmentmanysize";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "PERCENT";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.57787654296396;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 264 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 397 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "size";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69185235942334;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 397 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 529 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profilevars";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60651216171985;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 529 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 661 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clusbarplot";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.69591500595953;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 661 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 793 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clushistplot";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
The SAS System

MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
The SAS System

MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.44316004377005;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;

NOTE: There were 793 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof_SELVARS _SUMMARYVARS DATA_STAT Prof_MACS(mt=catalog) 
Prof_INTERVAL(mt=catalog);
MPRINT(TRAIN):   run;

NOTE: The file EMWS1._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
The SAS System

NOTE: Deleting EMWS1.PROF_SELVARS (memtype=DATA).
NOTE: Deleting EMWS1.PROF_INTERVAL (memtype=CATALOG).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
38298      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38299      * End TRAIN: Prof;
MPRINT(EM_DIAGRAM):   * End TRAIN: Prof;
38300      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38301      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38302      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
38303      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
38304      ;
MPRINT(EM_DIAGRAM):   ;
38305      ;
MPRINT(EM_DIAGRAM):   ;
38306      ;
MPRINT(EM_DIAGRAM):   ;
38307      ;
MPRINT(EM_DIAGRAM):   ;
38308      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ;
38309      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
38310      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   quit;
38311      *------------------------------------------------------------*;
38312      /*; *"; *'; */
38313      ;
38314      run;
38315      quit;
38316      /* Reset EM Options */
38317      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
38318      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
38319      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
38320      filename _temp catalog 'sashelp.emwip.em_sasgraph.source';
MPRINT(EM_DIAGRAM):    filename _temp catalog 'sashelp.emwip.em_sasgraph.source';
38321      %include _temp;
NOTE: %INCLUDE (level 1) file _TEMP is file SASHELP.EMWIP.EM_SASGRAPH.SOURCE.
38322     +filename _fdsep catalog 'sashelp.emwip.em_dsep.source';
MPRINT(EM_DIAGRAM):   filename _fdsep catalog 'sashelp.emwip.em_dsep.source';
38323     +%include _fdsep;
NOTE: %INCLUDE (level 2) file _FDSEP is file SASHELP.EMWIP.EM_DSEP.SOURCE.
38324     +%macro em_dsep;
38325     +  %global emdsep;
38326     +   %if %substr(&sysscp, 1, 3)= WIN %then
38327     +       %let emdsep=\;
38328     +   %else
38329     +       %if %substr(&sysscp, 1, 3)= DNT %then
38330     +           %let emdsep=\;
38331     +   %else
38332     +       %let emdsep=/;
38333     +%mend em_dsep;
38334     +%em_dsep;
MPRINT(EM_DIAGRAM):  ;
NOTE: %INCLUDE (level 2) ending.
NOTE: %INCLUDE (level 1) resuming.
38335     +filename _fdsep;
MPRINT(EM_DIAGRAM):   filename _fdsep;
NOTE: Fileref _FDSEP has been deassigned.
MPRINT(EM_DIAGRAM):  ;
38336     +%em_dsep;
38337     +%macro em_sasgraph(device=JPEG, folder=);
38338     +    %if %sysfunc(exist(work.gseg)) %then %do;
38339     +        proc delete data=work.gseg;
38340     +        run;
38341     +    %end;
38342     +    proc catalog c=work.gseg;
38343     +       contents out=work.gseg;
38344     +    run;
38345     +    data work.gseg;
38346     +       set work.gseg;
38347     +       if desc = '' then desc = name;
38348     +    run;
38349     +    proc sort data=work.gseg;
38350     +       by desc;
38351     +    run;
38352     +    %let _wipGraphPath=%superq(folder);
38353     +    %if (%superq(_wipGraphPath) eq ) %then %do;
38354     +        data _null_;
38355     +           path = pathname('WORK');
38356     +           rc = dcreate('EM_SASGRAPH',strip(path));
38357     +           call symput('_wipGraphPath', strip(path)!!strip(symget('emdsep'))!!'EM_SASGRAPH');
38358     +        run;
38359     +    %end;
38360     +    filename _dref "&_wipGraphpath";
38361     +    %let did=%sysfunc(dopen(_dref));
38362     +    %let memcount=%sysfunc(dnum(&did));
38363     +    %if &memcount %then %do;
38364     +        %do i=1 %to &memcount;
38365     +            %let filename=&_wipGraphPath&emdsep%sysfunc(dread(&did, &i));
38366     +            %if "&filename" ne "" %then %do; %put >>>> &filename;
38367     +                %let prefix = %sysfunc(reverse(%lowcase(%scan(%nrbquote(%sysfunc(reverse(&filename))), 1, .))));
38368     +                %if (&prefix = jpg) or (&prefix eq gif) %then %do;
38369     +                    filename _fref "&filename";
38370     +                    %let rc = %sysfunc(fdelete(_fref));
38371     +                    filename _fref;
38372     +                %end;
38373     +            %end;
38374     +        %end;
38375     +    %end;
38376     +    %let rc=%sysfunc(dclose(&did));
38377     +    filename _dref;
38378     +    data work.gseg;
38379     +       keep libname memname name desc type date crdate moddate;
38380     +       array token(7) $ ('/' '\' ':' '"' '<' '>' '|');
38381     +       length string $2000 device ftype $8;
38382     +       length filename $200;
38383     +       retain index 0;
38384     +       set work.gseg;
38385     +       by desc;
38386     +       filename = desc;
38387     +       if first.desc then do;
38388     +          filename = desc;
38389     +          index = 1;
38390     +       end;
38391     +       else do;
38392     +          filename = strip(desc)!!' ('!!strip(put(index, best.))!!')';
38393     +       end;
38394     +       do i=1 to 7;
38395     +          filename = tranwrd(filename, strip(token(i)), '_');
38396     +       end;
38397     +       desc = filename;
38398     +       index+1;
38399     +       device = upcase("&device");
38400     +       select(device);
38401     +          when('JPEG') ftype='jpg';
38402     +          when('PNG')  do;
38403     +             ftype='png';
38404     +             device="PNG";
38405     +          end;
38406     +          when('GIF') do;
38407     +             ftype='png';
38408     +             device="PNG";
38409     +          end;
38410     +          otherwise do;
38411     +               ftype='jpg';
38412     +               device="JPEG";
38413     +          end;
38414     +       end;
38415     +       string = "&_wipGraphPath&emdsep"!!strip(filename)!!'.'!!ftype;
38416     +       call execute('filename  gsasfile "'!!strip(string)!!'";');
38417     +       call execute('goptions reset=all device='!!strip(device)!!' display');
38418     +       call execute('         gaccess= gsasfile');
38419     +       call execute('         gsfmode= replace cback=white;');
38420     +       call execute('proc greplay igout=work.gseg nofs;');
38421     +       call execute(    'replay '!!strip(name)!!';');
38422     +       call execute('quit;');
38423     +       call execute('filename gsasfile;');
38424     +       call execute('goptions reset=all device=PNG NODISPLAY;');
38425     +    run;
38426     +%mend em_sasgraph;
NOTE: %INCLUDE (level 1) ending.
38431      filename _temp;
MPRINT(EM_DIAGRAM):   filename _temp;
NOTE: Fileref _TEMP has been deassigned.
38432      %em_sasgraph(device=PNG, folder=%nrbquote(C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\GRAPH));
MPRINT(EM_SASGRAPH):   proc catalog c=work.gseg;
MPRINT(EM_SASGRAPH):   contents out=work.gseg;
MPRINT(EM_SASGRAPH):   run;

NOTE: The data set WORK.GSEG has 0 observations and 8 variables.

NOTE: PROCEDURE CATALOG used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_SASGRAPH):   data work.gseg;
MPRINT(EM_SASGRAPH):   set work.gseg;
MPRINT(EM_SASGRAPH):   if desc = '' then desc = name;
MPRINT(EM_SASGRAPH):   run;

NOTE: There were 0 observations read from the data set WORK.GSEG.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_SASGRAPH):   proc sort data=work.gseg;
MPRINT(EM_SASGRAPH):   by desc;
MPRINT(EM_SASGRAPH):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_SASGRAPH):   filename _dref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\GRAPH";
MPRINT(EM_SASGRAPH):   filename _dref;
NOTE: Fileref _DREF has been deassigned.
MPRINT(EM_SASGRAPH):   data work.gseg;
MPRINT(EM_SASGRAPH):   keep libname memname name desc type date crdate moddate;
MPRINT(EM_SASGRAPH):   array token(7) $ ('/' '\' ':' '"' '<' '>' '|');
MPRINT(EM_SASGRAPH):   length string $2000 device ftype $8;
MPRINT(EM_SASGRAPH):   length filename $200;
MPRINT(EM_SASGRAPH):   retain index 0;
MPRINT(EM_SASGRAPH):   set work.gseg;
MPRINT(EM_SASGRAPH):   by desc;
MPRINT(EM_SASGRAPH):   filename = desc;
MPRINT(EM_SASGRAPH):   if first.desc then do;
MPRINT(EM_SASGRAPH):   filename = desc;
MPRINT(EM_SASGRAPH):   index = 1;
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   else do;
MPRINT(EM_SASGRAPH):   filename = strip(desc)!!' ('!!strip(put(index, best.))!!')';
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   do i=1 to 7;
MPRINT(EM_SASGRAPH):   filename = tranwrd(filename, strip(token(i)), '_');
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   desc = filename;
MPRINT(EM_SASGRAPH):   index+1;
MPRINT(EM_SASGRAPH):   device = upcase("PNG");
MPRINT(EM_SASGRAPH):   select(device);
MPRINT(EM_SASGRAPH):   when('JPEG') ftype='jpg';
MPRINT(EM_SASGRAPH):   when('PNG') do;
MPRINT(EM_SASGRAPH):   ftype='png';
MPRINT(EM_SASGRAPH):   device="PNG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   when('GIF') do;
MPRINT(EM_SASGRAPH):   ftype='png';
MPRINT(EM_SASGRAPH):   device="PNG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   otherwise do;
MPRINT(EM_SASGRAPH):   ftype='jpg';
MPRINT(EM_SASGRAPH):   device="JPEG";
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   end;
MPRINT(EM_SASGRAPH):   string = "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Prof\GRAPH\"!!strip(filename)!!'.'!!ftype;
MPRINT(EM_SASGRAPH):   call execute('filename  gsasfile "'!!strip(string)!!'";');
MPRINT(EM_SASGRAPH):   call execute('goptions reset=all device='!!strip(device)!!' display');
MPRINT(EM_SASGRAPH):   call execute('         gaccess= gsasfile');
MPRINT(EM_SASGRAPH):   call execute('         gsfmode= replace cback=white;');
MPRINT(EM_SASGRAPH):   call execute('proc greplay igout=work.gseg nofs;');
MPRINT(EM_SASGRAPH):   call execute( 'replay '!!strip(name)!!';');
MPRINT(EM_SASGRAPH):   call execute('quit;');
MPRINT(EM_SASGRAPH):   call execute('filename gsasfile;');
MPRINT(EM_SASGRAPH):   call execute('goptions reset=all device=PNG NODISPLAY;');
MPRINT(EM_SASGRAPH):   run;

NOTE: There were 0 observations read from the data set WORK.GSEG.
NOTE: The data set WORK.GSEG has 0 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):  ;

38433      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
38434      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
38435      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 925 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 925 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

38436      proc freq data=EMWS1.Prof_WORTH noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof_WORTH noprint order=data;
38437      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
38438      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set EMWS1.PROF_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

38439      proc freq data=EMWS1.Prof_SIZE noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof_SIZE noprint order=data;
38440      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
38441      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 5 observations read from the data set EMWS1.PROF_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
