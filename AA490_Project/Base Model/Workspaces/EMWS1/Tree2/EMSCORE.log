MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 14, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:24:07" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 14, 2019
Time:                16:24:07
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1IPGFU_ "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1IPGFU_ new;
MPRINT(EM_DIAGRAM):   run;
77556      %let EMEXCEPTIONSTRING=;
77557      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
77558      * SCORE: Tree2;
MPRINT(EM_DIAGRAM):   * SCORE: Tree2;
77559      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77560      %let EM_ACTION = SCORE;
77561      %let syscc = 0;
77562      %macro main;
77563      
77564        %if %upcase(&EM_ACTION) = CREATE %then %do;
77565          filename temp catalog 'sashelp.emmodl.tree_create.source';
77566          %include temp;
77567          filename temp;
77568      
77569          %em_tree_create;
77570        %end;
77571      
77572         %else
77573         %if %upcase(&EM_ACTION) = TRAIN %then %do;
77574      
77575             filename temp catalog 'sashelp.emmodl.tree_train.source';
77576             %include temp;
77577             filename temp;
77578             %em_tree_train;
77579         %end;
77580      
77581        %else
77582        %if %upcase(&EM_ACTION) = SCORE %then %do;
77583          filename temp catalog 'sashelp.emmodl.tree_score.source';
77584          %include temp;
77585          filename temp;
77586      
77587          %em_tree_score;
77588      
77589        %end;
77590      
77591        %else
77592        %if %upcase(&EM_ACTION) = REPORT %then %do;
77593      
77594             filename temp catalog 'sashelp.emmodl.tree_report.source';
77595             %include temp;
77596             filename temp;
77597      
77598             %em_tree_report;
77599         %end;
77600      
77601        %else
77602        %if %upcase(&EM_ACTION) = OPENINT %then %do;
77603      
77604             filename temp catalog 'sashelp.emmodl.tree_actions.source';
77605             %include temp;
77606             filename temp;
77607             %EM_TREE_OPENTREEVIEWER;
77608      
77609         %end;
77610      
77611        %else
77612        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
77613      
77614             filename temp catalog 'sashelp.emmodl.tree_actions.source';
77615             %include temp;
77616             filename temp;
77617             %EM_TREE_CLOSETREEVIEWER;
77618      
77619         %end;
77620      
77621      
77622         %doendm:
77623      %mend main;
77624      
77625      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
77627     +%macro em_tree_score;
77629     +   /* determine if multiple targets will be processed */
77630     +   %let em_tree_multipleTargets=N;
77631     +   %let em_tree_numTarget=1;
77632     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
77633     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
77634     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
77635     +         %let em_tree_multipleTargets=N;
77636     +      %end;
77637     +      %else %do;
77638     +         /* create macro array of targets  */
77639     +         data _null_;
77640     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
77641     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
77642     +           if eof then
77643     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
77644     +        run;
77646     +        %if &em_tree_numTarget gt 1 %then %do;
77647     +           %let em_tree_multipleTargets=Y;
77648     +        %end;
77649     +      %end;
77650     +   %end;
77652     +   /* build flow and publish scoring code */
77653     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
77654     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
77656     +   filename treeflow "&EM_USER_TREEFLOW";
77657     +   filename treepub "&EM_USER_TREEPUBLISH";
77659     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
77660     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
77662     +   %em_copyfile(infref=treeflow, outfref=flowref);
77663     +   %em_copyfile(infref=treepub, outfref=pubref);
77665     +   filename treeflow;
77666     +   filename treepub;
77668     +   /* if priors are used, add code to generate unadjusted residuals in export */
77669     +   %let useAdjPriors = N;
77670     +   data _null_;
77671     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
77672     +     if USE="Y" then call symput('useAdjPriors', 'Y');
77673     +   run;
77674     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
77675     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
77676     +      %include temp;
77677     +      filename temp;
77679     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
77680     +      filename adjref "&EM_USER_adjResidualCode";
77681     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
77683     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
77685     +      filename adjref;
77686     +   %end;
77688     +   /* LEAF */
77689     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
77690     +      data _null_;
77691     +        file flowref mod;
77692     +        put 'drop _LEAF_;';
77693     +      run;
77695     +      data _null_;
77696     +        file pubref mod;
77697     +        put 'drop _LEAF_;';
77698     +      run;
77700     +   %end;
77702     +   filename flowref;
77703     +   filename pubref;
77705     +   /* em_metachange code */
77706     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
77707     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
77708     +   %end;
77710     +   /* variable selection based on importance stat    */
77711     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
77712     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
77713     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
77714     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
77715     +     %let obs = %sysfunc(fetch(&dsid));
77716     +     %do %while(&obs=0);
77717     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
77718     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
77719     +       %EM_METACHANGE(name=&varname, role=REJECTED);
77720     +       %let obs = %sysfunc(fetch(&dsid));
77721     +     %end;
77722     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
77723     +   %end;
77725     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
77726     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
77727     +    %let tree_pred_vars = ;
77728     +    %let tree_pred_lvl =;
77729     +    %let numpred= 0;
77731     +    data _null_;
77732     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
77733     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
77734     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
77735     +     if eof then
77736     +       call symput('numpred', strip(put(_N_, BEST.)));
77737     +    run;
77738     +   %end;
77740     +   %if &numpred ne 0 %then %do;
77741     +    %do i=1 %to &numpred;
77742     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
77743     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
77744     +    %end;
77745     +   %end;
77747     +   /* determine if multiple targets will be processed */
77748     +   %let em_tree_multipleTargets=N;
77749     +   %let em_tree_numTarget=1;
77750     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
77751     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
77752     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
77753     +         %let em_tree_multipleTargets=N;
77754     +      %end;
77755     +      %else %do;
77756     +        data _null_;
77757     +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
77758     +          if eof then
77759     +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
77760     +        run;
77762     +        %if &em_tree_numTarget gt 1 %then %do;
77763     +           %let em_tree_multipleTargets=Y;
77764     +        %end;
77765     +     %end;
77766     +   %end;
77768     +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
77769     +   %if "&em_tree_multipleTargets" eq "N" %then %do;
77771     +      /* variable importance */
77772     +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
77773     +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
77775     +         %let validexist=0;
77776     +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
77777     +           %let validexist=1;
77778     +         %end;
77780     +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
77781     +         /* and the columns may not be generated                                                                                 */
77782     +         %let em_tree_cvexists=;
77783     +         %let em_tree_surrexists=.;
77784     +         data _null_;
77785     +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
77786     +            if eof then do ;
77787     +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
77788     +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
77789     +            end;
77790     +         run;
77792     +         data &EM_USER_OUTIMPORT;
77793     +            set &EM_USER_OUTIMPORT;
77795     +            /* format columns based on Precison value specified */
77796     +            format importance 15.&EM_PROPERTY_PRECISION
77797     +                 %if &validexist %then %do;
77798     +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
77799     +                 %end;
77800     +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
77801     +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
77802     +                 %end;
77803     +            ;
77804     +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
77805     +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
77806     +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
77807     +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
77808     +                 %if "&em_tree_surrexists" ne "" %then %do;
77809     +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
77810     +                 %end;
77811     +                 %if &validexist %then %do;
77812     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
77813     +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
77814     +                 %end;
77815     +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
77816     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
77817     +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
77818     +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
77819     +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
77820     +                 %end;
77821     +            ;
77822     +         run;
77824     +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
77825     +      %end;
77826     +   %end;
77828     +   %doendm:
77829     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=14Nov2019:16:24:07,
      Create Time=14Nov2019:15:47:02

NOTE: 195 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 68.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=14Nov2019:16:24:07,
      Create Time=14Nov2019:15:47:02

NOTE: 158 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids3_Age_group_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS3_AGE_GROUP_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8120,
      Last Modified=14Nov2019:16:24:07,
      Create Time=14Nov2019:15:47:02

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=6697,
      Last Modified=14Nov2019:16:24:07,
      Create Time=14Nov2019:15:47:02

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("OG_Cases_in_Thousands           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids3_Age_group_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 5 observations read from the data set EMWS1.IDS3_AGE_GROUP_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Age_group85_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Age_group65_84");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Age_group25_44");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Age_group18_24");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Age_group0_17");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree2_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE2_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS1.Tree2_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree2_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE2_OUTIMPORT.
NOTE: The data set EMWS1.TREE2_OUTIMPORT has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.97715321135574;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77830      
77831      *------------------------------------------------------------*;
77832      * End SCORE: Tree2;
77833      *------------------------------------------------------------*;

77834      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
77835      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
77836      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77837      filename x "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas";
77838      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
77839      file x;
MPRINT(EM_DIAGRAM):   file x;
77840      put 'if upcase(NAME) = "OG_CASES_IN_THOUSANDS" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "OG_CASES_IN_THOUSANDS" then do;';
77841      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
77842      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77843      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
77844      put 'if upcase(NAME) = "Q_AGE_GROUP0_17" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_AGE_GROUP0_17" then do;';
77845      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
77846      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77847      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
77848      put 'if upcase(NAME) = "Q_AGE_GROUP18_24" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_AGE_GROUP18_24" then do;';
77849      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
77850      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77851      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
77852      put 'if upcase(NAME) = "Q_AGE_GROUP25_44" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_AGE_GROUP25_44" then do;';
77853      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
77854      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77855      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
77856      put 'if upcase(NAME) = "Q_AGE_GROUP65_84" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_AGE_GROUP65_84" then do;';
77857      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
77858      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77859      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
77860      put 'if upcase(NAME) = "Q_AGE_GROUP85_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_AGE_GROUP85_" then do;';
77861      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
77862      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77863      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
77864      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
77865      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
77866      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
77867      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
77868      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=14Nov2019:16:24:07,
      Create Time=14Nov2019:15:47:02

NOTE: 28 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77869      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
77870      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77871      *------------------------------------------------------------*;
77872      * Tree2: Scoring DATA data;
77873      *------------------------------------------------------------*;
77874      data EMWS1.Tree2_TRAIN
77875      / view=EMWS1.Tree2_TRAIN
77876      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_TRAIN / view=EMWS1.Tree2_TRAIN ;
77877      set EMWS1.Part3_TRAIN
77878      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part3_TRAIN ;
77879      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas.
77880     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
77881     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
77882     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
77883     +
77884     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
77885     +LENGTH F_Age_group  $   19;
MPRINT(EM_DIAGRAM):   LENGTH F_Age_group $ 19;
77886     +LENGTH I_Age_group  $   19;
MPRINT(EM_DIAGRAM):   LENGTH I_Age_group $ 19;
77887     +LENGTH U_Age_group  $   19;
MPRINT(EM_DIAGRAM):   LENGTH U_Age_group $ 19;
77888     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
77889     +
77890     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
77891     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
77892     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
77893     +label P_Age_group0_17 = 'Predicted: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label P_Age_group0_17 = 'Predicted: Age_group=0-17' ;
77894     +label P_Age_group18_24 = 'Predicted: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label P_Age_group18_24 = 'Predicted: Age_group=18-24' ;
77895     +label P_Age_group25_44 = 'Predicted: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label P_Age_group25_44 = 'Predicted: Age_group=25-44' ;
77896     +label P_Age_group65_84 = 'Predicted: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label P_Age_group65_84 = 'Predicted: Age_group=65-84' ;
77897     +label P_Age_group85_ = 'Predicted: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label P_Age_group85_ = 'Predicted: Age_group=85+' ;
77898     +label Q_Age_group0_17 = 'Unadjusted P: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group0_17 = 'Unadjusted P: Age_group=0-17' ;
77899     +label Q_Age_group18_24 = 'Unadjusted P: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group18_24 = 'Unadjusted P: Age_group=18-24' ;
77900     +label Q_Age_group25_44 = 'Unadjusted P: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group25_44 = 'Unadjusted P: Age_group=25-44' ;
77901     +label Q_Age_group65_84 = 'Unadjusted P: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group65_84 = 'Unadjusted P: Age_group=65-84' ;
77902     +label Q_Age_group85_ = 'Unadjusted P: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group85_ = 'Unadjusted P: Age_group=85+' ;
77903     +label V_Age_group0_17 = 'Validated: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label V_Age_group0_17 = 'Validated: Age_group=0-17' ;
77904     +label V_Age_group18_24 = 'Validated: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label V_Age_group18_24 = 'Validated: Age_group=18-24' ;
77905     +label V_Age_group25_44 = 'Validated: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label V_Age_group25_44 = 'Validated: Age_group=25-44' ;
77906     +label V_Age_group65_84 = 'Validated: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label V_Age_group65_84 = 'Validated: Age_group=65-84' ;
77907     +label V_Age_group85_ = 'Validated: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label V_Age_group85_ = 'Validated: Age_group=85+' ;
77908     +label R_Age_group0_17 = 'Residual: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label R_Age_group0_17 = 'Residual: Age_group=0-17' ;
77909     +label R_Age_group18_24 = 'Residual: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label R_Age_group18_24 = 'Residual: Age_group=18-24' ;
77910     +label R_Age_group25_44 = 'Residual: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label R_Age_group25_44 = 'Residual: Age_group=25-44' ;
77911     +label R_Age_group65_84 = 'Residual: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label R_Age_group65_84 = 'Residual: Age_group=65-84' ;
77912     +label R_Age_group85_ = 'Residual: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label R_Age_group85_ = 'Residual: Age_group=85+' ;
77913     +label F_Age_group = 'From: Age_group' ;
MPRINT(EM_DIAGRAM):   label F_Age_group = 'From: Age_group' ;
77914     +label I_Age_group = 'Into: Age_group' ;
MPRINT(EM_DIAGRAM):   label I_Age_group = 'Into: Age_group' ;
77915     +label U_Age_group = 'Unnormalized Into: Age_group' ;
MPRINT(EM_DIAGRAM):   label U_Age_group = 'Unnormalized Into: Age_group' ;
77916     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
77917     +
77918     +
77919     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
77920     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
77921     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
77922     +
77923     +
77924     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
77925     + %DMNORMCP( _ARBFMT_19, F_Age_group );
MPRINT(DMNORMCP):   F_Age_group=dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77926     +
77927     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
77928     +IF  NOT MISSING(Projected_Sum_Pop ) AND
77929     +             2194576.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 2194576.5 <= Projected_Sum_Pop THEN DO;
77930     +  _NODE_  =                    3;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
77931     +  _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
77932     +  P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
77933     +  P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
77934     +  P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
77935     +  P_Age_group65_84  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 1;
77936     +  P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
77937     +  Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
77938     +  Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
77939     +  Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
77940     +  Q_Age_group65_84  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 1;
77941     +  Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
77942     +  V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
77943     +  V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
77944     +  V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
77945     +  V_Age_group65_84  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 1;
77946     +  V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
77947     +  I_Age_group  = '65-84' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '65-84' ;
77948     +  U_Age_group  = '65-84' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '65-84' ;
77949     +  END;
MPRINT(EM_DIAGRAM):   END;
77950     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77951     +  IF  NOT MISSING(Projected_Sum_Pop ) AND
77952     +               1144855.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 1144855.5 <= Projected_Sum_Pop THEN DO;
77953     +    IF  NOT MISSING(Projected_Sum_Pop ) AND
77954     +      Projected_Sum_Pop  <              1780976 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND Projected_Sum_Pop < 1780976 THEN DO;
77955     +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
77956     +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
77957     +      P_Age_group0_17  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 1;
77958     +      P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
77959     +      P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
77960     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
77961     +      P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
77962     +      Q_Age_group0_17  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 1;
77963     +      Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
77964     +      Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
77965     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
77966     +      Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
77967     +      V_Age_group0_17  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 1;
77968     +      V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
77969     +      V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
77970     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
77971     +      V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
77972     +      I_Age_group  = '0-17' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '0-17' ;
77973     +      U_Age_group  = '0-17' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '0-17' ;
77974     +      END;
MPRINT(EM_DIAGRAM):   END;
77975     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77976     +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
77977     +      _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
77978     +      P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
77979     +      P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
77980     +      P_Age_group25_44  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 1;
77981     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
77982     +      P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
77983     +      Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
77984     +      Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
77985     +      Q_Age_group25_44  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 1;
77986     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
77987     +      Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
77988     +      V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
77989     +      V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
77990     +      V_Age_group25_44  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 1;
77991     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
77992     +      V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
77993     +      I_Age_group  = '25-44' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '25-44' ;
77994     +      U_Age_group  = '25-44' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '25-44' ;
77995     +      END;
MPRINT(EM_DIAGRAM):   END;
77996     +    END;
MPRINT(EM_DIAGRAM):   END;
77997     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77998     +    IF  NOT MISSING(Projected_Sum_Pop ) AND
77999     +                  450380.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 450380.5 <= Projected_Sum_Pop THEN DO;
78000     +      _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
78001     +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
78002     +      P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
78003     +      P_Age_group18_24  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 1;
78004     +      P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
78005     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
78006     +      P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
78007     +      Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
78008     +      Q_Age_group18_24  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 1;
78009     +      Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
78010     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
78011     +      Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
78012     +      V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
78013     +      V_Age_group18_24  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 1;
78014     +      V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
78015     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
78016     +      V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
78017     +      I_Age_group  = '18-24' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '18-24' ;
78018     +      U_Age_group  = '18-24' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '18-24' ;
78019     +      END;
MPRINT(EM_DIAGRAM):   END;
78020     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78021     +      _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
78022     +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
78023     +      P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
78024     +      P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
78025     +      P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
78026     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
78027     +      P_Age_group85_  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 1;
78028     +      Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
78029     +      Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
78030     +      Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
78031     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
78032     +      Q_Age_group85_  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 1;
78033     +      V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
78034     +      V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
78035     +      V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
78036     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
78037     +      V_Age_group85_  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 1;
78038     +      I_Age_group  = '85+' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '85+' ;
78039     +      U_Age_group  = '85+' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '85+' ;
78040     +      END;
MPRINT(EM_DIAGRAM):   END;
78041     +    END;
MPRINT(EM_DIAGRAM):   END;
78042     +  END;
MPRINT(EM_DIAGRAM):   END;
78043     +
78044     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
78045     +IF  F_Age_group  NE '0-17'
78046     +AND F_Age_group  NE '18-24'
78047     +AND F_Age_group  NE '25-44'
78048     +AND F_Age_group  NE '65-84'
78049     +AND F_Age_group  NE '85+'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Age_group NE '0-17' AND F_Age_group NE '18-24' AND F_Age_group NE '25-44' AND F_Age_group NE '65-84' AND F_Age_group NE '85+' THEN DO;
78050     +        R_Age_group0_17  = .;
MPRINT(EM_DIAGRAM):   R_Age_group0_17 = .;
78051     +        R_Age_group18_24  = .;
MPRINT(EM_DIAGRAM):   R_Age_group18_24 = .;
78052     +        R_Age_group25_44  = .;
MPRINT(EM_DIAGRAM):   R_Age_group25_44 = .;
78053     +        R_Age_group65_84  = .;
MPRINT(EM_DIAGRAM):   R_Age_group65_84 = .;
78054     +        R_Age_group85_  = .;
MPRINT(EM_DIAGRAM):   R_Age_group85_ = .;
78055     + END;
MPRINT(EM_DIAGRAM):   END;
78056     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78057     +       R_Age_group0_17  =  -P_Age_group0_17 ;
MPRINT(EM_DIAGRAM):   R_Age_group0_17 = -P_Age_group0_17 ;
78058     +       R_Age_group18_24  =  -P_Age_group18_24 ;
MPRINT(EM_DIAGRAM):   R_Age_group18_24 = -P_Age_group18_24 ;
78059     +       R_Age_group25_44  =  -P_Age_group25_44 ;
MPRINT(EM_DIAGRAM):   R_Age_group25_44 = -P_Age_group25_44 ;
78060     +       R_Age_group65_84  =  -P_Age_group65_84 ;
MPRINT(EM_DIAGRAM):   R_Age_group65_84 = -P_Age_group65_84 ;
78061     +       R_Age_group85_  =  -P_Age_group85_ ;
MPRINT(EM_DIAGRAM):   R_Age_group85_ = -P_Age_group85_ ;
78062     +       SELECT( F_Age_group  );
MPRINT(EM_DIAGRAM):   SELECT( F_Age_group );
78063     +          WHEN( '0-17'  ) R_Age_group0_17  = R_Age_group0_17  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0-17' ) R_Age_group0_17 = R_Age_group0_17 +1;
78064     +          WHEN( '18-24'  ) R_Age_group18_24  = R_Age_group18_24  +1;
MPRINT(EM_DIAGRAM):   WHEN( '18-24' ) R_Age_group18_24 = R_Age_group18_24 +1;
78065     +          WHEN( '25-44'  ) R_Age_group25_44  = R_Age_group25_44  +1;
MPRINT(EM_DIAGRAM):   WHEN( '25-44' ) R_Age_group25_44 = R_Age_group25_44 +1;
78066     +          WHEN( '65-84'  ) R_Age_group65_84  = R_Age_group65_84  +1;
MPRINT(EM_DIAGRAM):   WHEN( '65-84' ) R_Age_group65_84 = R_Age_group65_84 +1;
78067     +          WHEN( '85+'  ) R_Age_group85_  = R_Age_group85_  +1;
MPRINT(EM_DIAGRAM):   WHEN( '85+' ) R_Age_group85_ = R_Age_group85_ +1;
78068     +       END;
MPRINT(EM_DIAGRAM):   END;
78069     + END;
MPRINT(EM_DIAGRAM):   END;
78070     +
78071     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
78072     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
78073     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
78074     +
78075     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78076      run;

NOTE: DATA STEP view saved on file EMWS1.TREE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
78077      quit;
78078      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
78079      filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
78080      *------------------------------------------------------------*;
78081      * Tree2: Scoring VALIDATE data;
78082      *------------------------------------------------------------*;
78083      data EMWS1.Tree2_VALIDATE
78084      / view=EMWS1.Tree2_VALIDATE
78085      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_VALIDATE / view=EMWS1.Tree2_VALIDATE ;
78086      set EMWS1.Part3_VALIDATE
78087      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part3_VALIDATE ;
78088      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\EMFLOWSCORE.sas.
78089     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
78090     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
78091     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
78092     +
78093     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
78094     +LENGTH F_Age_group  $   19;
MPRINT(EM_DIAGRAM):   LENGTH F_Age_group $ 19;
78095     +LENGTH I_Age_group  $   19;
MPRINT(EM_DIAGRAM):   LENGTH I_Age_group $ 19;
78096     +LENGTH U_Age_group  $   19;
MPRINT(EM_DIAGRAM):   LENGTH U_Age_group $ 19;
78097     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
78098     +
78099     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
78100     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
78101     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
78102     +label P_Age_group0_17 = 'Predicted: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label P_Age_group0_17 = 'Predicted: Age_group=0-17' ;
78103     +label P_Age_group18_24 = 'Predicted: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label P_Age_group18_24 = 'Predicted: Age_group=18-24' ;
78104     +label P_Age_group25_44 = 'Predicted: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label P_Age_group25_44 = 'Predicted: Age_group=25-44' ;
78105     +label P_Age_group65_84 = 'Predicted: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label P_Age_group65_84 = 'Predicted: Age_group=65-84' ;
78106     +label P_Age_group85_ = 'Predicted: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label P_Age_group85_ = 'Predicted: Age_group=85+' ;
78107     +label Q_Age_group0_17 = 'Unadjusted P: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group0_17 = 'Unadjusted P: Age_group=0-17' ;
78108     +label Q_Age_group18_24 = 'Unadjusted P: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group18_24 = 'Unadjusted P: Age_group=18-24' ;
78109     +label Q_Age_group25_44 = 'Unadjusted P: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group25_44 = 'Unadjusted P: Age_group=25-44' ;
78110     +label Q_Age_group65_84 = 'Unadjusted P: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group65_84 = 'Unadjusted P: Age_group=65-84' ;
78111     +label Q_Age_group85_ = 'Unadjusted P: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label Q_Age_group85_ = 'Unadjusted P: Age_group=85+' ;
78112     +label V_Age_group0_17 = 'Validated: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label V_Age_group0_17 = 'Validated: Age_group=0-17' ;
78113     +label V_Age_group18_24 = 'Validated: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label V_Age_group18_24 = 'Validated: Age_group=18-24' ;
78114     +label V_Age_group25_44 = 'Validated: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label V_Age_group25_44 = 'Validated: Age_group=25-44' ;
78115     +label V_Age_group65_84 = 'Validated: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label V_Age_group65_84 = 'Validated: Age_group=65-84' ;
78116     +label V_Age_group85_ = 'Validated: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label V_Age_group85_ = 'Validated: Age_group=85+' ;
78117     +label R_Age_group0_17 = 'Residual: Age_group=0-17' ;
MPRINT(EM_DIAGRAM):   label R_Age_group0_17 = 'Residual: Age_group=0-17' ;
78118     +label R_Age_group18_24 = 'Residual: Age_group=18-24' ;
MPRINT(EM_DIAGRAM):   label R_Age_group18_24 = 'Residual: Age_group=18-24' ;
78119     +label R_Age_group25_44 = 'Residual: Age_group=25-44' ;
MPRINT(EM_DIAGRAM):   label R_Age_group25_44 = 'Residual: Age_group=25-44' ;
78120     +label R_Age_group65_84 = 'Residual: Age_group=65-84' ;
MPRINT(EM_DIAGRAM):   label R_Age_group65_84 = 'Residual: Age_group=65-84' ;
78121     +label R_Age_group85_ = 'Residual: Age_group=85+' ;
MPRINT(EM_DIAGRAM):   label R_Age_group85_ = 'Residual: Age_group=85+' ;
78122     +label F_Age_group = 'From: Age_group' ;
MPRINT(EM_DIAGRAM):   label F_Age_group = 'From: Age_group' ;
78123     +label I_Age_group = 'Into: Age_group' ;
MPRINT(EM_DIAGRAM):   label I_Age_group = 'Into: Age_group' ;
78124     +label U_Age_group = 'Unnormalized Into: Age_group' ;
MPRINT(EM_DIAGRAM):   label U_Age_group = 'Unnormalized Into: Age_group' ;
78125     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
78126     +
78127     +
78128     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
78129     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
78130     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
78131     +
78132     +
78133     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
78134     + %DMNORMCP( _ARBFMT_19, F_Age_group );
MPRINT(DMNORMCP):   F_Age_group=dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
78135     +
78136     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
78137     +IF  NOT MISSING(Projected_Sum_Pop ) AND
78138     +             2194576.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 2194576.5 <= Projected_Sum_Pop THEN DO;
78139     +  _NODE_  =                    3;
MPRINT(EM_DIAGRAM):   _NODE_ = 3;
78140     +  _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
78141     +  P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
78142     +  P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
78143     +  P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
78144     +  P_Age_group65_84  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 1;
78145     +  P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
78146     +  Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
78147     +  Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
78148     +  Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
78149     +  Q_Age_group65_84  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 1;
78150     +  Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
78151     +  V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
78152     +  V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
78153     +  V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
78154     +  V_Age_group65_84  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 1;
78155     +  V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
78156     +  I_Age_group  = '65-84' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '65-84' ;
78157     +  U_Age_group  = '65-84' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '65-84' ;
78158     +  END;
MPRINT(EM_DIAGRAM):   END;
78159     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78160     +  IF  NOT MISSING(Projected_Sum_Pop ) AND
78161     +               1144855.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 1144855.5 <= Projected_Sum_Pop THEN DO;
78162     +    IF  NOT MISSING(Projected_Sum_Pop ) AND
78163     +      Projected_Sum_Pop  <              1780976 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND Projected_Sum_Pop < 1780976 THEN DO;
78164     +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
78165     +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
78166     +      P_Age_group0_17  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 1;
78167     +      P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
78168     +      P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
78169     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
78170     +      P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
78171     +      Q_Age_group0_17  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 1;
78172     +      Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
78173     +      Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
78174     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
78175     +      Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
78176     +      V_Age_group0_17  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 1;
78177     +      V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
78178     +      V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
78179     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
78180     +      V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
78181     +      I_Age_group  = '0-17' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '0-17' ;
78182     +      U_Age_group  = '0-17' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '0-17' ;
78183     +      END;
MPRINT(EM_DIAGRAM):   END;
78184     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78185     +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
78186     +      _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
78187     +      P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
78188     +      P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
78189     +      P_Age_group25_44  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 1;
78190     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
78191     +      P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
78192     +      Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
78193     +      Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
78194     +      Q_Age_group25_44  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 1;
78195     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
78196     +      Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
78197     +      V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
78198     +      V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
78199     +      V_Age_group25_44  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 1;
78200     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
78201     +      V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
78202     +      I_Age_group  = '25-44' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '25-44' ;
78203     +      U_Age_group  = '25-44' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '25-44' ;
78204     +      END;
MPRINT(EM_DIAGRAM):   END;
78205     +    END;
MPRINT(EM_DIAGRAM):   END;
78206     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78207     +    IF  NOT MISSING(Projected_Sum_Pop ) AND
78208     +                  450380.5 <= Projected_Sum_Pop  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Projected_Sum_Pop ) AND 450380.5 <= Projected_Sum_Pop THEN DO;
78209     +      _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
78210     +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
78211     +      P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
78212     +      P_Age_group18_24  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 1;
78213     +      P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
78214     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
78215     +      P_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 0;
78216     +      Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
78217     +      Q_Age_group18_24  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 1;
78218     +      Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
78219     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
78220     +      Q_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 0;
78221     +      V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
78222     +      V_Age_group18_24  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 1;
78223     +      V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
78224     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
78225     +      V_Age_group85_  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 0;
78226     +      I_Age_group  = '18-24' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '18-24' ;
78227     +      U_Age_group  = '18-24' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '18-24' ;
78228     +      END;
MPRINT(EM_DIAGRAM):   END;
78229     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78230     +      _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
78231     +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
78232     +      P_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group0_17 = 0;
78233     +      P_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group18_24 = 0;
78234     +      P_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group25_44 = 0;
78235     +      P_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   P_Age_group65_84 = 0;
78236     +      P_Age_group85_  =                    1;
MPRINT(EM_DIAGRAM):   P_Age_group85_ = 1;
78237     +      Q_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group0_17 = 0;
78238     +      Q_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group18_24 = 0;
78239     +      Q_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group25_44 = 0;
78240     +      Q_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   Q_Age_group65_84 = 0;
78241     +      Q_Age_group85_  =                    1;
MPRINT(EM_DIAGRAM):   Q_Age_group85_ = 1;
78242     +      V_Age_group0_17  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group0_17 = 0;
78243     +      V_Age_group18_24  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group18_24 = 0;
78244     +      V_Age_group25_44  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group25_44 = 0;
78245     +      V_Age_group65_84  =                    0;
MPRINT(EM_DIAGRAM):   V_Age_group65_84 = 0;
78246     +      V_Age_group85_  =                    1;
MPRINT(EM_DIAGRAM):   V_Age_group85_ = 1;
78247     +      I_Age_group  = '85+' ;
MPRINT(EM_DIAGRAM):   I_Age_group = '85+' ;
78248     +      U_Age_group  = '85+' ;
MPRINT(EM_DIAGRAM):   U_Age_group = '85+' ;
78249     +      END;
MPRINT(EM_DIAGRAM):   END;
78250     +    END;
MPRINT(EM_DIAGRAM):   END;
78251     +  END;
MPRINT(EM_DIAGRAM):   END;
78252     +
78253     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
78254     +IF  F_Age_group  NE '0-17'
78255     +AND F_Age_group  NE '18-24'
78256     +AND F_Age_group  NE '25-44'
78257     +AND F_Age_group  NE '65-84'
78258     +AND F_Age_group  NE '85+'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_Age_group NE '0-17' AND F_Age_group NE '18-24' AND F_Age_group NE '25-44' AND F_Age_group NE '65-84' AND F_Age_group NE '85+' THEN DO;
78259     +        R_Age_group0_17  = .;
MPRINT(EM_DIAGRAM):   R_Age_group0_17 = .;
78260     +        R_Age_group18_24  = .;
MPRINT(EM_DIAGRAM):   R_Age_group18_24 = .;
78261     +        R_Age_group25_44  = .;
MPRINT(EM_DIAGRAM):   R_Age_group25_44 = .;
78262     +        R_Age_group65_84  = .;
MPRINT(EM_DIAGRAM):   R_Age_group65_84 = .;
78263     +        R_Age_group85_  = .;
MPRINT(EM_DIAGRAM):   R_Age_group85_ = .;
78264     + END;
MPRINT(EM_DIAGRAM):   END;
78265     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
78266     +       R_Age_group0_17  =  -P_Age_group0_17 ;
MPRINT(EM_DIAGRAM):   R_Age_group0_17 = -P_Age_group0_17 ;
78267     +       R_Age_group18_24  =  -P_Age_group18_24 ;
MPRINT(EM_DIAGRAM):   R_Age_group18_24 = -P_Age_group18_24 ;
78268     +       R_Age_group25_44  =  -P_Age_group25_44 ;
MPRINT(EM_DIAGRAM):   R_Age_group25_44 = -P_Age_group25_44 ;
78269     +       R_Age_group65_84  =  -P_Age_group65_84 ;
MPRINT(EM_DIAGRAM):   R_Age_group65_84 = -P_Age_group65_84 ;
78270     +       R_Age_group85_  =  -P_Age_group85_ ;
MPRINT(EM_DIAGRAM):   R_Age_group85_ = -P_Age_group85_ ;
78271     +       SELECT( F_Age_group  );
MPRINT(EM_DIAGRAM):   SELECT( F_Age_group );
78272     +          WHEN( '0-17'  ) R_Age_group0_17  = R_Age_group0_17  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0-17' ) R_Age_group0_17 = R_Age_group0_17 +1;
78273     +          WHEN( '18-24'  ) R_Age_group18_24  = R_Age_group18_24  +1;
MPRINT(EM_DIAGRAM):   WHEN( '18-24' ) R_Age_group18_24 = R_Age_group18_24 +1;
78274     +          WHEN( '25-44'  ) R_Age_group25_44  = R_Age_group25_44  +1;
MPRINT(EM_DIAGRAM):   WHEN( '25-44' ) R_Age_group25_44 = R_Age_group25_44 +1;
78275     +          WHEN( '65-84'  ) R_Age_group65_84  = R_Age_group65_84  +1;
MPRINT(EM_DIAGRAM):   WHEN( '65-84' ) R_Age_group65_84 = R_Age_group65_84 +1;
78276     +          WHEN( '85+'  ) R_Age_group85_  = R_Age_group85_  +1;
MPRINT(EM_DIAGRAM):   WHEN( '85+' ) R_Age_group85_ = R_Age_group85_ +1;
78277     +       END;
MPRINT(EM_DIAGRAM):   END;
78278     + END;
MPRINT(EM_DIAGRAM):   END;
78279     +
78280     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
78281     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
78282     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
78283     +
78284     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
78285      run;

NOTE: DATA STEP view saved on file EMWS1.TREE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
78286      quit;
78287      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
78289      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
78290      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
78291      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78292      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
78293      * Tree2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree2: Computing metadata for TRAIN data;
78294      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA 490\Final Project\AA490_Project\Base Model\Workspaces\EMWS1\Tree2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree2_TRAIN out=WORK.M3S82LIL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3S82LIL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3S82LIL(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3S82LIL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3S82LIL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1Q6PEL_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OVY4XH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   set WORK.M1Q6PEL_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("AGE_GROUP") model = "Tree2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "OG_CASES_IN_THOUSANDS" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_AGE_GROUP0_17" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_AGE_GROUP18_24" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_AGE_GROUP25_44" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_AGE_GROUP65_84" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_AGE_GROUP85_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
78668      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
78669      set EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO;
78670      where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
78671      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TREE2_EMINFO.
      WHERE (DATA='Tree2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78672      data EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree2_EMINFO;
78673      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
78674      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
78675      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
78679      run;
78680      data EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_EMINFO;
78681      set EMWS1.Tree2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree2_EMINFO WORK.MODELTEMP_INFO;
78682      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78683      proc sort data = EMWS1.Tree2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree2_EMINFO NOTHREADS;
78684      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78685      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set EMWS1.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

78686      proc sort data = EMWS1.Ids3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
78687      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78688      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.IDS3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

78689      proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
78690      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78691      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78692      data EMWS1.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree2_EMINFO;
78693      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
78694      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78695      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78696      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
78697      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
78698      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
78699      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.TREE2_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
