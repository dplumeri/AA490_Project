MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 14, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:04" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 14, 2019
Time:                16:09:04
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2W29_U5 "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2W29_U5 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 14, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:04" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 14, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:09:04" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force\Workspaces\EMWS2\Stat2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS2.Stat2_VariableSet noprint;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Stat2META;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Stat2META label noobs;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    data WORK.M256LGEX;
MPRINT(EM_DIAGRAM):   set WORK.M256LGEX;
MPRINT(EM_DIAGRAM):   where((role in('TARGET' 'FREQ' 'INPUT') and use in('D','Y')) or (role = 'REJECTED' and use = 'Y'));
MPRINT(EM_DIAGRAM):   if ROLE = 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Stat2: Determining Analysis Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Stat2: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Stat2: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Stat2: Create DMDB;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS2.Ids3_DATA(obs=100000) dmdbcat=WORK.Stat2_DMDB classout=WORK.Stat2DMDBClass varout=WORK.Stat2DMDBVar maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
MPRINT(DMDBCLASS):   Age(ASC) Disease(ASC) Gender(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
MPRINT(DMDBVAR):   Cases_in_1000s Year
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
MPRINT(EM_DIAGRAM):    data WORK.Stat2DMDBVar;
MPRINT(EM_DIAGRAM):   set WORK.Stat2DMDBVar(keep=Name Mean Std);
MPRINT(EM_DIAGRAM):   CV = Std/Mean;
MPRINT(EM_DIAGRAM):   Keep NAME CV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Stat2_WORTH data=WORK.Stat2DMDBVar force;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Stat2DMDBClass;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc stdize data=WORK.Stat2DMDBClass out=_null_ outstat=WORK.Stat2DMDBClass(RENAME=(FREQUENCY=STAT));
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   var FREQUENCY;
MPRINT(EM_DIAGRAM):   run;
WARNING: The scale estimator for variable FREQUENCY is less than or equal to 0. Variable FREQUENCY will not be standardized and a missing value is assigned to its scale estimator.
WARNING: The scale estimator for variable FREQUENCY is less than or equal to 0. Variable FREQUENCY will not be standardized and a missing value is assigned to its scale estimator.
MPRINT(EM_DIAGRAM):   data WORK.Stat2DMDBClass;
MPRINT(EM_DIAGRAM):   retain mean;
MPRINT(EM_DIAGRAM):   set WORK.Stat2DMDBClass;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION','SCALE');
MPRINT(EM_DIAGRAM):   if _TYPE_='LOCATION' then mean=STAT;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   if MEAN ne 0 then CV=STAT/abs(MEAN);
MPRINT(EM_DIAGRAM):   else CV=STAT;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   keep NAME CV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Stat2_WORTH data=WORK.Stat2DMDBClass force;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Stat2_WORTH;
MPRINT(EM_DIAGRAM):   by descending CV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_WORTH;
MPRINT(EM_DIAGRAM):   format STATVAR 6.0;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_WORTH;
MPRINT(EM_DIAGRAM):   if _N_<= 1000 then STATVAR=1;
MPRINT(EM_DIAGRAM):   else STATVAR=0;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Stat2_WORTH nodupkey out=WORK.Stat2_SELVAR(keep=Name StatVar);
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   where statvar=1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M3MZ5Q6J;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Stat2_analysisMeta;
MPRINT(EM_DIAGRAM):   merge WORK.M3MZ5Q6J WORK.Stat2_SELVAR(in=_a);
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   if _a then STATVAR = 1;
MPRINT(EM_DIAGRAM):   else if ROLE in('INPUT', 'REJECTED') and REPORT ne 'Y' then delete;
MPRINT(EM_DIAGRAM):   if REPORT eq 'Y' then STATVAR = 1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M2GDURN3;
MPRINT(EM_DIAGRAM):   set WORK.M2GDURN3;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or Report='Y' or (role in('TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
MPRINT(EM_DIAGRAM):   if ROLE = 'SEGMENT' then delete;
MPRINT(EM_DIAGRAM):   else if ROLE ^in('FREQ','TARGET') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.M0MO03ZL;
MPRINT(EM_DIAGRAM):   set WORK.M0MO03ZL;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or Report='Y' or (role in('SEGMENT', 'TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Stat2: Computing Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS2.Ids3_DATA(obs=100000) nonorm maxlevel=513 varout=work._DMDBVAR(RENAME=(NAME=VARIABLE)) classout=WORK.Stat2CLASS(drop=NMISSPERCENT rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT)) ;
MPRINT(EM_DIAGRAM):   var Cases_in_1000s Year ;
MPRINT(EM_DIAGRAM):   class Age Disease Gender ;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS2.Ids3_DATA(obs=100000) out=_null_ outstat=work._STDIZE add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=(0 5 50 95 100);
MPRINT(EM_DIAGRAM):   var Cases_in_1000s Year ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=work._STDIZE out=work._TRANSSTDIZE(drop=_LABEL_ rename=(_NAME_=VARIABLE));
MPRINT(EM_DIAGRAM):   id _type_;
MPRINT(EM_DIAGRAM):   where _TYPE_='P50';
MPRINT(EM_DIAGRAM):   run;
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
MPRINT(EM_DIAGRAM):   proc sort data=work._TRANSSTDIZE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=work._DMDBVAR;
MPRINT(EM_DIAGRAM):   by VARIABLE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Stat2INTERVAL;
MPRINT(EM_DIAGRAM):   merge work._TRANSSTDIZE work._DMDBVAR;
MPRINT(EM_DIAGRAM):   format N NMISS 8. MIN MAX P50 MEAN STD SKEWNESS KURTOSIS BEST8.3;
MPRINT(EM_DIAGRAM):   by VARIABLE;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Stat2CLASS;
MPRINT(EM_DIAGRAM):   by Variable Level;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data colorindex;
MPRINT(EM_DIAGRAM):   retain LevelIndex 0;
MPRINT(EM_DIAGRAM):   set WORK.Stat2CLASS(keep=Variable Level);
MPRINT(EM_DIAGRAM):   by variable level;
MPRINT(EM_DIAGRAM):   if first.variable then LevelIndex = 0;
MPRINT(EM_DIAGRAM):   if first.level then LevelIndex + 1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Stat2CLASS;
MPRINT(EM_DIAGRAM):   merge WORK.Stat2CLASS(in=_a) colorindex;
MPRINT(EM_DIAGRAM):   by variable level;
MPRINT(EM_DIAGRAM):   if _a then output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Stat2INTERVAL;
MPRINT(EM_DIAGRAM):   length DATAROLE $20;
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   set WORK.Stat2INTERVAL;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Stat2_INTERVAL data=WORK.Stat2INTERVAL force;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Stat2CLASS;
MPRINT(EM_DIAGRAM):   length DATAROLE $20;
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   set WORK.Stat2CLASS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc append base=EMWS2.Stat2_CLASS data=WORK.Stat2CLASS force;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS2.Stat2_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_CLASS;
MPRINT(EM_DIAGRAM):   by Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_CLASS;
MPRINT(EM_DIAGRAM):   merge EMWS2.Stat2_CLASS(in=_a) tempVariable;
MPRINT(EM_DIAGRAM):   by variable;
MPRINT(EM_DIAGRAM):   if label = '' then label=Variable;
MPRINT(EM_DIAGRAM):   if _a then output;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):    run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   by Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   merge EMWS2.Stat2_INTERVAL(in=_a) tempVariable;
MPRINT(EM_DIAGRAM):   by variable;
MPRINT(EM_DIAGRAM):   if label = '' then label=Variable;
MPRINT(EM_DIAGRAM):   if _a then output;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS2 nolist;
MPRINT(EM_DIAGRAM):   modify Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label Variable = "Variable";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
MPRINT(EM_DIAGRAM):   label p50 = "Median";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_CLASS NOTHREADS;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable descending COUNT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.Stat2CLASS(keep=DATAROLE Variable ROLE Numcat Nmiss Mode ModePct Mode2 Mode2Pct);
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_CLASS;
MPRINT(EM_DIAGRAM):   length Mode Mode2 $32;
MPRINT(EM_DIAGRAM):   retain NMiss 0 ModePct 0 Mode2Pct 0 Mode '' Mode2 '';
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable;
MPRINT(EM_DIAGRAM):   if first.DATAROLE or first.variable then do;
MPRINT(EM_DIAGRAM):   Numcat = 1;
MPRINT(EM_DIAGRAM):   NMiss = 0;
MPRINT(EM_DIAGRAM):   Mode = strip(LEVEL);
MPRINT(EM_DIAGRAM):   ModePct = PERCENT;
MPRINT(EM_DIAGRAM):   Mode2 = '';
MPRINT(EM_DIAGRAM):   Mode2Pct = 0;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else Numcat +1;
MPRINT(EM_DIAGRAM):   if Numcat =2 then do;
MPRINT(EM_DIAGRAM):   Mode2 = strip(LEVEL);
MPRINT(EM_DIAGRAM):   Mode2Pct = PERCENT;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NRAW=. and CRAW='' then NMiss= COUNT;
MPRINT(EM_DIAGRAM):   if last.DATAROLE or last.variable then output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
MPRINT(EM_DIAGRAM):   title;
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   proc print data=WORK.Stat2CLASS(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   var DATAROLE VARIABLE ROLE NUMCAT NMISS Mode ModePct Mode2 Mode2Pct;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" ROLE = "Role" NUMCAT = "Number of Levels" NMISS = "Missing" MODE = "Mode" MODEPCT = "Mode Percentage" MODE2 = "Mode2" MODE2PCT = "Mode2 Percentage";
MPRINT(EM_DIAGRAM):   format ModePct Mode2Pct 5.2;
MPRINT(EM_DIAGRAM):   by DATAROLE;
MPRINT(EM_DIAGRAM):   title9 "Class Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    data WORK.Stat2INTERVALSUMMARY;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   length ROLE $32;
MPRINT(EM_DIAGRAM):   if Variable = "Cases_in_1000s" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "Year" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Stat2INTERVALSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
MPRINT(EM_DIAGRAM):   title;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Stat2INTERVALSUMMARY(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   var Variable ROLE MEAN STD N NMISS MIN P50 MAX SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   by DATAROLE;
MPRINT(EM_DIAGRAM):   title9 "Interval Variable Summary Statistics";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title9;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M3MZ5Q6J;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc means data=EMWS2.Stat2_CLASS noprint;
MPRINT(EM_DIAGRAM):   class DATAROLE Variable;
MPRINT(EM_DIAGRAM):   var PERCENT;
MPRINT(EM_DIAGRAM):   output out=EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS2.Stat2_CLASSPLOT out=EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   where _type_=3 and _STAT_ = 'STD';
MPRINT(EM_DIAGRAM):   var PERCENT;
MPRINT(EM_DIAGRAM):   id _STAT_;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   by DATAROLE descending STD;
MPRINT(EM_DIAGRAM):   where STD ne .;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_CLASSPLOT(keep=DATAROLE Variable STD OrderedInput);
MPRINT(EM_DIAGRAM):   label OrderedInput = "Ordered Inputs";
MPRINT(EM_DIAGRAM):   format OrderedInput 5.0;
MPRINT(EM_DIAGRAM):   label STD = "Percent Variability";
MPRINT(EM_DIAGRAM):   retain OrderedInput 0;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   by DATAROLE;
MPRINT(EM_DIAGRAM):   if first.DATAROLE then OrderedInput = 1;
MPRINT(EM_DIAGRAM):   else OrderedInput + 1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   by Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   merge EMWS2.Stat2_CLASSPLOT(in=_a) WORK.M3MZ5Q6J(rename=(NAME=VARIABLE) Keep=NAME ROLE LABEL REPORT);
MPRINT(EM_DIAGRAM):   by Variable;
MPRINT(EM_DIAGRAM):   if _a and (OrderedInput<100 or Report='Y') then output;
MPRINT(EM_DIAGRAM):   run;
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):   data temp;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   where DATAROLE='TRAIN';
MPRINT(EM_DIAGRAM):   if OrderedInput<21 then plot = 1;
MPRINT(EM_DIAGRAM):   else plot=0;
MPRINT(EM_DIAGRAM):   if LABEL = "" then LABEL = Variable;
MPRINT(EM_DIAGRAM):   keep Variable Label plot;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   merge EMWS2.Stat2_CLASSPLOT temp;
MPRINT(EM_DIAGRAM):   by Variable;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" ROLE = "Role" PLOT = "Plot" REPORT = "Report";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_CLASSPLOT;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS2.Stat2_CLASS;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_CLASS;
MPRINT(EM_DIAGRAM):   merge EMWS2.Stat2_CLASS(drop=NRAW CRAW) EMWS2.Stat2_CLASSPLOT(keep=DATAROLE Variable Plot);
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   if plot eq . then delete;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" LEVEL = "Level" TYPE = "Type" COUNT = "Frequency Count" ROLE = "Role" PERCENT = "Percent" PLOT = "Plot" LEVELINDEX = "Level Index";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   label NMiss = "Missing" absCV = "Abs C.V." CV = "Coefficient of Variation" Sign = "Sign";
MPRINT(EM_DIAGRAM):   if MEAN ne . then do;
MPRINT(EM_DIAGRAM):   CV = STD/MEAN;
MPRINT(EM_DIAGRAM):   absCV = abs(CV);
MPRINT(EM_DIAGRAM):   if absCV < 0 then Sign = '-';
MPRINT(EM_DIAGRAM):   else Sign = '+';
MPRINT(EM_DIAGRAM):   absCV = abs(absCV);
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   by DATAROLE descending absCV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   retain OrderedInput;
MPRINT(EM_DIAGRAM):   set EMWS2.Stat2_INTERVAL;
MPRINT(EM_DIAGRAM):   by DATAROLE;
MPRINT(EM_DIAGRAM):   label OrderedInput = "Ordered Inputs";
MPRINT(EM_DIAGRAM):   format OrderedInput 5.0;
MPRINT(EM_DIAGRAM):   if first.DATAROLE then OrderedInput = 1;
MPRINT(EM_DIAGRAM):   else OrderedInput + 1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M3MZ5Q6J;
MPRINT(EM_DIAGRAM):   by name;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
