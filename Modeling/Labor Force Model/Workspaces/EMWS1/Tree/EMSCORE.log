MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "December 09, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16:17:38" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                December 09, 2019
Time:                16:17:38
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QSVTFX "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QSVTFX new;
MPRINT(EM_DIAGRAM):   run;
42697      %let EMEXCEPTIONSTRING=;
42698      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
42699      * SCORE: Tree;
MPRINT(EM_DIAGRAM):   * SCORE: Tree;
42700      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42701      %let EM_ACTION = SCORE;
42702      %let syscc = 0;
42703      %macro main;
42704      
42705        %if %upcase(&EM_ACTION) = CREATE %then %do;
42706          filename temp catalog 'sashelp.emmodl.tree_create.source';
42707          %include temp;
42708          filename temp;
42709      
42710          %em_tree_create;
42711        %end;
42712      
42713         %else
42714         %if %upcase(&EM_ACTION) = TRAIN %then %do;
42715      
42716             filename temp catalog 'sashelp.emmodl.tree_train.source';
42717             %include temp;
42718             filename temp;
42719             %em_tree_train;
42720         %end;
42721      
42722        %else
42723        %if %upcase(&EM_ACTION) = SCORE %then %do;
42724          filename temp catalog 'sashelp.emmodl.tree_score.source';
42725          %include temp;
42726          filename temp;
42727      
42728          %em_tree_score;
42729      
42730        %end;
42731      
42732        %else
42733        %if %upcase(&EM_ACTION) = REPORT %then %do;
42734      
42735             filename temp catalog 'sashelp.emmodl.tree_report.source';
42736             %include temp;
42737             filename temp;
42738      
42739             %em_tree_report;
42740         %end;
42741      
42742        %else
42743        %if %upcase(&EM_ACTION) = OPENINT %then %do;
42744      
42745             filename temp catalog 'sashelp.emmodl.tree_actions.source';
42746             %include temp;
42747             filename temp;
42748             %EM_TREE_OPENTREEVIEWER;
42749      
42750         %end;
42751      
42752        %else
42753        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
42754      
42755             filename temp catalog 'sashelp.emmodl.tree_actions.source';
42756             %include temp;
42757             filename temp;
42758             %EM_TREE_CLOSETREEVIEWER;
42759      
42760         %end;
42761      
42762      
42763         %doendm:
42764      %mend main;
42765      
42766      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
42768     +%macro em_tree_score;
42770     +   /* determine if multiple targets will be processed */
42771     +   %let em_tree_multipleTargets=N;
42772     +   %let em_tree_numTarget=1;
42773     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
42774     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
42775     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
42776     +         %let em_tree_multipleTargets=N;
42777     +      %end;
42778     +      %else %do;
42779     +         /* create macro array of targets  */
42780     +         data _null_;
42781     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
42782     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
42783     +           if eof then
42784     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
42785     +        run;
42787     +        %if &em_tree_numTarget gt 1 %then %do;
42788     +           %let em_tree_multipleTargets=Y;
42789     +        %end;
42790     +      %end;
42791     +   %end;
42793     +   /* build flow and publish scoring code */
42794     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
42795     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
42797     +   filename treeflow "&EM_USER_TREEFLOW";
42798     +   filename treepub "&EM_USER_TREEPUBLISH";
42800     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
42801     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
42803     +   %em_copyfile(infref=treeflow, outfref=flowref);
42804     +   %em_copyfile(infref=treepub, outfref=pubref);
42806     +   filename treeflow;
42807     +   filename treepub;
42809     +   /* if priors are used, add code to generate unadjusted residuals in export */
42810     +   %let useAdjPriors = N;
42811     +   data _null_;
42812     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
42813     +     if USE="Y" then call symput('useAdjPriors', 'Y');
42814     +   run;
42815     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
42816     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
42817     +      %include temp;
42818     +      filename temp;
42820     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
42821     +      filename adjref "&EM_USER_adjResidualCode";
42822     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
42824     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
42826     +      filename adjref;
42827     +   %end;
42829     +   /* LEAF */
42830     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
42831     +      data _null_;
42832     +        file flowref mod;
42833     +        put 'drop _LEAF_;';
42834     +      run;
42836     +      data _null_;
42837     +        file pubref mod;
42838     +        put 'drop _LEAF_;';
42839     +      run;
42841     +   %end;
42843     +   filename flowref;
42844     +   filename pubref;
42846     +   /* em_metachange code */
42847     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
42848     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
42849     +   %end;
42851     +   /* variable selection based on importance stat    */
42852     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
42853     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
42854     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
42855     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
42856     +     %let obs = %sysfunc(fetch(&dsid));
42857     +     %do %while(&obs=0);
42858     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
42859     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
42860     +       %EM_METACHANGE(name=&varname, role=REJECTED);
42861     +       %let obs = %sysfunc(fetch(&dsid));
42862     +     %end;
42863     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
42864     +   %end;
42866     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
42867     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
42868     +    %let tree_pred_vars = ;
42869     +    %let tree_pred_lvl =;
42870     +    %let numpred= 0;
42872     +    data _null_;
42873     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
42874     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
42875     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
42876     +     if eof then
42877     +       call symput('numpred', strip(put(_N_, BEST.)));
42878     +    run;
42879     +   %end;
42881     +   %if &numpred ne 0 %then %do;
42882     +    %do i=1 %to &numpred;
42883     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
42884     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
42885     +    %end;
42886     +   %end;
42888     +   /* determine if multiple targets will be processed */
42889     +   %let em_tree_multipleTargets=N;
42890     +   %let em_tree_numTarget=1;
42891     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
42892     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
42893     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
42894     +         %let em_tree_multipleTargets=N;
42895     +      %end;
42896     +      %else %do;
42897     +        data _null_;
42898     +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
42899     +          if eof then
42900     +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
42901     +        run;
42903     +        %if &em_tree_numTarget gt 1 %then %do;
42904     +           %let em_tree_multipleTargets=Y;
42905     +        %end;
42906     +     %end;
42907     +   %end;
42909     +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
42910     +   %if "&em_tree_multipleTargets" eq "N" %then %do;
42912     +      /* variable importance */
42913     +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
42914     +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
42916     +         %let validexist=0;
42917     +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
42918     +           %let validexist=1;
42919     +         %end;
42921     +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
42922     +         /* and the columns may not be generated                                                                                 */
42923     +         %let em_tree_cvexists=;
42924     +         %let em_tree_surrexists=.;
42925     +         data _null_;
42926     +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
42927     +            if eof then do ;
42928     +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
42929     +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
42930     +            end;
42931     +         run;
42933     +         data &EM_USER_OUTIMPORT;
42934     +            set &EM_USER_OUTIMPORT;
42936     +            /* format columns based on Precison value specified */
42937     +            format importance 15.&EM_PROPERTY_PRECISION
42938     +                 %if &validexist %then %do;
42939     +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
42940     +                 %end;
42941     +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
42942     +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
42943     +                 %end;
42944     +            ;
42945     +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
42946     +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
42947     +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
42948     +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
42949     +                 %if "&em_tree_surrexists" ne "" %then %do;
42950     +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
42951     +                 %end;
42952     +                 %if &validexist %then %do;
42953     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
42954     +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
42955     +                 %end;
42956     +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
42957     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
42958     +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
42959     +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
42960     +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
42961     +                 %end;
42962     +            ;
42963     +         run;
42965     +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
42966     +      %end;
42967     +   %end;
42969     +   %doendm:
42970     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Dec2019:16:17:37,
      Create Time=19Nov2019:15:19:47

NOTE: 210 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 76.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Dec2019:16:17:37,
      Create Time=19Nov2019:15:19:47

NOTE: 205 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 71.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_Sum_Labor_Force__DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_SUM_LABOR_FORCE__DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8174,
      Last Modified=09Dec2019:16:17:37,
      Create Time=19Nov2019:15:19:47

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=7924,
      Last Modified=09Dec2019:16:17:37,
      Create Time=19Nov2019:15:19:47

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_Sum_Labor_Force__DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_SUM_LABOR_FORCE__DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Sum_Labor_Force_Pop");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 3 observations read from the data set EMWS1.TREE_OUTIMPORT.
NOTE: The data set EMWS1.TREE_OUTIMPORT has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.62790462124529;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42971      
42972      *------------------------------------------------------------*;
42973      * End SCORE: Tree;
42974      *------------------------------------------------------------*;

42975      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
42976      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
42977      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

42978      filename x "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
42979      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
42980      file x;
MPRINT(EM_DIAGRAM):   file x;
42981      put 'if upcase(NAME) = "Q_SUM_LABOR_FORCE_POP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_SUM_LABOR_FORCE_POP" then do;';
42982      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
42983      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
42984      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
42985      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
42986      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
42987      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
42988      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
42989      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=09Dec2019:16:17:37,
      Create Time=19Nov2019:15:19:47

NOTE: 8 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 50.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

42990      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
42991      filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
42992      *------------------------------------------------------------*;
42993      * Tree: Scoring DATA data;
42994      *------------------------------------------------------------*;
42995      data EMWS1.Tree_TRAIN
42996      / view=EMWS1.Tree_TRAIN
42997      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_TRAIN / view=EMWS1.Tree_TRAIN ;
42998      set EMWS1.Part_TRAIN
42999      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN ;
43000      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
43001     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43002     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
43003     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43004     +
43005     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
43006     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
43007     +
43008     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
43009     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
43010     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
43011     +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
43012     +label V_Sum_Labor_Force_Pop = 'Validated: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label V_Sum_Labor_Force_Pop = 'Validated: Sum_Labor_Force_Pop' ;
43013     +label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
43014     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
43015     +
43016     +
43017     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
43018     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
43019     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
43020     +LENGTH _ARBFMT_111 $    111; DROP _ARBFMT_111;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_111 $ 111;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_111;
43021     +_ARBFMT_111 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = ' ';
43022     +
43023     +
43024     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
43025     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
43026     + %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43027     +IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
43028     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
43029     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 2996777.77777777;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 3010800;
43030     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   END;
43031     +    _NODE_  =                    6;
43032     +    _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43033     +    P_Sum_Labor_Force_Pop  =     2996777.77777777;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
43034     +    V_Sum_Labor_Force_Pop  =              3010800;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
43035     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1829875;
43036     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1873500;
MPRINT(EM_DIAGRAM):   END;
43037     +    _NODE_  =                    7;
43038     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
43039     +    P_Sum_Labor_Force_Pop  =              1829875;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
43040     +    V_Sum_Labor_Force_Pop  =              1873500;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
43041     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 2191000;
43042     +  ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 2321500;
MPRINT(EM_DIAGRAM):   END;
43043     +    _NODE_  =                    8;
43044     +    _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
43045     +    P_Sum_Labor_Force_Pop  =              2191000;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
43046     +    V_Sum_Labor_Force_Pop  =              2321500;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
43047     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 5561500;
43048     +  ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 5744500;
MPRINT(EM_DIAGRAM):   END;
43049     +    _NODE_  =                   10;
43050     +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   ELSE DO;
43051     +    P_Sum_Labor_Force_Pop  =              5561500;
43052     +    V_Sum_Labor_Force_Pop  =              5744500;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND 39194767.5 <= Population THEN DO;
43053     +    END;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
43054     +  ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 5590800;
43055     +    IF  NOT MISSING(Population ) AND
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = .;
43056     +                39194767.5 <= Population  THEN DO;
MPRINT(EM_DIAGRAM):   END;
43057     +      _NODE_  =                   26;
43058     +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   ELSE DO;
43059     +      P_Sum_Labor_Force_Pop  =              5590800;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
43060     +      V_Sum_Labor_Force_Pop  =                    .;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
43061     +      END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6602875;
43062     +    ELSE DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 6999000;
MPRINT(EM_DIAGRAM):   END;
43063     +      _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   END;
43064     +      _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   END;
43065     +      P_Sum_Labor_Force_Pop  =              6602875;
43066     +      V_Sum_Labor_Force_Pop  =              6999000;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('65+' ) THEN DO;
43067     +      END;
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43068     +    END;
43069     +  END;
43070     +ELSE IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
43071     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
43072     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 2215727.27272727;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1947000;
43073     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   END;
43074     +    _NODE_  =                   11;
43075     +    _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43076     +    P_Sum_Labor_Force_Pop  =     2215727.27272727;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
43077     +    V_Sum_Labor_Force_Pop  =              1947000;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
43078     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 348285.714285714;
43079     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 309857.142857142;
MPRINT(EM_DIAGRAM):   END;
43080     +    _NODE_  =                   12;
43081     +    _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
43082     +    P_Sum_Labor_Force_Pop  =     348285.714285714;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
43083     +    V_Sum_Labor_Force_Pop  =     309857.142857142;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
43084     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 623250;
43085     +  ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 647000;
MPRINT(EM_DIAGRAM):   END;
43086     +    _NODE_  =                   13;
43087     +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
43088     +    P_Sum_Labor_Force_Pop  =               623250;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
43089     +    V_Sum_Labor_Force_Pop  =               647000;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
43090     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1541000;
43091     +  ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1553500;
MPRINT(EM_DIAGRAM):   END;
43092     +    _NODE_  =                   14;
43093     +    _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   ELSE DO;
43094     +    P_Sum_Labor_Force_Pop  =              1541000;
43095     +    V_Sum_Labor_Force_Pop  =              1553500;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND 37494909 <= Population THEN DO;
43096     +    END;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
43097     +  ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1061000;
43098     +    IF  NOT MISSING(Population ) AND
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1033000;
43099     +                  37494909 <= Population  THEN DO;
MPRINT(EM_DIAGRAM):   END;
43100     +      _NODE_  =                   28;
43101     +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   ELSE DO;
43102     +      P_Sum_Labor_Force_Pop  =              1061000;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
43103     +      V_Sum_Labor_Force_Pop  =              1033000;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
43104     +      END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 778571.428571428;
43105     +    ELSE DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = .;
MPRINT(EM_DIAGRAM):   END;
43106     +      _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   END;
43107     +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   END;
43108     +      P_Sum_Labor_Force_Pop  =     778571.428571428;
43109     +      V_Sum_Labor_Force_Pop  =                    .;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
43110     +      END;
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43111     +    END;
43112     +  END;
43113     +ELSE IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
43114     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
43115     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 24416375;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 24128833.3333333;
43116     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   END;
43117     +    _NODE_  =                   20;
43118     +    _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43119     +    P_Sum_Labor_Force_Pop  =             24416375;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
43120     +    V_Sum_Labor_Force_Pop  =     24128833.3333333;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
43121     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6847600;
43122     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 7685000;
MPRINT(EM_DIAGRAM):   END;
43123     +    _NODE_  =                   21;
43124     +    _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
43125     +    P_Sum_Labor_Force_Pop  =              6847600;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
43126     +    V_Sum_Labor_Force_Pop  =              7685000;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
43127     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 14720500;
43128     +  ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 14455750;
MPRINT(EM_DIAGRAM):   END;
43129     +    _NODE_  =                   23;
43130     +    _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
43131     +    P_Sum_Labor_Force_Pop  =             14720500;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
43132     +    V_Sum_Labor_Force_Pop  =             14455750;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
43133     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 9923222.22222222;
43134     +  ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 10283400;
MPRINT(EM_DIAGRAM):   END;
43135     +    _NODE_  =                   24;
43136     +    _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   ELSE DO;
43137     +    P_Sum_Labor_Force_Pop  =     9923222.22222222;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
43138     +    V_Sum_Labor_Force_Pop  =             10283400;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
43139     +    END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 7952090.90909091;
43140     +  ELSE DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 8735333.33333333;
MPRINT(EM_DIAGRAM):   END;
43141     +    _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   END;
43142     +    _LEAF_  =                   22;
43143     +    P_Sum_Labor_Force_Pop  =     7952090.90909091;
MPRINT(EM_DIAGRAM):   ELSE DO;
43144     +    V_Sum_Labor_Force_Pop  =     8735333.33333333;
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43145     +    END;
43146     +  END;
43147     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
43148     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
43149     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 20965500;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 21065666.6666666;
43150     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   END;
43151     +    _NODE_  =                   16;
43152     +    _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43153     +    P_Sum_Labor_Force_Pop  =             20965500;
43154     +    V_Sum_Labor_Force_Pop  =     21065666.6666666;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND Population < 74176836.5 THEN DO;
43155     +    END;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
43156     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 4352600;
43157     +    IF  NOT MISSING(Population ) AND
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 4453000;
43158     +      Population  <           74176836.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
43159     +      _NODE_  =                   29;
43160     +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   ELSE DO;
43161     +      P_Sum_Labor_Force_Pop  =              4352600;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
43162     +      V_Sum_Labor_Force_Pop  =              4453000;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
43163     +      END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 5114857.14285714;
43164     +    ELSE DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 4932000;
MPRINT(EM_DIAGRAM):   END;
43165     +      _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   END;
43166     +      _LEAF_  =                   15;
43167     +      P_Sum_Labor_Force_Pop  =     5114857.14285714;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
43168     +      V_Sum_Labor_Force_Pop  =              4932000;
43169     +      END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND Population < 72036317.5 THEN DO;
43170     +    END;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
43171     +  ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 11762000;
43172     +    IF  NOT MISSING(Population ) AND
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = .;
43173     +      Population  <           72036317.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
43174     +      _NODE_  =                   33;
43175     +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   ELSE DO;
43176     +      P_Sum_Labor_Force_Pop  =             11762000;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
43177     +      V_Sum_Labor_Force_Pop  =                    .;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
43178     +      END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 12843500;
43179     +    ELSE DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 12876000;
MPRINT(EM_DIAGRAM):   END;
43180     +      _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   END;
43181     +      _LEAF_  =                   19;
43182     +      P_Sum_Labor_Force_Pop  =             12843500;
MPRINT(EM_DIAGRAM):   ELSE DO;
43183     +      V_Sum_Labor_Force_Pop  =             12876000;
43184     +      END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND Population < 74176836.5 THEN DO;
43185     +    END;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
43186     +  ELSE DO;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6299222.22222222;
43187     +    IF  NOT MISSING(Population ) AND
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 6141000;
43188     +      Population  <           74176836.5 THEN DO;
MPRINT(EM_DIAGRAM):   END;
43189     +      _NODE_  =                   31;
43190     +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   ELSE DO;
43191     +      P_Sum_Labor_Force_Pop  =     6299222.22222222;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
43192     +      V_Sum_Labor_Force_Pop  =              6141000;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
43193     +      END;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 7409916.66666666;
43194     +    ELSE DO;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 6912250;
MPRINT(EM_DIAGRAM):   END;
43195     +      _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   END;
43196     +      _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   END;
43197     +      P_Sum_Labor_Force_Pop  =     7409916.66666666;
43198     +      V_Sum_Labor_Force_Pop  =              6912250;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
43199     +      END;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = .;
43200     +    END;
43201     +  END;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
43202     +
43203     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43204     +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
43205     +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43206     +
MPRINT(EM_DIAGRAM):   drop _LEAF_;
43207     +****************************************************************;
43208     +******          END OF DECISION TREE SCORING CODE         ******;
43209     +****************************************************************;
43210     +
43211     +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
43212      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
43213      quit;
43214      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
43215      filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
43216      *------------------------------------------------------------*;
43217      * Tree: Scoring VALIDATE data;
43218      *------------------------------------------------------------*;
43219      data EMWS1.Tree_VALIDATE
43220      / view=EMWS1.Tree_VALIDATE
43221      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_VALIDATE / view=EMWS1.Tree_VALIDATE ;
43222      set EMWS1.Part_VALIDATE
43223      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_VALIDATE ;
43224      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\EMFLOWSCORE.sas.
43225     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43226     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
43227     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43228     +
43229     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
43230     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
43231     +
43232     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
43233     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
43234     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
43235     +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
43236     +label V_Sum_Labor_Force_Pop = 'Validated: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label V_Sum_Labor_Force_Pop = 'Validated: Sum_Labor_Force_Pop' ;
43237     +label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
43238     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
43239     +
43240     +
43241     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
43242     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
43243     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
43244     +LENGTH _ARBFMT_111 $    111; DROP _ARBFMT_111;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_111 $ 111;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_111;
43245     +_ARBFMT_111 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = ' ';
43246     +
43247     +
43248     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
43249     +_ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
43250     + %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
43251     +IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
43252     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43253     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
43254     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
43255     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
43256     +    _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
43257     +    P_Sum_Labor_Force_Pop  =     2996777.77777777;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 2996777.77777777;
43258     +    V_Sum_Labor_Force_Pop  =              3010800;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 3010800;
43259     +    END;
MPRINT(EM_DIAGRAM):   END;
43260     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43261     +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
43262     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
43263     +    P_Sum_Labor_Force_Pop  =              1829875;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1829875;
43264     +    V_Sum_Labor_Force_Pop  =              1873500;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1873500;
43265     +    END;
MPRINT(EM_DIAGRAM):   END;
43266     +  ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
43267     +    _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
43268     +    _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
43269     +    P_Sum_Labor_Force_Pop  =              2191000;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 2191000;
43270     +    V_Sum_Labor_Force_Pop  =              2321500;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 2321500;
43271     +    END;
MPRINT(EM_DIAGRAM):   END;
43272     +  ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
43273     +    _NODE_  =                   10;
MPRINT(EM_DIAGRAM):   _NODE_ = 10;
43274     +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
43275     +    P_Sum_Labor_Force_Pop  =              5561500;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 5561500;
43276     +    V_Sum_Labor_Force_Pop  =              5744500;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 5744500;
43277     +    END;
MPRINT(EM_DIAGRAM):   END;
43278     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43279     +    IF  NOT MISSING(Population ) AND
43280     +                39194767.5 <= Population  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND 39194767.5 <= Population THEN DO;
43281     +      _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
43282     +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
43283     +      P_Sum_Labor_Force_Pop  =              5590800;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 5590800;
43284     +      V_Sum_Labor_Force_Pop  =                    .;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = .;
43285     +      END;
MPRINT(EM_DIAGRAM):   END;
43286     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43287     +      _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
43288     +      _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
43289     +      P_Sum_Labor_Force_Pop  =              6602875;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6602875;
43290     +      V_Sum_Labor_Force_Pop  =              6999000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 6999000;
43291     +      END;
MPRINT(EM_DIAGRAM):   END;
43292     +    END;
MPRINT(EM_DIAGRAM):   END;
43293     +  END;
MPRINT(EM_DIAGRAM):   END;
43294     +ELSE IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('65+' ) THEN DO;
43295     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43296     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
43297     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
43298     +    _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
43299     +    _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
43300     +    P_Sum_Labor_Force_Pop  =     2215727.27272727;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 2215727.27272727;
43301     +    V_Sum_Labor_Force_Pop  =              1947000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1947000;
43302     +    END;
MPRINT(EM_DIAGRAM):   END;
43303     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43304     +    _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
43305     +    _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
43306     +    P_Sum_Labor_Force_Pop  =     348285.714285714;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 348285.714285714;
43307     +    V_Sum_Labor_Force_Pop  =     309857.142857142;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 309857.142857142;
43308     +    END;
MPRINT(EM_DIAGRAM):   END;
43309     +  ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('PRODUCTION, TRANSPORTATION, AND' ) THEN DO;
43310     +    _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
43311     +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
43312     +    P_Sum_Labor_Force_Pop  =               623250;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 623250;
43313     +    V_Sum_Labor_Force_Pop  =               647000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 647000;
43314     +    END;
MPRINT(EM_DIAGRAM):   END;
43315     +  ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
43316     +    _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
43317     +    _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
43318     +    P_Sum_Labor_Force_Pop  =              1541000;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1541000;
43319     +    V_Sum_Labor_Force_Pop  =              1553500;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1553500;
43320     +    END;
MPRINT(EM_DIAGRAM):   END;
43321     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43322     +    IF  NOT MISSING(Population ) AND
43323     +                  37494909 <= Population  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND 37494909 <= Population THEN DO;
43324     +      _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
43325     +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
43326     +      P_Sum_Labor_Force_Pop  =              1061000;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 1061000;
43327     +      V_Sum_Labor_Force_Pop  =              1033000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 1033000;
43328     +      END;
MPRINT(EM_DIAGRAM):   END;
43329     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43330     +      _NODE_  =                   27;
MPRINT(EM_DIAGRAM):   _NODE_ = 27;
43331     +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
43332     +      P_Sum_Labor_Force_Pop  =     778571.428571428;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 778571.428571428;
43333     +      V_Sum_Labor_Force_Pop  =                    .;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = .;
43334     +      END;
MPRINT(EM_DIAGRAM):   END;
43335     +    END;
MPRINT(EM_DIAGRAM):   END;
43336     +  END;
MPRINT(EM_DIAGRAM):   END;
43337     +ELSE IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
43338     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43339     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
43340     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
43341     +    _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
43342     +    _LEAF_  =                   20;
MPRINT(EM_DIAGRAM):   _LEAF_ = 20;
43343     +    P_Sum_Labor_Force_Pop  =             24416375;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 24416375;
43344     +    V_Sum_Labor_Force_Pop  =     24128833.3333333;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 24128833.3333333;
43345     +    END;
MPRINT(EM_DIAGRAM):   END;
43346     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43347     +    _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
43348     +    _LEAF_  =                   21;
MPRINT(EM_DIAGRAM):   _LEAF_ = 21;
43349     +    P_Sum_Labor_Force_Pop  =              6847600;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6847600;
43350     +    V_Sum_Labor_Force_Pop  =              7685000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 7685000;
43351     +    END;
MPRINT(EM_DIAGRAM):   END;
43352     +  ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
43353     +    _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
43354     +    _LEAF_  =                   23;
MPRINT(EM_DIAGRAM):   _LEAF_ = 23;
43355     +    P_Sum_Labor_Force_Pop  =             14720500;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 14720500;
43356     +    V_Sum_Labor_Force_Pop  =             14455750;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 14455750;
43357     +    END;
MPRINT(EM_DIAGRAM):   END;
43358     +  ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SERVICE OCCUPATIONS' ) THEN DO;
43359     +    _NODE_  =                   24;
MPRINT(EM_DIAGRAM):   _NODE_ = 24;
43360     +    _LEAF_  =                   24;
MPRINT(EM_DIAGRAM):   _LEAF_ = 24;
43361     +    P_Sum_Labor_Force_Pop  =     9923222.22222222;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 9923222.22222222;
43362     +    V_Sum_Labor_Force_Pop  =             10283400;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 10283400;
43363     +    END;
MPRINT(EM_DIAGRAM):   END;
43364     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43365     +    _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
43366     +    _LEAF_  =                   22;
MPRINT(EM_DIAGRAM):   _LEAF_ = 22;
43367     +    P_Sum_Labor_Force_Pop  =     7952090.90909091;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 7952090.90909091;
43368     +    V_Sum_Labor_Force_Pop  =     8735333.33333333;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 8735333.33333333;
43369     +    END;
MPRINT(EM_DIAGRAM):   END;
43370     +  END;
MPRINT(EM_DIAGRAM):   END;
43371     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43372     +  _ARBFMT_111 = PUT( Industry , $CHAR111.);
MPRINT(EM_DIAGRAM):   _ARBFMT_111 = PUT( Industry , $CHAR111.);
43373     +   %DMNORMIP( _ARBFMT_111);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_111,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
43374     +  IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_111 IN ('MANAGEMENT, PROFESSIONAL, AND RE' ) THEN DO;
43375     +    _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
43376     +    _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
43377     +    P_Sum_Labor_Force_Pop  =             20965500;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 20965500;
43378     +    V_Sum_Labor_Force_Pop  =     21065666.6666666;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 21065666.6666666;
43379     +    END;
MPRINT(EM_DIAGRAM):   END;
43380     +  ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('NATURAL RESOURCES, CONSTRUCTION,' ) THEN DO;
43381     +    IF  NOT MISSING(Population ) AND
43382     +      Population  <           74176836.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND Population < 74176836.5 THEN DO;
43383     +      _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
43384     +      _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
43385     +      P_Sum_Labor_Force_Pop  =              4352600;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 4352600;
43386     +      V_Sum_Labor_Force_Pop  =              4453000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 4453000;
43387     +      END;
MPRINT(EM_DIAGRAM):   END;
43388     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43389     +      _NODE_  =                   30;
MPRINT(EM_DIAGRAM):   _NODE_ = 30;
43390     +      _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
43391     +      P_Sum_Labor_Force_Pop  =     5114857.14285714;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 5114857.14285714;
43392     +      V_Sum_Labor_Force_Pop  =              4932000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 4932000;
43393     +      END;
MPRINT(EM_DIAGRAM):   END;
43394     +    END;
MPRINT(EM_DIAGRAM):   END;
43395     +  ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_111 IN ('SALES AND OFFICE OCCUPATIONS' ) THEN DO;
43396     +    IF  NOT MISSING(Population ) AND
43397     +      Population  <           72036317.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND Population < 72036317.5 THEN DO;
43398     +      _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
43399     +      _LEAF_  =                   18;
MPRINT(EM_DIAGRAM):   _LEAF_ = 18;
43400     +      P_Sum_Labor_Force_Pop  =             11762000;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 11762000;
43401     +      V_Sum_Labor_Force_Pop  =                    .;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = .;
43402     +      END;
MPRINT(EM_DIAGRAM):   END;
43403     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43404     +      _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
43405     +      _LEAF_  =                   19;
MPRINT(EM_DIAGRAM):   _LEAF_ = 19;
43406     +      P_Sum_Labor_Force_Pop  =             12843500;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 12843500;
43407     +      V_Sum_Labor_Force_Pop  =             12876000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 12876000;
43408     +      END;
MPRINT(EM_DIAGRAM):   END;
43409     +    END;
MPRINT(EM_DIAGRAM):   END;
43410     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43411     +    IF  NOT MISSING(Population ) AND
43412     +      Population  <           74176836.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population ) AND Population < 74176836.5 THEN DO;
43413     +      _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
43414     +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
43415     +      P_Sum_Labor_Force_Pop  =     6299222.22222222;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 6299222.22222222;
43416     +      V_Sum_Labor_Force_Pop  =              6141000;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 6141000;
43417     +      END;
MPRINT(EM_DIAGRAM):   END;
43418     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
43419     +      _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
43420     +      _LEAF_  =                   17;
MPRINT(EM_DIAGRAM):   _LEAF_ = 17;
43421     +      P_Sum_Labor_Force_Pop  =     7409916.66666666;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 7409916.66666666;
43422     +      V_Sum_Labor_Force_Pop  =              6912250;
MPRINT(EM_DIAGRAM):   V_Sum_Labor_Force_Pop = 6912250;
43423     +      END;
MPRINT(EM_DIAGRAM):   END;
43424     +    END;
MPRINT(EM_DIAGRAM):   END;
43425     +  END;
MPRINT(EM_DIAGRAM):   END;
43426     +
43427     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
43428     +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = .;
43429     +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
43430     +
43431     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43432     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
43433     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
43434     +
43435     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
43436      run;

NOTE: DATA STEP view saved on file EMWS1.TREE_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
43437      quit;
43438      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
43440      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
43441      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
43442      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43443      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
43444      * Tree: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree: Computing metadata for TRAIN data;
43445      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Tree\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree_TRAIN out=WORK.M00WZZZJ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00WZZZJ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M00WZZZJ(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00WZZZJ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M00WZZZJ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0_LCI6F NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0DT29PN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_LCI6F;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_SUM_LABOR_FORCE_POP") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree";
MPRINT(EM_DIAGRAM):   when("SUM_LABOR_FORCE_POP") model = "Tree";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "Q_SUM_LABOR_FORCE_POP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
43800      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
43801      set EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO;
43802      where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
43803      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.TREE_EMINFO.
      WHERE (DATA='Tree') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43804      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree_EMINFO;
43805      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
43806      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
43807      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
43811      run;
43812      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_EMINFO;
43813      set EMWS1.Tree_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS1.Tree_EMINFO WORK.MODELTEMP_INFO;
43814      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43815      proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Tree_EMINFO NOTHREADS;
43816      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43817      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set EMWS1.TREE_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43818      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
43819      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43820      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

43821      proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
43822      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43823      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

43824      data EMWS1.Tree_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree_EMINFO;
43825      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
43826      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
43827      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

43828      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
43829      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
43830      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
43831      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.TREE_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS1.TREE_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
