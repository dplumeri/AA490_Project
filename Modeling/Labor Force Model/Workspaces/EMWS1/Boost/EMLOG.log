*------------------------------------------------------------*
User:                student
Date:                November 21, 2019
Time:                15:11:58
Site:                70082322
Platform:            X64_10PRO
Maintenance Release: 9.04.01M4P110916
EM Version:          14.2
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:51" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 21, 2019
Time:                15:11:51
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3921JIK "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3921JIK new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:51" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70082322";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_10PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M4P110916";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.2";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:51" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                student";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22504      proc freq data=EMWS1.Boost_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Boost_VariableSet noprint;
22505      table ROLE*LEVEL/out=WORK.BoostMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.BoostMETA;
22506      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.BOOST_VARIABLESET.
NOTE: The data set WORK.BOOSTMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
22507      proc print data=WORK.BoostMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.BoostMETA label noobs;
22508      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22509      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22510      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22511      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22512      run;
 
NOTE: There were 5 observations read from the data set WORK.BOOSTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
22513      title10;
MPRINT(EM_DIAGRAM):   title10;
22514      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS1.Part_TRAIN EMWS1.Part_TRAIN
EMWS1.Part_TRAIN EMWS1.Part_TRAIN EMWS1 Part_TRAIN
EMWS1.Part_TRAIN EMWS1.Part_TRAIN
EMWS1.Part_TRAIN EMWS1.Part_TRAIN EMWS1 Part_TRAIN
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
"No decisions defined for target "Sum_Labor_Force_Pop"."
22515      proc print data = EMWS1.Ids_Sum_Labor_Force__DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS1.Ids_Sum_Labor_Force__DM noobs label;
22516      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
22517      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
22518      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
22519      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22520      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
22521      run;
 
NOTE: There were 3 observations read from the data set EMWS1.IDS_SUM_LABOR_FORCE__DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22522      title10;
MPRINT(EM_DIAGRAM):   title10;
22523      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Labor Force Model';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Labor Force';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emutil.em_decdata.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DECDATA):   proc display cat=sashelp.emutil.makedecdata.scl;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   * Boost: Create decision matrix;
MPRINT(EM_DECDATA):   *------------------------------------------------------------*;
MPRINT(EM_DECDATA):   data WORK.Sum_Labor_Force_Pop(label="Sum_Labor_Force_Pop");
MPRINT(EM_DECDATA):   length Sum_Labor_Force_Pop 8 ;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=225000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=25077000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   Sum_Labor_Force_Pop=12651000;
MPRINT(EM_DECDATA):   output;
MPRINT(EM_DECDATA):   ;
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   proc datasets lib=work nolist;
MPRINT(EM_DECDATA):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DECDATA):   run;
MPRINT(EM_DECDATA):   quit;
MPRINT(EM_DECDATA):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify Sum_Labor_Force_Pop(type=PROFIT label= Sum_Labor_Force_Pop);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Sum_Labor_Force__DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Sum_Labor_Force__DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EM_TARGETDECINFO;
MPRINT(EM_DIAGRAM):   length TARGET $32 DECDATA DECMETA $43;
MPRINT(EM_DIAGRAM):   TARGET="Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   DECDATA="EMWS1.Ids_Sum_Labor_Force__DD";
MPRINT(EM_DIAGRAM):   DECMETA="EMWS1.Ids_Sum_Labor_Force__DM";
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
22961      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22962      * Boost: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Boost: Generation of macros and macro variables;
22963      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
22964      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
22965      %let EMEXCEPTIONSTRING=;
22966      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22967      * TRAIN: Boost;
MPRINT(EM_DIAGRAM):   * TRAIN: Boost;
22968      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22969      %let EM_ACTION = TRAIN;
22970      %let syscc = 0;
22971      %macro main;
22972
22973        filename temp catalog 'sashelp.emmodl.boost_macros.source';
22974        %include temp;
22975        filename temp;
22976
22977        %setProperties;
22978
22979        %if %upcase(&EM_ACTION) = CREATE %then %do;
22980          filename temp catalog 'sashelp.emmodl.boost_create.source';
22981          %include temp;
22982          filename temp;
22983
22984          %create;
22985        %end;
22986
22987         %else
22988         %if %upcase(&EM_ACTION) = TRAIN %then %do;
22989
22990             filename temp catalog 'sashelp.emmodl.boost_train.source';
22991             %include temp;
22992             filename temp;
22993             %train;
22994         %end;
22995
22996        %else
22997        %if %upcase(&EM_ACTION) = SCORE %then %do;
22998          filename temp catalog 'sashelp.emmodl.boost_score.source';
22999          %include temp;
23000          filename temp;
23001
23002          %score;
23003
23004        %end;
23005
23006        %else
23007        %if %upcase(&EM_ACTION) = REPORT %then %do;
23008
23009             filename temp catalog 'sashelp.emmodl.boost_report.source';
23010             %include temp;
23011             filename temp;
23012
23013             %report;
23014         %end;
23015
23016         %doendm:
23017      %mend main;
23018
23019      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
23020     +
23021     +%macro SetProperties;
23022     +
23023     +     /* boost options */
23024     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
23025     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
23026     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
23027     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
23028     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
23029     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
23030     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
23031     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
23032     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
23033     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
23034     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
23035     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
23036     +
23037     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
23038     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
23039     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
23040     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
23041     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
23042     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
23043     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
23044     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
23045     +
23046     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
23047     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
23048     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
23049     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
23050     +
23051     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
23052     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
23053     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
23054     +
23055     +%mend SetProperties;
23056     +
23057     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAIN.SOURCE.
23059     +%macro train;
23061     +   filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
23062     +   %include temp;
23063     +   filename temp;
23065     +   %if &EM_IMPORT_DATA eq %then %do;
23066     +       %let EMEXCEPTIONSTRING = exception.server.IMPORT.NOTRAIN,1;
23067     +       %put &em_codebar;
23068     +       %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_nodeTrainRawData_note, NOQUOTE));
23069     +       %put &errormsg;
23070     +       %put &em_codebar;
23071     +       %goto doendm;
23072     +   %end;
23073     +   %else
23074     +       %let EMEXCEPTIONSTRING =;
23076     +   %if  &EM_NUM_TARGET ne 1 %then %do;
23077     +        %let EMEXCEPTIONSTRING = exception.server.USE1TARGET;
23078     +        %put &em_codebar;
23079     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.use01target_err, NOQUOTE));
23080     +        %put &errormsg;
23081     +        %put &em_codebar;
23082     +        %goto doendm;
23083     +   %end;
23085     +   %let target_level = %EM_TARGET_LEVEL;
23086     +   %let target_var = %EM_TARGET;
23088     +   %if ("&target_Level" ne "INTERVAL") %then %do;
23089     +       %em_boost_makeDMDB(indata=&EM_IMPORT_DATA, target=&target_Var,
23090     +                             nLevel=_nTargetLevel);
23091     +   %end;
23093     +   /* check actual num of target levels */
23094     +   %if (&target_Level eq BINARY) %then %do;
23095     +      %if &_nTargetLevel  > 2 %then %do;
23096     +        %let EMEXCEPTIONSTRING = exception.server.METADATA.WRONGTARGETLEVEL,&target_Var;
23097     +        %put &em_codebar;
23098     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, metadata.wrongtargetlevel, NOQUOTE));
23099     +        %put &errormsg;
23100     +        %put &em_codebar;
23101     +        %goto doendm;
23102     +      %end;
23103     +   %end;
23105     +   %if  (&EM_NUM_INTERVAL_INPUT < 1) and (&EM_NUM_BINARY_INPUT < 1) and (&EM_NUM_ORDINAL_INPUT < 1)
23106     +        and (&EM_NUM_NOMINAL_INPUT < 1) %then %do;
23107     +        %let EMEXCEPTIONSTRING = exception.server.USEATLEAST1INPUTREJECT;
23108     +        %put &em_codebar;
23109     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noInput_note, NOQUOTE));
23110     +        %put &errormsg;
23111     +        %put &em_codebar;
23112     +        %goto doendm;
23113     +   %end;
23115     +   /* Initialize property macro variables */
23116     +   %SetProperties;
23118     +   /* data sets */
23119     +   %EM_GETNAME(key=MODEL, type=DATA);
23120     +   %EM_GETNAME(key=IMPORTANCE, type=DATA);
23121     +   %EM_GETNAME(key=SUBFIT, type=DATA);
23122     +   %EM_GETNAME(key=EMOUTFIT, type=DATA);
23124     +   /* files
23125     +   %EM_GETNAME(key=BINNINGCODE, type=FILE, extension=sas);*/
23127     +   /* retrieve target information */
23128     +   %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='TARGET'))));
23130     +   %let vn_event =%sysfunc(varnum(&dsid, EVENT));
23131     +   %let vn_target_type = %sysfunc(varnum(&dsid, TYPE));
23132     +   %let vn_target_format = %sysfunc(varnum(&dsid, FORMAT));
23133     +   %let vn_target_level  = %sysfunc(varnum(&dsid, LEVEL));
23134     +   %do %while(^ %sysfunc(fetch(&dsid)));
23135     +      %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &vn_event)));
23136     +      %let Target_Event = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
23137     +      %let Target_Type =  %sysfunc(getvarc(&dsid, &vn_target_type));
23138     +      %let Target_Format = %sysfunc(getvarc(&dsid, &vn_target_format));
23139     +      %let Target_Level = %sysfunc(getvarc(&dsid, &vn_target_level));
23140     +   %end;
23141     +   %let dsid = %sysfunc(close(&dsid));
23143     +   /* if target level is ORDINAL, throw run time exception -- proc boost does not support ordinal target */
23144     +   %if &Target_Level eq ORDINAL %then %do;
23145     +        %let EMEXCEPTIONSTRING = exception.server.METADATA.INVALIDORDINALTARGET;
23146     +        %put &em_codebar;
23147     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_invalidordinaltarget_note, NOQUOTE));
23148     +        %put &errormsg;
23149     +        %put &em_codebar;
23150     +        %goto doendm;
23151     +   %end;
23153     +   /* if subSeries=ITERATIONS and iterationNum not specified, exception should be thrown */
23154     +   %if ((&EM_PROPERTY_SUBSERIES eq ITERATIONS) and (&EM_PROPERTY_ITERATIONNUM eq . )) %then %do;
23155     +        %let EMEXCEPTIONSTRING = exception.server.EMTOOL.BOOST.NOITERATIONNUM;
23156     +        %put &em_codebar;
23157     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noiterationnum_note, NOQUOTE));
23158     +        %put &errormsg;
23159     +        %put &em_codebar;
23160     +        %goto doendm;
23161     +   %end;
23163     +   %runBoostProcedure;
23166     +   %doendm:
23167     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAINMACROS.SOURCE.
23168     +%Macro em_boost_makeDMDB(indata=, target=,  nLevel= );
23169     +  %global &nLevel;
23171     +  %let targetLevel=;
23172     +  data _null_;
23173     +     length orderString $64;
23174     +     set &em_data_variableset end=eof;
23175     +     where NAME="&target";
23176     +     select(order);
23177     +            when('')        order ='DESC';
23178     +            when('FMTASC')  order='ASCFMT';
23179     +            when('FMTDESC') order='DESFMT';
23180     +            otherwise;
23181     +     end;
23182     +     if eof then do;
23183     +        call symput("targetOrder", trim(order));
23184     +        call symput("targetLevel", trim(Level));
23185     +     end;
23186     +  run;
23188     +  %if "&targetLevel" ne "INTERVAL" %then %do;
23189     +  proc dmdb batch data=&indata dmdbCat=_BoostDMDB
23190     +    classout=_tmp_dmdbout;
23191     +    class &target(&targetOrder);
23192     +    target &target;
23193     +  run;
23194     +  data _tmp_dmdbout;
23195     +    set _tmp_dmdbout;
23196     +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
23197     +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
23198     +  run;
23199     +  data _null_;
23200     +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
23201     +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
23202     +    %let dsid = %sysfunc(close(&dsid));
23203     +     call symput("&nLevel", put(&_obs, Best12.));
23204     +  run;
23206     +  proc datasets lib=work nolist;
23207     +     delete _tmp_dmdbout;
23208     +  run;
23209     +  quit;
23210     +  %end;
23212     +%Mend em_boost_makeDMDB;
23214     +%macro runBoostProcedure;
23216     +  proc sql;
23217     +    reset noprint;
23218     +    select count(*) into :nobs from &EM_IMPORT_DATA;
23219     +  quit;
23221     +  %let arborkluge= "work._BoostDMDB";
23222     +  proc arbor proc=treeboost data=&EM_IMPORT_DATA
23224     +    %if &EM_PROPERTY_ITERATIONS ne %then %do;
23225     +      iterations = &EM_PROPERTY_ITERATIONS
23226     +    %end;
23228     +    %if &EM_PROPERTY_TRAINPROPORTION ne %then %do;
23229     +       %let tprop = %sysevalf(&EM_PROPERTY_TRAINPROPORTION / 100);
23230     +       trainproportion = &tprop
23231     +    %end;
23233     +    %if &EM_PROPERTY_SEED ne %then %do;
23234     +       seed = &EM_PROPERTY_SEED
23235     +    %end;
23237     +    %if &EM_PROPERTY_SHRINKAGE ne %then %do;
23238     +       shrinkage = &EM_PROPERTY_SHRINKAGE
23239     +    %end;
23241     +    %if &EM_PROPERTY_LEAFFRACTION ne %then %do;
23242     +      leaffraction = &EM_PROPERTY_LEAFFRACTION
23243     +    %end;
23245     +    %let splitsize = &EM_PROPERTY_SPLITSIZE;
23246     +    %if &splitsize ge &nobs %then %do;
23247     +       %let splitsize= .;
23248     +    %end;
23249     +    %if &splitsize ne . %then %do;
23250     +      splitsize = &splitsize
23251     +    %end;
23253     +    %if &EM_PROPERTY_MINCATSIZE ne %then %do;
23254     +      mincatsize = &EM_PROPERTY_MINCATSIZE
23255     +    %end;
23257     +    %if &EM_PROPERTY_MAXBRANCH ne %then %do;
23258     +       maxbranch = &EM_PROPERTY_MAXBRANCH
23259     +    %end;
23261     +    %if &EM_PROPERTY_MAXDEPTH ne %then %do;
23262     +       maxdepth = &EM_PROPERTY_MAXDEPTH
23263     +    %end;
23265     +    %let nsurrs = ;
23266     +    %if &EM_PROPERTY_NSURRS ne %then %do;
23267     +      %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
23268     +      %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
23269     +      maxsurrs = &nsurrs
23270     +    %end;
23272     +    %if &EM_PROPERTY_MISSING ne %then %do;
23273     +      Missing = &EM_PROPERTY_MISSING
23274     +    %end;
23276     +    %if &EM_PROPERTY_REUSEVAR ne %then %do;
23277     +      reusevar = &EM_PROPERTY_REUSEVAR
23278     +    %end;
23279     +/*
23280     +    %if &EM_PROPERTY_PRECISION ne %then %do;
23281     +      intervaldecimals=&EM_PROPERTY_PRECISION
23282     +    %end;
23283     +*/
23284     +    %if &EM_PROPERTY_EXHAUSTIVE ne %then %do;
23285     +      Exhaustive = &EM_PROPERTY_EXHAUSTIVE
23286     +    %end;
23288     +    %if &Target_Event ne %then %do;
23289     +      Event="&Target_Event"
23290     +    %end;
23292     +    %if &EM_PROPERTY_CATEGORICALBINS ne %then %do;
23293     +      CategoricalBins = &EM_PROPERTY_CATEGORICALBINS
23294     +    %end;
23296     +    %if &EM_PROPERTY_INTERVALBINS ne %then %do;
23297     +      IntervalBins = &EM_PROPERTY_INTERVALBINS
23298     +    %end;
23300     +    %if &TARGET_LEVEL eq INTERVAL %then %do;
23301     +      %if &EM_PROPERTY_HUBER ne %then %do;
23302     +        Huber=&EM_PROPERTY_HUBER
23303     +      %end;
23304     +    %end;
23305     +    ;
23307     +    %if %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED ne %then %do;
23308     +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
23309     +    %end;
23311     +    %if %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED ne  %then %do;
23312     +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
23313     +    %end;
23315     +    %if %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED ne %then %do;
23316     +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
23317     +    %end;
23319     +    %if %EM_FREQ ne %then %do;
23320     +       freq %EM_FREQ;
23321     +    %end;
23323     +    target %EM_TARGET / level = &TARGET_LEVEL;
23325     +    &EM_DEC_STATEMENT;
23327     +    %if &EM_PROPERTY_PERFORMANCE ne %then %do;
23328     +      performance  workdatalocation = &EM_PROPERTY_PERFORMANCE
23329     +    %end;
23330     +    %if &EM_PROPERTY_NODESIZE ne %then %do;
23331     +       nodesize = &EM_PROPERTY_NODESIZE
23332     +    %end;
23333     +    ;
23334     +    save model=&EM_USER_MODEL;
23335     +  run;
23336     +  quit;
23337     +  %em_checkerror();
23339     +%mend runBoostProcedure;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
WARNING: Argument 2 to function GETVARC referenced by the %SYSFUNC or %QSYSFUNC macro function is out of range.
MPRINT(RUNBOOSTPROCEDURE):   proc sql;
MPRINT(RUNBOOSTPROCEDURE):   reset noprint;
MPRINT(RUNBOOSTPROCEDURE):   select count(*) into :nobs from EMWS1.Part_TRAIN;
MPRINT(RUNBOOSTPROCEDURE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(RUNBOOSTPROCEDURE):   proc arbor proc=treeboost data=EMWS1.Part_TRAIN iterations = 50 trainproportion = 0.6 seed = 12345 shrinkage = 0.1 leaffraction = 0.1 mincatsize = 5 maxbranch = 2 maxdepth = 2 maxsurrs = 0 Missing = USEINSEARCH reusevar = 1
Exhaustive = 5000 CategoricalBins = 30 IntervalBins = 100 Huber=NO ;
MPRINT(RUNBOOSTPROCEDURE):   input
MPRINT(EM_INTERVAL_INPUT):   Population_in_thousands
MPRINT(RUNBOOSTPROCEDURE):  / level = interval;
MPRINT(RUNBOOSTPROCEDURE):   input
MPRINT(EM_NOMINAL_INPUT):   Age_group Date
MPRINT(RUNBOOSTPROCEDURE):   / level = nominal;
MPRINT(RUNBOOSTPROCEDURE):   target
MPRINT(EM_TARGET):   Sum_Labor_Force_Pop
MPRINT(RUNBOOSTPROCEDURE):   / level = INTERVAL;
MPRINT(RUNBOOSTPROCEDURE):   ;
MPRINT(RUNBOOSTPROCEDURE):   performance workdatalocation = DISK nodesize = 20000 ;
MPRINT(RUNBOOSTPROCEDURE):   save model=EMWS1.Boost_MODEL;
NOTE: 1640815 kilobytes of physical memory.
NOTE: Will use 588 out of 588 training cases.
NOTE: Using memory pool with 27113472 bytes.
NOTE: Passed training data 250 times.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: Training used 44408 bytes of work memory.
NOTE: The data set EMWS1.BOOST_MODEL has 7324 observations and 4 variables.
MPRINT(RUNBOOSTPROCEDURE):   run;
 
MPRINT(RUNBOOSTPROCEDURE):   quit;
 
NOTE: There were 588 observations read from the data set EMWS1.PART_TRAIN.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.22 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_CHECKERROR):   proc display c=sashelp.emutil.checkerror.scl;
MPRINT(EM_CHECKERROR):   run;
 
23342      %let SYSCC = 0;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_CHECKERROR):
MPRINT(RUNBOOSTPROCEDURE):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23343      *------------------------------------------------------------*;
23344      * End TRAIN: Boost;
23345      *------------------------------------------------------------*;
23346
 
23347      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23348      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
23349      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23350      ;
MPRINT(EM_DIAGRAM):   ;
23351      ;
MPRINT(EM_DIAGRAM):   ;
23352      ;
MPRINT(EM_DIAGRAM):   ;
23353      ;
MPRINT(EM_DIAGRAM):   ;
23354      quit;
MPRINT(EM_DIAGRAM):   quit;
23355      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23356      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
23357      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23358      /*; *"; *'; */
23359      ;
MPRINT(EM_DIAGRAM):   ;
23360      run;
MPRINT(EM_DIAGRAM):   run;
23361      quit;
MPRINT(EM_DIAGRAM):   quit;
23362      /* Reset EM Options */
23363      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
23364      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
23365      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:53" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 21, 2019
Time:                15:11:53
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3BUKJ1N "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3BUKJ1N new;
MPRINT(EM_DIAGRAM):   run;
23467      %let EMEXCEPTIONSTRING=;
23468      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23469      * SCORE: Boost;
MPRINT(EM_DIAGRAM):   * SCORE: Boost;
23470      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23471      %let EM_ACTION = SCORE;
23472      %let syscc = 0;
23473      %macro main;
23474
23475        filename temp catalog 'sashelp.emmodl.boost_macros.source';
23476        %include temp;
23477        filename temp;
23478
23479        %setProperties;
23480
23481        %if %upcase(&EM_ACTION) = CREATE %then %do;
23482          filename temp catalog 'sashelp.emmodl.boost_create.source';
23483          %include temp;
23484          filename temp;
23485
23486          %create;
23487        %end;
23488
23489         %else
23490         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23491
23492             filename temp catalog 'sashelp.emmodl.boost_train.source';
23493             %include temp;
23494             filename temp;
23495             %train;
23496         %end;
23497
23498        %else
23499        %if %upcase(&EM_ACTION) = SCORE %then %do;
23500          filename temp catalog 'sashelp.emmodl.boost_score.source';
23501          %include temp;
23502          filename temp;
23503
23504          %score;
23505
23506        %end;
23507
23508        %else
23509        %if %upcase(&EM_ACTION) = REPORT %then %do;
23510
23511             filename temp catalog 'sashelp.emmodl.boost_report.source';
23512             %include temp;
23513             filename temp;
23514
23515             %report;
23516         %end;
23517
23518         %doendm:
23519      %mend main;
23520
23521      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
23522     +
23523     +%macro SetProperties;
23524     +
23525     +     /* boost options */
23526     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
23527     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
23528     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
23529     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
23530     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
23531     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
23532     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
23533     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
23534     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
23535     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
23536     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
23537     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
23538     +
23539     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
23540     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
23541     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
23542     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
23543     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
23544     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
23545     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
23546     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
23547     +
23548     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
23549     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
23550     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
23551     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
23552     +
23553     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
23554     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
23555     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
23556     +
23557     +%mend SetProperties;
23558     +
23559     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_SCORE.SOURCE.
23561     +%global ntrees ni nclasses;
23562     +%macro selectSubseries;
23564     +  %let arborkluge= "work._BoostDMDB";
23565     +  %if ^%sysfunc(cexist(work._BoostDMDB)) %then %do;
23566     +      filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
23567     +      %include temp;
23568     +      filename temp;
23570     +     %let target_var = %EM_TARGET;
23571     +     %em_boost_makeDMDB(indata=&EM_IMPORT_DATA, target=&target_Var, nLevel=_nTargetLevel);
23572     +  %end;
23574     +    %EM_GETNAME(key=MODEL, type=DATA);
23575     +    %EM_GETNAME(key=IMPORTANCE, type=DATA);
23576     +    proc arbor proc=treeboost data=&EM_IMPORT_DATA inmodel=&EM_USER_MODEL;
23578     +    %if &EM_PROPERTY_SUBSERIES ne %then %do;
23579     +      subseries
23580     +      %if &EM_PROPERTY_SUBSERIES eq ITERATIONS %then %do;
23581     +         &EM_PROPERTY_SUBSERIES = &EM_PROPERTY_ITERATIONNUM
23582     +      %end;
23583     +      %else %do;
23584     +         &EM_PROPERTY_SUBSERIES
23585     +      %end;
23586     +    %end;
23587     +    ;
23589     +    makemacro nimportant=ni nclasses=nclasses
23590     +    %if &EM_PROPERTY_SUBSERIES eq BEST %then %do;
23591     +       nitsase=nitsase nitsmisc=nitsmisc nitsprofit=nitsprofit
23592     +    %end;
23593     +    ;
23595     +    %if &EM_PROPERTY_ASSESSMEASURE ne %then %do;
23596     +      assess
23597     +      %if &EM_IMPORT_VALIDATE ne %then %do;
23598     +        Validata=&EM_IMPORT_VALIDATE
23599     +      %end;
23600     +      %else %do;
23601     +        NoValidata
23602     +      %end;
23604     +      %if &EM_PROPERTY_ASSESSMEASURE eq PROFIT %then %do;
23605     +         %if %sysfunc(exist(&EM_DEC_DECMETA, DATA)) eq 0 %then %do;
23606     +           %if %upcase(&Target_Level) eq INTERVAL %then %do;
23607     +             %let EM_PROPERTY_MEASURE = ASE;
23608     +           %end;
23609     +           %else %do;
23610     +             %let EM_PROPERTY_MEASURE= MISC;
23611     +           %end;
23612     +           %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
23613     +           %put &note;
23614     +           %let note = %sysfunc(sasmsg(sashelp.dmine, assessmearerest_note, NOQUOTE));
23615     +           %put &note;
23616     +         %end;
23617     +         %else %do;
23618     +            %let dsid = %sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='MATRIX'))));
23619     +            %if &dsid eq %then %do;
23620     +               %if %upcase(&Target_Level) eq INTERVAL %then %do;
23621     +                  %let EM_PROPERTY_MEASURE = ASE;
23622     +               %end;
23623     +               %else %do;
23624     +                  %let EM_PROPERTY_MEASURE = MISC;
23625     +               %end;
23626     +               %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
23627     +               %put &note;
23628     +               %let note = %sysfunc(sasmsg(sashelp.dmine, assessmeasurereset_note, NOQUOTE));
23629     +               %put &note;
23630     +            %end;
23631     +            %else %do;
23632     +               %let firstobs = %sysfunc(fetchobs(&dsid, 1));
23633     +               %let usenum   = %sysfunc(VARNUM(&dsid, USE));
23634     +               %let use      = %sysfunc(getvarc(&dsid, &usenum));
23636     +               %if &use eq N %then %do;
23637     +                 %if %upcase(&Target_Level) eq INTERVAL %then %do;
23638     +                    %let EM_PROPERTY_MEASURE = ASE;
23639     +                 %end;
23640     +                 %else %do;
23641     +                    %let EM_PROPERTY_MEASURE = MISC;
23642     +                 %end;
23643     +                 %let note = %sysfunc(sasmsg(sashelp.dmine, profitlossmatrix_note, NOQUOTE));
23644     +                 %put &note;
23645     +                 %let note = %sysfunc(sasmsg(sashelp.dmine, assessmeasurereset_note, NOQUOTE));
23646     +                 %put &note;
23648     +               %end;
23649     +               %else %do;
23650     +                 %let EM_PROPERTY_MEASURE = PROFIT;
23651     +               %end;
23652     +            %end;
23653     +            %if &dsid ne %then %let dsid = %sysfunc(close(&dsid));
23654     +         %end;
23655     +      %end;
23656     +      %else %if &EM_PROPERTY_ASSESSMEASURE eq MISC %then %do;
23657     +         %if %upcase(&Target_Level) eq INTERVAL %then %do;
23658     +           %let EM_PROPERTY_MEASURE = ASE;
23659     +         %end;
23660     +         %else %do;
23661     +           %let EM_PROPERTY_MEASURE = MISC;
23662     +         %end;
23663     +      %end;
23664     +      %else %if &EM_PROPERTY_ASSESSMEASURE eq ASE %then %do;
23665     +         %let EM_PROPERTY_MEASURE = ASE;
23666     +      %end;
23668     +      measure = &EM_PROPERTY_MEASURE
23670     +      ;
23671     +    %end;
23673     +    %let lookupString = ;
23674     +    %if ^%symexist(EM_OPTION) %then
23675     +        %let EM_OPTION=;
23677     +    %if %sysfunc(index(%upcase(&EM_DEBUG), I18N)) or %sysfunc(index(%upcase(&EM_OPTION), I18N)) %then %do;
23678     +           %let lookupString = LOOKUP=SELECT;
23679     +    %end;
23681     +    code file="&EM_FILE_EMFLOWSCORECODE" res group=&emloopid &lookupString;
23682     +    code file="&EM_FILE_EMPUBLISHSCORECODE" nores group=&emloopid &lookupString;
23684     +    save fit=SUBFIT importance=&EM_USER_IMPORTANCE model=&EM_USER_MODEL;
23686     +    score data=&EM_IMPORT_DATA out=fds(keep= p_:) outfit=work.fit_train role=TRAIN;
23687     +    %if &EM_IMPORT_VALIDATE ne %then %do;
23688     +      score data=&EM_IMPORT_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
23689     +    %end;
23690     +    %if &EM_IMPORT_TEST ne %then %do;
23691     +      score data=&EM_IMPORT_TEST out=_NULL_ outfit=work.fit_test role=TEST;
23692     +    %end;
23694     +    run;
23695     +    quit;
23697     +    %if %sysfunc(cexist(work._BoostDMDB)) %then %do;
23698     +        /* Delete DMDB catalog */
23699     +        proc datasets lib=work nolist;
23700     +           delete _BoostDMDB / mt=cat;
23701     +        run;
23702     +    %end;
23706     +    /* set ntrees macro to selected iteration based on subseries property */
23707     +    %if &EM_PROPERTY_SUBSERIES eq ITERATIONS %then %do;
23708     +      %let ntrees = &EM_PROPERTY_ITERATIONNUM;
23709     +    %end;
23710     +    %else %if &EM_PROPERTY_SUBSERIES eq LONGEST %then %do;
23711     +      %let ntrees = &EM_PROPERTY_ITERATIONS;
23712     +    %end;
23713     +    %else %if &EM_PROPERTY_SUBSERIES eq BEST %then %do;
23714     +       %if &EM_PROPERTY_MEASURE eq ASE %then %let ntrees=&NITSASE;
23715     +       %else %if &EM_PROPERTY_MEASURE eq MISC %then %let ntrees=&NITSMISC;
23716     +       %else %let ntrees=&NITSPROFIT;
23717     +    %end;
23718     +%mend selectSubseries;
23720     +%macro createSubFit;
23722     +  %EM_GETNAME(key=SUBFIT, type=DATA);
23723     +   data &EM_USER_SUBFIT;
23724     +     length datarole $8;
23725     +     set SUBFIT;
23726     +     datarole = "TRAIN";
23727     +     label  _MISC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
23728     +            _MAX_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
23729     +            _SSE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
23730     +            _ASE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
23731     +            _RASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
23732     +            _APROF_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgprofit_vlabel, noquote))"
23733     +            _PROF_   = "%sysfunc(sasmsg(sashelp.dmine, assmt_profitt_vlabel, noquote))"
23734     +            _PASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsqerrprior_vlabel, noquote))"
23735     +            _PMISC_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_missprior_vlabel, noquote))"
23736     +            _NLEAVES_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nleaves_vlabel, noquote))"
23737     +            _ITERATION_="%sysfunc(sasmsg(sashelp.dmine, rpt_iter_vlabel , noquote))"
23738     +            _NW_ = "%sysfunc(sasmsg(sashelp.dmine,  rpt_nleaves_vlabel , noquote))"
23739     +            datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel  , noquote))";
23740     +     keep _ITERATION_ _NW_ _MISC_ _MAX_ _SSE_ _ASE_ _RASE_ _NLEAVES_ datarole
23741     +          %if &EM_DEC_DECDATA ne %then %do;
23742     +            _APROF_ _PROF_ _PASE_ _PMISC_
23743     +          %end;
23744     +          ;
23745     +   run;
23747     +   %if &EM_IMPORT_VALIDATE ne %then %do;
23748     +      data tempvalid;
23749     +        length datarole $8;
23750     +        set SUBFIT;
23751     +        rename  _VMISC_ = _MISC_
23752     +                _VMAX_  = _MAX_
23753     +                _VSSE_ = _SSE_
23754     +                _VASE_ = _ASE_
23755     +                _VRASE_ = _RASE_
23756     +                %if &EM_DEC_DECDATA ne %then %do;
23757     +                  _VAPROF_ = _APROF_
23758     +                  _VPROF_  = _PROF_
23759     +                  _VPASE_  = _PASE_
23760     +                  _VPMISC_ = _PMISC_
23761     +                %end;
23762     +                ;
23763     +        datarole = "VALID";
23764     +         label  _VMISC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
23765     +                _VMAX_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
23766     +                _VSSE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
23767     +                _VASE_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
23768     +                _VRASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
23769     +                _VAPROF_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgprofit_vlabel, noquote))"
23770     +                _VPROF_   = "%sysfunc(sasmsg(sashelp.dmine, assmt_profitt_vlabel, noquote))"
23771     +                _VPASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsqerrprior_vlabel, noquote))"
23772     +                _VPMISC_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_missprior_vlabel, noquote))"
23773     +                _NLEAVES_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nleaves_vlabel, noquote))"
23774     +                datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, noquote))";
23775     +        keep _ITERATION_ _NW_ _VMISC_ _VMAX_ _VSSE_ _VASE_ _VRASE_ _NLEAVES_ datarole
23776     +             %if &EM_DEC_DECDATA ne %then %do;
23777     +                _VAPROF_ _VPROF_ _VPASE_ _VPMISC_
23778     +             %end;
23779     +             ;
23780     +      run;
23782     +      data &EM_USER_SUBFIT;
23783     +        set &EM_USER_SUBFIT tempvalid;
23784     +      run;
23786     +      proc datasets library=work nolist;
23787     +        delete tempvalid;
23788     +      run;
23789     +   %end;
23791     +   proc datasets library=work nolist;
23792     +     delete subfit;
23793     +   run;
23795     +%mend createSubFit;
23797     +%macro createFitStatistics;
23799     +  %EM_GETNAME(key=EMOUTFIT, type=DATA);
23800     +   data &EM_USER_EMOUTFIT;
23801     +     length target $32;
23802     +     merge work.fit_train
23803     +     %if &EM_IMPORT_VALIDATE ne %then %do;
23804     +       work.fit_valid
23805     +     %end;
23806     +     %if &EM_IMPORT_TEST ne %then %do;
23807     +       work.fit_test
23808     +     %end;
23809     +     ;
23810     +     target = "%EM_TARGET";
23811     +     drop _NW_;
23812     +   run;
23814     +   %if &EM_IMPORT_VALIDATE ne %then %do;
23815     +     proc datasets library=work nolist;
23816     +       delete fit_valid;
23817     +     run;
23818     +   %end;
23819     +   %if &EM_IMPORT_TEST ne %then %do;
23820     +     proc datasets library=work nolist;
23821     +       delete fit_test;
23822     +     run;
23823     +   %end;
23826     +%mend createFitStatistics;
23828     +%macro generatePartialDependencyTable(iteration= ,ds1=, var=);
23830     +  %EM_GETNAME(key=PARTIALDEPENDENCY, type=DATA);
23832     +  %if &iteration eq 1 %then %do;
23833     +    data &EM_USER_PARTIALDEPENDENCY;
23834     +    run;
23835     +  %end;
23837     +  %let partialvar = partial&iteration;
23838     +  data &EM_USER_PARTIALDEPENDENCY;
23839     +    merge &EM_USER_PARTIALDEPENDENCY &ds1(rename=(P_BAD1=&partialvar) keep=P_BAD1 &var);
23840     +    label &partialvar = "%sysfunc(sasmsg(sashelp.dmine, rpt_partialdep_vlabel, noquote, &var))";
23841     +  run;
23843     +%mend generatePartialDependencyTable;
23845     +%macro merge_imp_h (iactds=, impds= );
23846     +   %if &ni gt 0 %then %do;
23847     +    data _imp;
23848     +       set &impds.;
23849     +       _obs_ = _n_;
23850     +    run;
23851     +    proc sort data=_imp;
23852     +       by name;
23853     +    run;
23854     +    proc sort data= &iactds.;
23855     +       by name;
23856     +    run;
23857     +    data &impds;
23858     +       merge _imp &iactds;
23859     +       by name;
23860     +    run;
23861     +    proc sort data=&impds;
23862     +       by _obs_;
23863     +    run;
23864     +    data &impds;
23865     +       set &impds;
23866     +       drop _obs_;
23867     +    run;
23868     +    quit;
23869     +    %end;
23870     +%mend;
23872     +***************************************************************************
23873     +** MACROS FOR DISCOVERING INTERACTION OF INPUTS IN ARBORETUM MODELS
23874     +**
23875     +** AUTHOR:    saspgn
23876     +** REVISED:    1 MAY 2007
23877     +**
23878     +** REFERENCE: Jerome H. Friedman and Bogdan E. Popescu
23879     +**                  Predictive Models via Rule Ensembles
23880     +**                  28 Feb 2005
23881     +***************************************************************************;
MPRINT(MAIN):   *************************************************************************** ** MACROS FOR DISCOVERING INTERACTION OF INPUTS IN ARBORETUM MODELS ** ** AUTHOR: saspgn ** REVISED: 1 MAY 2007 ** ** REFERENCE: Jerome H. Friedman and Bogdan E.
Popescu ** Predictive Models via Rule Ensembles ** 28 Feb 2005 ***************************************************************************;
23883     +%macro compute_iact_h(data=, model=, outds=);
23885     +/*** NOTE: this macro was modified to also calculation 1 way partial dependency values as well ****/
23887     +***************************************************************************
23888     +** MACRO:     COMPUTE_IACT_H
23889     +** PURPOSE:   ESTIMATE INTERACTION OF INPUT TO ANY OTHER INPUTS IN MODEL
23890     +** AUTHOR:    saspgn
23891     +** DATE:      30 APR 2007
23892     +**
23893     +** ARGUMENTS: DATA=  data with which to evaluate interaction.
23894     +**                   Typically training data.
23895     +**            MODEL= Model data set from SAVE MODEL= option
23896     +**                   of PROC ARBORETUM  (or SPLIT, FOREST, TREEBOOST)
23897     +**            OUTDS= output data set from this macro.
23898     +**                   Contains two variables:
23899     +**                   NAME   containing name of input variable
23900     +**                   H      containing the H statistic for interaction.
23901     +**
23902     +** DETAILS:   In Predictive Models via Rule Ensembles the authors
23903     +**            define statistic Hj that will be greater than 0 to
23904     +**            the extant that input variable j interacts with some
23905     +**            other variable (section 8.1, equation 45 ).
23906     +**            Macro COMPUTE_IACT_H computes Hj for all variables
23907     +**            used as a primary splitting rule in the model.
23908     +**            The computation of interactions is time consuming.
23909     +**            The user might therefore consult Hj before selecting
23910     +**            which interactions to compute.
23911     +**
23912     +** REFERENCE: Jerome H. Friedman and Bogdan E. Popescu
23913     +**                  Predictive Models via Rule Ensembles
23914     +**                  28 Feb 2005
23915     +**                  http://www.stat-stanford.edu/~jhf
23916     +**************************************************************************;
23918     +    %do v=1 %to &ni;
23919     +        proc arbor proc=treeboost inmodel=&model;
23920     +            makemacro importantid=&v  var=var;
23921     +            partialdep data=&data out=vds(keep= p_: &var) var= (&var);
23922     +            partialdep data=&data out=eds(keep= p_:) exceptvar= (&var);
23923     +        quit;
23925     +        %let predvar=;
23926     +        %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='PREDICTED'))));
23927     +        %let varnum =%sysfunc(varnum(&dsid, VARIABLE));
23928     +        %do %while(^ %sysfunc(fetch(&dsid)));
23929     +           %let variable = %sysfunc(getvarc(&dsid, &varnum));
23930     +           %let predvar = &predvar &variable;
23931     +        %end;
23932     +        %let dsid = %sysfunc(close(&dsid));
23934     +        data fds;  set fds;  keep &predvar; run;
23935     +        data vds;  set vds;  keep &predvar; run;
23936     +        data eds;  set eds;  keep &predvar; run;
23939     +        %compute_iact_sub(ds1=fds, ds2=vds, ds3=eds, nc=&nclasses, outds=h);
23941     +        /* generates table same size as training data -- too large to plot; removing for now
23942     +        %generatePartialDependencyTable(iteration=&v, ds1=vds, var=&var); */
23944     +        data h;
23945     +             set h;
23946     +             length name $ 32;
23947     +             name = "&var";
23948     +        run;
23949     +        data &outds;
23950     +          set
23951     +              %if &v ne 1 %then %do;
23952     +                  &outds
23953     +              %end;
23954     +               h;
23955     +        run;
23957     +    %end;
23958     +%mend;
23960     +%macro compute_iact_sub(ds1=, ds2=, ds3=, nc=, outds=);
23962     +        %if &nc eq 0 %then %do;
23963     +             data ads; set &ds1; array r p_:; keep a; a = r(1); run;
23964     +             data bds; set &ds2; array r p_:; keep b; b = r(1); run;
23965     +             data cds; set &ds3; array r p_:; keep c; c = r(1); run;
23966     +             data mds; merge ads bds cds;         run;
23968     +             proc stdize data= mds method=mean out=sds;
23969     +                  var a b c;
23970     +             run;
23972     +             data &outds;
23973     +                 retain ss 0  sf 0;
23974     +                 set sds end=the_end;
23975     +                 keep H;
23977     +                 s = a - b - c;
23978     +                 ss = ss + s*s;
23979     +                 sf = sf + a * a;
23981     +                 if the_end ne 0 then do;
23982     +                    H = ss/sf;
23983     +                    output;
23984     +                 end;
23985     +             run;
23986     +        %end;
23988     +        %else %do;  * categorical response. nclasses > 0 ;
23989     +            data ads;
23990     +                 set &ds1;
23991     +                 array r{*} p_:;
23992     +                 keep a:;
23993     +                 %do j = 1 %to &nclasses;
23994     +                     a&j = r(&j);
23995     +                 %end;
23996     +              run;
23997     +              data bds;
23998     +                 set &ds2;
23999     +                 array r{*} p_:;
24000     +                 keep b:;
24001     +                 %do j = 1 %to &nclasses;
24002     +                     b&j = r(&j);
24003     +                 %end;
24004     +              run;
24005     +              data cds;
24006     +                 set &ds3;
24007     +                 array r{*} p_:;
24008     +                 keep c:;
24009     +                 %do j = 1 %to &nclasses;
24010     +                     c&j = r(&j);
24011     +                 %end;
24012     +              run;
24014     +              data mds;
24015     +                   merge ads bds cds;
24016     +              run;
24017     +              proc stdize data=mds method=mean out=sds;
24018     +                   var a: b: c:;
24019     +              run;
24021     +             data &outds;
24022     +                 retain ss 0  sf 0;
24023     +                 set sds end=the_end;
24024     +                 array ra a:;
24025     +                 array rb b:;
24026     +                 array rc c:;
24027     +                 keep H;
24029     +                 do j = 1 to dim(ra);
24030     +                    s = ra(j) - rb(j) - rc(j);
24031     +                    ss = ss + s*s;
24032     +                    sf = sf + ra(j) * ra(j);
24033     +                 end;
24035     +                 if the_end ne 0 then do;
24036     +                    H = ss/sf;
24037     +                    output;
24038     +                 end;
24039     +            run;
24040     +        %end;
24041     +%mend;
24043     +%macro score;
24045     +   /* retrieve target information */
24046     +   %let dsid=%sysfunc(open(&EM_DEC_DECMETA(where=(_TYPE_='TARGET'))));
24048     +   %let vn_event =%sysfunc(varnum(&dsid, EVENT));
24049     +   %let vn_target_type = %sysfunc(varnum(&dsid, TYPE));
24050     +   %let vn_target_format = %sysfunc(varnum(&dsid, FORMAT));
24051     +   %let vn_target_level  = %sysfunc(varnum(&dsid, LEVEL));
24052     +   %do %while(^ %sysfunc(fetch(&dsid)));
24053     +      %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &vn_event)));
24054     +      %let Target_Event = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
24055     +      %let Target_Type =  %sysfunc(getvarc(&dsid, &vn_target_type));
24056     +      %let Target_Format = %sysfunc(getvarc(&dsid, &vn_target_format));
24057     +      %let Target_Level = %sysfunc(getvarc(&dsid, &vn_target_level));
24058     +   %end;
24059     +   %let dsid = %sysfunc(close(&dsid));
24061     +   /* if subSeries=ITERATIONS and iterationNum not specified, exception should be thrown */
24062     +   %if ((&EM_PROPERTY_SUBSERIES eq ITERATIONS) and (&EM_PROPERTY_ITERATIONNUM eq . )) %then %do;
24063     +        %let EMEXCEPTIONSTRING = exception.server.EMTOOL.BOOST.NOITERATIONNUM;
24064     +        %put &em_codebar;
24065     +        %let errormsg = %sysfunc(sasmsg(sashelp.dmine, error_noiterationnum_note, NOQUOTE));
24066     +        %put &errormsg;
24067     +        %put &em_codebar;
24068     +        %goto doendm;
24069     +   %end;
24071     +   /* score based on selected subseries */
24072     +   %selectSubseries;
24074     +   /* detect variables that have interaction with other input variables in model;    */
24075     +   /* also used to calculate 1 way partial dependency statistics                     */
24076     +   %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
24077     +     %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
24078     +       %compute_iact_h(data=&EM_IMPORT_DATA, model=&EM_USER_MODEL, outds=iact);
24079     +     %end;
24080     +   %end;
24082     +   /* determine whether priors were used during modelling */
24083     +   %let usePriors = N;
24084     +   data _null_;
24085     +     set &EM_DEC_DECMETA(where=(_TYPE_='DECPRIOR'));
24086     +     call symput('usePriors', strip(USE));
24087     +   run;
24089     +   /* update scorecode with code to calculated unadjusted residual variables if priors were detected */
24090     +   %if &usePriors eq Y %then %do;
24091     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
24092     +      %include temp;
24093     +      filename temp;
24095     +      %EM_GETNAME(key=ADJUSTEDRESIDUALS, type=FILE, extension=sas);
24096     +      filename adjref "&EM_USER_ADJUSTEDRESIDUALS";
24097     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
24099     +      /* append adjusted residual code to already populated flowscorecode */
24100     +      filename temp catalog 'sashelp.emutil.em_copyfile.source';
24101     +      %include temp;
24102     +      filename temp;
24104     +      filename fref "&EM_FILE_EMFLOWSCORECODE";
24105     +      %em_copyfile(infref=adjref, outfref=fref, append=Y);
24106     +      filename adjref;
24107     +      filenmae fref;
24109     +   %end;
24111     +   /* set all Q variables created by proc arbor to have a role of ASSESS */
24112     +   %let numLevels = 0;
24113     +   data _null_;
24114     +     set &EM_DEC_DECMETA end=eof;
24115     +     where _TYPE_ ='RESIDUAL';
24116     +     call symput('res_vars'!!strip(put(_N_,BEST.)),   strip(Variable));
24117     +     if eof then
24118     +       call symput('numLevels', strip(put(_N_,BEST.)));
24119     +   run;
24121     +   %do i=1 %to &numLevels;
24122     +     %let qvar = &&res_vars&i;
24123     +     %let qvar = %substr(&qvar,2);
24124     +     %let qvar = Q&qvar;
24125     +     %em_metachange(name=&qvar, role=ASSESS);
24126     +   %end;
24128     +   /* merge H Statistic into the outimportance dataset */
24129     +   %EM_GETNAME(key=IMPORTANCE, type=DATA);
24130     +   %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
24131     +     %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
24132     +       %merge_imp_h(iactds=iact, impds=&EM_USER_IMPORTANCE);
24133     +     %end;
24134     +   %end;
24136     +   /* add labels to importance table */
24137     +   data &EM_USER_IMPORTANCE;
24138     +     set &EM_USER_IMPORTANCE;
24139     +     label  NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
24140     +            LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
24141     +            NRULES = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
24142     +            IMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
24143     +            %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
24144     +              %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
24145     +                H = "%sysfunc(sasmsg(sashelp.dmine, rpt_h_vlabel, noquote))"
24146     +              %end;
24147     +            %end;
24148     +            %if &EM_IMPORT_VALIDATE ne %then %do;
24149     +              VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
24150     +              RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
24151     +            %end;
24152     +            %let nsurrs = ;
24153     +            %if &EM_PROPERTY_NSURRS ne %then %do;
24154     +              %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
24155     +              %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
24156     +              %if &nsurrs gt 0 %then %do;
24157     +                 NSURROGATES =  "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))";
24158     +              %end;
24159     +            %end;
24160     +            ;
24161     +   run;
24163     +   /* print outimportance dataset to output window */
24164     +   %let title10 = %sysfunc(sasmsg(sashelp.dmine, rpt_variableImportance_title, NOQUOTE));
24165     +   %if &EM_PROPERTY_NSURRS gt 0 %then %do;
24166     +     title10 "&title10";
24168     +     %if &ni gt 0 %then %do;
24169     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0) OR (nsurrogates > 0)
24170     +       %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
24171     +         %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
24172     +         OR (H ne .)
24173     +         %end;
24174     +       %end;
24175     +       ));
24176     +     %end;
24177     +     %else %do;
24178     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0) OR (nsurrogates > 0)));
24179     +     %end;
24180     +     run;
24181     +     title10;
24182     +   %end;
24183     +   %else %do;
24184     +     title10 "&title10";
24185     +     %if &ni gt 0 %then %do;
24186     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0)
24187     +      %if %symexist(EM_PROPERTY_CREATEHSTAT) %then %do;
24188     +         %if &EM_PROPERTY_CREATEHSTAT eq Y %then %do;
24189     +           OR (H ne .)
24190     +         %end;
24191     +      %end;
24192     +      ));
24193     +     %end;
24194     +     %else %do;
24195     +       proc print data=&EM_USER_IMPORTANCE (where=((nrules>0)));
24196     +     %end;
24197     +     run;
24198     +     title10;
24199     +   %end;
24201     +   /* generate EM_USER_SUBFIT dataset to plot train and validation data across iterations*/
24202     +   %createSubFit;
24204     +   /* generate fit statistics for train, valid and test datasets */
24205     +   %createFitStatistics;
24207     +   /* refresh exports */
24208     +    /* variable selection based on importance values */
24209     +    %if &EM_PROPERTY_VARSELECTION eq Y %then %do;
24210     +      %let dsid = %sysfunc(open(&EM_USER_IMPORTANCE));
24211     +      %if &dsid %then %do;
24212     +        %let obs= %sysfunc(fetch(&dsid));
24213     +        %let imp_num = %sysfunc(VARNUM(&dsid, IMPORTANCE));
24214     +        %let var_num = %sysfunc(VARNUM(&dsid, NAME));
24215     +        %let nobs = %sysfunc(ATTRN(&dsid, NOBS));
24217     +        %if ((&imp_num ne 0 ) AND (&var_num ne 0)) %then %do;
24218     +          %do %while(&obs=0);
24219     +             %let nobs = %eval(&nobs-1);
24220     +             %let imp_value = %sysfunc(getvarn(&dsid, &imp_num));
24221     +             %let varname = %upcase(%sysfunc(getvarc(&dsid, &var_num)));
24223     +             %if &imp_value lt 0.05 %then %do;
24224     +               %em_metachange(name=&varname, role=REJECTED);
24225     +             %end;
24226     +             %else %do;
24227     +               %em_metachange(name=&varname, role=INPUT);
24228     +             %end;
24229     +             %let obs= %sysfunc(fetch(&dsid));
24230     +          %end;
24231     +        %end;
24232     +      %end;
24233     +      %if &dsid %then %let dsid= %sysfunc(close(&dsid));
24234     +    %end;
24236     +   /* build reports dependent on subseries selection */
24237     +   %EM_REPORT(key=SUBFIT, viewtype=LINEPLOT, block=MODEL, view=1, X=_ITERATION_, Y=_ASE_, group=dataRole, autodisplay=Y, xref=&ntrees, DESCRIPTION=SUBFIT);
24238     +   %EM_REPORT(VIEW=1, Y=_NW_, xref=&ntrees);
24239     +   %EM_REPORT(VIEW=1, Y=_MISC_, xref=&ntrees);
24240     +   %EM_REPORT(VIEW=1, Y=_MAX_, xref=&ntrees);
24241     +   %EM_REPORT(VIEW=1, Y=_SSE_, xref=&ntrees);
24242     +   %EM_REPORT(VIEW=1, Y=_ASE_, xref=&ntrees);
24243     +   %EM_REPORT(VIEW=1, Y=_RASE_, xref=&ntrees);
24244     +   %EM_REPORT(VIEW=1, Y=_APROF_, xref=&ntrees);
24245     +   %EM_REPORT(VIEW=1, Y=_PROF_, xref=&ntrees);
24246     +   %EM_REPORT(VIEW=1, Y=_PASE_, xref=&ntrees);
24247     +   %EM_REPORT(VIEW=1, Y=_PMISC_, xref=&ntrees);
24249     +   /* build importance table including H statistics for display */
24250     +   %EM_REPORT(key=IMPORTANCE, viewtype=DATA, block=MODEL, DESCRIPTION=IMPORTANCE, AUTODISPLAY=Y);
24252     +   %doendm:
24253     +%mend score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
WARNING: Argument 2 to function GETVARC referenced by the %SYSFUNC or %QSYSFUNC macro function is out of range.
MPRINT(SELECTSUBSERIES):   filename temp catalog 'sashelp.emmodl.boost_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_TRAINMACROS.SOURCE.
24254     +%Macro em_boost_makeDMDB(indata=, target=,  nLevel= );
24255     +  %global &nLevel;
24257     +  %let targetLevel=;
24258     +  data _null_;
24259     +     length orderString $64;
24260     +     set &em_data_variableset end=eof;
24261     +     where NAME="&target";
24262     +     select(order);
24263     +            when('')        order ='DESC';
24264     +            when('FMTASC')  order='ASCFMT';
24265     +            when('FMTDESC') order='DESFMT';
24266     +            otherwise;
24267     +     end;
24268     +     if eof then do;
24269     +        call symput("targetOrder", trim(order));
24270     +        call symput("targetLevel", trim(Level));
24271     +     end;
24272     +  run;
24274     +  %if "&targetLevel" ne "INTERVAL" %then %do;
24275     +  proc dmdb batch data=&indata dmdbCat=_BoostDMDB
24276     +    classout=_tmp_dmdbout;
24277     +    class &target(&targetOrder);
24278     +    target &target;
24279     +  run;
24280     +  data _tmp_dmdbout;
24281     +    set _tmp_dmdbout;
24282     +    if strip(TYPE) = 'N' and  strip(LEVEL) = '.' then delete;
24283     +    if strip(TYPE) = 'C' and  strip(LEVEL) = '' then delete;
24284     +  run;
24285     +  data _null_;
24286     +    %let dsid = %sysfunc(open(work._tmp_dmdbout));
24287     +    %let _obs = %sysfunc(attrn(&dsid, NOBS));
24288     +    %let dsid = %sysfunc(close(&dsid));
24289     +     call symput("&nLevel", put(&_obs, Best12.));
24290     +  run;
24292     +  proc datasets lib=work nolist;
24293     +     delete _tmp_dmdbout;
24294     +  run;
24295     +  quit;
24296     +  %end;
24298     +%Mend em_boost_makeDMDB;
24300     +%macro runBoostProcedure;
24302     +  proc sql;
24303     +    reset noprint;
24304     +    select count(*) into :nobs from &EM_IMPORT_DATA;
24305     +  quit;
24307     +  %let arborkluge= "work._BoostDMDB";
24308     +  proc arbor proc=treeboost data=&EM_IMPORT_DATA
24310     +    %if &EM_PROPERTY_ITERATIONS ne %then %do;
24311     +      iterations = &EM_PROPERTY_ITERATIONS
24312     +    %end;
24314     +    %if &EM_PROPERTY_TRAINPROPORTION ne %then %do;
24315     +       %let tprop = %sysevalf(&EM_PROPERTY_TRAINPROPORTION / 100);
24316     +       trainproportion = &tprop
24317     +    %end;
24319     +    %if &EM_PROPERTY_SEED ne %then %do;
24320     +       seed = &EM_PROPERTY_SEED
24321     +    %end;
24323     +    %if &EM_PROPERTY_SHRINKAGE ne %then %do;
24324     +       shrinkage = &EM_PROPERTY_SHRINKAGE
24325     +    %end;
24327     +    %if &EM_PROPERTY_LEAFFRACTION ne %then %do;
24328     +      leaffraction = &EM_PROPERTY_LEAFFRACTION
24329     +    %end;
24331     +    %let splitsize = &EM_PROPERTY_SPLITSIZE;
24332     +    %if &splitsize ge &nobs %then %do;
24333     +       %let splitsize= .;
24334     +    %end;
24335     +    %if &splitsize ne . %then %do;
24336     +      splitsize = &splitsize
24337     +    %end;
24339     +    %if &EM_PROPERTY_MINCATSIZE ne %then %do;
24340     +      mincatsize = &EM_PROPERTY_MINCATSIZE
24341     +    %end;
24343     +    %if &EM_PROPERTY_MAXBRANCH ne %then %do;
24344     +       maxbranch = &EM_PROPERTY_MAXBRANCH
24345     +    %end;
24347     +    %if &EM_PROPERTY_MAXDEPTH ne %then %do;
24348     +       maxdepth = &EM_PROPERTY_MAXDEPTH
24349     +    %end;
24351     +    %let nsurrs = ;
24352     +    %if &EM_PROPERTY_NSURRS ne %then %do;
24353     +      %let numInputs = %sysevalf(&EM_NUM_BINARY_INPUT + &EM_NUM_ORDINAL_INPUT + &EM_NUM_INTERVAL_INPUT + &EM_NUM_NOMINAL_INPUT);
24354     +      %let nsurrs = %sysevalf(%sysfunc(min(&EM_PROPERTY_NSURRS, (&numInputs -1 ))));
24355     +      maxsurrs = &nsurrs
24356     +    %end;
24358     +    %if &EM_PROPERTY_MISSING ne %then %do;
24359     +      Missing = &EM_PROPERTY_MISSING
24360     +    %end;
24362     +    %if &EM_PROPERTY_REUSEVAR ne %then %do;
24363     +      reusevar = &EM_PROPERTY_REUSEVAR
24364     +    %end;
24365     +/*
24366     +    %if &EM_PROPERTY_PRECISION ne %then %do;
24367     +      intervaldecimals=&EM_PROPERTY_PRECISION
24368     +    %end;
24369     +*/
24370     +    %if &EM_PROPERTY_EXHAUSTIVE ne %then %do;
24371     +      Exhaustive = &EM_PROPERTY_EXHAUSTIVE
24372     +    %end;
24374     +    %if &Target_Event ne %then %do;
24375     +      Event="&Target_Event"
24376     +    %end;
24378     +    %if &EM_PROPERTY_CATEGORICALBINS ne %then %do;
24379     +      CategoricalBins = &EM_PROPERTY_CATEGORICALBINS
24380     +    %end;
24382     +    %if &EM_PROPERTY_INTERVALBINS ne %then %do;
24383     +      IntervalBins = &EM_PROPERTY_INTERVALBINS
24384     +    %end;
24386     +    %if &TARGET_LEVEL eq INTERVAL %then %do;
24387     +      %if &EM_PROPERTY_HUBER ne %then %do;
24388     +        Huber=&EM_PROPERTY_HUBER
24389     +      %end;
24390     +    %end;
24391     +    ;
24393     +    %if %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED ne %then %do;
24394     +      input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED/ level = interval;
24395     +    %end;
24397     +    %if %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED ne  %then %do;
24398     +      input %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_INPUT %EM_NOMINAL_REJECTED / level = nominal;
24399     +    %end;
24401     +    %if %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED ne %then %do;
24402     +      input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED/ level = ordinal;
24403     +    %end;
24405     +    %if %EM_FREQ ne %then %do;
24406     +       freq %EM_FREQ;
24407     +    %end;
24409     +    target %EM_TARGET / level = &TARGET_LEVEL;
24411     +    &EM_DEC_STATEMENT;
24413     +    %if &EM_PROPERTY_PERFORMANCE ne %then %do;
24414     +      performance  workdatalocation = &EM_PROPERTY_PERFORMANCE
24415     +    %end;
24416     +    %if &EM_PROPERTY_NODESIZE ne %then %do;
24417     +       nodesize = &EM_PROPERTY_NODESIZE
24418     +    %end;
24419     +    ;
24420     +    save model=&EM_USER_MODEL;
24421     +  run;
24422     +  quit;
24423     +  %em_checkerror();
24425     +%mend runBoostProcedure;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SELECTSUBSERIES):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_BOOST_MAKEDMDB):   data _null_;
MPRINT(EM_BOOST_MAKEDMDB):   length orderString $64;
MPRINT(EM_BOOST_MAKEDMDB):   set EMWS1.Boost_VariableSet end=eof;
MPRINT(EM_BOOST_MAKEDMDB):   where NAME="Sum_Labor_Force_Pop";
MPRINT(EM_BOOST_MAKEDMDB):   select(order);
MPRINT(EM_BOOST_MAKEDMDB):   when('') order ='DESC';
MPRINT(EM_BOOST_MAKEDMDB):   when('FMTASC') order='ASCFMT';
MPRINT(EM_BOOST_MAKEDMDB):   when('FMTDESC') order='DESFMT';
MPRINT(EM_BOOST_MAKEDMDB):   otherwise;
MPRINT(EM_BOOST_MAKEDMDB):   end;
MPRINT(EM_BOOST_MAKEDMDB):   if eof then do;
MPRINT(EM_BOOST_MAKEDMDB):   call symput("targetOrder", trim(order));
MPRINT(EM_BOOST_MAKEDMDB):   call symput("targetLevel", trim(Level));
MPRINT(EM_BOOST_MAKEDMDB):   end;
MPRINT(EM_BOOST_MAKEDMDB):   run;
 
NOTE: Variable orderString is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.BOOST_VARIABLESET.
      WHERE NAME='Sum_Labor_Force_Pop';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SELECTSUBSERIES):  ;
MPRINT(SELECTSUBSERIES):  ;
MPRINT(SELECTSUBSERIES):  ;
MPRINT(SELECTSUBSERIES):   proc arbor proc=treeboost data=EMWS1.Part_TRAIN inmodel=EMWS1.Boost_MODEL;
NOTE: 1640815 kilobytes of physical memory.
MPRINT(SELECTSUBSERIES):   subseries BEST ;
NOTE: Will use 588 out of 588 training cases.
NOTE: Using memory pool with 26644480 bytes.
NOTE: Passed training data 250 times.
NOTE: Current TREEBOOST model contains 50 trees.
NOTE: Training used 44408 bytes of work memory.
NOTE: Current TREEBOOST model contains 50 trees.
MPRINT(SELECTSUBSERIES):   makemacro nimportant=ni nclasses=nclasses nitsase=nitsase nitsmisc=nitsmisc nitsprofit=nitsprofit ;
NOTE: Created macro variable NCLASSES equal to 0.
NOTE: Created macro variable NI equal to 3.
NOTE: Created macro variable NITSASE equal to 50.
NOTE: Created macro variable NITSMISC equal to 0.
NOTE: Created macro variable NITSPROFIT equal to 0.
A profit/loss matrix must be defined for AssessMeasure=PROFIT/LOSS
The value for Assessment Measure has been reset to DECISION.
MPRINT(SELECTSUBSERIES):   assess Validata=EMWS1.Part_VALIDATE measure = ASE ;
NOTE: Current TREEBOOST model contains 19 trees.
MPRINT(SELECTSUBSERIES):   code file="C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas" res group=Boost ;
NOTE: External file C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas opened.
MPRINT(SELECTSUBSERIES):   code file="C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMPUBLISHSCORE.sas" nores group=Boost ;
NOTE: External file C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMPUBLISHSCORE.sas opened.
MPRINT(SELECTSUBSERIES):   save fit=SUBFIT importance=EMWS1.Boost_IMPORTANCE model=EMWS1.Boost_MODEL;
NOTE: The data set WORK.SUBFIT has 50 observations and 17 variables.
NOTE: The data set EMWS1.BOOST_IMPORTANCE has 3 observations and 6 variables.
NOTE: The data set EMWS1.BOOST_MODEL has 7931 observations and 4 variables.
MPRINT(SELECTSUBSERIES):   score data=EMWS1.Part_TRAIN out=fds(keep= p_:) outfit=work.fit_train role=TRAIN;
NOTE: The data set WORK.FIT_TRAIN has 1 observations and 9 variables.
NOTE: The data set WORK.FDS has 588 observations and 1 variables.
MPRINT(SELECTSUBSERIES):   score data=EMWS1.Part_VALIDATE out=_NULL_ outfit=work.fit_valid role=VALID;
NOTE: The data set WORK.FIT_VALID has 1 observations and 7 variables.
MPRINT(SELECTSUBSERIES):   run;
 
MPRINT(SELECTSUBSERIES):   quit;
 
NOTE: There were 588 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK._NAMEDAT has 1 observations and 5 variables.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.31 seconds
      cpu time            0.17 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Ids_Sum_Labor_Force__DM(where=(_TYPE_='DECPRIOR'));
MPRINT(SCORE):   call symput('usePriors', strip(USE));
MPRINT(SCORE):   run;
 
NOTE: There were 0 observations read from the data set EMWS1.IDS_SUM_LABOR_FORCE__DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   data _null_;
MPRINT(SCORE):   set EMWS1.Ids_Sum_Labor_Force__DM end=eof;
MPRINT(SCORE):   where _TYPE_ ='RESIDUAL';
MPRINT(SCORE):   call symput('res_vars'!!strip(put(_N_,BEST.)), strip(Variable));
MPRINT(SCORE):   if eof then call symput('numLevels', strip(put(_N_,BEST.)));
MPRINT(SCORE):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.IDS_SUM_LABOR_FORCE__DM.
      WHERE _TYPE_='RESIDUAL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_Sum_Labor_Force_Pop");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;
 
NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(SCORE):  ;
MPRINT(SCORE):   data EMWS1.Boost_IMPORTANCE;
MPRINT(SCORE):   set EMWS1.Boost_IMPORTANCE;
MPRINT(SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(SCORE):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.BOOST_IMPORTANCE.
NOTE: The data set EMWS1.BOOST_IMPORTANCE has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):   title10 "Variable Importance";
MPRINT(SCORE):   proc print data=EMWS1.Boost_IMPORTANCE (where=((nrules>0) ));
MPRINT(SCORE):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.BOOST_IMPORTANCE.
      WHERE nrules>0;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):   title10;
MPRINT(CREATESUBFIT):  ;
MPRINT(CREATESUBFIT):   data EMWS1.Boost_SUBFIT;
MPRINT(CREATESUBFIT):   length datarole $8;
MPRINT(CREATESUBFIT):   set SUBFIT;
MPRINT(CREATESUBFIT):   datarole = "TRAIN";
MPRINT(CREATESUBFIT):   label _MISC_ = "Misclassification Rate" _MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Square Error" _RASE_ = "Root Average Square Error" _APROF_ = "Average Profit" _PROF_ = "Total Computed Profit"
_PASE_ = "Average Square Error with Priors" _PMISC_ = "Misclassification Rate with Priors" _NLEAVES_ = "Number of Leaves" _ITERATION_= "Iteration" _NW_ = "Number of Leaves" datarole = "Data Role";
MPRINT(CREATESUBFIT):   keep _ITERATION_ _NW_ _MISC_ _MAX_ _SSE_ _ASE_ _RASE_ _NLEAVES_ datarole _APROF_ _PROF_ _PASE_ _PMISC_ ;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _APROF_ is uninitialized.
NOTE: Variable _PROF_ is uninitialized.
NOTE: Variable _PASE_ is uninitialized.
NOTE: Variable _PMISC_ is uninitialized.
NOTE: Variable _NLEAVES_ is uninitialized.
WARNING: The variable _MISC_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _NLEAVES_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _APROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _PROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _PASE_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _PMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 50 observations read from the data set WORK.SUBFIT.
NOTE: The data set EMWS1.BOOST_SUBFIT has 50 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(CREATESUBFIT):   data tempvalid;
MPRINT(CREATESUBFIT):   length datarole $8;
MPRINT(CREATESUBFIT):   set SUBFIT;
MPRINT(CREATESUBFIT):   rename _VMISC_ = _MISC_ _VMAX_ = _MAX_ _VSSE_ = _SSE_ _VASE_ = _ASE_ _VRASE_ = _RASE_ _VAPROF_ = _APROF_ _VPROF_ = _PROF_ _VPASE_ = _PASE_ _VPMISC_ = _PMISC_ ;
MPRINT(CREATESUBFIT):   datarole = "VALID";
MPRINT(CREATESUBFIT):   label _VMISC_ = "Misclassification Rate" _VMAX_ = "Maximum Absolute Error" _VSSE_ = "Sum of Square Errors" _VASE_ = "Average Square Error" _VRASE_ = "Root Average Square Error" _VAPROF_ = "Average Profit" _VPROF_ = "Total Computed
Profit" _VPASE_ = "Average Square Error with Priors" _VPMISC_ = "Misclassification Rate with Priors" _NLEAVES_ = "Number of Leaves" datarole = "Data Role";
MPRINT(CREATESUBFIT):   keep _ITERATION_ _NW_ _VMISC_ _VMAX_ _VSSE_ _VASE_ _VRASE_ _NLEAVES_ datarole _VAPROF_ _VPROF_ _VPASE_ _VPMISC_ ;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Variable _VMISC_ is uninitialized.
NOTE: Variable _VAPROF_ is uninitialized.
NOTE: Variable _VPROF_ is uninitialized.
NOTE: Variable _VPASE_ is uninitialized.
NOTE: Variable _VPMISC_ is uninitialized.
NOTE: Variable _NLEAVES_ is uninitialized.
WARNING: The variable _VMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _NLEAVES_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VAPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPASE_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VAPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPROF_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPASE_ in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable _VPMISC_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 50 observations read from the data set WORK.SUBFIT.
NOTE: The data set WORK.TEMPVALID has 50 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CREATESUBFIT):   data EMWS1.Boost_SUBFIT;
MPRINT(CREATESUBFIT):   set EMWS1.Boost_SUBFIT tempvalid;
MPRINT(CREATESUBFIT):   run;
 
NOTE: There were 50 observations read from the data set EMWS1.BOOST_SUBFIT.
NOTE: There were 50 observations read from the data set WORK.TEMPVALID.
NOTE: The data set EMWS1.BOOST_SUBFIT has 100 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CREATESUBFIT):   proc datasets library=work nolist;
MPRINT(CREATESUBFIT):   delete tempvalid;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Deleting WORK.TEMPVALID (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CREATESUBFIT):   proc datasets library=work nolist;
MPRINT(CREATESUBFIT):   delete subfit;
MPRINT(CREATESUBFIT):   run;
 
NOTE: Deleting WORK.SUBFIT (memtype=DATA).
MPRINT(SCORE):  ;
MPRINT(CREATEFITSTATISTICS):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CREATEFITSTATISTICS):   data EMWS1.Boost_EMOUTFIT;
MPRINT(CREATEFITSTATISTICS):   length target $32;
MPRINT(CREATEFITSTATISTICS):   merge work.fit_train work.fit_valid ;
MPRINT(CREATEFITSTATISTICS):   target =
MPRINT(CREATEFITSTATISTICS):   "Sum_Labor_Force_Pop";
MPRINT(CREATEFITSTATISTICS):   drop _NW_;
MPRINT(CREATEFITSTATISTICS):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_TRAIN.
NOTE: There were 1 observations read from the data set WORK.FIT_VALID.
NOTE: The data set EMWS1.BOOST_EMOUTFIT has 1 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CREATEFITSTATISTICS):   proc datasets library=work nolist;
MPRINT(CREATEFITSTATISTICS):   delete fit_valid;
MPRINT(CREATEFITSTATISTICS):   run;
 
NOTE: Deleting WORK.FIT_VALID (memtype=DATA).
MPRINT(SCORE):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("AGE_GROUP");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("POPULATION_IN_THOUSANDS");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("DATE");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("INPUT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;
 
NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SUBFIT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LINEPLOT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "SUBFIT";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "_ITERATION_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_ASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "dataRole";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 133 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_NW_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 133 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 266 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_MISC_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 266 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 399 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_MAX_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 399 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 532 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_SSE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 532 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 665 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_ASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 665 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 798 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_RASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 798 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 931 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_APROF_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 931 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1064 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_PROF_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1064 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1197 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_PASE_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1197 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1330 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "_PMISC_";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "50";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 1;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1330 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1463 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.7213328321098;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 1463 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1595 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24428      *------------------------------------------------------------*;
24429      * End SCORE: Boost;
24430      *------------------------------------------------------------*;
24431
 
24432      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
24433      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
24434      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
24435      filename x "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas";
24436      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
24437      file x;
MPRINT(EM_DIAGRAM):   file x;
24438      put 'if upcase(NAME) = "AGE_GROUP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "AGE_GROUP" then do;';
24439      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
24440      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24441      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24442      put 'if upcase(NAME) = "DATE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DATE" then do;';
24443      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
24444      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24445      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24446      put 'if upcase(NAME) = "POPULATION_IN_THOUSANDS" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "POPULATION_IN_THOUSANDS" then do;';
24447      put 'ROLE = "INPUT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "INPUT";';
24448      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24449      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24450      put 'if upcase(NAME) = "Q_SUM_LABOR_FORCE_POP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_SUM_LABOR_FORCE_POP" then do;';
24451      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
24452      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24453      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file X is:
      Filename=C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=21Nov2019:15:11:54,
      Create Time=19Nov2019:15:20:59
 
NOTE: 15 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 52.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
24454      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
24455      filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24456      *------------------------------------------------------------*;
24457      * Boost: Scoring DATA data;
24458      *------------------------------------------------------------*;
24459      data EMWS1.Boost_TRAIN
24460      / view=EMWS1.Boost_TRAIN
24461      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_TRAIN / view=EMWS1.Boost_TRAIN ;
24462      set EMWS1.Part_TRAIN
24463      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN ;
24464      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas.
24465     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24466     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
24467     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24468     +
24469     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
24470     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
24471     +
24472     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
24473     +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
24474     +      P_Sum_Labor_Force_Pop  = 0;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 0;
24475     +label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
24476     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
24477     +
24478     +
24479     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24480     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
24481     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
24482     +LENGTH _ARBFMT_10 $     10; DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
24483     +_ARBFMT_10 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
24484     +
24485     +
24486     + DROP _ARB_F_;
MPRINT(EM_DIAGRAM):   DROP _ARB_F_;
24487     + DROP _ARB_BADF_;
MPRINT(EM_DIAGRAM):   DROP _ARB_BADF_;
24488     +     _ARB_F_ = 6872727.8912;
MPRINT(EM_DIAGRAM):   _ARB_F_ = 6872727.8912;
24489     +     _ARB_BADF_ = 0;
MPRINT(EM_DIAGRAM):   _ARB_BADF_ = 0;
24490     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
24491     + DROP _ARB_P_;
MPRINT(EM_DIAGRAM):   DROP _ARB_P_;
24492     + _ARB_P_ = 0;
MPRINT(EM_DIAGRAM):   _ARB_P_ = 0;
24493     + DROP _ARB_PPATH_; _ARB_PPATH_ = 1;
MPRINT(EM_DIAGRAM):   DROP _ARB_PPATH_;
MPRINT(EM_DIAGRAM):   _ARB_PPATH_ = 1;
24494     +
24495     +********** LEAF     1  NODE   322 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 1 NODE 322 ***************;
24496     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24497     +
24498     +   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
24499     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24500     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24501     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
24502     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24503     +     _BRANCH_ =    1;
24504     +    END;
24505     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
24506     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24507     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24508     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24509     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
24510     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24511     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24512     +
24513     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24514     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -312211.6126;
24515     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24516     +      END;
MPRINT(EM_DIAGRAM):   END;
24517     +
MPRINT(EM_DIAGRAM):   END;
24518     +    IF _BRANCH_ GT 0 THEN DO;
24519     +       _ARB_F_ + -312211.6126;
MPRINT(EM_DIAGRAM):   ********** LEAF 2 NODE 323 ***************;
24520     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24521     +    END;
24522     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24523     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24524     +********** LEAF     2  NODE   323 ***************;
24525     +IF _ARB_BADF_ EQ 0 THEN DO;
24526     +
24527     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24528     +  _ARBFMT_19 = PUT( Age_group , $19.);
24529     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
24530     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24531     +     _BRANCH_ =    1;
24532     +    END;
24533     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
24534     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24535     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24536     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24537     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
24538     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24539     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24540     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24541     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24542     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
24543     +       _BRANCH_ =    2;
24544     +      END;
24545     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
24546     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24547     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -578904.1022;
24548     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
24549     +         ) THEN _BRANCH_ = 2;
The SAS System
 
MPRINT(EM_DIAGRAM):   END;
24550     +    END;
MPRINT(EM_DIAGRAM):   END;
24551     +    IF _BRANCH_ GT 0 THEN DO;
24552     +       _ARB_F_ + -578904.1022;
MPRINT(EM_DIAGRAM):   ********** LEAF 3 NODE 324 ***************;
24553     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24554     +    END;
24555     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24556     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24557     +********** LEAF     3  NODE   324 ***************;
24558     +IF _ARB_BADF_ EQ 0 THEN DO;
24559     +
24560     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24561     +  _ARBFMT_19 = PUT( Age_group , $19.);
24562     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24563     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24564     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24565     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
24566     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24567     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24568     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24569     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
24570     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
24571     +       _BRANCH_ =    1;
24572     +      END;
24573     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
24574     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24575     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 626788.38735;
24576     +        '25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
24577     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24578     +    END;
MPRINT(EM_DIAGRAM):   END;
24579     +    IF _BRANCH_ GT 0 THEN DO;
24580     +       _ARB_F_ + 626788.38735;
MPRINT(EM_DIAGRAM):   ********** LEAF 4 NODE 325 ***************;
24581     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24582     +    END;
24583     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24584     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24585     +********** LEAF     4  NODE   325 ***************;
24586     +IF _ARB_BADF_ EQ 0 THEN DO;
24587     +
24588     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24589     +  _ARBFMT_19 = PUT( Age_group , $19.);
24590     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24591     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24592     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24593     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
24594     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24595     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24596     +
24597     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24598     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 319834.35374;
24599     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
24600     +      END;
MPRINT(EM_DIAGRAM):   END;
24601     +
MPRINT(EM_DIAGRAM):   END;
24602     +    IF _BRANCH_ GT 0 THEN DO;
24603     +       _ARB_F_ + 319834.35374;
MPRINT(EM_DIAGRAM):   ********** LEAF 5 NODE 329 ***************;
24604     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24605     +    END;
24606     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24607     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24608     +********** LEAF     5  NODE   329 ***************;
24609     +IF _ARB_BADF_ EQ 0 THEN DO;
24610     +
24611     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24612     +  _ARBFMT_19 = PUT( Age_group , $19.);
24613     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24614     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24615     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24616     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
24617     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24618     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24619     +
24620     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24621     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -264208.9612;
24622     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24623     +      END;
MPRINT(EM_DIAGRAM):   END;
24624     +
MPRINT(EM_DIAGRAM):   END;
24625     +    IF _BRANCH_ GT 0 THEN DO;
24626     +       _ARB_F_ + -264208.9612;
MPRINT(EM_DIAGRAM):   ********** LEAF 6 NODE 330 ***************;
24627     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24628     +    END;
24629     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24630     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24631     +********** LEAF     6  NODE   330 ***************;
24632     +IF _ARB_BADF_ EQ 0 THEN DO;
24633     +
24634     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24635     +  _ARBFMT_19 = PUT( Age_group , $19.);
24636     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24637     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24638     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24639     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
24640     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24641     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24642     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24643     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24644     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
24645     +       _BRANCH_ =    2;
24646     +      END;
24647     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
24648     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24649     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -522183.4098;
24650     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
24651     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24652     +    END;
MPRINT(EM_DIAGRAM):   END;
24653     +    IF _BRANCH_ GT 0 THEN DO;
24654     +       _ARB_F_ + -522183.4098;
MPRINT(EM_DIAGRAM):   ********** LEAF 7 NODE 331 ***************;
24655     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24656     +    END;
24657     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24658     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24659     +********** LEAF     7  NODE   331 ***************;
24660     +IF _ARB_BADF_ EQ 0 THEN DO;
24661     +
24662     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24663     +  _ARBFMT_19 = PUT( Age_group , $19.);
24664     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24665     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24666     +     _BRANCH_ =    2;
24667     +    END;
24668     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
24669     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24670     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24671     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24672     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
24673     +  END;
24674     +  IF _BRANCH_ GT 0 THEN DO;
24675     +
24676     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
24677     +    _ARBFMT_10 = PUT( Date , $10.);
24678     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' , '2013' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24679     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24680     +      '2013' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 267694.88335;
24681     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24682     +      END;
MPRINT(EM_DIAGRAM):   END;
24683     +
MPRINT(EM_DIAGRAM):   END;
24684     +    IF _BRANCH_ GT 0 THEN DO;
24685     +       _ARB_F_ + 267694.88335;
MPRINT(EM_DIAGRAM):   ********** LEAF 8 NODE 332 ***************;
24686     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24687     +    END;
24688     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24689     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24690     +********** LEAF     8  NODE   332 ***************;
24691     +IF _ARB_BADF_ EQ 0 THEN DO;
24692     +
24693     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24694     +  _ARBFMT_19 = PUT( Age_group , $19.);
24695     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24696     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24697     +     _BRANCH_ =    2;
24698     +    END;
24699     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
24700     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24701     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24702     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24703     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
24704     +  END;
24705     +  IF _BRANCH_ GT 0 THEN DO;
24706     +
24707     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
24708     +    _ARBFMT_10 = PUT( Date , $10.);
24709     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2011' , '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24710     +      IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2011' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
24711     +      '2012' ) THEN DO;
24712     +       _BRANCH_ =    2;
24713     +      END;
24714     +    IF _BRANCH_ LT 0 THEN DO;
24715     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2001' , '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 2;
24716     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24717     +        '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2001' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 497411.42508;
24718     +        '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012'
MPRINT(EM_DIAGRAM):   END;
24719     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24720     +    END;
MPRINT(EM_DIAGRAM):   END;
24721     +    IF _BRANCH_ GT 0 THEN DO;
24722     +       _ARB_F_ + 497411.42508;
MPRINT(EM_DIAGRAM):   ********** LEAF 9 NODE 336 ***************;
24723     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24724     +    END;
24725     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24726     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24727     +********** LEAF     9  NODE   336 ***************;
24728     +IF _ARB_BADF_ EQ 0 THEN DO;
24729     +
24730     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24731     +  _ARBFMT_19 = PUT( Age_group , $19.);
24732     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24733     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24734     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24735     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
24736     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24737     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24738     +
24739     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24740     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -248511.9817;
24741     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24742     +      END;
MPRINT(EM_DIAGRAM):   END;
24743     +
MPRINT(EM_DIAGRAM):   END;
24744     +    IF _BRANCH_ GT 0 THEN DO;
24745     +       _ARB_F_ + -248511.9817;
MPRINT(EM_DIAGRAM):   ********** LEAF 10 NODE 337 ***************;
24746     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24747     +    END;
24748     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24749     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24750     +********** LEAF    10  NODE   337 ***************;
24751     +IF _ARB_BADF_ EQ 0 THEN DO;
24752     +
24753     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24754     +  _ARBFMT_19 = PUT( Age_group , $19.);
24755     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24756     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24757     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24758     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
24759     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24760     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24761     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24762     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24763     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
24764     +       _BRANCH_ =    2;
24765     +      END;
24766     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
24767     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24768     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -465556.511;
24769     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
24770     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24771     +    END;
MPRINT(EM_DIAGRAM):   END;
24772     +    IF _BRANCH_ GT 0 THEN DO;
24773     +       _ARB_F_ + -465556.511;
MPRINT(EM_DIAGRAM):   ********** LEAF 11 NODE 338 ***************;
24774     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24775     +    END;
24776     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24777     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24778     +********** LEAF    11  NODE   338 ***************;
24779     +IF _ARB_BADF_ EQ 0 THEN DO;
24780     +
24781     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24782     +  _ARBFMT_19 = PUT( Age_group , $19.);
24783     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24784     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24785     +     _BRANCH_ =    2;
24786     +    END;
24787     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
24788     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24789     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24790     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24791     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
24792     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24793     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24794     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24795     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
24796     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
24797     +       _BRANCH_ =    1;
24798     +      END;
24799     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
24800     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24801     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 506091.47323;
24802     +        '25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
24803     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24804     +    END;
MPRINT(EM_DIAGRAM):   END;
24805     +    IF _BRANCH_ GT 0 THEN DO;
24806     +       _ARB_F_ + 506091.47323;
MPRINT(EM_DIAGRAM):   ********** LEAF 12 NODE 339 ***************;
24807     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24808     +    END;
24809     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24810     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24811     +********** LEAF    12  NODE   339 ***************;
24812     +IF _ARB_BADF_ EQ 0 THEN DO;
24813     +
24814     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24815     +  _ARBFMT_19 = PUT( Age_group , $19.);
24816     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24817     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24818     +     _BRANCH_ =    2;
24819     +    END;
24820     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
24821     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24822     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24823     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24824     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
24825     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24826     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24827     +
24828     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24829     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 225221.03549;
24830     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
24831     +      END;
MPRINT(EM_DIAGRAM):   END;
24832     +
MPRINT(EM_DIAGRAM):   END;
24833     +    IF _BRANCH_ GT 0 THEN DO;
24834     +       _ARB_F_ + 225221.03549;
MPRINT(EM_DIAGRAM):   ********** LEAF 13 NODE 343 ***************;
24835     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24836     +    END;
24837     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24838     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24839     +********** LEAF    13  NODE   343 ***************;
24840     +IF _ARB_BADF_ EQ 0 THEN DO;
24841     +
24842     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24843     +  _ARBFMT_19 = PUT( Age_group , $19.);
24844     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24845     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24846     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24847     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
24848     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24849     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24850     +
24851     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24852     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -228234.4116;
24853     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24854     +      END;
MPRINT(EM_DIAGRAM):   END;
24855     +
MPRINT(EM_DIAGRAM):   END;
24856     +    IF _BRANCH_ GT 0 THEN DO;
24857     +       _ARB_F_ + -228234.4116;
MPRINT(EM_DIAGRAM):   ********** LEAF 14 NODE 344 ***************;
24858     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24859     +    END;
24860     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24861     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24862     +********** LEAF    14  NODE   344 ***************;
24863     +IF _ARB_BADF_ EQ 0 THEN DO;
24864     +
24865     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24866     +  _ARBFMT_19 = PUT( Age_group , $19.);
24867     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24868     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24869     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24870     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
24871     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24872     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24873     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24874     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24875     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
24876     +       _BRANCH_ =    2;
24877     +      END;
24878     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
24879     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24880     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -425478.5017;
24881     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
24882     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24883     +    END;
MPRINT(EM_DIAGRAM):   END;
24884     +    IF _BRANCH_ GT 0 THEN DO;
24885     +       _ARB_F_ + -425478.5017;
MPRINT(EM_DIAGRAM):   ********** LEAF 15 NODE 345 ***************;
24886     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24887     +    END;
24888     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24889     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24890     +********** LEAF    15  NODE   345 ***************;
24891     +IF _ARB_BADF_ EQ 0 THEN DO;
24892     +
24893     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24894     +  _ARBFMT_19 = PUT( Age_group , $19.);
24895     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24896     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24897     +     _BRANCH_ =    2;
24898     +    END;
24899     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
24900     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24901     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24902     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24903     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
24904     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24905     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24906     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24907     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
24908     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
24909     +       _BRANCH_ =    1;
24910     +      END;
24911     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
24912     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24913     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 449842.45959;
24914     +        '25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
24915     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
24916     +    END;
MPRINT(EM_DIAGRAM):   END;
24917     +    IF _BRANCH_ GT 0 THEN DO;
24918     +       _ARB_F_ + 449842.45959;
MPRINT(EM_DIAGRAM):   ********** LEAF 16 NODE 346 ***************;
24919     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24920     +    END;
24921     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24922     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24923     +********** LEAF    16  NODE   346 ***************;
24924     +IF _ARB_BADF_ EQ 0 THEN DO;
24925     +
24926     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24927     +  _ARBFMT_19 = PUT( Age_group , $19.);
24928     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24929     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
24930     +     _BRANCH_ =    2;
24931     +    END;
24932     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
24933     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24934     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24935     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24936     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
24937     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24938     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24939     +
24940     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24941     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 204284.36406;
24942     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
24943     +      END;
MPRINT(EM_DIAGRAM):   END;
24944     +
MPRINT(EM_DIAGRAM):   END;
24945     +    IF _BRANCH_ GT 0 THEN DO;
24946     +       _ARB_F_ + 204284.36406;
MPRINT(EM_DIAGRAM):   ********** LEAF 17 NODE 350 ***************;
24947     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24948     +    END;
24949     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24950     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24951     +********** LEAF    17  NODE   350 ***************;
24952     +IF _ARB_BADF_ EQ 0 THEN DO;
24953     +
24954     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24955     +  _ARBFMT_19 = PUT( Age_group , $19.);
24956     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24957     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24958     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24959     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
24960     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
24961     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24962     +
24963     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24964     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -208056.0924;
24965     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
24966     +      END;
MPRINT(EM_DIAGRAM):   END;
24967     +
MPRINT(EM_DIAGRAM):   END;
24968     +    IF _BRANCH_ GT 0 THEN DO;
24969     +       _ARB_F_ + -208056.0924;
MPRINT(EM_DIAGRAM):   ********** LEAF 18 NODE 351 ***************;
24970     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24971     +    END;
24972     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24973     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
24974     +********** LEAF    18  NODE   351 ***************;
24975     +IF _ARB_BADF_ EQ 0 THEN DO;
24976     +
24977     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
24978     +  _ARBFMT_19 = PUT( Age_group , $19.);
24979     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
24980     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
24981     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
24982     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
24983     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
24984     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
24985     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
24986     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
24987     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
24988     +       _BRANCH_ =    2;
24989     +      END;
24990     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
24991     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24992     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -372918.4314;
24993     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
24994     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
24995     +    END;
MPRINT(EM_DIAGRAM):   END;
24996     +    IF _BRANCH_ GT 0 THEN DO;
24997     +       _ARB_F_ + -372918.4314;
MPRINT(EM_DIAGRAM):   ********** LEAF 19 NODE 352 ***************;
24998     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
24999     +    END;
25000     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25001     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25002     +********** LEAF    19  NODE   352 ***************;
25003     +IF _ARB_BADF_ EQ 0 THEN DO;
25004     +
25005     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25006     +  _ARBFMT_19 = PUT( Age_group , $19.);
25007     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25008     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25009     +     _BRANCH_ =    2;
25010     +    END;
25011     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25012     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25013     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25014     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25015     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
25016     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25017     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25018     +
25019     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25020     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 401957.74288;
25021     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25022     +      END;
MPRINT(EM_DIAGRAM):   END;
25023     +
MPRINT(EM_DIAGRAM):   END;
25024     +    IF _BRANCH_ GT 0 THEN DO;
25025     +       _ARB_F_ + 401957.74288;
MPRINT(EM_DIAGRAM):   ********** LEAF 20 NODE 353 ***************;
25026     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25027     +    END;
25028     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25029     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25030     +********** LEAF    20  NODE   353 ***************;
25031     +IF _ARB_BADF_ EQ 0 THEN DO;
25032     +
25033     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25034     +  _ARBFMT_19 = PUT( Age_group , $19.);
25035     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25036     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25037     +     _BRANCH_ =    2;
25038     +    END;
25039     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25040     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25041     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25042     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25043     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
25044     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25045     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25046     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25047     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25048     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
25049     +       _BRANCH_ =    2;
25050     +      END;
25051     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25052     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25053     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 136366.80271;
25054     +        '25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
25055     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25056     +    END;
MPRINT(EM_DIAGRAM):   END;
25057     +    IF _BRANCH_ GT 0 THEN DO;
25058     +       _ARB_F_ + 136366.80271;
MPRINT(EM_DIAGRAM):   ********** LEAF 21 NODE 357 ***************;
25059     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25060     +    END;
25061     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25062     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25063     +********** LEAF    21  NODE   357 ***************;
25064     +IF _ARB_BADF_ EQ 0 THEN DO;
25065     +
25066     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25067     +  _ARBFMT_19 = PUT( Age_group , $19.);
25068     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25069     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25070     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25071     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25072     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25073     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25074     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25075     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25076     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25077     +       _BRANCH_ =    1;
25078     +      END;
25079     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 1;
25080     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25081     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -193058.7185;
25082     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25083     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25084     +    END;
MPRINT(EM_DIAGRAM):   END;
25085     +    IF _BRANCH_ GT 0 THEN DO;
25086     +       _ARB_F_ + -193058.7185;
MPRINT(EM_DIAGRAM):   ********** LEAF 22 NODE 358 ***************;
25087     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25088     +    END;
25089     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25090     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25091     +********** LEAF    22  NODE   358 ***************;
25092     +IF _ARB_BADF_ EQ 0 THEN DO;
25093     +
25094     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25095     +  _ARBFMT_19 = PUT( Age_group , $19.);
25096     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25097     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25098     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25099     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
25100     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25101     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25102     +
25103     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25104     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -346652.0268;
25105     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25106     +      END;
MPRINT(EM_DIAGRAM):   END;
25107     +
MPRINT(EM_DIAGRAM):   END;
25108     +    IF _BRANCH_ GT 0 THEN DO;
25109     +       _ARB_F_ + -346652.0268;
MPRINT(EM_DIAGRAM):   ********** LEAF 23 NODE 359 ***************;
25110     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25111     +    END;
25112     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25113     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25114     +********** LEAF    23  NODE   359 ***************;
25115     +IF _ARB_BADF_ EQ 0 THEN DO;
25116     +
25117     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25118     +  _ARBFMT_19 = PUT( Age_group , $19.);
25119     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25120     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25121     +     _BRANCH_ =    2;
25122     +    END;
25123     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25124     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25125     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25126     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25127     +       ) THEN _BRANCH_ = 2;
25128     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41118.3015 THEN DO;
25129     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25130     +
MPRINT(EM_DIAGRAM):   END;
25131     +    _BRANCH_ = -1;
25132     +      IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25133     +      Population_in_thousands  <           41118.3015 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 1563.1398494;
25134     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25135     +      END;
MPRINT(EM_DIAGRAM):   END;
25136     +
MPRINT(EM_DIAGRAM):   END;
25137     +    IF _BRANCH_ GT 0 THEN DO;
25138     +       _ARB_F_ + 1563.1398494;
MPRINT(EM_DIAGRAM):   ********** LEAF 24 NODE 360 ***************;
25139     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25140     +    END;
25141     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25142     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25143     +********** LEAF    24  NODE   360 ***************;
25144     +IF _ARB_BADF_ EQ 0 THEN DO;
25145     +
25146     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25147     +  _ARBFMT_19 = PUT( Age_group , $19.);
25148     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25149     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25150     +     _BRANCH_ =    2;
25151     +    END;
25152     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25153     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25154     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25155     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25156     +       ) THEN _BRANCH_ = 2;
25157     +  END;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41118.3015 <= Population_in_thousands THEN DO;
25158     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25159     +
MPRINT(EM_DIAGRAM):   END;
25160     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25161     +      IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 2;
25162     +                41118.3015 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   END;
25163     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25164     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 273549.85357;
25165     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25166     +       IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25167     +    END;
MPRINT(EM_DIAGRAM):   END;
25168     +    IF _BRANCH_ GT 0 THEN DO;
25169     +       _ARB_F_ + 273549.85357;
MPRINT(EM_DIAGRAM):   ********** LEAF 25 NODE 364 ***************;
25170     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25171     +    END;
25172     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25173     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25174     +********** LEAF    25  NODE   364 ***************;
25175     +IF _ARB_BADF_ EQ 0 THEN DO;
25176     +
25177     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25178     +  _ARBFMT_19 = PUT( Age_group , $19.);
25179     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25180     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25181     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25182     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25183     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25184     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25185     +
25186     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25187     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -176482.7692;
25188     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25189     +      END;
MPRINT(EM_DIAGRAM):   END;
25190     +
MPRINT(EM_DIAGRAM):   END;
25191     +    IF _BRANCH_ GT 0 THEN DO;
25192     +       _ARB_F_ + -176482.7692;
MPRINT(EM_DIAGRAM):   ********** LEAF 26 NODE 365 ***************;
25193     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25194     +    END;
25195     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25196     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25197     +********** LEAF    26  NODE   365 ***************;
25198     +IF _ARB_BADF_ EQ 0 THEN DO;
25199     +
25200     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25201     +  _ARBFMT_19 = PUT( Age_group , $19.);
25202     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25203     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25204     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25205     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
25206     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25207     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25208     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25209     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25210     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
25211     +       _BRANCH_ =    2;
25212     +      END;
25213     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
25214     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25215     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -302221.0732;
25216     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25217     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25218     +    END;
MPRINT(EM_DIAGRAM):   END;
25219     +    IF _BRANCH_ GT 0 THEN DO;
25220     +       _ARB_F_ + -302221.0732;
MPRINT(EM_DIAGRAM):   ********** LEAF 27 NODE 366 ***************;
25221     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25222     +    END;
25223     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25224     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25225     +********** LEAF    27  NODE   366 ***************;
25226     +IF _ARB_BADF_ EQ 0 THEN DO;
25227     +
25228     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25229     +  _ARBFMT_19 = PUT( Age_group , $19.);
25230     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25231     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25232     +     _BRANCH_ =    2;
25233     +    END;
25234     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25235     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25236     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25237     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25238     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
25239     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25240     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25241     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25242     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25243     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
25244     +       _BRANCH_ =    1;
25245     +      END;
25246     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
25247     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25248     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 333760.93678;
25249     +        '25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
25250     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25251     +    END;
MPRINT(EM_DIAGRAM):   END;
25252     +    IF _BRANCH_ GT 0 THEN DO;
25253     +       _ARB_F_ + 333760.93678;
MPRINT(EM_DIAGRAM):   ********** LEAF 28 NODE 367 ***************;
25254     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25255     +    END;
25256     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25257     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25258     +********** LEAF    28  NODE   367 ***************;
25259     +IF _ARB_BADF_ EQ 0 THEN DO;
25260     +
25261     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25262     +  _ARBFMT_19 = PUT( Age_group , $19.);
25263     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25264     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25265     +     _BRANCH_ =    2;
25266     +    END;
25267     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25268     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25269     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25270     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25271     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
25272     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25273     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25274     +
25275     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25276     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 37405.931248;
25277     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25278     +      END;
MPRINT(EM_DIAGRAM):   END;
25279     +
MPRINT(EM_DIAGRAM):   END;
25280     +    IF _BRANCH_ GT 0 THEN DO;
25281     +       _ARB_F_ + 37405.931248;
MPRINT(EM_DIAGRAM):   ********** LEAF 29 NODE 371 ***************;
25282     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25283     +    END;
25284     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25285     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25286     +********** LEAF    29  NODE   371 ***************;
25287     +IF _ARB_BADF_ EQ 0 THEN DO;
25288     +
25289     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25290     +  _ARBFMT_19 = PUT( Age_group , $19.);
25291     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25292     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25293     +     _BRANCH_ =    1;
25294     +    END;
25295     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
25296     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25297     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25298     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25299     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25300     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25301     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25302     +
25303     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25304     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -149269.4113;
25305     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25306     +      END;
MPRINT(EM_DIAGRAM):   END;
25307     +
MPRINT(EM_DIAGRAM):   END;
25308     +    IF _BRANCH_ GT 0 THEN DO;
25309     +       _ARB_F_ + -149269.4113;
MPRINT(EM_DIAGRAM):   ********** LEAF 30 NODE 372 ***************;
25310     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25311     +    END;
25312     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25313     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25314     +********** LEAF    30  NODE   372 ***************;
25315     +IF _ARB_BADF_ EQ 0 THEN DO;
25316     +
25317     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25318     +  _ARBFMT_19 = PUT( Age_group , $19.);
25319     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25320     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25321     +     _BRANCH_ =    1;
25322     +    END;
25323     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
25324     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25325     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25326     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25327     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
25328     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25329     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25330     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25331     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25332     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
25333     +       _BRANCH_ =    2;
25334     +      END;
25335     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
25336     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25337     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -277504.9129;
25338     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25339     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25340     +    END;
MPRINT(EM_DIAGRAM):   END;
25341     +    IF _BRANCH_ GT 0 THEN DO;
25342     +       _ARB_F_ + -277504.9129;
MPRINT(EM_DIAGRAM):   ********** LEAF 31 NODE 373 ***************;
25343     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25344     +    END;
25345     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25346     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25347     +********** LEAF    31  NODE   373 ***************;
25348     +IF _ARB_BADF_ EQ 0 THEN DO;
25349     +
25350     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25351     +  _ARBFMT_19 = PUT( Age_group , $19.);
25352     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25353     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25354     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25355     +    END;
25356     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41320.8695 THEN DO;
25357     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25358     +
MPRINT(EM_DIAGRAM):   END;
25359     +    _BRANCH_ = -1;
25360     +      IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25361     +      Population_in_thousands  <           41320.8695 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 85657.677845;
25362     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25363     +      END;
MPRINT(EM_DIAGRAM):   END;
25364     +
MPRINT(EM_DIAGRAM):   END;
25365     +    IF _BRANCH_ GT 0 THEN DO;
25366     +       _ARB_F_ + 85657.677845;
MPRINT(EM_DIAGRAM):   ********** LEAF 32 NODE 374 ***************;
25367     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25368     +    END;
25369     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25370     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25371     +********** LEAF    32  NODE   374 ***************;
25372     +IF _ARB_BADF_ EQ 0 THEN DO;
25373     +
25374     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25375     +  _ARBFMT_19 = PUT( Age_group , $19.);
25376     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25377     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25378     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25379     +    END;
25380     +
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41320.8695 <= Population_in_thousands THEN DO;
25381     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25382     +
MPRINT(EM_DIAGRAM):   END;
25383     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25384     +      IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 2;
25385     +                41320.8695 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   END;
25386     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25387     +      END;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 317446.47945;
25388     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25389     +       IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25390     +    END;
MPRINT(EM_DIAGRAM):   END;
25391     +    IF _BRANCH_ GT 0 THEN DO;
25392     +       _ARB_F_ + 317446.47945;
MPRINT(EM_DIAGRAM):   ********** LEAF 33 NODE 378 ***************;
25393     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25394     +    END;
25395     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25396     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25397     +********** LEAF    33  NODE   378 ***************;
25398     +IF _ARB_BADF_ EQ 0 THEN DO;
25399     +
25400     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25401     +  _ARBFMT_19 = PUT( Age_group , $19.);
25402     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25403     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25404     +     _BRANCH_ =    1;
25405     +    END;
25406     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
25407     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25408     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25409     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25410     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25411     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25412     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25413     +
25414     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25415     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -157038.9055;
25416     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25417     +      END;
MPRINT(EM_DIAGRAM):   END;
25418     +
MPRINT(EM_DIAGRAM):   END;
25419     +    IF _BRANCH_ GT 0 THEN DO;
25420     +       _ARB_F_ + -157038.9055;
MPRINT(EM_DIAGRAM):   ********** LEAF 34 NODE 379 ***************;
25421     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25422     +    END;
25423     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25424     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25425     +********** LEAF    34  NODE   379 ***************;
25426     +IF _ARB_BADF_ EQ 0 THEN DO;
25427     +
25428     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25429     +  _ARBFMT_19 = PUT( Age_group , $19.);
25430     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25431     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25432     +     _BRANCH_ =    1;
25433     +    END;
25434     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
25435     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25436     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25437     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25438     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
25439     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25440     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25441     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25442     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25443     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
25444     +       _BRANCH_ =    2;
25445     +      END;
25446     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
25447     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25448     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -246560.8922;
25449     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25450     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25451     +    END;
MPRINT(EM_DIAGRAM):   END;
25452     +    IF _BRANCH_ GT 0 THEN DO;
25453     +       _ARB_F_ + -246560.8922;
MPRINT(EM_DIAGRAM):   ********** LEAF 35 NODE 380 ***************;
25454     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25455     +    END;
25456     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25457     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25458     +********** LEAF    35  NODE   380 ***************;
25459     +IF _ARB_BADF_ EQ 0 THEN DO;
25460     +
25461     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25462     +  _ARBFMT_19 = PUT( Age_group , $19.);
25463     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25464     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25465     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25466     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25467     +
25468     +  IF _BRANCH_ GT 0 THEN DO;
25469     +
25470     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25471     +    _ARBFMT_10 = PUT( Date , $10.);
25472     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' , '2001' ,'2002' ,'2003' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25473     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
25474     +      '2001' ,'2002' ,'2003' ) THEN DO;
25475     +       _BRANCH_ =    1;
25476     +      END;
25477     +    IF _BRANCH_ LT 0 THEN DO;
25478     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' ,'2001' ,'2002' , '2003' ,'2007' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 1;
25479     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25480     +        '2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' ,'2001' ,'2002' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 161235.59414;
25481     +        '2003' ,'2007' ,'2008' ,'2009' ,'2011' ,'2012'
MPRINT(EM_DIAGRAM):   END;
25482     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25483     +    END;
MPRINT(EM_DIAGRAM):   END;
25484     +    IF _BRANCH_ GT 0 THEN DO;
25485     +       _ARB_F_ + 161235.59414;
MPRINT(EM_DIAGRAM):   ********** LEAF 36 NODE 381 ***************;
25486     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25487     +    END;
25488     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25489     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25490     +********** LEAF    36  NODE   381 ***************;
25491     +IF _ARB_BADF_ EQ 0 THEN DO;
25492     +
25493     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25494     +  _ARBFMT_19 = PUT( Age_group , $19.);
25495     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25496     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25497     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25498     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25499     +
25500     +  IF _BRANCH_ GT 0 THEN DO;
25501     +
25502     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25503     +    _ARBFMT_10 = PUT( Date , $10.);
25504     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2007' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25505     +      IF _ARBFMT_10 IN ('2007' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 357709.53664;
25506     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25507     +      END;
MPRINT(EM_DIAGRAM):   END;
25508     +
MPRINT(EM_DIAGRAM):   END;
25509     +    IF _BRANCH_ GT 0 THEN DO;
25510     +       _ARB_F_ + 357709.53664;
MPRINT(EM_DIAGRAM):   ********** LEAF 37 NODE 385 ***************;
25511     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25512     +    END;
25513     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25514     +
25515     +********** LEAF    37  NODE   385 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 40523.9185 THEN DO;
25516     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25517     +
MPRINT(EM_DIAGRAM):   END;
25518     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25519     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
25520     +    Population_in_thousands  <           40523.9185 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25521     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25522     +    END;
25523     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25524     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25525     +  END;
25526     +  IF _BRANCH_ GT 0 THEN DO;
25527     +
25528     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25529     +    _ARBFMT_19 = PUT( Age_group , $19.);
25530     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25531     +      IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
25532     +       _BRANCH_ =    1;
25533     +      END;
25534     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'45 TO 64' ,'65+' ) THEN _BRANCH_ = 1;
25535     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25536     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -77822.98735;
25537     +        '16 TO 24' ,'45 TO 64' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25538     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25539     +    END;
MPRINT(EM_DIAGRAM):   END;
25540     +    IF _BRANCH_ GT 0 THEN DO;
25541     +       _ARB_F_ + -77822.98735;
MPRINT(EM_DIAGRAM):   ********** LEAF 38 NODE 386 ***************;
25542     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25543     +    END;
25544     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25545     +
25546     +********** LEAF    38  NODE   386 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 40523.9185 THEN DO;
25547     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25548     +
MPRINT(EM_DIAGRAM):   END;
25549     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25550     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
25551     +    Population_in_thousands  <           40523.9185 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25552     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25553     +    END;
25554     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25555     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25556     +  END;
25557     +  IF _BRANCH_ GT 0 THEN DO;
25558     +
25559     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25560     +    _ARBFMT_19 = PUT( Age_group , $19.);
25561     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25562     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -232156.2463;
25563     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25564     +      END;
MPRINT(EM_DIAGRAM):   END;
25565     +
MPRINT(EM_DIAGRAM):   END;
25566     +    IF _BRANCH_ GT 0 THEN DO;
25567     +       _ARB_F_ + -232156.2463;
MPRINT(EM_DIAGRAM):   ********** LEAF 39 NODE 387 ***************;
25568     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25569     +    END;
25570     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25571     +
25572     +********** LEAF    39  NODE   387 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 40523.9185 <= Population_in_thousands THEN DO;
25573     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25574     +
MPRINT(EM_DIAGRAM):   END;
25575     +  _BRANCH_ = -1;
25576     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25577     +              40523.9185 <= Population_in_thousands  THEN DO;
25578     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25579     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25580     +
25581     +  IF _BRANCH_ GT 0 THEN DO;
25582     +
25583     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25584     +    _ARBFMT_10 = PUT( Date , $10.);
25585     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25586     +      IF _ARBFMT_10 IN ('2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ) THEN
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25587     +        DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 359303.23348;
25588     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25589     +      END;
MPRINT(EM_DIAGRAM):   END;
25590     +
MPRINT(EM_DIAGRAM):   END;
25591     +    IF _BRANCH_ GT 0 THEN DO;
25592     +       _ARB_F_ + 359303.23348;
MPRINT(EM_DIAGRAM):   ********** LEAF 40 NODE 388 ***************;
25593     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25594     +    END;
25595     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25596     +
25597     +********** LEAF    40  NODE   388 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 40523.9185 <= Population_in_thousands THEN DO;
25598     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25599     +
MPRINT(EM_DIAGRAM):   END;
25600     +  _BRANCH_ = -1;
25601     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25602     +              40523.9185 <= Population_in_thousands  THEN DO;
25603     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25604     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25605     +
25606     +  IF _BRANCH_ GT 0 THEN DO;
25607     +
25608     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25609     +    _ARBFMT_10 = PUT( Date , $10.);
25610     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2005' ,'2006' ,'2010' ,'2002' ,'2008' , '2009' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25611     +      IF _ARBFMT_10 IN ('2004' ,'2005' ,'2006' ,'2010' ,'2002' ,'2008' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
25612     +      '2009' ,'2011' ) THEN DO;
25613     +       _BRANCH_ =    2;
25614     +      END;
25615     +    IF _BRANCH_ LT 0 THEN DO;
25616     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ,'2004' ,'2005' , '2006' ,'2010' ,'2002' ,'2008' ,'2009' ,'2011' ) THEN _BRANCH_ = 2;
25617     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25618     +        '2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ,'2004' ,'2005' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 142654.31386;
25619     +        '2006' ,'2010' ,'2002' ,'2008' ,'2009' ,'2011'
MPRINT(EM_DIAGRAM):   END;
25620     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25621     +    END;
MPRINT(EM_DIAGRAM):   END;
25622     +    IF _BRANCH_ GT 0 THEN DO;
25623     +       _ARB_F_ + 142654.31386;
MPRINT(EM_DIAGRAM):   ********** LEAF 41 NODE 392 ***************;
25624     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25625     +    END;
25626     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25627     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25628     +********** LEAF    41  NODE   392 ***************;
25629     +IF _ARB_BADF_ EQ 0 THEN DO;
25630     +
25631     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25632     +  _ARBFMT_19 = PUT( Age_group , $19.);
25633     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25634     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25635     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25636     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25637     +
25638     +  IF _BRANCH_ GT 0 THEN DO;
25639     +
25640     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25641     +    _ARBFMT_10 = PUT( Date , $10.);
25642     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2005' ,'2010' ,'2008' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25643     +      IF _ARBFMT_10 IN ('2000' ,'2005' ,'2010' ,'2008' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -144212.5534;
25644     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25645     +      END;
MPRINT(EM_DIAGRAM):   END;
25646     +
MPRINT(EM_DIAGRAM):   END;
25647     +    IF _BRANCH_ GT 0 THEN DO;
25648     +       _ARB_F_ + -144212.5534;
MPRINT(EM_DIAGRAM):   ********** LEAF 42 NODE 393 ***************;
25649     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25650     +    END;
25651     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25652     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25653     +********** LEAF    42  NODE   393 ***************;
25654     +IF _ARB_BADF_ EQ 0 THEN DO;
25655     +
25656     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25657     +  _ARBFMT_19 = PUT( Age_group , $19.);
25658     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25659     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25660     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25661     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25662     +
25663     +  IF _BRANCH_ GT 0 THEN DO;
25664     +
25665     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25666     +    _ARBFMT_10 = PUT( Date , $10.);
25667     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2013' ,'2001' ,'2002' , '2003' ,'2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25668     +      IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2013' ,'2001' ,'2002' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
25669     +      '2003' ,'2009' ,'2012' ) THEN DO;
25670     +       _BRANCH_ =    2;
25671     +      END;
25672     +    IF _BRANCH_ LT 0 THEN DO;
25673     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2005' ,'2010' ,'2008' ,'2011' ,'2004' ,'2006' ,'2007' , '2013' ,'2001' ,'2002' ,'2003' ,'2009' ,'2012' ) THEN _BRANCH_ = 2;
25674     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25675     +        '2000' ,'2005' ,'2010' ,'2008' ,'2011' ,'2004' ,'2006' ,'2007' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -200381.7133;
25676     +        '2013' ,'2001' ,'2002' ,'2003' ,'2009' ,'2012'
MPRINT(EM_DIAGRAM):   END;
25677     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25678     +    END;
MPRINT(EM_DIAGRAM):   END;
25679     +    IF _BRANCH_ GT 0 THEN DO;
25680     +       _ARB_F_ + -200381.7133;
MPRINT(EM_DIAGRAM):   ********** LEAF 43 NODE 394 ***************;
25681     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25682     +    END;
25683     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25684     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25685     +********** LEAF    43  NODE   394 ***************;
25686     +IF _ARB_BADF_ EQ 0 THEN DO;
25687     +
25688     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25689     +  _ARBFMT_19 = PUT( Age_group , $19.);
25690     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25691     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25692     +     _BRANCH_ =    2;
25693     +    END;
25694     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25695     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25696     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25697     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25698     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
25699     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25700     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25701     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25702     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
25703     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
25704     +       _BRANCH_ =    1;
25705     +      END;
25706     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
25707     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25708     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 274662.71817;
25709     +        '25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
25710     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25711     +    END;
MPRINT(EM_DIAGRAM):   END;
25712     +    IF _BRANCH_ GT 0 THEN DO;
25713     +       _ARB_F_ + 274662.71817;
MPRINT(EM_DIAGRAM):   ********** LEAF 44 NODE 395 ***************;
25714     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25715     +    END;
25716     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25717     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25718     +********** LEAF    44  NODE   395 ***************;
25719     +IF _ARB_BADF_ EQ 0 THEN DO;
25720     +
25721     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25722     +  _ARBFMT_19 = PUT( Age_group , $19.);
25723     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25724     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25725     +     _BRANCH_ =    2;
25726     +    END;
25727     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25728     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25729     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25730     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25731     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
25732     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25733     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25734     +
25735     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25736     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 41574.862604;
25737     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25738     +      END;
MPRINT(EM_DIAGRAM):   END;
25739     +
MPRINT(EM_DIAGRAM):   END;
25740     +    IF _BRANCH_ GT 0 THEN DO;
25741     +       _ARB_F_ + 41574.862604;
MPRINT(EM_DIAGRAM):   ********** LEAF 45 NODE 399 ***************;
25742     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25743     +    END;
25744     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25745     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25746     +********** LEAF    45  NODE   399 ***************;
25747     +IF _ARB_BADF_ EQ 0 THEN DO;
25748     +
25749     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25750     +  _ARBFMT_19 = PUT( Age_group , $19.);
25751     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25752     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25753     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25754     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25755     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25756     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25757     +
25758     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25759     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -94469.1326;
25760     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25761     +      END;
MPRINT(EM_DIAGRAM):   END;
25762     +
MPRINT(EM_DIAGRAM):   END;
25763     +    IF _BRANCH_ GT 0 THEN DO;
25764     +       _ARB_F_ + -94469.1326;
MPRINT(EM_DIAGRAM):   ********** LEAF 46 NODE 400 ***************;
25765     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25766     +    END;
25767     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25768     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25769     +********** LEAF    46  NODE   400 ***************;
25770     +IF _ARB_BADF_ EQ 0 THEN DO;
25771     +
25772     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25773     +  _ARBFMT_19 = PUT( Age_group , $19.);
25774     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25775     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25776     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25777     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
25778     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25779     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25780     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25781     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25782     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
25783     +       _BRANCH_ =    2;
25784     +      END;
25785     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
25786     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25787     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -187236.7206;
25788     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25789     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25790     +    END;
MPRINT(EM_DIAGRAM):   END;
25791     +    IF _BRANCH_ GT 0 THEN DO;
25792     +       _ARB_F_ + -187236.7206;
MPRINT(EM_DIAGRAM):   ********** LEAF 47 NODE 401 ***************;
25793     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25794     +    END;
25795     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25796     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25797     +********** LEAF    47  NODE   401 ***************;
25798     +IF _ARB_BADF_ EQ 0 THEN DO;
25799     +
25800     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25801     +  _ARBFMT_19 = PUT( Age_group , $19.);
25802     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25803     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25804     +     _BRANCH_ =    2;
25805     +    END;
25806     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25807     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25808     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25809     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25810     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25811     +  END;
25812     +  IF _BRANCH_ GT 0 THEN DO;
25813     +
25814     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25815     +    _ARBFMT_10 = PUT( Date , $10.);
25816     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' , '2008' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25817     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
25818     +      '2008' ,'2009' ) THEN DO;
25819     +       _BRANCH_ =    1;
25820     +      END;
25821     +    IF _BRANCH_ LT 0 THEN DO;
25822     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' ,'2009' , '2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012' ) THEN _BRANCH_ = 1;
25823     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25824     +        '2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' ,'2009' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 226316.26975;
25825     +        '2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012'
MPRINT(EM_DIAGRAM):   END;
25826     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25827     +    END;
MPRINT(EM_DIAGRAM):   END;
25828     +    IF _BRANCH_ GT 0 THEN DO;
25829     +       _ARB_F_ + 226316.26975;
MPRINT(EM_DIAGRAM):   ********** LEAF 48 NODE 402 ***************;
25830     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25831     +    END;
25832     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25833     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25834     +********** LEAF    48  NODE   402 ***************;
25835     +IF _ARB_BADF_ EQ 0 THEN DO;
25836     +
25837     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25838     +  _ARBFMT_19 = PUT( Age_group , $19.);
25839     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25840     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25841     +     _BRANCH_ =    2;
25842     +    END;
25843     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25844     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25845     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25846     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25847     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25848     +  END;
25849     +  IF _BRANCH_ GT 0 THEN DO;
25850     +
25851     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25852     +    _ARBFMT_10 = PUT( Date , $10.);
25853     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25854     +      IF _ARBFMT_10 IN ('2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012' ) THEN
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25855     +        DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 28964.879199;
25856     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25857     +      END;
MPRINT(EM_DIAGRAM):   END;
25858     +
MPRINT(EM_DIAGRAM):   END;
25859     +    IF _BRANCH_ GT 0 THEN DO;
25860     +       _ARB_F_ + 28964.879199;
MPRINT(EM_DIAGRAM):   ********** LEAF 49 NODE 406 ***************;
25861     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25862     +    END;
25863     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25864     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25865     +********** LEAF    49  NODE   406 ***************;
25866     +IF _ARB_BADF_ EQ 0 THEN DO;
25867     +
25868     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25869     +  _ARBFMT_19 = PUT( Age_group , $19.);
25870     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25871     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25872     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25873     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
25874     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25875     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25876     +
25877     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25878     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -91703.41133;
25879     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
25880     +      END;
MPRINT(EM_DIAGRAM):   END;
25881     +
MPRINT(EM_DIAGRAM):   END;
25882     +    IF _BRANCH_ GT 0 THEN DO;
25883     +       _ARB_F_ + -91703.41133;
MPRINT(EM_DIAGRAM):   ********** LEAF 50 NODE 407 ***************;
25884     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25885     +    END;
25886     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25887     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25888     +********** LEAF    50  NODE   407 ***************;
25889     +IF _ARB_BADF_ EQ 0 THEN DO;
25890     +
25891     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25892     +  _ARBFMT_19 = PUT( Age_group , $19.);
25893     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25894     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
25895     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25896     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
25897     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
25898     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25899     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25900     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25901     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
25902     +       _BRANCH_ =    2;
25903     +      END;
25904     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
25905     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25906     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -167299.7087;
25907     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
25908     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25909     +    END;
MPRINT(EM_DIAGRAM):   END;
25910     +    IF _BRANCH_ GT 0 THEN DO;
25911     +       _ARB_F_ + -167299.7087;
MPRINT(EM_DIAGRAM):   ********** LEAF 51 NODE 408 ***************;
25912     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25913     +    END;
25914     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25915     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25916     +********** LEAF    51  NODE   408 ***************;
25917     +IF _ARB_BADF_ EQ 0 THEN DO;
25918     +
25919     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25920     +  _ARBFMT_19 = PUT( Age_group , $19.);
25921     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25922     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25923     +     _BRANCH_ =    2;
25924     +    END;
25925     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25926     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25927     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25928     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25929     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25930     +  END;
25931     +  IF _BRANCH_ GT 0 THEN DO;
25932     +
25933     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25934     +    _ARBFMT_10 = PUT( Date , $10.);
25935     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' , '2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25936     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
25937     +      '2011' ,'2012' ) THEN DO;
25938     +       _BRANCH_ =    1;
25939     +      END;
25940     +    IF _BRANCH_ LT 0 THEN DO;
25941     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' ,'2011' ,'2012' , '2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009' ) THEN _BRANCH_ = 1;
25942     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25943     +        '2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' ,'2011' ,'2012' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 257463.24105;
25944     +        '2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009'
MPRINT(EM_DIAGRAM):   END;
25945     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
25946     +    END;
MPRINT(EM_DIAGRAM):   END;
25947     +    IF _BRANCH_ GT 0 THEN DO;
25948     +       _ARB_F_ + 257463.24105;
MPRINT(EM_DIAGRAM):   ********** LEAF 52 NODE 409 ***************;
25949     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25950     +    END;
25951     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25952     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25953     +********** LEAF    52  NODE   409 ***************;
25954     +IF _ARB_BADF_ EQ 0 THEN DO;
25955     +
25956     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25957     +  _ARBFMT_19 = PUT( Age_group , $19.);
25958     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
25959     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
25960     +     _BRANCH_ =    2;
25961     +    END;
25962     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
25963     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25964     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25965     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25966     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
25967     +  END;
25968     +  IF _BRANCH_ GT 0 THEN DO;
25969     +
25970     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
25971     +    _ARBFMT_10 = PUT( Date , $10.);
25972     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
25973     +      IF _ARBFMT_10 IN ('2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009' ) THEN
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25974     +        DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 27131.224142;
25975     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
25976     +      END;
MPRINT(EM_DIAGRAM):   END;
25977     +
MPRINT(EM_DIAGRAM):   END;
25978     +    IF _BRANCH_ GT 0 THEN DO;
25979     +       _ARB_F_ + 27131.224142;
MPRINT(EM_DIAGRAM):   ********** LEAF 53 NODE 413 ***************;
25980     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
25981     +    END;
25982     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25983     +
25984     +********** LEAF    53  NODE   413 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41105.5765 THEN DO;
25985     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
25986     +
MPRINT(EM_DIAGRAM):   END;
25987     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
25988     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
25989     +    Population_in_thousands  <           41105.5765 THEN DO;
MPRINT(EM_DIAGRAM):   END;
25990     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
25991     +    END;
25992     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
25993     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
25994     +  END;
25995     +  IF _BRANCH_ GT 0 THEN DO;
25996     +
25997     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
25998     +    _ARBFMT_19 = PUT( Age_group , $19.);
25999     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26000     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
26001     +       _BRANCH_ =    1;
26002     +      END;
26003     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '65+' ,'16 TO 24' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26004     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26005     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -146843.737;
26006     +        '65+' ,'16 TO 24' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
26007     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26008     +    END;
MPRINT(EM_DIAGRAM):   END;
26009     +    IF _BRANCH_ GT 0 THEN DO;
26010     +       _ARB_F_ + -146843.737;
MPRINT(EM_DIAGRAM):   ********** LEAF 54 NODE 414 ***************;
26011     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26012     +    END;
26013     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26014     +
26015     +********** LEAF    54  NODE   414 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41105.5765 THEN DO;
26016     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26017     +
MPRINT(EM_DIAGRAM):   END;
26018     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26019     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
26020     +    Population_in_thousands  <           41105.5765 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26021     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26022     +    END;
26023     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26024     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26025     +  END;
26026     +  IF _BRANCH_ GT 0 THEN DO;
26027     +
26028     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26029     +    _ARBFMT_19 = PUT( Age_group , $19.);
26030     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26031     +      IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -46717.8437;
26032     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26033     +      END;
MPRINT(EM_DIAGRAM):   END;
26034     +
MPRINT(EM_DIAGRAM):   END;
26035     +    IF _BRANCH_ GT 0 THEN DO;
26036     +       _ARB_F_ + -46717.8437;
MPRINT(EM_DIAGRAM):   ********** LEAF 55 NODE 415 ***************;
26037     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26038     +    END;
26039     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26040     +
26041     +********** LEAF    55  NODE   415 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41105.5765 <= Population_in_thousands THEN DO;
26042     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26043     +
MPRINT(EM_DIAGRAM):   END;
26044     +  _BRANCH_ = -1;
26045     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26046     +              41105.5765 <= Population_in_thousands  THEN DO;
26047     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26048     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26049     +
26050     +  IF _BRANCH_ GT 0 THEN DO;
26051     +
26052     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26053     +    _ARBFMT_10 = PUT( Date , $10.);
26054     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26055     +      IF _ARBFMT_10 IN ('2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
26056     +        DO;
26057     +       _BRANCH_ =    1;
26058     +      END;
26059     +    IF _BRANCH_ LT 0 THEN DO;
26060     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ,'2004' ,'2006' , '2007' ,'2010' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
26061     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26062     +        '2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ,'2004' ,'2006' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 16940.51047;
26063     +        '2007' ,'2010' ,'2003' ,'2008' ,'2009' ,'2012'
MPRINT(EM_DIAGRAM):   END;
26064     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26065     +    END;
MPRINT(EM_DIAGRAM):   END;
26066     +    IF _BRANCH_ GT 0 THEN DO;
26067     +       _ARB_F_ + 16940.51047;
MPRINT(EM_DIAGRAM):   ********** LEAF 56 NODE 416 ***************;
26068     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26069     +    END;
26070     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26071     +
26072     +********** LEAF    56  NODE   416 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41105.5765 <= Population_in_thousands THEN DO;
26073     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26074     +
MPRINT(EM_DIAGRAM):   END;
26075     +  _BRANCH_ = -1;
26076     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26077     +              41105.5765 <= Population_in_thousands  THEN DO;
26078     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26079     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26080     +
26081     +  IF _BRANCH_ GT 0 THEN DO;
26082     +
26083     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26084     +    _ARBFMT_10 = PUT( Date , $10.);
26085     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2010' ,'2003' ,'2008' , '2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26086     +      IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2010' ,'2003' ,'2008' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26087     +      '2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 285735.24;
26088     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26089     +      END;
MPRINT(EM_DIAGRAM):   END;
26090     +
MPRINT(EM_DIAGRAM):   END;
26091     +    IF _BRANCH_ GT 0 THEN DO;
26092     +       _ARB_F_ + 285735.24;
MPRINT(EM_DIAGRAM):   ********** LEAF 57 NODE 420 ***************;
26093     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26094     +    END;
26095     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26096     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26097     +********** LEAF    57  NODE   420 ***************;
26098     +IF _ARB_BADF_ EQ 0 THEN DO;
26099     +
26100     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26101     +  _ARBFMT_19 = PUT( Age_group , $19.);
26102     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26103     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26104     +     _BRANCH_ =    1;
26105     +    END;
26106     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26107     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26108     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26109     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26110     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
26111     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26112     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26113     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26114     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26115     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
26116     +       _BRANCH_ =    1;
26117     +      END;
26118     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 1;
26119     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26120     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -80364.69784;
26121     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
26122     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26123     +    END;
MPRINT(EM_DIAGRAM):   END;
26124     +    IF _BRANCH_ GT 0 THEN DO;
26125     +       _ARB_F_ + -80364.69784;
MPRINT(EM_DIAGRAM):   ********** LEAF 58 NODE 421 ***************;
26126     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26127     +    END;
26128     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26129     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26130     +********** LEAF    58  NODE   421 ***************;
26131     +IF _ARB_BADF_ EQ 0 THEN DO;
26132     +
26133     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26134     +  _ARBFMT_19 = PUT( Age_group , $19.);
26135     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26136     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26137     +     _BRANCH_ =    1;
26138     +    END;
26139     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26140     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26141     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26142     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26143     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
26144     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26145     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26146     +
26147     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26148     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -134294.6532;
26149     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26150     +      END;
MPRINT(EM_DIAGRAM):   END;
26151     +
MPRINT(EM_DIAGRAM):   END;
26152     +    IF _BRANCH_ GT 0 THEN DO;
26153     +       _ARB_F_ + -134294.6532;
MPRINT(EM_DIAGRAM):   ********** LEAF 59 NODE 422 ***************;
26154     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26155     +    END;
26156     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26157     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26158     +********** LEAF    59  NODE   422 ***************;
26159     +IF _ARB_BADF_ EQ 0 THEN DO;
26160     +
26161     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26162     +  _ARBFMT_19 = PUT( Age_group , $19.);
26163     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26164     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26165     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26166     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26167     +
26168     +  IF _BRANCH_ GT 0 THEN DO;
26169     +
26170     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26171     +    _ARBFMT_10 = PUT( Date , $10.);
26172     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' , '2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26173     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
26174     +      '2011' ) THEN DO;
26175     +       _BRANCH_ =    1;
26176     +      END;
26177     +    IF _BRANCH_ LT 0 THEN DO;
26178     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' ,'2011' ,'2005' , '2013' ,'2001' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
26179     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26180     +        '2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' ,'2011' ,'2005' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 41430.511253;
26181     +        '2013' ,'2001' ,'2003' ,'2008' ,'2009' ,'2012'
MPRINT(EM_DIAGRAM):   END;
26182     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26183     +    END;
MPRINT(EM_DIAGRAM):   END;
26184     +    IF _BRANCH_ GT 0 THEN DO;
26185     +       _ARB_F_ + 41430.511253;
MPRINT(EM_DIAGRAM):   ********** LEAF 60 NODE 423 ***************;
26186     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26187     +    END;
26188     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26189     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26190     +********** LEAF    60  NODE   423 ***************;
26191     +IF _ARB_BADF_ EQ 0 THEN DO;
26192     +
26193     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26194     +  _ARBFMT_19 = PUT( Age_group , $19.);
26195     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26196     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26197     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26198     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26199     +
26200     +  IF _BRANCH_ GT 0 THEN DO;
26201     +
26202     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26203     +    _ARBFMT_10 = PUT( Date , $10.);
26204     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2005' ,'2013' ,'2001' ,'2003' ,'2008' ,'2009' , '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26205     +      IF _ARBFMT_10 IN ('2005' ,'2013' ,'2001' ,'2003' ,'2008' ,'2009' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26206     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 227158.11226;
26207     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26208     +      END;
MPRINT(EM_DIAGRAM):   END;
26209     +
MPRINT(EM_DIAGRAM):   END;
26210     +    IF _BRANCH_ GT 0 THEN DO;
26211     +       _ARB_F_ + 227158.11226;
MPRINT(EM_DIAGRAM):   ********** LEAF 61 NODE 427 ***************;
26212     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26213     +    END;
26214     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26215     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26216     +********** LEAF    61  NODE   427 ***************;
26217     +IF _ARB_BADF_ EQ 0 THEN DO;
26218     +
26219     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26220     +  _ARBFMT_19 = PUT( Age_group , $19.);
26221     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26222     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
26223     +     _BRANCH_ =    1;
26224     +    END;
26225     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44' ) THEN _BRANCH_ = 1;
26226     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26227     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26228     +      '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26229     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26230     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26231     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26232     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26233     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26234     +      IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26235     +       _BRANCH_ =    1;
26236     +      END;
26237     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26238     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26239     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -91466.80351;
26240     +        '16 TO 24' ,'65+' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   END;
26241     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26242     +    END;
MPRINT(EM_DIAGRAM):   END;
26243     +    IF _BRANCH_ GT 0 THEN DO;
26244     +       _ARB_F_ + -91466.80351;
MPRINT(EM_DIAGRAM):   ********** LEAF 62 NODE 428 ***************;
26245     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26246     +    END;
26247     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26248     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26249     +********** LEAF    62  NODE   428 ***************;
26250     +IF _ARB_BADF_ EQ 0 THEN DO;
26251     +
26252     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26253     +  _ARBFMT_19 = PUT( Age_group , $19.);
26254     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26255     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
26256     +     _BRANCH_ =    1;
26257     +    END;
26258     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44' ) THEN _BRANCH_ = 1;
26259     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26260     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26261     +      '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26262     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
26263     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26264     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26265     +
26266     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26267     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 44527.279072;
26268     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26269     +      END;
MPRINT(EM_DIAGRAM):   END;
26270     +
MPRINT(EM_DIAGRAM):   END;
26271     +    IF _BRANCH_ GT 0 THEN DO;
26272     +       _ARB_F_ + 44527.279072;
MPRINT(EM_DIAGRAM):   ********** LEAF 63 NODE 426 ***************;
26273     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26274     +    END;
26275     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26276     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26277     +********** LEAF    63  NODE   426 ***************;
26278     +IF _ARB_BADF_ EQ 0 THEN DO;
26279     +
26280     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26281     +  _ARBFMT_19 = PUT( Age_group , $19.);
26282     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26283     +    IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 218378.32652;
26284     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26285     +    END;
MPRINT(EM_DIAGRAM):   END;
26286     +
26287     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ********** LEAF 64 NODE 432 ***************;
26288     +     _ARB_F_ + 218378.32652;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26289     +    END;
26290     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26291     +
26292     +********** LEAF    64  NODE   432 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41118.3015 THEN DO;
26293     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26294     +
MPRINT(EM_DIAGRAM):   END;
26295     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26296     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
26297     +    Population_in_thousands  <           41118.3015 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26298     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26299     +    END;
26300     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26301     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26302     +  END;
26303     +  IF _BRANCH_ GT 0 THEN DO;
26304     +
26305     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26306     +    _ARBFMT_10 = PUT( Date , $10.);
26307     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' , '2002' ,'2003' ,'2008' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26308     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
26309     +      '2002' ,'2003' ,'2008' ,'2011' ) THEN DO;
26310     +       _BRANCH_ =    1;
26311     +      END;
26312     +    IF _BRANCH_ LT 0 THEN DO;
26313     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' ,'2002' ,'2003' , '2008' ,'2011' ,'2006' ,'2001' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
26314     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26315     +        '2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' ,'2002' ,'2003' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -53564.22704;
26316     +        '2008' ,'2011' ,'2006' ,'2001' ,'2009' ,'2012'
MPRINT(EM_DIAGRAM):   END;
26317     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26318     +    END;
MPRINT(EM_DIAGRAM):   END;
26319     +    IF _BRANCH_ GT 0 THEN DO;
26320     +       _ARB_F_ + -53564.22704;
MPRINT(EM_DIAGRAM):   ********** LEAF 65 NODE 433 ***************;
26321     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26322     +    END;
26323     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26324     +
26325     +********** LEAF    65  NODE   433 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41118.3015 THEN DO;
26326     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26327     +
MPRINT(EM_DIAGRAM):   END;
26328     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26329     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
26330     +    Population_in_thousands  <           41118.3015 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26331     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26332     +    END;
26333     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26334     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26335     +  END;
26336     +  IF _BRANCH_ GT 0 THEN DO;
26337     +
26338     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26339     +    _ARBFMT_10 = PUT( Date , $10.);
26340     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2006' ,'2001' ,'2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26341     +      IF _ARBFMT_10 IN ('2006' ,'2001' ,'2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -152869.5536;
26342     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26343     +      END;
MPRINT(EM_DIAGRAM):   END;
26344     +
MPRINT(EM_DIAGRAM):   END;
26345     +    IF _BRANCH_ GT 0 THEN DO;
26346     +       _ARB_F_ + -152869.5536;
MPRINT(EM_DIAGRAM):   ********** LEAF 66 NODE 434 ***************;
26347     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26348     +    END;
26349     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26350     +
26351     +********** LEAF    66  NODE   434 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41118.3015 <= Population_in_thousands THEN DO;
26352     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26353     +
MPRINT(EM_DIAGRAM):   END;
26354     +  _BRANCH_ = -1;
26355     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26356     +              41118.3015 <= Population_in_thousands  THEN DO;
26357     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26358     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26359     +
26360     +  IF _BRANCH_ GT 0 THEN DO;
26361     +
26362     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26363     +    _ARBFMT_10 = PUT( Date , $10.);
26364     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' , '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26365     +      IF _ARBFMT_10 IN ('2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26366     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 240898.87435;
26367     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
26368     +      END;
MPRINT(EM_DIAGRAM):   END;
26369     +
MPRINT(EM_DIAGRAM):   END;
26370     +    IF _BRANCH_ GT 0 THEN DO;
26371     +       _ARB_F_ + 240898.87435;
MPRINT(EM_DIAGRAM):   ********** LEAF 67 NODE 435 ***************;
26372     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26373     +    END;
26374     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26375     +
26376     +********** LEAF    67  NODE   435 ***************;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41118.3015 <= Population_in_thousands THEN DO;
26377     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26378     +
MPRINT(EM_DIAGRAM):   END;
26379     +  _BRANCH_ = -1;
26380     +    IF  NOT MISSING(Population_in_thousands ) AND
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26381     +              41118.3015 <= Population_in_thousands  THEN DO;
26382     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26383     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26384     +
26385     +  IF _BRANCH_ GT 0 THEN DO;
26386     +
26387     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26388     +    _ARBFMT_10 = PUT( Date , $10.);
26389     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2006' ,'2007' ,'2013' ,'2001' ,'2002' ,'2003' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26390     +      IF _ARBFMT_10 IN ('2006' ,'2007' ,'2013' ,'2001' ,'2002' ,'2003' ) THEN
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
26391     +        DO;
26392     +       _BRANCH_ =    2;
26393     +      END;
26394     +    IF _BRANCH_ LT 0 THEN DO;
26395     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012' ,'2006' , '2007' ,'2013' ,'2001' ,'2002' ,'2003' ) THEN _BRANCH_ = 2;
26396     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26397     +        '2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012' ,'2006' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 8044.3095984;
26398     +        '2007' ,'2013' ,'2001' ,'2002' ,'2003'
MPRINT(EM_DIAGRAM):   END;
26399     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26400     +    END;
MPRINT(EM_DIAGRAM):   END;
26401     +    IF _BRANCH_ GT 0 THEN DO;
26402     +       _ARB_F_ + 8044.3095984;
MPRINT(EM_DIAGRAM):   ********** LEAF 68 NODE 439 ***************;
26403     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26404     +    END;
26405     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26406     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26407     +********** LEAF    68  NODE   439 ***************;
26408     +IF _ARB_BADF_ EQ 0 THEN DO;
26409     +
26410     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26411     +  _ARBFMT_19 = PUT( Age_group , $19.);
26412     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26413     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26414     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26415     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26416     +
26417     +  IF _BRANCH_ GT 0 THEN DO;
26418     +
26419     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26420     +    _ARBFMT_10 = PUT( Date , $10.);
26421     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' , '2013' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26422     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
26423     +      '2013' ,'2011' ) THEN DO;
26424     +       _BRANCH_ =    1;
26425     +      END;
26426     +    IF _BRANCH_ LT 0 THEN DO;
26427     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2011' , '2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
26428     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26429     +        '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2011' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + -116749.6835;
26430     +        '2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012'
MPRINT(EM_DIAGRAM):   END;
26431     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26432     +    END;
MPRINT(EM_DIAGRAM):   END;
26433     +    IF _BRANCH_ GT 0 THEN DO;
26434     +       _ARB_F_ + -116749.6835;
MPRINT(EM_DIAGRAM):   ********** LEAF 69 NODE 440 ***************;
26435     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26436     +    END;
26437     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26438     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26439     +********** LEAF    69  NODE   440 ***************;
26440     +IF _ARB_BADF_ EQ 0 THEN DO;
26441     +
26442     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26443     +  _ARBFMT_19 = PUT( Age_group , $19.);
26444     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26445     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26446     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26447     +    END;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26448     +
26449     +  IF _BRANCH_ GT 0 THEN DO;
26450     +
26451     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26452     +    _ARBFMT_10 = PUT( Date , $10.);
26453     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26454     +      IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26455     +        DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -73884.77498;
26456     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26457     +      END;
MPRINT(EM_DIAGRAM):   END;
26458     +
MPRINT(EM_DIAGRAM):   END;
26459     +    IF _BRANCH_ GT 0 THEN DO;
26460     +       _ARB_F_ + -73884.77498;
MPRINT(EM_DIAGRAM):   ********** LEAF 70 NODE 441 ***************;
26461     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26462     +    END;
26463     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26464     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26465     +********** LEAF    70  NODE   441 ***************;
26466     +IF _ARB_BADF_ EQ 0 THEN DO;
26467     +
26468     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26469     +  _ARBFMT_19 = PUT( Age_group , $19.);
26470     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26471     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26472     +     _BRANCH_ =    2;
26473     +    END;
26474     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
26475     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26476     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26477     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26478     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26479     +  END;
26480     +  IF _BRANCH_ GT 0 THEN DO;
26481     +
26482     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26483     +    _ARBFMT_10 = PUT( Date , $10.);
26484     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2006' ,'2010' ,'2013' ,'2001' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26485     +      IF _ARBFMT_10 IN ('2000' ,'2006' ,'2010' ,'2013' ,'2001' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -72104.85093;
26486     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
26487     +      END;
MPRINT(EM_DIAGRAM):   END;
26488     +
MPRINT(EM_DIAGRAM):   END;
26489     +    IF _BRANCH_ GT 0 THEN DO;
26490     +       _ARB_F_ + -72104.85093;
MPRINT(EM_DIAGRAM):   ********** LEAF 71 NODE 442 ***************;
26491     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26492     +    END;
26493     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26494     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26495     +********** LEAF    71  NODE   442 ***************;
26496     +IF _ARB_BADF_ EQ 0 THEN DO;
26497     +
26498     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26499     +  _ARBFMT_19 = PUT( Age_group , $19.);
26500     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26501     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26502     +     _BRANCH_ =    2;
26503     +    END;
26504     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
26505     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26506     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26507     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26508     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26509     +  END;
26510     +  IF _BRANCH_ GT 0 THEN DO;
26511     +
26512     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26513     +    _ARBFMT_10 = PUT( Date , $10.);
26514     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' , '2009' ,'2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26515     +      IF _ARBFMT_10 IN ('2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
26516     +      '2009' ,'2011' ,'2012' ) THEN DO;
26517     +       _BRANCH_ =    2;
26518     +      END;
26519     +    IF _BRANCH_ LT 0 THEN DO;
26520     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2006' ,'2010' ,'2013' ,'2001' ,'2004' ,'2005' ,'2007' , '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 2;
26521     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26522     +        '2000' ,'2006' ,'2010' ,'2013' ,'2001' ,'2004' ,'2005' ,'2007' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 124142.63077;
26523     +        '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012'
MPRINT(EM_DIAGRAM):   END;
26524     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26525     +    END;
MPRINT(EM_DIAGRAM):   END;
26526     +    IF _BRANCH_ GT 0 THEN DO;
26527     +       _ARB_F_ + 124142.63077;
MPRINT(EM_DIAGRAM):   ********** LEAF 72 NODE 446 ***************;
26528     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26529     +    END;
26530     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26531     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26532     +********** LEAF    72  NODE   446 ***************;
26533     +IF _ARB_BADF_ EQ 0 THEN DO;
26534     +
26535     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26536     +  _ARBFMT_19 = PUT( Age_group , $19.);
26537     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26538     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26539     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26540     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
26541     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26542     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26543     +
26544     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26545     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -60796.98537;
26546     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   END;
26547     +      END;
MPRINT(EM_DIAGRAM):   END;
26548     +
MPRINT(EM_DIAGRAM):   END;
26549     +    IF _BRANCH_ GT 0 THEN DO;
26550     +       _ARB_F_ + -60796.98537;
MPRINT(EM_DIAGRAM):   ********** LEAF 73 NODE 447 ***************;
26551     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26552     +    END;
26553     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26554     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26555     +********** LEAF    73  NODE   447 ***************;
26556     +IF _ARB_BADF_ EQ 0 THEN DO;
26557     +
26558     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26559     +  _ARBFMT_19 = PUT( Age_group , $19.);
26560     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26561     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26562     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26563     +    END;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
26564     +
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26565     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   END;
26566     +
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26567     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26568     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
26569     +       _BRANCH_ =    2;
26570     +      END;
26571     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
26572     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26573     +      ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -106295.8826;
26574     +        '16 TO 24' ,'65+'
MPRINT(EM_DIAGRAM):   END;
26575     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26576     +    END;
MPRINT(EM_DIAGRAM):   END;
26577     +    IF _BRANCH_ GT 0 THEN DO;
26578     +       _ARB_F_ + -106295.8826;
MPRINT(EM_DIAGRAM):   ********** LEAF 74 NODE 448 ***************;
26579     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26580     +    END;
26581     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26582     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26583     +********** LEAF    74  NODE   448 ***************;
26584     +IF _ARB_BADF_ EQ 0 THEN DO;
26585     +
26586     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26587     +  _ARBFMT_19 = PUT( Age_group , $19.);
26588     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26589     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26590     +     _BRANCH_ =    2;
26591     +    END;
26592     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
26593     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26594     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26595     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26596     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26597     +  END;
26598     +  IF _BRANCH_ GT 0 THEN DO;
26599     +
26600     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26601     +    _ARBFMT_10 = PUT( Date , $10.);
26602     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' , '2003' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26603     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' ,
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
26604     +      '2003' ) THEN DO;
26605     +       _BRANCH_ =    1;
26606     +      END;
26607     +    IF _BRANCH_ LT 0 THEN DO;
26608     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' ,'2003' ,'2005' , '2007' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 1;
26609     +      ELSE IF _ARBFMT_10 NOTIN (
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26610     +        '2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' ,'2003' ,'2005' ,
MPRINT(EM_DIAGRAM):   _ARB_F_ + 6316.0438229;
26611     +        '2007' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012'
MPRINT(EM_DIAGRAM):   END;
26612     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   END;
26613     +    END;
MPRINT(EM_DIAGRAM):   END;
26614     +    IF _BRANCH_ GT 0 THEN DO;
26615     +       _ARB_F_ + 6316.0438229;
MPRINT(EM_DIAGRAM):   ********** LEAF 75 NODE 449 ***************;
26616     +      END;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26617     +    END;
26618     +  END;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26619     +
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26620     +********** LEAF    75  NODE   449 ***************;
26621     +IF _ARB_BADF_ EQ 0 THEN DO;
26622     +
26623     +  _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
26624     +  _ARBFMT_19 = PUT( Age_group , $19.);
26625     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26626     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26627     +     _BRANCH_ =    2;
26628     +    END;
26629     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
26630     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26631     +    ELSE IF _ARBFMT_19 NOTIN (
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26632     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26633     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26634     +  END;
26635     +  IF _BRANCH_ GT 0 THEN DO;
26636     +
26637     +    _BRANCH_ = -1;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
26638     +    _ARBFMT_10 = PUT( Date , $10.);
26639     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2005' ,'2007' ,'2010' ,'2008' ,'2009' ,'2011' , '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   END;
26640     +      IF _ARBFMT_10 IN ('2005' ,'2007' ,'2010' ,'2008' ,'2009' ,'2011' ,
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26641     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 164425.54517;
26642     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   END;
26643     +      END;
MPRINT(EM_DIAGRAM):   END;
26644     +
MPRINT(EM_DIAGRAM):   END;
26645     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _ARB_F_;
26646     +       _ARB_F_ + 164425.54517;
26647     +      END;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
26648     +    END;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = .;
26649     +  END;
26650     +P_Sum_Labor_Force_Pop  = _ARB_F_;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
26651     +
26652     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
26653     +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
26654     +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ****************************************************************;
26655     +
26656     +****************************************************************;
26657     +******          END OF DECISION TREE SCORING CODE         ******;
26658     +****************************************************************;
26659     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
26660      run;
 
NOTE: DATA STEP view saved on file EMWS1.BOOST_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
26661      quit;
26662      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
26663      filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
26664      *------------------------------------------------------------*;
26665      * Boost: Scoring VALIDATE data;
26666      *------------------------------------------------------------*;
26667      data EMWS1.Boost_VALIDATE
26668      / view=EMWS1.Boost_VALIDATE
26669      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_VALIDATE / view=EMWS1.Boost_VALIDATE ;
26670      set EMWS1.Part_VALIDATE
26671      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_VALIDATE ;
26672      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMFLOWSCORE.sas.
26673     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
26674     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
26675     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
26676     +
26677     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
26678     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
26679     +
26680     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
26681     +label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label P_Sum_Labor_Force_Pop = 'Predicted: Sum_Labor_Force_Pop' ;
26682     +      P_Sum_Labor_Force_Pop  = 0;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = 0;
26683     +label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
MPRINT(EM_DIAGRAM):   label R_Sum_Labor_Force_Pop = 'Residual: Sum_Labor_Force_Pop' ;
26684     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
26685     +
26686     +
26687     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
26688     +LENGTH _ARBFMT_19 $     19; DROP _ARBFMT_19;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_19 $ 19;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_19;
26689     +_ARBFMT_19 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = ' ';
26690     +LENGTH _ARBFMT_10 $     10; DROP _ARBFMT_10;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_10 $ 10;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_10;
26691     +_ARBFMT_10 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = ' ';
26692     +
26693     +
26694     + DROP _ARB_F_;
MPRINT(EM_DIAGRAM):   DROP _ARB_F_;
26695     + DROP _ARB_BADF_;
MPRINT(EM_DIAGRAM):   DROP _ARB_BADF_;
26696     +     _ARB_F_ = 6872727.8912;
MPRINT(EM_DIAGRAM):   _ARB_F_ = 6872727.8912;
26697     +     _ARB_BADF_ = 0;
MPRINT(EM_DIAGRAM):   _ARB_BADF_ = 0;
26698     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
26699     + DROP _ARB_P_;
MPRINT(EM_DIAGRAM):   DROP _ARB_P_;
26700     + _ARB_P_ = 0;
MPRINT(EM_DIAGRAM):   _ARB_P_ = 0;
26701     + DROP _ARB_PPATH_; _ARB_PPATH_ = 1;
MPRINT(EM_DIAGRAM):   DROP _ARB_PPATH_;
MPRINT(EM_DIAGRAM):   _ARB_PPATH_ = 1;
26702     +
26703     +********** LEAF     1  NODE   322 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 1 NODE 322 ***************;
26704     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26705     +
26706     +   DROP _BRANCH_;
MPRINT(EM_DIAGRAM):   DROP _BRANCH_;
26707     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26708     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26709     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26710     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26711     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26712     +    END;
MPRINT(EM_DIAGRAM):   END;
26713     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26714     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26715     +    ELSE IF _ARBFMT_19 NOTIN (
26716     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
26717     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26718     +  END;
MPRINT(EM_DIAGRAM):   END;
26719     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26720     +
26721     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26722     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
26723     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26724     +      END;
MPRINT(EM_DIAGRAM):   END;
26725     +
26726     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26727     +       _ARB_F_ + -312211.6126;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -312211.6126;
26728     +      END;
MPRINT(EM_DIAGRAM):   END;
26729     +    END;
MPRINT(EM_DIAGRAM):   END;
26730     +  END;
MPRINT(EM_DIAGRAM):   END;
26731     +
26732     +********** LEAF     2  NODE   323 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 2 NODE 323 ***************;
26733     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26734     +
26735     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26736     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26737     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26738     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26739     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26740     +    END;
MPRINT(EM_DIAGRAM):   END;
26741     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26742     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26743     +    ELSE IF _ARBFMT_19 NOTIN (
26744     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
26745     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26746     +  END;
MPRINT(EM_DIAGRAM):   END;
26747     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26748     +
26749     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26750     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
26751     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26752     +      END;
MPRINT(EM_DIAGRAM):   END;
26753     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26754     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26755     +      ELSE IF _ARBFMT_19 NOTIN (
26756     +        '16 TO 24' ,'65+'
26757     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
26758     +    END;
MPRINT(EM_DIAGRAM):   END;
26759     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26760     +       _ARB_F_ + -578904.1022;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -578904.1022;
26761     +      END;
MPRINT(EM_DIAGRAM):   END;
26762     +    END;
MPRINT(EM_DIAGRAM):   END;
26763     +  END;
MPRINT(EM_DIAGRAM):   END;
26764     +
26765     +********** LEAF     3  NODE   324 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 3 NODE 324 ***************;
26766     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26767     +
26768     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26769     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26770     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26771     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26772     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26773     +    END;
MPRINT(EM_DIAGRAM):   END;
26774     +
26775     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26776     +
26777     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26778     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
26779     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26780     +      END;
MPRINT(EM_DIAGRAM):   END;
26781     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26782     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
26783     +      ELSE IF _ARBFMT_19 NOTIN (
26784     +        '25 TO 44' ,'45 TO 64'
26785     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
26786     +    END;
MPRINT(EM_DIAGRAM):   END;
26787     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26788     +       _ARB_F_ + 626788.38735;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 626788.38735;
26789     +      END;
MPRINT(EM_DIAGRAM):   END;
26790     +    END;
MPRINT(EM_DIAGRAM):   END;
26791     +  END;
MPRINT(EM_DIAGRAM):   END;
26792     +
26793     +********** LEAF     4  NODE   325 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 4 NODE 325 ***************;
26794     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26795     +
26796     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26797     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26798     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26799     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26800     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26801     +    END;
MPRINT(EM_DIAGRAM):   END;
26802     +
26803     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26804     +
26805     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26806     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
26807     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26808     +      END;
MPRINT(EM_DIAGRAM):   END;
26809     +
26810     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26811     +       _ARB_F_ + 319834.35374;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 319834.35374;
26812     +      END;
MPRINT(EM_DIAGRAM):   END;
26813     +    END;
MPRINT(EM_DIAGRAM):   END;
26814     +  END;
MPRINT(EM_DIAGRAM):   END;
26815     +
26816     +********** LEAF     5  NODE   329 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 5 NODE 329 ***************;
26817     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26818     +
26819     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26820     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26821     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26822     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26823     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26824     +    END;
MPRINT(EM_DIAGRAM):   END;
26825     +
26826     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26827     +
26828     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26829     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
26830     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26831     +      END;
MPRINT(EM_DIAGRAM):   END;
26832     +
26833     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26834     +       _ARB_F_ + -264208.9612;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -264208.9612;
26835     +      END;
MPRINT(EM_DIAGRAM):   END;
26836     +    END;
MPRINT(EM_DIAGRAM):   END;
26837     +  END;
MPRINT(EM_DIAGRAM):   END;
26838     +
26839     +********** LEAF     6  NODE   330 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 6 NODE 330 ***************;
26840     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26841     +
26842     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26843     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26844     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26845     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26846     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26847     +    END;
MPRINT(EM_DIAGRAM):   END;
26848     +
26849     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26850     +
26851     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26852     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
26853     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26854     +      END;
MPRINT(EM_DIAGRAM):   END;
26855     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26856     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26857     +      ELSE IF _ARBFMT_19 NOTIN (
26858     +        '16 TO 24' ,'65+'
26859     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
26860     +    END;
MPRINT(EM_DIAGRAM):   END;
26861     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26862     +       _ARB_F_ + -522183.4098;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -522183.4098;
26863     +      END;
MPRINT(EM_DIAGRAM):   END;
26864     +    END;
MPRINT(EM_DIAGRAM):   END;
26865     +  END;
MPRINT(EM_DIAGRAM):   END;
26866     +
26867     +********** LEAF     7  NODE   331 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 7 NODE 331 ***************;
26868     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26869     +
26870     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26871     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26872     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26873     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26874     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26875     +    END;
MPRINT(EM_DIAGRAM):   END;
26876     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26877     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26878     +    ELSE IF _ARBFMT_19 NOTIN (
26879     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
26880     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
26881     +  END;
MPRINT(EM_DIAGRAM):   END;
26882     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26883     +
26884     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26885     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26886     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26887     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,
26888     +      '2013' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' , '2013' ) THEN DO;
26889     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26890     +      END;
MPRINT(EM_DIAGRAM):   END;
26891     +
26892     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26893     +       _ARB_F_ + 267694.88335;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 267694.88335;
26894     +      END;
MPRINT(EM_DIAGRAM):   END;
26895     +    END;
MPRINT(EM_DIAGRAM):   END;
26896     +  END;
MPRINT(EM_DIAGRAM):   END;
26897     +
26898     +********** LEAF     8  NODE   332 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 8 NODE 332 ***************;
26899     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26900     +
26901     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26902     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26903     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26904     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26905     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26906     +    END;
MPRINT(EM_DIAGRAM):   END;
26907     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26908     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26909     +    ELSE IF _ARBFMT_19 NOTIN (
26910     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
26911     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
26912     +  END;
MPRINT(EM_DIAGRAM):   END;
26913     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26914     +
26915     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26916     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
26917     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26918     +      IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2011' ,
26919     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2011' , '2012' ) THEN DO;
26920     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26921     +      END;
MPRINT(EM_DIAGRAM):   END;
26922     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26923     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
26924     +      ELSE IF _ARBFMT_10 NOTIN (
26925     +        '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2001' ,
26926     +        '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012'
26927     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2001' , '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 2;
26928     +    END;
MPRINT(EM_DIAGRAM):   END;
26929     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26930     +       _ARB_F_ + 497411.42508;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 497411.42508;
26931     +      END;
MPRINT(EM_DIAGRAM):   END;
26932     +    END;
MPRINT(EM_DIAGRAM):   END;
26933     +  END;
MPRINT(EM_DIAGRAM):   END;
26934     +
26935     +********** LEAF     9  NODE   336 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 9 NODE 336 ***************;
26936     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26937     +
26938     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26939     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26940     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26941     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26942     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26943     +    END;
MPRINT(EM_DIAGRAM):   END;
26944     +
26945     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26946     +
26947     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26948     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
26949     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26950     +      END;
MPRINT(EM_DIAGRAM):   END;
26951     +
26952     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26953     +       _ARB_F_ + -248511.9817;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -248511.9817;
26954     +      END;
MPRINT(EM_DIAGRAM):   END;
26955     +    END;
MPRINT(EM_DIAGRAM):   END;
26956     +  END;
MPRINT(EM_DIAGRAM):   END;
26957     +
26958     +********** LEAF    10  NODE   337 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 10 NODE 337 ***************;
26959     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26960     +
26961     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26962     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26963     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26964     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
26965     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
26966     +    END;
MPRINT(EM_DIAGRAM):   END;
26967     +
26968     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26969     +
26970     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26971     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
26972     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26973     +      END;
MPRINT(EM_DIAGRAM):   END;
26974     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26975     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26976     +      ELSE IF _ARBFMT_19 NOTIN (
26977     +        '16 TO 24' ,'65+'
26978     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
26979     +    END;
MPRINT(EM_DIAGRAM):   END;
26980     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
26981     +       _ARB_F_ + -465556.511;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -465556.511;
26982     +      END;
MPRINT(EM_DIAGRAM):   END;
26983     +    END;
MPRINT(EM_DIAGRAM):   END;
26984     +  END;
MPRINT(EM_DIAGRAM):   END;
26985     +
26986     +********** LEAF    11  NODE   338 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 11 NODE 338 ***************;
26987     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
26988     +
26989     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
26990     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
26991     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
26992     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
26993     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
26994     +    END;
MPRINT(EM_DIAGRAM):   END;
26995     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
26996     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
26997     +    ELSE IF _ARBFMT_19 NOTIN (
26998     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
26999     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27000     +  END;
MPRINT(EM_DIAGRAM):   END;
27001     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27002     +
27003     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27004     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
27005     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27006     +      END;
MPRINT(EM_DIAGRAM):   END;
27007     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27008     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27009     +      ELSE IF _ARBFMT_19 NOTIN (
27010     +        '25 TO 44' ,'45 TO 64'
27011     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27012     +    END;
MPRINT(EM_DIAGRAM):   END;
27013     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27014     +       _ARB_F_ + 506091.47323;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 506091.47323;
27015     +      END;
MPRINT(EM_DIAGRAM):   END;
27016     +    END;
MPRINT(EM_DIAGRAM):   END;
27017     +  END;
MPRINT(EM_DIAGRAM):   END;
27018     +
27019     +********** LEAF    12  NODE   339 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 12 NODE 339 ***************;
27020     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27021     +
27022     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27023     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27024     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27025     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27026     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27027     +    END;
MPRINT(EM_DIAGRAM):   END;
27028     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27029     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27030     +    ELSE IF _ARBFMT_19 NOTIN (
27031     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27032     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27033     +  END;
MPRINT(EM_DIAGRAM):   END;
27034     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27035     +
27036     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27037     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
27038     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27039     +      END;
MPRINT(EM_DIAGRAM):   END;
27040     +
27041     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27042     +       _ARB_F_ + 225221.03549;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 225221.03549;
27043     +      END;
MPRINT(EM_DIAGRAM):   END;
27044     +    END;
MPRINT(EM_DIAGRAM):   END;
27045     +  END;
MPRINT(EM_DIAGRAM):   END;
27046     +
27047     +********** LEAF    13  NODE   343 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 13 NODE 343 ***************;
27048     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27049     +
27050     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27051     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27052     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27053     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27054     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27055     +    END;
MPRINT(EM_DIAGRAM):   END;
27056     +
27057     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27058     +
27059     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27060     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27061     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27062     +      END;
MPRINT(EM_DIAGRAM):   END;
27063     +
27064     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27065     +       _ARB_F_ + -228234.4116;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -228234.4116;
27066     +      END;
MPRINT(EM_DIAGRAM):   END;
27067     +    END;
MPRINT(EM_DIAGRAM):   END;
27068     +  END;
MPRINT(EM_DIAGRAM):   END;
27069     +
27070     +********** LEAF    14  NODE   344 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 14 NODE 344 ***************;
27071     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27072     +
27073     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27074     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27075     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27076     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27077     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27078     +    END;
MPRINT(EM_DIAGRAM):   END;
27079     +
27080     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27081     +
27082     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27083     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27084     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27085     +      END;
MPRINT(EM_DIAGRAM):   END;
27086     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27087     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27088     +      ELSE IF _ARBFMT_19 NOTIN (
27089     +        '16 TO 24' ,'65+'
27090     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
27091     +    END;
MPRINT(EM_DIAGRAM):   END;
27092     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27093     +       _ARB_F_ + -425478.5017;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -425478.5017;
27094     +      END;
MPRINT(EM_DIAGRAM):   END;
27095     +    END;
MPRINT(EM_DIAGRAM):   END;
27096     +  END;
MPRINT(EM_DIAGRAM):   END;
27097     +
27098     +********** LEAF    15  NODE   345 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 15 NODE 345 ***************;
27099     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27100     +
27101     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27102     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27103     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27104     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27105     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27106     +    END;
MPRINT(EM_DIAGRAM):   END;
27107     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27108     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27109     +    ELSE IF _ARBFMT_19 NOTIN (
27110     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27111     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27112     +  END;
MPRINT(EM_DIAGRAM):   END;
27113     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27114     +
27115     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27116     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
27117     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27118     +      END;
MPRINT(EM_DIAGRAM):   END;
27119     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27120     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27121     +      ELSE IF _ARBFMT_19 NOTIN (
27122     +        '25 TO 44' ,'45 TO 64'
27123     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27124     +    END;
MPRINT(EM_DIAGRAM):   END;
27125     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27126     +       _ARB_F_ + 449842.45959;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 449842.45959;
27127     +      END;
MPRINT(EM_DIAGRAM):   END;
27128     +    END;
MPRINT(EM_DIAGRAM):   END;
27129     +  END;
MPRINT(EM_DIAGRAM):   END;
27130     +
27131     +********** LEAF    16  NODE   346 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 16 NODE 346 ***************;
27132     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27133     +
27134     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27135     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27136     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27137     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27138     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27139     +    END;
MPRINT(EM_DIAGRAM):   END;
27140     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27141     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27142     +    ELSE IF _ARBFMT_19 NOTIN (
27143     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27144     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27145     +  END;
MPRINT(EM_DIAGRAM):   END;
27146     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27147     +
27148     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27149     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
27150     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27151     +      END;
MPRINT(EM_DIAGRAM):   END;
27152     +
27153     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27154     +       _ARB_F_ + 204284.36406;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 204284.36406;
27155     +      END;
MPRINT(EM_DIAGRAM):   END;
27156     +    END;
MPRINT(EM_DIAGRAM):   END;
27157     +  END;
MPRINT(EM_DIAGRAM):   END;
27158     +
27159     +********** LEAF    17  NODE   350 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 17 NODE 350 ***************;
27160     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27161     +
27162     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27163     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27164     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27165     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27166     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27167     +    END;
MPRINT(EM_DIAGRAM):   END;
27168     +
27169     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27170     +
27171     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27172     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27173     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27174     +      END;
MPRINT(EM_DIAGRAM):   END;
27175     +
27176     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27177     +       _ARB_F_ + -208056.0924;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -208056.0924;
27178     +      END;
MPRINT(EM_DIAGRAM):   END;
27179     +    END;
MPRINT(EM_DIAGRAM):   END;
27180     +  END;
MPRINT(EM_DIAGRAM):   END;
27181     +
27182     +********** LEAF    18  NODE   351 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 18 NODE 351 ***************;
27183     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27184     +
27185     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27186     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27187     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27188     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27189     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27190     +    END;
MPRINT(EM_DIAGRAM):   END;
27191     +
27192     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27193     +
27194     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27195     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27196     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27197     +      END;
MPRINT(EM_DIAGRAM):   END;
27198     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27199     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27200     +      ELSE IF _ARBFMT_19 NOTIN (
27201     +        '16 TO 24' ,'65+'
27202     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
27203     +    END;
MPRINT(EM_DIAGRAM):   END;
27204     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27205     +       _ARB_F_ + -372918.4314;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -372918.4314;
27206     +      END;
MPRINT(EM_DIAGRAM):   END;
27207     +    END;
MPRINT(EM_DIAGRAM):   END;
27208     +  END;
MPRINT(EM_DIAGRAM):   END;
27209     +
27210     +********** LEAF    19  NODE   352 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 19 NODE 352 ***************;
27211     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27212     +
27213     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27214     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27215     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27216     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27217     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27218     +    END;
MPRINT(EM_DIAGRAM):   END;
27219     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27220     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27221     +    ELSE IF _ARBFMT_19 NOTIN (
27222     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27223     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27224     +  END;
MPRINT(EM_DIAGRAM):   END;
27225     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27226     +
27227     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27228     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
27229     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27230     +      END;
MPRINT(EM_DIAGRAM):   END;
27231     +
27232     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27233     +       _ARB_F_ + 401957.74288;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 401957.74288;
27234     +      END;
MPRINT(EM_DIAGRAM):   END;
27235     +    END;
MPRINT(EM_DIAGRAM):   END;
27236     +  END;
MPRINT(EM_DIAGRAM):   END;
27237     +
27238     +********** LEAF    20  NODE   353 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 20 NODE 353 ***************;
27239     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27240     +
27241     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27242     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27243     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27244     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27245     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27246     +    END;
MPRINT(EM_DIAGRAM):   END;
27247     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27248     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27249     +    ELSE IF _ARBFMT_19 NOTIN (
27250     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27251     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27252     +  END;
MPRINT(EM_DIAGRAM):   END;
27253     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27254     +
27255     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27256     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
27257     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27258     +      END;
MPRINT(EM_DIAGRAM):   END;
27259     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27260     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27261     +      ELSE IF _ARBFMT_19 NOTIN (
27262     +        '25 TO 44' ,'45 TO 64'
27263     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27264     +    END;
MPRINT(EM_DIAGRAM):   END;
27265     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27266     +       _ARB_F_ + 136366.80271;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 136366.80271;
27267     +      END;
MPRINT(EM_DIAGRAM):   END;
27268     +    END;
MPRINT(EM_DIAGRAM):   END;
27269     +  END;
MPRINT(EM_DIAGRAM):   END;
27270     +
27271     +********** LEAF    21  NODE   357 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 21 NODE 357 ***************;
27272     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27273     +
27274     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27275     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27276     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27277     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27278     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27279     +    END;
MPRINT(EM_DIAGRAM):   END;
27280     +
27281     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27282     +
27283     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27284     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27285     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27286     +      END;
MPRINT(EM_DIAGRAM):   END;
27287     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27288     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27289     +      ELSE IF _ARBFMT_19 NOTIN (
27290     +        '16 TO 24' ,'65+'
27291     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 1;
27292     +    END;
MPRINT(EM_DIAGRAM):   END;
27293     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27294     +       _ARB_F_ + -193058.7185;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -193058.7185;
27295     +      END;
MPRINT(EM_DIAGRAM):   END;
27296     +    END;
MPRINT(EM_DIAGRAM):   END;
27297     +  END;
MPRINT(EM_DIAGRAM):   END;
27298     +
27299     +********** LEAF    22  NODE   358 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 22 NODE 358 ***************;
27300     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27301     +
27302     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27303     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27304     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27305     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27306     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27307     +    END;
MPRINT(EM_DIAGRAM):   END;
27308     +
27309     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27310     +
27311     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27312     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27313     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27314     +      END;
MPRINT(EM_DIAGRAM):   END;
27315     +
27316     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27317     +       _ARB_F_ + -346652.0268;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -346652.0268;
27318     +      END;
MPRINT(EM_DIAGRAM):   END;
27319     +    END;
MPRINT(EM_DIAGRAM):   END;
27320     +  END;
MPRINT(EM_DIAGRAM):   END;
27321     +
27322     +********** LEAF    23  NODE   359 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 23 NODE 359 ***************;
27323     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27324     +
27325     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27326     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27327     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27328     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27329     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27330     +    END;
MPRINT(EM_DIAGRAM):   END;
27331     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27332     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27333     +    ELSE IF _ARBFMT_19 NOTIN (
27334     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27335     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27336     +  END;
MPRINT(EM_DIAGRAM):   END;
27337     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27338     +
27339     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27340     +      IF  NOT MISSING(Population_in_thousands ) AND
27341     +      Population_in_thousands  <           41118.3015 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41118.3015 THEN DO;
27342     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27343     +      END;
MPRINT(EM_DIAGRAM):   END;
27344     +
27345     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27346     +       _ARB_F_ + 1563.1398494;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 1563.1398494;
27347     +      END;
MPRINT(EM_DIAGRAM):   END;
27348     +    END;
MPRINT(EM_DIAGRAM):   END;
27349     +  END;
MPRINT(EM_DIAGRAM):   END;
27350     +
27351     +********** LEAF    24  NODE   360 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 24 NODE 360 ***************;
27352     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27353     +
27354     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27355     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27356     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27357     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27358     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27359     +    END;
MPRINT(EM_DIAGRAM):   END;
27360     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27361     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27362     +    ELSE IF _ARBFMT_19 NOTIN (
27363     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27364     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27365     +  END;
MPRINT(EM_DIAGRAM):   END;
27366     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27367     +
27368     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27369     +      IF  NOT MISSING(Population_in_thousands ) AND
27370     +                41118.3015 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41118.3015 <= Population_in_thousands THEN DO;
27371     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27372     +      END;
MPRINT(EM_DIAGRAM):   END;
27373     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27374     +       IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 2;
27375     +    END;
MPRINT(EM_DIAGRAM):   END;
27376     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27377     +       _ARB_F_ + 273549.85357;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 273549.85357;
27378     +      END;
MPRINT(EM_DIAGRAM):   END;
27379     +    END;
MPRINT(EM_DIAGRAM):   END;
27380     +  END;
MPRINT(EM_DIAGRAM):   END;
27381     +
27382     +********** LEAF    25  NODE   364 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 25 NODE 364 ***************;
27383     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27384     +
27385     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27386     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27387     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27388     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27389     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27390     +    END;
MPRINT(EM_DIAGRAM):   END;
27391     +
27392     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27393     +
27394     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27395     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27396     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27397     +      END;
MPRINT(EM_DIAGRAM):   END;
27398     +
27399     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27400     +       _ARB_F_ + -176482.7692;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -176482.7692;
27401     +      END;
MPRINT(EM_DIAGRAM):   END;
27402     +    END;
MPRINT(EM_DIAGRAM):   END;
27403     +  END;
MPRINT(EM_DIAGRAM):   END;
27404     +
27405     +********** LEAF    26  NODE   365 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 26 NODE 365 ***************;
27406     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27407     +
27408     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27409     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27410     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27411     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27412     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27413     +    END;
MPRINT(EM_DIAGRAM):   END;
27414     +
27415     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27416     +
27417     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27418     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27419     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27420     +      END;
MPRINT(EM_DIAGRAM):   END;
27421     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27422     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27423     +      ELSE IF _ARBFMT_19 NOTIN (
27424     +        '16 TO 24' ,'65+'
27425     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
27426     +    END;
MPRINT(EM_DIAGRAM):   END;
27427     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27428     +       _ARB_F_ + -302221.0732;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -302221.0732;
27429     +      END;
MPRINT(EM_DIAGRAM):   END;
27430     +    END;
MPRINT(EM_DIAGRAM):   END;
27431     +  END;
MPRINT(EM_DIAGRAM):   END;
27432     +
27433     +********** LEAF    27  NODE   366 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 27 NODE 366 ***************;
27434     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27435     +
27436     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27437     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27438     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27439     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27440     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27441     +    END;
MPRINT(EM_DIAGRAM):   END;
27442     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27443     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27444     +    ELSE IF _ARBFMT_19 NOTIN (
27445     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27446     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27447     +  END;
MPRINT(EM_DIAGRAM):   END;
27448     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27449     +
27450     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27451     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
27452     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27453     +      END;
MPRINT(EM_DIAGRAM):   END;
27454     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27455     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27456     +      ELSE IF _ARBFMT_19 NOTIN (
27457     +        '25 TO 44' ,'45 TO 64'
27458     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27459     +    END;
MPRINT(EM_DIAGRAM):   END;
27460     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27461     +       _ARB_F_ + 333760.93678;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 333760.93678;
27462     +      END;
MPRINT(EM_DIAGRAM):   END;
27463     +    END;
MPRINT(EM_DIAGRAM):   END;
27464     +  END;
MPRINT(EM_DIAGRAM):   END;
27465     +
27466     +********** LEAF    28  NODE   367 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 28 NODE 367 ***************;
27467     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27468     +
27469     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27470     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27471     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27472     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27473     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27474     +    END;
MPRINT(EM_DIAGRAM):   END;
27475     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27476     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27477     +    ELSE IF _ARBFMT_19 NOTIN (
27478     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27479     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27480     +  END;
MPRINT(EM_DIAGRAM):   END;
27481     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27482     +
27483     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27484     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
27485     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27486     +      END;
MPRINT(EM_DIAGRAM):   END;
27487     +
27488     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27489     +       _ARB_F_ + 37405.931248;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 37405.931248;
27490     +      END;
MPRINT(EM_DIAGRAM):   END;
27491     +    END;
MPRINT(EM_DIAGRAM):   END;
27492     +  END;
MPRINT(EM_DIAGRAM):   END;
27493     +
27494     +********** LEAF    29  NODE   371 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 29 NODE 371 ***************;
27495     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27496     +
27497     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27498     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27499     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27500     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27501     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27502     +    END;
MPRINT(EM_DIAGRAM):   END;
27503     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27504     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27505     +    ELSE IF _ARBFMT_19 NOTIN (
27506     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27507     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27508     +  END;
MPRINT(EM_DIAGRAM):   END;
27509     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27510     +
27511     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27512     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27513     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27514     +      END;
MPRINT(EM_DIAGRAM):   END;
27515     +
27516     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27517     +       _ARB_F_ + -149269.4113;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -149269.4113;
27518     +      END;
MPRINT(EM_DIAGRAM):   END;
27519     +    END;
MPRINT(EM_DIAGRAM):   END;
27520     +  END;
MPRINT(EM_DIAGRAM):   END;
27521     +
27522     +********** LEAF    30  NODE   372 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 30 NODE 372 ***************;
27523     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27524     +
27525     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27526     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27527     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27528     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27529     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27530     +    END;
MPRINT(EM_DIAGRAM):   END;
27531     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27532     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27533     +    ELSE IF _ARBFMT_19 NOTIN (
27534     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27535     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27536     +  END;
MPRINT(EM_DIAGRAM):   END;
27537     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27538     +
27539     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27540     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27541     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27542     +      END;
MPRINT(EM_DIAGRAM):   END;
27543     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27544     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27545     +      ELSE IF _ARBFMT_19 NOTIN (
27546     +        '16 TO 24' ,'65+'
27547     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
27548     +    END;
MPRINT(EM_DIAGRAM):   END;
27549     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27550     +       _ARB_F_ + -277504.9129;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -277504.9129;
27551     +      END;
MPRINT(EM_DIAGRAM):   END;
27552     +    END;
MPRINT(EM_DIAGRAM):   END;
27553     +  END;
MPRINT(EM_DIAGRAM):   END;
27554     +
27555     +********** LEAF    31  NODE   373 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 31 NODE 373 ***************;
27556     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27557     +
27558     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27559     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27560     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27561     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27562     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27563     +    END;
MPRINT(EM_DIAGRAM):   END;
27564     +
27565     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27566     +
27567     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27568     +      IF  NOT MISSING(Population_in_thousands ) AND
27569     +      Population_in_thousands  <           41320.8695 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41320.8695 THEN DO;
27570     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27571     +      END;
MPRINT(EM_DIAGRAM):   END;
27572     +
27573     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27574     +       _ARB_F_ + 85657.677845;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 85657.677845;
27575     +      END;
MPRINT(EM_DIAGRAM):   END;
27576     +    END;
MPRINT(EM_DIAGRAM):   END;
27577     +  END;
MPRINT(EM_DIAGRAM):   END;
27578     +
27579     +********** LEAF    32  NODE   374 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 32 NODE 374 ***************;
27580     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27581     +
27582     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27583     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27584     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27585     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27586     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27587     +    END;
MPRINT(EM_DIAGRAM):   END;
27588     +
27589     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27590     +
27591     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27592     +      IF  NOT MISSING(Population_in_thousands ) AND
27593     +                41320.8695 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41320.8695 <= Population_in_thousands THEN DO;
27594     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27595     +      END;
MPRINT(EM_DIAGRAM):   END;
27596     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27597     +       IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 2;
27598     +    END;
MPRINT(EM_DIAGRAM):   END;
27599     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27600     +       _ARB_F_ + 317446.47945;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 317446.47945;
27601     +      END;
MPRINT(EM_DIAGRAM):   END;
27602     +    END;
MPRINT(EM_DIAGRAM):   END;
27603     +  END;
MPRINT(EM_DIAGRAM):   END;
27604     +
27605     +********** LEAF    33  NODE   378 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 33 NODE 378 ***************;
27606     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27607     +
27608     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27609     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27610     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27611     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27612     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27613     +    END;
MPRINT(EM_DIAGRAM):   END;
27614     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27615     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27616     +    ELSE IF _ARBFMT_19 NOTIN (
27617     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27618     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27619     +  END;
MPRINT(EM_DIAGRAM):   END;
27620     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27621     +
27622     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27623     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27624     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27625     +      END;
MPRINT(EM_DIAGRAM):   END;
27626     +
27627     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27628     +       _ARB_F_ + -157038.9055;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -157038.9055;
27629     +      END;
MPRINT(EM_DIAGRAM):   END;
27630     +    END;
MPRINT(EM_DIAGRAM):   END;
27631     +  END;
MPRINT(EM_DIAGRAM):   END;
27632     +
27633     +********** LEAF    34  NODE   379 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 34 NODE 379 ***************;
27634     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27635     +
27636     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27637     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27638     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27639     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27640     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27641     +    END;
MPRINT(EM_DIAGRAM):   END;
27642     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27643     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27644     +    ELSE IF _ARBFMT_19 NOTIN (
27645     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27646     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27647     +  END;
MPRINT(EM_DIAGRAM):   END;
27648     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27649     +
27650     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27651     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27652     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27653     +      END;
MPRINT(EM_DIAGRAM):   END;
27654     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27655     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27656     +      ELSE IF _ARBFMT_19 NOTIN (
27657     +        '16 TO 24' ,'65+'
27658     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
27659     +    END;
MPRINT(EM_DIAGRAM):   END;
27660     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27661     +       _ARB_F_ + -246560.8922;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -246560.8922;
27662     +      END;
MPRINT(EM_DIAGRAM):   END;
27663     +    END;
MPRINT(EM_DIAGRAM):   END;
27664     +  END;
MPRINT(EM_DIAGRAM):   END;
27665     +
27666     +********** LEAF    35  NODE   380 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 35 NODE 380 ***************;
27667     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27668     +
27669     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27670     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27671     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27672     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27673     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27674     +    END;
MPRINT(EM_DIAGRAM):   END;
27675     +
27676     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27677     +
27678     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27679     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
27680     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27681     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' ,
27682     +      '2001' ,'2002' ,'2003' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' , '2001' ,'2002' ,'2003' ) THEN DO;
27683     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27684     +      END;
MPRINT(EM_DIAGRAM):   END;
27685     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27686     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
27687     +      ELSE IF _ARBFMT_10 NOTIN (
27688     +        '2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' ,'2001' ,'2002' ,
27689     +        '2003' ,'2007' ,'2008' ,'2009' ,'2011' ,'2012'
27690     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2006' ,'2010' ,'2013' ,'2001' ,'2002' , '2003' ,'2007' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 1;
27691     +    END;
MPRINT(EM_DIAGRAM):   END;
27692     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27693     +       _ARB_F_ + 161235.59414;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 161235.59414;
27694     +      END;
MPRINT(EM_DIAGRAM):   END;
27695     +    END;
MPRINT(EM_DIAGRAM):   END;
27696     +  END;
MPRINT(EM_DIAGRAM):   END;
27697     +
27698     +********** LEAF    36  NODE   381 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 36 NODE 381 ***************;
27699     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27700     +
27701     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27702     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27703     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27704     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27705     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27706     +    END;
MPRINT(EM_DIAGRAM):   END;
27707     +
27708     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27709     +
27710     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27711     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
27712     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27713     +      IF _ARBFMT_10 IN ('2007' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2007' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN DO;
27714     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27715     +      END;
MPRINT(EM_DIAGRAM):   END;
27716     +
27717     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27718     +       _ARB_F_ + 357709.53664;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 357709.53664;
27719     +      END;
MPRINT(EM_DIAGRAM):   END;
27720     +    END;
MPRINT(EM_DIAGRAM):   END;
27721     +  END;
MPRINT(EM_DIAGRAM):   END;
27722     +
27723     +********** LEAF    37  NODE   385 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 37 NODE 385 ***************;
27724     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27725     +
27726     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27727     +    IF  NOT MISSING(Population_in_thousands ) AND
27728     +    Population_in_thousands  <           40523.9185 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 40523.9185 THEN DO;
27729     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27730     +    END;
MPRINT(EM_DIAGRAM):   END;
27731     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27732     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
27733     +  END;
MPRINT(EM_DIAGRAM):   END;
27734     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27735     +
27736     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27737     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27738     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27739     +      IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
27740     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27741     +      END;
MPRINT(EM_DIAGRAM):   END;
27742     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27743     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27744     +      ELSE IF _ARBFMT_19 NOTIN (
27745     +        '16 TO 24' ,'45 TO 64' ,'65+'
27746     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'45 TO 64' ,'65+' ) THEN _BRANCH_ = 1;
27747     +    END;
MPRINT(EM_DIAGRAM):   END;
27748     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27749     +       _ARB_F_ + -77822.98735;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -77822.98735;
27750     +      END;
MPRINT(EM_DIAGRAM):   END;
27751     +    END;
MPRINT(EM_DIAGRAM):   END;
27752     +  END;
MPRINT(EM_DIAGRAM):   END;
27753     +
27754     +********** LEAF    38  NODE   386 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 38 NODE 386 ***************;
27755     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27756     +
27757     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27758     +    IF  NOT MISSING(Population_in_thousands ) AND
27759     +    Population_in_thousands  <           40523.9185 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 40523.9185 THEN DO;
27760     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27761     +    END;
MPRINT(EM_DIAGRAM):   END;
27762     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27763     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
27764     +  END;
MPRINT(EM_DIAGRAM):   END;
27765     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27766     +
27767     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27768     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27769     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27770     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27771     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27772     +      END;
MPRINT(EM_DIAGRAM):   END;
27773     +
27774     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27775     +       _ARB_F_ + -232156.2463;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -232156.2463;
27776     +      END;
MPRINT(EM_DIAGRAM):   END;
27777     +    END;
MPRINT(EM_DIAGRAM):   END;
27778     +  END;
MPRINT(EM_DIAGRAM):   END;
27779     +
27780     +********** LEAF    39  NODE   387 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 39 NODE 387 ***************;
27781     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27782     +
27783     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27784     +    IF  NOT MISSING(Population_in_thousands ) AND
27785     +              40523.9185 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 40523.9185 <= Population_in_thousands THEN DO;
27786     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27787     +    END;
MPRINT(EM_DIAGRAM):   END;
27788     +
27789     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27790     +
27791     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27792     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
27793     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27794     +      IF _ARBFMT_10 IN ('2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ) THEN
27795     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ) THEN DO;
27796     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27797     +      END;
MPRINT(EM_DIAGRAM):   END;
27798     +
27799     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27800     +       _ARB_F_ + 359303.23348;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 359303.23348;
27801     +      END;
MPRINT(EM_DIAGRAM):   END;
27802     +    END;
MPRINT(EM_DIAGRAM):   END;
27803     +  END;
MPRINT(EM_DIAGRAM):   END;
27804     +
27805     +********** LEAF    40  NODE   388 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 40 NODE 388 ***************;
27806     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27807     +
27808     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27809     +    IF  NOT MISSING(Population_in_thousands ) AND
27810     +              40523.9185 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 40523.9185 <= Population_in_thousands THEN DO;
27811     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27812     +    END;
MPRINT(EM_DIAGRAM):   END;
27813     +
27814     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27815     +
27816     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27817     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
27818     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27819     +      IF _ARBFMT_10 IN ('2004' ,'2005' ,'2006' ,'2010' ,'2002' ,'2008' ,
27820     +      '2009' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2005' ,'2006' ,'2010' ,'2002' ,'2008' , '2009' ,'2011' ) THEN DO;
27821     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27822     +      END;
MPRINT(EM_DIAGRAM):   END;
27823     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27824     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
27825     +      ELSE IF _ARBFMT_10 NOTIN (
27826     +        '2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ,'2004' ,'2005' ,
27827     +        '2006' ,'2010' ,'2002' ,'2008' ,'2009' ,'2011'
27828     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2007' ,'2013' ,'2001' ,'2003' ,'2012' ,'2004' ,'2005' , '2006' ,'2010' ,'2002' ,'2008' ,'2009' ,'2011' ) THEN _BRANCH_ = 2;
27829     +    END;
MPRINT(EM_DIAGRAM):   END;
27830     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27831     +       _ARB_F_ + 142654.31386;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 142654.31386;
27832     +      END;
MPRINT(EM_DIAGRAM):   END;
27833     +    END;
MPRINT(EM_DIAGRAM):   END;
27834     +  END;
MPRINT(EM_DIAGRAM):   END;
27835     +
27836     +********** LEAF    41  NODE   392 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 41 NODE 392 ***************;
27837     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27838     +
27839     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27840     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27841     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27842     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27843     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27844     +    END;
MPRINT(EM_DIAGRAM):   END;
27845     +
27846     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27847     +
27848     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27849     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
27850     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27851     +      IF _ARBFMT_10 IN ('2000' ,'2005' ,'2010' ,'2008' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2005' ,'2010' ,'2008' ,'2011' ) THEN DO;
27852     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27853     +      END;
MPRINT(EM_DIAGRAM):   END;
27854     +
27855     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27856     +       _ARB_F_ + -144212.5534;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -144212.5534;
27857     +      END;
MPRINT(EM_DIAGRAM):   END;
27858     +    END;
MPRINT(EM_DIAGRAM):   END;
27859     +  END;
MPRINT(EM_DIAGRAM):   END;
27860     +
27861     +********** LEAF    42  NODE   393 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 42 NODE 393 ***************;
27862     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27863     +
27864     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27865     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27866     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27867     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27868     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27869     +    END;
MPRINT(EM_DIAGRAM):   END;
27870     +
27871     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27872     +
27873     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27874     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
27875     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27876     +      IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2013' ,'2001' ,'2002' ,
27877     +      '2003' ,'2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2013' ,'2001' ,'2002' , '2003' ,'2009' ,'2012' ) THEN DO;
27878     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27879     +      END;
MPRINT(EM_DIAGRAM):   END;
27880     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27881     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
27882     +      ELSE IF _ARBFMT_10 NOTIN (
27883     +        '2000' ,'2005' ,'2010' ,'2008' ,'2011' ,'2004' ,'2006' ,'2007' ,
27884     +        '2013' ,'2001' ,'2002' ,'2003' ,'2009' ,'2012'
27885     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2005' ,'2010' ,'2008' ,'2011' ,'2004' ,'2006' ,'2007' , '2013' ,'2001' ,'2002' ,'2003' ,'2009' ,'2012' ) THEN _BRANCH_ = 2;
27886     +    END;
MPRINT(EM_DIAGRAM):   END;
27887     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27888     +       _ARB_F_ + -200381.7133;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -200381.7133;
27889     +      END;
MPRINT(EM_DIAGRAM):   END;
27890     +    END;
MPRINT(EM_DIAGRAM):   END;
27891     +  END;
MPRINT(EM_DIAGRAM):   END;
27892     +
27893     +********** LEAF    43  NODE   394 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 43 NODE 394 ***************;
27894     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27895     +
27896     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27897     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27898     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27899     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27900     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27901     +    END;
MPRINT(EM_DIAGRAM):   END;
27902     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27903     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27904     +    ELSE IF _ARBFMT_19 NOTIN (
27905     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27906     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27907     +  END;
MPRINT(EM_DIAGRAM):   END;
27908     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27909     +
27910     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27911     +      IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
27912     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27913     +      END;
MPRINT(EM_DIAGRAM):   END;
27914     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27915     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
27916     +      ELSE IF _ARBFMT_19 NOTIN (
27917     +        '25 TO 44' ,'45 TO 64'
27918     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
27919     +    END;
MPRINT(EM_DIAGRAM):   END;
27920     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27921     +       _ARB_F_ + 274662.71817;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 274662.71817;
27922     +      END;
MPRINT(EM_DIAGRAM):   END;
27923     +    END;
MPRINT(EM_DIAGRAM):   END;
27924     +  END;
MPRINT(EM_DIAGRAM):   END;
27925     +
27926     +********** LEAF    44  NODE   395 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 44 NODE 395 ***************;
27927     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27928     +
27929     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27930     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27931     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27932     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
27933     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27934     +    END;
MPRINT(EM_DIAGRAM):   END;
27935     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27936     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27937     +    ELSE IF _ARBFMT_19 NOTIN (
27938     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
27939     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
27940     +  END;
MPRINT(EM_DIAGRAM):   END;
27941     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27942     +
27943     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27944     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
27945     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27946     +      END;
MPRINT(EM_DIAGRAM):   END;
27947     +
27948     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27949     +       _ARB_F_ + 41574.862604;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 41574.862604;
27950     +      END;
MPRINT(EM_DIAGRAM):   END;
27951     +    END;
MPRINT(EM_DIAGRAM):   END;
27952     +  END;
MPRINT(EM_DIAGRAM):   END;
27953     +
27954     +********** LEAF    45  NODE   399 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 45 NODE 399 ***************;
27955     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27956     +
27957     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27958     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27959     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27960     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27961     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27962     +    END;
MPRINT(EM_DIAGRAM):   END;
27963     +
27964     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27965     +
27966     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27967     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
27968     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27969     +      END;
MPRINT(EM_DIAGRAM):   END;
27970     +
27971     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27972     +       _ARB_F_ + -94469.1326;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -94469.1326;
27973     +      END;
MPRINT(EM_DIAGRAM):   END;
27974     +    END;
MPRINT(EM_DIAGRAM):   END;
27975     +  END;
MPRINT(EM_DIAGRAM):   END;
27976     +
27977     +********** LEAF    46  NODE   400 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 46 NODE 400 ***************;
27978     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
27979     +
27980     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27981     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
27982     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
27983     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
27984     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
27985     +    END;
MPRINT(EM_DIAGRAM):   END;
27986     +
27987     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
27988     +
27989     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
27990     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
27991     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
27992     +      END;
MPRINT(EM_DIAGRAM):   END;
27993     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
27994     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
27995     +      ELSE IF _ARBFMT_19 NOTIN (
27996     +        '16 TO 24' ,'65+'
27997     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
27998     +    END;
MPRINT(EM_DIAGRAM):   END;
27999     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28000     +       _ARB_F_ + -187236.7206;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -187236.7206;
28001     +      END;
MPRINT(EM_DIAGRAM):   END;
28002     +    END;
MPRINT(EM_DIAGRAM):   END;
28003     +  END;
MPRINT(EM_DIAGRAM):   END;
28004     +
28005     +********** LEAF    47  NODE   401 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 47 NODE 401 ***************;
28006     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28007     +
28008     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28009     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28010     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28011     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28012     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28013     +    END;
MPRINT(EM_DIAGRAM):   END;
28014     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28015     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28016     +    ELSE IF _ARBFMT_19 NOTIN (
28017     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28018     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28019     +  END;
MPRINT(EM_DIAGRAM):   END;
28020     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28021     +
28022     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28023     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28024     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28025     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' ,
28026     +      '2008' ,'2009' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' , '2008' ,'2009' ) THEN DO;
28027     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28028     +      END;
MPRINT(EM_DIAGRAM):   END;
28029     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28030     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28031     +      ELSE IF _ARBFMT_10 NOTIN (
28032     +        '2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' ,'2009' ,
28033     +        '2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012'
28034     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' ,'2009' , '2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012' ) THEN _BRANCH_ = 1;
28035     +    END;
MPRINT(EM_DIAGRAM):   END;
28036     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28037     +       _ARB_F_ + 226316.26975;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 226316.26975;
28038     +      END;
MPRINT(EM_DIAGRAM):   END;
28039     +    END;
MPRINT(EM_DIAGRAM):   END;
28040     +  END;
MPRINT(EM_DIAGRAM):   END;
28041     +
28042     +********** LEAF    48  NODE   402 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 48 NODE 402 ***************;
28043     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28044     +
28045     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28046     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28047     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28048     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28049     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28050     +    END;
MPRINT(EM_DIAGRAM):   END;
28051     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28052     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28053     +    ELSE IF _ARBFMT_19 NOTIN (
28054     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28055     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28056     +  END;
MPRINT(EM_DIAGRAM):   END;
28057     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28058     +
28059     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28060     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28061     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28062     +      IF _ARBFMT_10 IN ('2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012' ) THEN
28063     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2006' ,'2010' ,'2013' ,'2001' ,'2011' ,'2012' ) THEN DO;
28064     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28065     +      END;
MPRINT(EM_DIAGRAM):   END;
28066     +
28067     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28068     +       _ARB_F_ + 28964.879199;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 28964.879199;
28069     +      END;
MPRINT(EM_DIAGRAM):   END;
28070     +    END;
MPRINT(EM_DIAGRAM):   END;
28071     +  END;
MPRINT(EM_DIAGRAM):   END;
28072     +
28073     +********** LEAF    49  NODE   406 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 49 NODE 406 ***************;
28074     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28075     +
28076     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28077     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28078     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28079     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28080     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28081     +    END;
MPRINT(EM_DIAGRAM):   END;
28082     +
28083     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28084     +
28085     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28086     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
28087     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28088     +      END;
MPRINT(EM_DIAGRAM):   END;
28089     +
28090     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28091     +       _ARB_F_ + -91703.41133;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -91703.41133;
28092     +      END;
MPRINT(EM_DIAGRAM):   END;
28093     +    END;
MPRINT(EM_DIAGRAM):   END;
28094     +  END;
MPRINT(EM_DIAGRAM):   END;
28095     +
28096     +********** LEAF    50  NODE   407 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 50 NODE 407 ***************;
28097     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28098     +
28099     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28100     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28101     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28102     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28103     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28104     +    END;
MPRINT(EM_DIAGRAM):   END;
28105     +
28106     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28107     +
28108     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28109     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
28110     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28111     +      END;
MPRINT(EM_DIAGRAM):   END;
28112     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28113     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28114     +      ELSE IF _ARBFMT_19 NOTIN (
28115     +        '16 TO 24' ,'65+'
28116     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
28117     +    END;
MPRINT(EM_DIAGRAM):   END;
28118     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28119     +       _ARB_F_ + -167299.7087;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -167299.7087;
28120     +      END;
MPRINT(EM_DIAGRAM):   END;
28121     +    END;
MPRINT(EM_DIAGRAM):   END;
28122     +  END;
MPRINT(EM_DIAGRAM):   END;
28123     +
28124     +********** LEAF    51  NODE   408 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 51 NODE 408 ***************;
28125     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28126     +
28127     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28128     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28129     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28130     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28131     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28132     +    END;
MPRINT(EM_DIAGRAM):   END;
28133     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28134     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28135     +    ELSE IF _ARBFMT_19 NOTIN (
28136     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28137     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28138     +  END;
MPRINT(EM_DIAGRAM):   END;
28139     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28140     +
28141     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28142     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28143     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28144     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' ,
28145     +      '2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' , '2011' ,'2012' ) THEN DO;
28146     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28147     +      END;
MPRINT(EM_DIAGRAM):   END;
28148     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28149     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28150     +      ELSE IF _ARBFMT_10 NOTIN (
28151     +        '2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' ,'2011' ,'2012' ,
28152     +        '2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009'
28153     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2007' ,'2013' ,'2001' ,'2003' ,'2011' ,'2012' , '2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009' ) THEN _BRANCH_ = 1;
28154     +    END;
MPRINT(EM_DIAGRAM):   END;
28155     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28156     +       _ARB_F_ + 257463.24105;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 257463.24105;
28157     +      END;
MPRINT(EM_DIAGRAM):   END;
28158     +    END;
MPRINT(EM_DIAGRAM):   END;
28159     +  END;
MPRINT(EM_DIAGRAM):   END;
28160     +
28161     +********** LEAF    52  NODE   409 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 52 NODE 409 ***************;
28162     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28163     +
28164     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28165     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28166     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28167     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28168     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28169     +    END;
MPRINT(EM_DIAGRAM):   END;
28170     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28171     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28172     +    ELSE IF _ARBFMT_19 NOTIN (
28173     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28174     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28175     +  END;
MPRINT(EM_DIAGRAM):   END;
28176     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28177     +
28178     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28179     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28180     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28181     +      IF _ARBFMT_10 IN ('2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009' ) THEN
28182     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2005' ,'2006' ,'2010' ,'2002' ,'2008' ,'2009' ) THEN DO;
28183     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28184     +      END;
MPRINT(EM_DIAGRAM):   END;
28185     +
28186     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28187     +       _ARB_F_ + 27131.224142;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 27131.224142;
28188     +      END;
MPRINT(EM_DIAGRAM):   END;
28189     +    END;
MPRINT(EM_DIAGRAM):   END;
28190     +  END;
MPRINT(EM_DIAGRAM):   END;
28191     +
28192     +********** LEAF    53  NODE   413 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 53 NODE 413 ***************;
28193     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28194     +
28195     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28196     +    IF  NOT MISSING(Population_in_thousands ) AND
28197     +    Population_in_thousands  <           41105.5765 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41105.5765 THEN DO;
28198     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28199     +    END;
MPRINT(EM_DIAGRAM):   END;
28200     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28201     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
28202     +  END;
MPRINT(EM_DIAGRAM):   END;
28203     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28204     +
28205     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28206     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28207     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28208     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
28209     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28210     +      END;
MPRINT(EM_DIAGRAM):   END;
28211     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28212     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28213     +      ELSE IF _ARBFMT_19 NOTIN (
28214     +        '65+' ,'16 TO 24' ,'45 TO 64'
28215     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '65+' ,'16 TO 24' ,'45 TO 64' ) THEN _BRANCH_ = 1;
28216     +    END;
MPRINT(EM_DIAGRAM):   END;
28217     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28218     +       _ARB_F_ + -146843.737;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -146843.737;
28219     +      END;
MPRINT(EM_DIAGRAM):   END;
28220     +    END;
MPRINT(EM_DIAGRAM):   END;
28221     +  END;
MPRINT(EM_DIAGRAM):   END;
28222     +
28223     +********** LEAF    54  NODE   414 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 54 NODE 414 ***************;
28224     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28225     +
28226     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28227     +    IF  NOT MISSING(Population_in_thousands ) AND
28228     +    Population_in_thousands  <           41105.5765 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41105.5765 THEN DO;
28229     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28230     +    END;
MPRINT(EM_DIAGRAM):   END;
28231     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28232     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
28233     +  END;
MPRINT(EM_DIAGRAM):   END;
28234     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28235     +
28236     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28237     +    _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28238     +     %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28239     +      IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'45 TO 64' ) THEN DO;
28240     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28241     +      END;
MPRINT(EM_DIAGRAM):   END;
28242     +
28243     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28244     +       _ARB_F_ + -46717.8437;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -46717.8437;
28245     +      END;
MPRINT(EM_DIAGRAM):   END;
28246     +    END;
MPRINT(EM_DIAGRAM):   END;
28247     +  END;
MPRINT(EM_DIAGRAM):   END;
28248     +
28249     +********** LEAF    55  NODE   415 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 55 NODE 415 ***************;
28250     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28251     +
28252     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28253     +    IF  NOT MISSING(Population_in_thousands ) AND
28254     +              41105.5765 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41105.5765 <= Population_in_thousands THEN DO;
28255     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28256     +    END;
MPRINT(EM_DIAGRAM):   END;
28257     +
28258     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28259     +
28260     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28261     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28262     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28263     +      IF _ARBFMT_10 IN ('2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ) THEN
28264     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ) THEN DO;
28265     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28266     +      END;
MPRINT(EM_DIAGRAM):   END;
28267     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28268     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28269     +      ELSE IF _ARBFMT_10 NOTIN (
28270     +        '2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ,'2004' ,'2006' ,
28271     +        '2007' ,'2010' ,'2003' ,'2008' ,'2009' ,'2012'
28272     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2005' ,'2013' ,'2001' ,'2002' ,'2011' ,'2004' ,'2006' , '2007' ,'2010' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
28273     +    END;
MPRINT(EM_DIAGRAM):   END;
28274     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28275     +       _ARB_F_ + 16940.51047;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 16940.51047;
28276     +      END;
MPRINT(EM_DIAGRAM):   END;
28277     +    END;
MPRINT(EM_DIAGRAM):   END;
28278     +  END;
MPRINT(EM_DIAGRAM):   END;
28279     +
28280     +********** LEAF    56  NODE   416 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 56 NODE 416 ***************;
28281     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28282     +
28283     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28284     +    IF  NOT MISSING(Population_in_thousands ) AND
28285     +              41105.5765 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41105.5765 <= Population_in_thousands THEN DO;
28286     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28287     +    END;
MPRINT(EM_DIAGRAM):   END;
28288     +
28289     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28290     +
28291     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28292     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28293     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28294     +      IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2010' ,'2003' ,'2008' ,
28295     +      '2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2006' ,'2007' ,'2010' ,'2003' ,'2008' , '2009' ,'2012' ) THEN DO;
28296     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28297     +      END;
MPRINT(EM_DIAGRAM):   END;
28298     +
28299     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28300     +       _ARB_F_ + 285735.24;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 285735.24;
28301     +      END;
MPRINT(EM_DIAGRAM):   END;
28302     +    END;
MPRINT(EM_DIAGRAM):   END;
28303     +  END;
MPRINT(EM_DIAGRAM):   END;
28304     +
28305     +********** LEAF    57  NODE   420 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 57 NODE 420 ***************;
28306     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28307     +
28308     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28309     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28310     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28311     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28312     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28313     +    END;
MPRINT(EM_DIAGRAM):   END;
28314     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28315     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28316     +    ELSE IF _ARBFMT_19 NOTIN (
28317     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28318     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
28319     +  END;
MPRINT(EM_DIAGRAM):   END;
28320     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28321     +
28322     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28323     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
28324     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28325     +      END;
MPRINT(EM_DIAGRAM):   END;
28326     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28327     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28328     +      ELSE IF _ARBFMT_19 NOTIN (
28329     +        '16 TO 24' ,'65+'
28330     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 1;
28331     +    END;
MPRINT(EM_DIAGRAM):   END;
28332     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28333     +       _ARB_F_ + -80364.69784;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -80364.69784;
28334     +      END;
MPRINT(EM_DIAGRAM):   END;
28335     +    END;
MPRINT(EM_DIAGRAM):   END;
28336     +  END;
MPRINT(EM_DIAGRAM):   END;
28337     +
28338     +********** LEAF    58  NODE   421 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 58 NODE 421 ***************;
28339     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28340     +
28341     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28342     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28343     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28344     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28345     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28346     +    END;
MPRINT(EM_DIAGRAM):   END;
28347     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28348     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28349     +    ELSE IF _ARBFMT_19 NOTIN (
28350     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28351     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 1;
28352     +  END;
MPRINT(EM_DIAGRAM):   END;
28353     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28354     +
28355     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28356     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
28357     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28358     +      END;
MPRINT(EM_DIAGRAM):   END;
28359     +
28360     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28361     +       _ARB_F_ + -134294.6532;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -134294.6532;
28362     +      END;
MPRINT(EM_DIAGRAM):   END;
28363     +    END;
MPRINT(EM_DIAGRAM):   END;
28364     +  END;
MPRINT(EM_DIAGRAM):   END;
28365     +
28366     +********** LEAF    59  NODE   422 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 59 NODE 422 ***************;
28367     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28368     +
28369     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28370     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28371     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28372     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28373     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28374     +    END;
MPRINT(EM_DIAGRAM):   END;
28375     +
28376     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28377     +
28378     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28379     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28380     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28381     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' ,
28382     +      '2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' , '2011' ) THEN DO;
28383     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28384     +      END;
MPRINT(EM_DIAGRAM):   END;
28385     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28386     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28387     +      ELSE IF _ARBFMT_10 NOTIN (
28388     +        '2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' ,'2011' ,'2005' ,
28389     +        '2013' ,'2001' ,'2003' ,'2008' ,'2009' ,'2012'
28390     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2006' ,'2007' ,'2010' ,'2002' ,'2011' ,'2005' , '2013' ,'2001' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
28391     +    END;
MPRINT(EM_DIAGRAM):   END;
28392     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28393     +       _ARB_F_ + 41430.511253;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 41430.511253;
28394     +      END;
MPRINT(EM_DIAGRAM):   END;
28395     +    END;
MPRINT(EM_DIAGRAM):   END;
28396     +  END;
MPRINT(EM_DIAGRAM):   END;
28397     +
28398     +********** LEAF    60  NODE   423 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 60 NODE 423 ***************;
28399     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28400     +
28401     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28402     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28403     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28404     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28405     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28406     +    END;
MPRINT(EM_DIAGRAM):   END;
28407     +
28408     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28409     +
28410     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28411     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28412     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28413     +      IF _ARBFMT_10 IN ('2005' ,'2013' ,'2001' ,'2003' ,'2008' ,'2009' ,
28414     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2005' ,'2013' ,'2001' ,'2003' ,'2008' ,'2009' , '2012' ) THEN DO;
28415     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28416     +      END;
MPRINT(EM_DIAGRAM):   END;
28417     +
28418     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28419     +       _ARB_F_ + 227158.11226;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 227158.11226;
28420     +      END;
MPRINT(EM_DIAGRAM):   END;
28421     +    END;
MPRINT(EM_DIAGRAM):   END;
28422     +  END;
MPRINT(EM_DIAGRAM):   END;
28423     +
28424     +********** LEAF    61  NODE   427 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 61 NODE 427 ***************;
28425     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28426     +
28427     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28428     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28429     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28430     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
28431     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28432     +    END;
MPRINT(EM_DIAGRAM):   END;
28433     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28434     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28435     +    ELSE IF _ARBFMT_19 NOTIN (
28436     +      '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44'
28437     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44' ) THEN _BRANCH_ = 1;
28438     +  END;
MPRINT(EM_DIAGRAM):   END;
28439     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28440     +
28441     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28442     +      IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28443     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28444     +      END;
MPRINT(EM_DIAGRAM):   END;
28445     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28446     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28447     +      ELSE IF _ARBFMT_19 NOTIN (
28448     +        '16 TO 24' ,'65+' ,'45 TO 64'
28449     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'45 TO 64' ) THEN _BRANCH_ = 1;
28450     +    END;
MPRINT(EM_DIAGRAM):   END;
28451     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28452     +       _ARB_F_ + -91466.80351;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -91466.80351;
28453     +      END;
MPRINT(EM_DIAGRAM):   END;
28454     +    END;
MPRINT(EM_DIAGRAM):   END;
28455     +  END;
MPRINT(EM_DIAGRAM):   END;
28456     +
28457     +********** LEAF    62  NODE   428 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 62 NODE 428 ***************;
28458     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28459     +
28460     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28461     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28462     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28463     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ,'45 TO 64' ) THEN DO;
28464     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28465     +    END;
MPRINT(EM_DIAGRAM):   END;
28466     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28467     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 1;
28468     +    ELSE IF _ARBFMT_19 NOTIN (
28469     +      '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44'
28470     +       ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'45 TO 64' ,'25 TO 44' ) THEN _BRANCH_ = 1;
28471     +  END;
MPRINT(EM_DIAGRAM):   END;
28472     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28473     +
28474     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28475     +      IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('45 TO 64' ) THEN DO;
28476     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28477     +      END;
MPRINT(EM_DIAGRAM):   END;
28478     +
28479     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28480     +       _ARB_F_ + 44527.279072;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 44527.279072;
28481     +      END;
MPRINT(EM_DIAGRAM):   END;
28482     +    END;
MPRINT(EM_DIAGRAM):   END;
28483     +  END;
MPRINT(EM_DIAGRAM):   END;
28484     +
28485     +********** LEAF    63  NODE   426 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 63 NODE 426 ***************;
28486     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28487     +
28488     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28489     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28490     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28491     +    IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ) THEN DO;
28492     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28493     +    END;
MPRINT(EM_DIAGRAM):   END;
28494     +
28495     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28496     +     _ARB_F_ + 218378.32652;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 218378.32652;
28497     +    END;
MPRINT(EM_DIAGRAM):   END;
28498     +  END;
MPRINT(EM_DIAGRAM):   END;
28499     +
28500     +********** LEAF    64  NODE   432 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 64 NODE 432 ***************;
28501     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28502     +
28503     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28504     +    IF  NOT MISSING(Population_in_thousands ) AND
28505     +    Population_in_thousands  <           41118.3015 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41118.3015 THEN DO;
28506     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28507     +    END;
MPRINT(EM_DIAGRAM):   END;
28508     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28509     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
28510     +  END;
MPRINT(EM_DIAGRAM):   END;
28511     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28512     +
28513     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28514     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28515     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28516     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' ,
28517     +      '2002' ,'2003' ,'2008' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' , '2002' ,'2003' ,'2008' ,'2011' ) THEN DO;
28518     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28519     +      END;
MPRINT(EM_DIAGRAM):   END;
28520     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28521     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28522     +      ELSE IF _ARBFMT_10 NOTIN (
28523     +        '2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' ,'2002' ,'2003' ,
28524     +        '2008' ,'2011' ,'2006' ,'2001' ,'2009' ,'2012'
28525     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2007' ,'2010' ,'2013' ,'2002' ,'2003' , '2008' ,'2011' ,'2006' ,'2001' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
28526     +    END;
MPRINT(EM_DIAGRAM):   END;
28527     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28528     +       _ARB_F_ + -53564.22704;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -53564.22704;
28529     +      END;
MPRINT(EM_DIAGRAM):   END;
28530     +    END;
MPRINT(EM_DIAGRAM):   END;
28531     +  END;
MPRINT(EM_DIAGRAM):   END;
28532     +
28533     +********** LEAF    65  NODE   433 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 65 NODE 433 ***************;
28534     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28535     +
28536     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28537     +    IF  NOT MISSING(Population_in_thousands ) AND
28538     +    Population_in_thousands  <           41118.3015 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND Population_in_thousands < 41118.3015 THEN DO;
28539     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28540     +    END;
MPRINT(EM_DIAGRAM):   END;
28541     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28542     +     IF MISSING( Population_in_thousands  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Population_in_thousands ) THEN _BRANCH_ = 1;
28543     +  END;
MPRINT(EM_DIAGRAM):   END;
28544     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28545     +
28546     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28547     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28548     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28549     +      IF _ARBFMT_10 IN ('2006' ,'2001' ,'2009' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2006' ,'2001' ,'2009' ,'2012' ) THEN DO;
28550     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28551     +      END;
MPRINT(EM_DIAGRAM):   END;
28552     +
28553     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28554     +       _ARB_F_ + -152869.5536;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -152869.5536;
28555     +      END;
MPRINT(EM_DIAGRAM):   END;
28556     +    END;
MPRINT(EM_DIAGRAM):   END;
28557     +  END;
MPRINT(EM_DIAGRAM):   END;
28558     +
28559     +********** LEAF    66  NODE   434 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 66 NODE 434 ***************;
28560     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28561     +
28562     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28563     +    IF  NOT MISSING(Population_in_thousands ) AND
28564     +              41118.3015 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41118.3015 <= Population_in_thousands THEN DO;
28565     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28566     +    END;
MPRINT(EM_DIAGRAM):   END;
28567     +
28568     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28569     +
28570     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28571     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28572     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28573     +      IF _ARBFMT_10 IN ('2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' ,
28574     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' , '2012' ) THEN DO;
28575     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28576     +      END;
MPRINT(EM_DIAGRAM):   END;
28577     +
28578     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28579     +       _ARB_F_ + 240898.87435;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 240898.87435;
28580     +      END;
MPRINT(EM_DIAGRAM):   END;
28581     +    END;
MPRINT(EM_DIAGRAM):   END;
28582     +  END;
MPRINT(EM_DIAGRAM):   END;
28583     +
28584     +********** LEAF    67  NODE   435 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 67 NODE 435 ***************;
28585     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28586     +
28587     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28588     +    IF  NOT MISSING(Population_in_thousands ) AND
28589     +              41118.3015 <= Population_in_thousands  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Population_in_thousands ) AND 41118.3015 <= Population_in_thousands THEN DO;
28590     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28591     +    END;
MPRINT(EM_DIAGRAM):   END;
28592     +
28593     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28594     +
28595     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28596     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28597     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28598     +      IF _ARBFMT_10 IN ('2006' ,'2007' ,'2013' ,'2001' ,'2002' ,'2003' ) THEN
28599     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2006' ,'2007' ,'2013' ,'2001' ,'2002' ,'2003' ) THEN DO;
28600     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28601     +      END;
MPRINT(EM_DIAGRAM):   END;
28602     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28603     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
28604     +      ELSE IF _ARBFMT_10 NOTIN (
28605     +        '2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012' ,'2006' ,
28606     +        '2007' ,'2013' ,'2001' ,'2002' ,'2003'
28607     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2004' ,'2005' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012' ,'2006' , '2007' ,'2013' ,'2001' ,'2002' ,'2003' ) THEN _BRANCH_ = 2;
28608     +    END;
MPRINT(EM_DIAGRAM):   END;
28609     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28610     +       _ARB_F_ + 8044.3095984;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 8044.3095984;
28611     +      END;
MPRINT(EM_DIAGRAM):   END;
28612     +    END;
MPRINT(EM_DIAGRAM):   END;
28613     +  END;
MPRINT(EM_DIAGRAM):   END;
28614     +
28615     +********** LEAF    68  NODE   439 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 68 NODE 439 ***************;
28616     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28617     +
28618     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28619     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28620     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28621     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28622     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28623     +    END;
MPRINT(EM_DIAGRAM):   END;
28624     +
28625     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28626     +
28627     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28628     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28629     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28630     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,
28631     +      '2013' ,'2011' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' , '2013' ,'2011' ) THEN DO;
28632     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28633     +      END;
MPRINT(EM_DIAGRAM):   END;
28634     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28635     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28636     +      ELSE IF _ARBFMT_10 NOTIN (
28637     +        '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2011' ,
28638     +        '2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012'
28639     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2005' ,'2006' ,'2007' ,'2010' ,'2013' ,'2011' , '2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN _BRANCH_ = 1;
28640     +    END;
MPRINT(EM_DIAGRAM):   END;
28641     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28642     +       _ARB_F_ + -116749.6835;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -116749.6835;
28643     +      END;
MPRINT(EM_DIAGRAM):   END;
28644     +    END;
MPRINT(EM_DIAGRAM):   END;
28645     +  END;
MPRINT(EM_DIAGRAM):   END;
28646     +
28647     +********** LEAF    69  NODE   440 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 69 NODE 440 ***************;
28648     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28649     +
28650     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28651     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28652     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28653     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28654     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28655     +    END;
MPRINT(EM_DIAGRAM):   END;
28656     +
28657     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28658     +
28659     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28660     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28661     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28662     +      IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN
28663     +        DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2001' ,'2002' ,'2003' ,'2008' ,'2009' ,'2012' ) THEN DO;
28664     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28665     +      END;
MPRINT(EM_DIAGRAM):   END;
28666     +
28667     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28668     +       _ARB_F_ + -73884.77498;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -73884.77498;
28669     +      END;
MPRINT(EM_DIAGRAM):   END;
28670     +    END;
MPRINT(EM_DIAGRAM):   END;
28671     +  END;
MPRINT(EM_DIAGRAM):   END;
28672     +
28673     +********** LEAF    70  NODE   441 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 70 NODE 441 ***************;
28674     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28675     +
28676     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28677     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28678     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28679     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28680     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28681     +    END;
MPRINT(EM_DIAGRAM):   END;
28682     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28683     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28684     +    ELSE IF _ARBFMT_19 NOTIN (
28685     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28686     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28687     +  END;
MPRINT(EM_DIAGRAM):   END;
28688     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28689     +
28690     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28691     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28692     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28693     +      IF _ARBFMT_10 IN ('2000' ,'2006' ,'2010' ,'2013' ,'2001' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2006' ,'2010' ,'2013' ,'2001' ) THEN DO;
28694     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28695     +      END;
MPRINT(EM_DIAGRAM):   END;
28696     +
28697     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28698     +       _ARB_F_ + -72104.85093;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -72104.85093;
28699     +      END;
MPRINT(EM_DIAGRAM):   END;
28700     +    END;
MPRINT(EM_DIAGRAM):   END;
28701     +  END;
MPRINT(EM_DIAGRAM):   END;
28702     +
28703     +********** LEAF    71  NODE   442 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 71 NODE 442 ***************;
28704     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28705     +
28706     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28707     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28708     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28709     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28710     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28711     +    END;
MPRINT(EM_DIAGRAM):   END;
28712     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28713     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28714     +    ELSE IF _ARBFMT_19 NOTIN (
28715     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28716     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28717     +  END;
MPRINT(EM_DIAGRAM):   END;
28718     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28719     +
28720     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28721     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28722     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28723     +      IF _ARBFMT_10 IN ('2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' ,
28724     +      '2009' ,'2011' ,'2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2004' ,'2005' ,'2007' ,'2002' ,'2003' ,'2008' , '2009' ,'2011' ,'2012' ) THEN DO;
28725     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28726     +      END;
MPRINT(EM_DIAGRAM):   END;
28727     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28728     +       IF MISSING( Date  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 2;
28729     +      ELSE IF _ARBFMT_10 NOTIN (
28730     +        '2000' ,'2006' ,'2010' ,'2013' ,'2001' ,'2004' ,'2005' ,'2007' ,
28731     +        '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012'
28732     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2006' ,'2010' ,'2013' ,'2001' ,'2004' ,'2005' ,'2007' , '2002' ,'2003' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 2;
28733     +    END;
MPRINT(EM_DIAGRAM):   END;
28734     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28735     +       _ARB_F_ + 124142.63077;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 124142.63077;
28736     +      END;
MPRINT(EM_DIAGRAM):   END;
28737     +    END;
MPRINT(EM_DIAGRAM):   END;
28738     +  END;
MPRINT(EM_DIAGRAM):   END;
28739     +
28740     +********** LEAF    72  NODE   446 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 72 NODE 446 ***************;
28741     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28742     +
28743     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28744     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28745     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28746     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28747     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28748     +    END;
MPRINT(EM_DIAGRAM):   END;
28749     +
28750     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28751     +
28752     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28753     +      IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ) THEN DO;
28754     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28755     +      END;
MPRINT(EM_DIAGRAM):   END;
28756     +
28757     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28758     +       _ARB_F_ + -60796.98537;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -60796.98537;
28759     +      END;
MPRINT(EM_DIAGRAM):   END;
28760     +    END;
MPRINT(EM_DIAGRAM):   END;
28761     +  END;
MPRINT(EM_DIAGRAM):   END;
28762     +
28763     +********** LEAF    73  NODE   447 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 73 NODE 447 ***************;
28764     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28765     +
28766     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28767     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28768     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28769     +    IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('16 TO 24' ,'65+' ) THEN DO;
28770     +     _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28771     +    END;
MPRINT(EM_DIAGRAM):   END;
28772     +
28773     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28774     +
28775     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28776     +      IF _ARBFMT_19 IN ('65+' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('65+' ) THEN DO;
28777     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28778     +      END;
MPRINT(EM_DIAGRAM):   END;
28779     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28780     +       IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28781     +      ELSE IF _ARBFMT_19 NOTIN (
28782     +        '16 TO 24' ,'65+'
28783     +         ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ) THEN _BRANCH_ = 2;
28784     +    END;
MPRINT(EM_DIAGRAM):   END;
28785     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28786     +       _ARB_F_ + -106295.8826;
MPRINT(EM_DIAGRAM):   _ARB_F_ + -106295.8826;
28787     +      END;
MPRINT(EM_DIAGRAM):   END;
28788     +    END;
MPRINT(EM_DIAGRAM):   END;
28789     +  END;
MPRINT(EM_DIAGRAM):   END;
28790     +
28791     +********** LEAF    74  NODE   448 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 74 NODE 448 ***************;
28792     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28793     +
28794     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28795     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28796     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28797     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28798     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28799     +    END;
MPRINT(EM_DIAGRAM):   END;
28800     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28801     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28802     +    ELSE IF _ARBFMT_19 NOTIN (
28803     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28804     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28805     +  END;
MPRINT(EM_DIAGRAM):   END;
28806     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28807     +
28808     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28809     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28810     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28811     +      IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' ,
28812     +      '2003' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' , '2003' ) THEN DO;
28813     +       _BRANCH_ =    1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 1;
28814     +      END;
MPRINT(EM_DIAGRAM):   END;
28815     +    IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28816     +       IF MISSING( Date  ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   IF MISSING( Date ) THEN _BRANCH_ = 1;
28817     +      ELSE IF _ARBFMT_10 NOTIN (
28818     +        '2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' ,'2003' ,'2005' ,
28819     +        '2007' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012'
28820     +         ) THEN _BRANCH_ = 1;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_10 NOTIN ( '2000' ,'2004' ,'2006' ,'2013' ,'2001' ,'2002' ,'2003' ,'2005' , '2007' ,'2010' ,'2008' ,'2009' ,'2011' ,'2012' ) THEN _BRANCH_ = 1;
28821     +    END;
MPRINT(EM_DIAGRAM):   END;
28822     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28823     +       _ARB_F_ + 6316.0438229;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 6316.0438229;
28824     +      END;
MPRINT(EM_DIAGRAM):   END;
28825     +    END;
MPRINT(EM_DIAGRAM):   END;
28826     +  END;
MPRINT(EM_DIAGRAM):   END;
28827     +
28828     +********** LEAF    75  NODE   449 ***************;
MPRINT(EM_DIAGRAM):   ********** LEAF 75 NODE 449 ***************;
28829     +IF _ARB_BADF_ EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARB_BADF_ EQ 0 THEN DO;
28830     +
28831     +  _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28832     +  _ARBFMT_19 = PUT( Age_group , $19.);
MPRINT(EM_DIAGRAM):   _ARBFMT_19 = PUT( Age_group , $19.);
28833     +   %DMNORMIP( _ARBFMT_19);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_19,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28834     +    IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_19 IN ('25 TO 44' ,'45 TO 64' ) THEN DO;
28835     +     _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28836     +    END;
MPRINT(EM_DIAGRAM):   END;
28837     +  IF _BRANCH_ LT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ LT 0 THEN DO;
28838     +     IF MISSING( Age_group  ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   IF MISSING( Age_group ) THEN _BRANCH_ = 2;
28839     +    ELSE IF _ARBFMT_19 NOTIN (
28840     +      '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64'
28841     +       ) THEN _BRANCH_ = 2;
MPRINT(EM_DIAGRAM):   ELSE IF _ARBFMT_19 NOTIN ( '16 TO 24' ,'65+' ,'25 TO 44' ,'45 TO 64' ) THEN _BRANCH_ = 2;
28842     +  END;
MPRINT(EM_DIAGRAM):   END;
28843     +  IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28844     +
28845     +    _BRANCH_ = -1;
MPRINT(EM_DIAGRAM):   _BRANCH_ = -1;
28846     +    _ARBFMT_10 = PUT( Date , $10.);
MPRINT(EM_DIAGRAM):   _ARBFMT_10 = PUT( Date , $10.);
28847     +     %DMNORMIP( _ARBFMT_10);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
28848     +      IF _ARBFMT_10 IN ('2005' ,'2007' ,'2010' ,'2008' ,'2009' ,'2011' ,
28849     +      '2012' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_10 IN ('2005' ,'2007' ,'2010' ,'2008' ,'2009' ,'2011' , '2012' ) THEN DO;
28850     +       _BRANCH_ =    2;
MPRINT(EM_DIAGRAM):   _BRANCH_ = 2;
28851     +      END;
MPRINT(EM_DIAGRAM):   END;
28852     +
28853     +    IF _BRANCH_ GT 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _BRANCH_ GT 0 THEN DO;
28854     +       _ARB_F_ + 164425.54517;
MPRINT(EM_DIAGRAM):   _ARB_F_ + 164425.54517;
28855     +      END;
MPRINT(EM_DIAGRAM):   END;
28856     +    END;
MPRINT(EM_DIAGRAM):   END;
28857     +  END;
MPRINT(EM_DIAGRAM):   END;
28858     +P_Sum_Labor_Force_Pop  = _ARB_F_;
MPRINT(EM_DIAGRAM):   P_Sum_Labor_Force_Pop = _ARB_F_;
28859     +
28860     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
28861     +IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop  = .;
MPRINT(EM_DIAGRAM):   IF MISSING( Sum_Labor_Force_Pop ) THEN R_Sum_Labor_Force_Pop = .;
28862     +ELSE R_Sum_Labor_Force_Pop  = Sum_Labor_Force_Pop  - P_Sum_Labor_Force_Pop ;
MPRINT(EM_DIAGRAM):   ELSE R_Sum_Labor_Force_Pop = Sum_Labor_Force_Pop - P_Sum_Labor_Force_Pop ;
28863     +
28864     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
28865     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
28866     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
28867     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
28868      run;
 
NOTE: DATA STEP view saved on file EMWS1.BOOST_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
28869      quit;
28870      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
28872      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
28873      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
28874      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1595 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 1595 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
28875      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
28876      * Boost: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Boost: Computing metadata for TRAIN data;
28877      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Boost_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Boost_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Boost_TRAIN out=WORK.M0G2OUH_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0G2OUH_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0G2OUH_(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0G2OUH_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0G2OUH_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1P46TN_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1J2XDI5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   set WORK.M1P46TN_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Boost";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("SUM_LABOR_FORCE_POP") model = "Boost";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "AGE_GROUP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "DATE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "POPULATION_IN_THOUSANDS" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_SUM_LABOR_FORCE_POP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
29237      data EMWS1.Boost_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMINFO;
29238      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
29239      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
29240      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS1.BOOST_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
29244      run;
29245      proc sort data = EMWS1.Boost_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Boost_EMINFO NOTHREADS;
29246      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
29247      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.BOOST_EMINFO.
NOTE: The data set EMWS1.BOOST_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29248      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
29249      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
29250      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29251      proc sort data = EMWS1.Boost_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Boost_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
29252      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
29253      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.BOOST_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29254      data EMWS1.Boost_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMINFO;
29255      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
29256      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
29257      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.BOOST_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29258      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
29259      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
29260      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
29261      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS1.BOOST_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 21, 2019" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15:11:56" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                November 21, 2019
Time:                15:11:56
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1CYKYOT "C:\Users\student\Desktop\AA490\Project\AA490_Project\Modeling\Labor Force Model\Workspaces\EMWS1\Boost\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1CYKYOT new;
MPRINT(EM_DIAGRAM):   run;
29285      data EMWS1.Boost_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMOUTFIT;
29286      set EMWS1.Boost_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMOUTFIT;
29287      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
29288      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
29289      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable TargetLabel is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.BOOST_EMOUTFIT.
NOTE: The data set EMWS1.BOOST_EMOUTFIT has 1 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29290      proc sort data=EMWS1.Boost_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Boost_EMREPORTFIT nothreads;
29291      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
29292      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS1.BOOST_EMREPORTFIT.
NOTE: The data set EMWS1.BOOST_EMREPORTFIT has 8 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29293      %let _EMwarndup = 0;
29294      %let _EMtargetdup =;
29295      %let _EMASEtargetdup =;
29296      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
29297      set EMWS1.Boost_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMOUTFIT;
29298      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
29299      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
29300      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
29301      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
29302      end;
MPRINT(EM_DIAGRAM):   end;
29303      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS1.BOOST_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29304      %let EMEXCEPTIONSTRING=;
29305      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
29306      * REPORT: Boost;
MPRINT(EM_DIAGRAM):   * REPORT: Boost;
29307      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29308      %let EM_ACTION = REPORT;
29309      %let syscc = 0;
29310      %macro main;
29311
29312        filename temp catalog 'sashelp.emmodl.boost_macros.source';
29313        %include temp;
29314        filename temp;
29315
29316        %setProperties;
29317
29318        %if %upcase(&EM_ACTION) = CREATE %then %do;
29319          filename temp catalog 'sashelp.emmodl.boost_create.source';
29320          %include temp;
29321          filename temp;
29322
29323          %create;
29324        %end;
29325
29326         %else
29327         %if %upcase(&EM_ACTION) = TRAIN %then %do;
29328
29329             filename temp catalog 'sashelp.emmodl.boost_train.source';
29330             %include temp;
29331             filename temp;
29332             %train;
29333         %end;
29334
29335        %else
29336        %if %upcase(&EM_ACTION) = SCORE %then %do;
29337          filename temp catalog 'sashelp.emmodl.boost_score.source';
29338          %include temp;
29339          filename temp;
29340
29341          %score;
29342
29343        %end;
29344
29345        %else
29346        %if %upcase(&EM_ACTION) = REPORT %then %do;
29347
29348             filename temp catalog 'sashelp.emmodl.boost_report.source';
29349             %include temp;
29350             filename temp;
29351
29352             %report;
29353         %end;
29354
29355         %doendm:
29356      %mend main;
29357
29358      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_MACROS.SOURCE.
29359     +
29360     +%macro SetProperties;
29361     +
29362     +     /* boost options */
29363     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONS,   value=50, global=Y);
29364     +     %em_checkmacro(name=EM_PROPERTY_TRAINPROPORTION,   value=60, global=Y);
29365     +     %em_checkmacro(name=EM_PROPERTY_CATEGORICALBINS, value=30, global=Y);
29366     +     %em_checkmacro(name=EM_PROPERTY_INTERVALBINS, value=100, global=Y);
29367     +     %em_checkmacro(name=EM_PROPERTY_HUBER, value=NO, global=Y);
29368     +     %em_checkmacro(name=EM_PROPERTY_SEED,   value=12345, global=Y);
29369     +     %em_checkmacro(name=EM_PROPERTY_SHRINKAGE,   value=0.1, global=Y);
29370     +     %em_checkmacro(name=EM_PROPERTY_LEAFFRACTION,   value=0.1, global=Y);
29371     +     %em_checkmacro(name=EM_PROPERTY_SPLITSIZE,   value=., global=Y);
29372     +     %em_checkmacro(name=EM_PROPERTY_NODESIZE,   value=20000, global=Y);
29373     +     %em_checkmacro(name=EM_PROPERTY_SUBSERIES,   value=BEST, global=Y);
29374     +     %em_checkmacro(name=EM_PROPERTY_ITERATIONNUM,   value=1, global=Y);
29375     +
29376     +     %em_checkmacro(name=EM_PROPERTY_PRECISION,    value=0, global=Y);
29377     +     %em_checkmacro(name=EM_PROPERTY_MISSING,      value=USEINSEARCH, global=Y);
29378     +     %em_checkmacro(name=EM_PROPERTY_MINCATSIZE, value=5, global=Y);
29379     +     %em_checkmacro(name=EM_PROPERTY_MAXBRANCH,  value=2, global=Y);
29380     +     %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,   value=2, global=Y);
29381     +     %em_checkmacro(name=EM_PROPERTY_REUSEVAR,   value=1, global=Y);
29382     +     %em_checkmacro(name=EM_PROPERTY_EXHAUSTIVE,   value=5000, global=Y);
29383     +     %em_checkmacro(name=EM_PROPERTY_PERFORMANCE,   value=DISK, global=Y);
29384     +
29385     +     %em_checkmacro(name=EM_PROPERTY_ASSESSMEASURE, value=PROFIT, global=Y);
29386     +     %em_checkmacro(name=EM_PROPERTY_MEASURE, value=PROFIT, global=Y);
29387     +     %em_checkmacro(name=EM_PROPERTY_NSURRS, value=0, global=Y);
29388     +     %em_checkmacro(name=EM_PROPERTY_VARSELECTION, value=Y, global=Y);
29389     +
29390     +     %em_checkmacro(name=EM_PROPERTY_OBSIMPORTANCE, value=N, global=Y);
29391     +     %em_checkmacro(name=EM_PROPERTY_NUMSINGLEIMP, value=5, global=Y);
29392     +     %em_checkmacro(name=EM_PROPERTY_NUMPAIRIMP, value=0, global=Y);
29393     +
29394     +%mend SetProperties;
29395     +
29396     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.boost_report.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.BOOST_REPORT.SOURCE.
29397     +%macro generateObsImportance;
29398     +
29399     +  %EM_GETNAME(key=MODEL, type=DATA);
29400     +  %EM_GETNAME(key=IMPORTANCE, type=DATA);
29401     +  %EM_GETNAME(key=OBSIMPFIT, type=DATA);
29402     +
29403     +  proc arbor proc=treeboost inmodel=&EM_USER_MODEL;
29404     +    importance data=&EM_IMPORT_DATA out=_NULL_ outfit=&EM_USER_OBSIMPFIT nvars=&EM_PROPERTY_NUMSINGLEIMP n2way=&EM_PROPERTY_NUMPAIRIMP;
29405     +  run;
29406     +  quit;
29407     +
29408     +%mend generateObsImportance;
29409     +
29410     +%macro report;
29411     +
29412     +  /* create observation based importance statistics */
29413     +  %EM_GETNAME(key=OBSIMPFIT, type=DATA);
29414     +
29415     +  %if &EM_PROPERTY_OBSIMPORTANCE eq Y %then %do;
29416     +     %generateObsImportance;
29417     +
29418     +     data &EM_USER_OBSIMPFIT;
29419     +       set &EM_USER_OBSIMPFIT;
29420     +       label _ASE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_avgsquareerror_title, noquote))"
29421     +             _DFT_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, noquote))"
29422     +             _DIV_  = "%sysfunc(sasmsg(sashelp.dmine,  stat_div_vlabel , noquote))"
29423     +             _MAX_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_maxabserror_vlabel, noquote))"
29424     +             _MISC_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_title, noquote))"
29425     +             _NOBS_ = "%sysfunc(sasmsg(sashelp.dmine,  stat_nobs_vlabel, noquote))"
29426     +             _NW_   = "%sysfunc(sasmsg(sashelp.dmine,  rpt_nleaves_vlabel , noquote))"
29427     +             _RASE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_rootavgsqerror_vlabel, noquote))"
29428     +             _SSE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_sumsqerror_vlabel, noquote))"
29429     +             _SUMW_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sumw, noquote))"
29430     +       ;
29431     +     run;
29432     +  %end;
29433     +
29434     +  %else %do;
29435     +     %let exist_flag = %sysfunc(exist(&EM_USER_OBSIMPFIT, DATA));
29436     +     %if &exist_flag eq 1 %then %do;
29437     +        proc datasets lib=&EM_LIB nolist;
29438     +          delete &EM_NODEID._OBSIMPFIT;
29439     +        run;
29440     +        quit;
29441     +     %end;
29442     +  %end;
29443     +
29444     +  /* build reports based on observation importance */
29445     +  %em_report(key=OBSIMPFIT, viewtype=DATA, block=MODEL, DESCRIPTION=OBSIMPFIT, AUTODISPLAY=N);
29446     +
29447     +%mend report;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(REPORT):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OBSIMPFIT";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "OBSIMPFIT";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.05062869566056;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(REPORT):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End REPORT: Boost;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
29448      *------------------------------------------------------------*;
29449      * End REPORT: Boost;
29450      *------------------------------------------------------------*;
29451
 
29452      /* Reset EM Options */
29453      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):    options formchar="|----|+|---+=|-/\<>*";
29454      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
29455      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
29456      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
29457      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
29458      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29459      proc sort data=EMWS1.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Part_CMeta_TRAIN out=WORK.SUBSETINMETA;
29460      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29461      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.PART_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 6 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
29462      proc sort data=EMWS1.Boost_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Boost_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
29463      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29464      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set EMWS1.BOOST_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 6 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
29465      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
29466      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
29467      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
29468      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 6 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 6 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
29469      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
29470      set EMWS1.Boost_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_CMeta_TRAIN;
29471      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
29472      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.BOOST_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
29473      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
29474      set EMWS1.Boost_TRAIN(keep=
29475      P_Sum_Labor_Force_Pop
29476      R_Sum_Labor_Force_Pop
29477      _WARN_
29478      Sum_Labor_Force_Pop
29479      );
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_TRAIN(keep= P_Sum_Labor_Force_Pop R_Sum_Labor_Force_Pop _WARN_ Sum_Labor_Force_Pop );
29480      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS1.BOOST_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 588 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 588 observations read from the data set EMWS1.BOOST_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 588 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Boost: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Boost_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Sum_Labor_Force_Pop
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Boost_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.BoostBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.BoostBOXDATA out=WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.BoostBOXDATA out=WORK.BoostBOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.BoostBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Sum_Labor_Force__DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Sum_Labor_Force_Pop") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Sum_Labor_Force_Pop") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Sum_Labor_Force_Pop _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Sum_Labor_Force_Pop") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Sum_Labor_Force_Pop") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Sum_Labor_Force_Pop Sum_Labor_Force_Pop _tmpfreqvar_ WHERE = (Sum_Labor_Force_Pop > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Sum_Labor_Force_Pop ;
MPRINT(EM_ASSESS):   VAR Sum_Labor_Force_Pop ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Sum_Labor_Force_Pop" DATAROLE "TRAIN" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0 RMAXTGT1
- RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Sum_Labor_Force_Pop = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Sum_Labor_Force_Pop - 1799153.3277) / 550963.282965), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 588);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 12818418.987;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 550963.282965;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
33811      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
33812      set EMWS1.Boost_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_CMeta_TRAIN;
33813      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
33814      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS1.BOOST_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 3 observations and 21 variables.
The SAS System
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
33815      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
33816      set EMWS1.Boost_VALIDATE(keep=
33817      P_Sum_Labor_Force_Pop
33818      R_Sum_Labor_Force_Pop
33819      _WARN_
33820      Sum_Labor_Force_Pop
33821      );
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_VALIDATE(keep= P_Sum_Labor_Force_Pop R_Sum_Labor_Force_Pop _WARN_ Sum_Labor_Force_Pop );
33822      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: View EMWS1.BOOST_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 252 observations read from the data set EMWS1.PART_VALIDATE.
NOTE: There were 252 observations read from the data set EMWS1.BOOST_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 252 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    data WORK._RESMETA;
MPRINT(EM_DIAGRAM):   length NAME $32 LEVEL $8 ROLE $32 type $1;
MPRINT(EM_DIAGRAM):   NAME="R_Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   ROLE='INPUT';
MPRINT(EM_DIAGRAM):   LEVEL='INTERVAL';
MPRINT(EM_DIAGRAM):   TYPE='N';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Boost: STDIZE Variables Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Boost: Computing Summary Statistics;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc stdize data = EM_temp_assessdata out=_null_ outstat=WORK.Boost_STAT add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=( 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100 ) ;
MPRINT(EM_DIAGRAM):   var
MPRINT(STDIZEVAR):   R_Sum_Labor_Force_Pop
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.Boost_STAT;
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION', 'SCALE', 'P0', 'P5', 'P10', 'P15', 'P20' 'P25', 'P50', 'P75', 'P80', 'P85', 'P90', 'P95', 'P100');
MPRINT(EM_DIAGRAM):   if _TYPE_ = 'LOCATION' then _TYPE_='MEAN';
MPRINT(EM_DIAGRAM):   else if _TYPE_ = 'SCALE' then _TYPE_='STD';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.BoostBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.BoostBOXDATA out=WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   id _TYPE_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   set WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   UPPERWHISKER = P75 + 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   LOWERWHISKER = P25 - 1.5*abs(P75 - P25);
MPRINT(EM_DIAGRAM):   if P100<=UPPERWHISKER then do;
MPRINT(EM_DIAGRAM):   UPPERWHISKER=P100;
MPRINT(EM_DIAGRAM):   P100=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if P95<=UPPERWHISKER then P95=.;
MPRINT(EM_DIAGRAM):   if P90<=UPPERWHISKER then P90=.;
MPRINT(EM_DIAGRAM):   if P85<=UPPERWHISKER then P85=.;
MPRINT(EM_DIAGRAM):   if P80<=UPPERWHISKER then P80=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P0 then do;
MPRINT(EM_DIAGRAM):   LOWERWHISKER=P0;
MPRINT(EM_DIAGRAM):   P0=.;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P20 then P20=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P15 then P15=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P10 then P10=.;
MPRINT(EM_DIAGRAM):   if LOWERWHISKER<=P5 then P5=.;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.BoostBOXDATA out=WORK.BoostBOXDATA(rename=(COL1=VALUE _name_=_VARIABLE_)) NAME=XLABEL;
MPRINT(EM_DIAGRAM):   by _NAME_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   length XLABEL $12;
MPRINT(EM_DIAGRAM):   set WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   label _VARIABLE_=;
MPRINT(EM_DIAGRAM):   label XLABEL=;
MPRINT(EM_DIAGRAM):   where VALUE ne .;
MPRINT(EM_DIAGRAM):   if XLABEL in('P100', 'P95', 'P90', 'P85', 'P80', 'P20', 'P15', 'P10', 'P5', 'P0') then XLABEL = 'OUTLIER';
MPRINT(EM_DIAGRAM):   else if XLABEL='P50' then XLABEL='MEDIAN';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.BoostBOXDATA NOTHREADS;
MPRINT(EM_DIAGRAM):   by VALUE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   length TARGET $32 TARGETLABEL $200 DATAROLE $32;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label targetlabel = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   label VALUE = "Value";
MPRINT(EM_DIAGRAM):   label XLABEL = "Box Plot Marker";
MPRINT(EM_DIAGRAM):   label _VARIABLE_ = "Residual Variable";
MPRINT(EM_DIAGRAM):   set WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   TARGET = substr(_VARIABLE_, 3);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Boost_EMRESIDUAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMRESIDUAL WORK.BoostBOXDATA;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_Sum_Labor_Force__DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("Sum_Labor_Force_Pop") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("Sum_Labor_Force_Pop") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D ;
 
 
MPRINT(EM_ASSESS):   VAR P_Sum_Labor_Force_Pop _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA _NULL_ ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
 
MPRINT(EM_ASSESS):   RETAIN CUMFREQ 0;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE("P_Sum_Labor_Force_Pop") THEN CUMFREQ + N ;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_TARGET", " " );
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", 0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", "INTERVAL");
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_Sum_Labor_Force_Pop") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *... Start of Interval Depvar Case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............. IF THERE IS FREQ VARIABLE OUTDIST INTERVAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ea_tmpdata (KEEP = P_Sum_Labor_Force_Pop Sum_Labor_Force_Pop _tmpfreqvar_ WHERE = (Sum_Labor_Force_Pop > .)) NWAY;
MPRINT(EM_ASSESS):   CLASS P_Sum_Labor_Force_Pop ;
MPRINT(EM_ASSESS):   VAR Sum_Labor_Force_Pop ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET MIN = _MINTARGET MAX = _MAXTARGET ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... ADD BINS TO DATA ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ..... INTERVAL TARGET CASE ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST ( KEEP = TARGET P_LABEL LOWP UPP SCORE N _TARGETMEAN_ BIN _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_ _MAXP_ ) WORK._TEMPRANK (KEEP = BIN TARGET DATAROLE DECILE N _TARGETMEAN_ _TARGETMIN_ _TARGETMAX_ _MEANP_ _MINP_
_MAXP_ ) ;
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... START OF RETAIN AREA. CONTINOUS DEP VAR ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RETAIN TARGET "Sum_Labor_Force_Pop" DATAROLE "VALIDATE" NUMOBS1 - NUMOBS20 0 MAXTGT1 - MAXTGT20 . MINTGT1 - MINTGT20 . MNTGT1 - MNTGT20 0 MAXPTGT1 - MAXPTGT20 . MINPTGT1 - MINPTGT20 . MNPTGT1 - MNPTGT20 0 RNUMOBS1 - RNUMOBS20 0
RMAXTGT1 - RMAXTGT20 . RMINTGT1 - RMINTGT20 . RMNTGT1 - RMNTGT20 0 RMAXPTGT1 - RMAXPTGT20 . RMINPTGT1 - RMINPTGT20 . RMNPTGT1 - RMNPTGT20 0 ;
MPRINT(EM_ASSESS):   DROP _FREQ_ N1 NUMOBS1 - NUMOBS20 MAXTGT1 - MAXTGT20 MINTGT1 - MINTGT20 MNTGT1 - MNTGT20 MAXPTGT1 - MAXPTGT20 MINPTGT1 - MINPTGT20 MNPTGT1 - MNPTGT20 RNUMOBS1 - RNUMOBS20 RMAXTGT1 - RMAXTGT20 RMINTGT1 - RMINTGT20 RMNTGT1 - RMNTGT20
RMAXPTGT1 - RMAXPTGT20 RMINPTGT1 - RMINPTGT20 RMNPTGT1 - RMNPTGT20 ;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY MAXTGTS (20) MAXTGT1 - MAXTGT20;
MPRINT(EM_ASSESS):   ARRAY MINTGTS (20) MINTGT1 - MINTGT20;
MPRINT(EM_ASSESS):   ARRAY MNTGTS (20) MNTGT1 - MNTGT20;
MPRINT(EM_ASSESS):   ARRAY MAXPTGTS (20) MAXPTGT1 - MAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY MINPTGTS (20) MINPTGT1 - MINPTGT20;
MPRINT(EM_ASSESS):   ARRAY MNPTGTS (20) MNPTGT1 - MNPTGT20;
MPRINT(EM_ASSESS):   ARRAY RNUMOBSS (20) RNUMOBS1 - RNUMOBS20;
MPRINT(EM_ASSESS):   ARRAY RMAXTGTS (20) RMAXTGT1 - RMAXTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINTGTS (20) RMINTGT1 - RMINTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNTGTS (20) RMNTGT1 - RMNTGT20;
MPRINT(EM_ASSESS):   ARRAY RMAXPTGTS (20) RMAXPTGT1 - RMAXPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMINPTGTS (20) RMINPTGT1 - RMINPTGT20;
MPRINT(EM_ASSESS):   ARRAY RMNPTGTS (20) RMNPTGT1 - RMNPTGT20;
MPRINT(EM_ASSESS):   IF _MEANTARGET > . THEN Sum_Labor_Force_Pop = _MEANTARGET ;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   N1 + _FREQ_;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .......... Outdist Processing For Interval Target;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCRBIN = MIN (CEIL (( P_Sum_Labor_Force_Pop - 1799153.3277) / 550963.282965), 20);
MPRINT(EM_ASSESS):   IF SCRBIN <= 0 THEN SCRBIN = 1;
MPRINT(EM_ASSESS):   SCRBIN = 20 + 1 - SCRBIN;
MPRINT(EM_ASSESS):   NUMOBSS ( SCRBIN) = SUM (NUMOBSS ( SCRBIN) , _FREQ_ );
MPRINT(EM_ASSESS):   MNTGTS ( SCRBIN) = SUM (MNTGTS ( SCRBIN), Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   MAXTGTS ( SCRBIN) = MAX (MAXTGTS (SCRBIN), _MAXTARGET);
MPRINT(EM_ASSESS):   MINTGTS ( SCRBIN) = MIN (MINTGTS (SCRBIN), _MINTARGET);
MPRINT(EM_ASSESS):   MAXPTGTS ( SCRBIN) = MAX (MAXPTGTS ( SCRBIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   MINPTGTS ( SCRBIN) = MIN (MINPTGTS ( SCRBIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   MNPTGTS ( SCRBIN) = SUM (MNPTGTS ( SCRBIN), P_Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   BIN = CEIL (N1 * 20 / 252);
MPRINT(EM_ASSESS):   IF BIN <= 0 THEN BIN = 1;
MPRINT(EM_ASSESS):   IF BIN > 20 THEN BIN = 20;
MPRINT(EM_ASSESS):   IF BIN < 1 THEN BIN = 1;
MPRINT(EM_ASSESS):   BIN = 21 - BIN;
MPRINT(EM_ASSESS):   RNUMOBSS ( BIN) = SUM (RNUMOBSS ( BIN) , _FREQ_ );
MPRINT(EM_ASSESS):   RMNTGTS ( BIN) = SUM (RMNTGTS ( BIN), Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   RMAXTGTS ( BIN) = MAX (RMAXTGTS (BIN), _MAXTARGET);
MPRINT(EM_ASSESS):   RMINTGTS ( BIN) = MIN (RMINTGTS (BIN), _MINTARGET);
MPRINT(EM_ASSESS):   RMAXPTGTS ( BIN) = MAX (RMAXPTGTS ( BIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   RMINPTGTS ( BIN) = MIN (RMINPTGTS ( BIN), P_Sum_Labor_Force_Pop);
MPRINT(EM_ASSESS):   RMNPTGTS ( BIN) = SUM (RMNPTGTS ( BIN), P_Sum_Labor_Force_Pop * _FREQ_);
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Start of Outdist Area, Continuous Dep Var;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   UPP = 12818418.987;
MPRINT(EM_ASSESS):   DO SCRBIN = 1 TO 20;
MPRINT(EM_ASSESS):   LOWP = UPP - 550963.282965;
MPRINT(EM_ASSESS):   N = NUMOBSS (SCRBIN);
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = MNTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = MNPTGTS (SCRBIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = MINTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = MAXTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MINP_ = MINPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   _MAXP_ = MAXPTGTS (SCRBIN);
MPRINT(EM_ASSESS):   SCORE = MEAN (UPP, LOWP);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (LOWP, 12.3)) || " - " || COMPBL (PUT (UPP, 12.3));
MPRINT(EM_ASSESS):   BIN = SCRBIN;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   UPP = LOWP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO SCRBIN = .... ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Output Outranks Continuous Case ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO BIN = 1 TO 20;
MPRINT(EM_ASSESS):   N = RNUMOBSS (BIN);
MPRINT(EM_ASSESS):   DECILE = BIN * 100 / 20;
MPRINT(EM_ASSESS):   IF N > 0 THEN DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = RMNTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   _MEANP_ = RMNPTGTS (BIN) / N ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   _TARGETMEAN_ = .;
MPRINT(EM_ASSESS):   _MEANP_ = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   _TARGETMIN_ = RMINTGTS (BIN);
MPRINT(EM_ASSESS):   _TARGETMAX_ = RMAXTGTS (BIN);
MPRINT(EM_ASSESS):   _MINP_ = RMINPTGTS (BIN);
MPRINT(EM_ASSESS):   _MAXP_ = RMAXPTGTS (BIN);
MPRINT(EM_ASSESS):   P_LABEL = COMPBL (PUT (_MINP_, 12.3)) || " - " || COMPBL (PUT (_MAXP_, 12.3));
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... DO _K = 1 TO DECILEBIN ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..... IF EOF ;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" _TARGETMAX_ = "Max Target" _TARGETMEAN_= "Mean Target" _TARGETMIN_ = "Min Target" DATAROLE = "Data Role" N = "Number of Observations"
TARGET = "Target Variable" LOWP = "Lower Bound" UPP = "Upper Bound" score = "Model Score" scrbin = "Bin" DECILE = "Depth" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...................... End Of Interval Processing;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Range for Predicted" _MEANP_ = "Mean Predicted" _MINP_ = "Min Predicted" _MAXP_ = "Max Predicted" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "Sum_Labor_Force_Pop";
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length P_LABEL $27;
MPRINT(EM_DIAGRAM):   set EMWS1.Boost_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
38163      %let _cn = %sysfunc(getoption(CENTER));
38164      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
38165      proc print data=EMWS1.Boost_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMREPORTFIT noobs label;
38166      var STAT LABEL TRAIN
38167      VALIDATE
38168      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
38169      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
38170      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38171      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
38172      run;
 
NOTE: There were 8 observations read from the data set EMWS1.BOOST_EMREPORTFIT.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted by the "BEST" format.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38173      title10;
MPRINT(EM_DIAGRAM):   title10;
38174      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
38175      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
38176      modify Boost_EMRANK;
MPRINT(EM_DIAGRAM):   modify Boost_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
38177      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
38178      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
38179      run;
 
NOTE: MODIFY was successful for EMWS1.BOOST_EMRANK.DATA.
38180      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
38181      %let _cn = %sysfunc(getoption(CENTER));
38182      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
38183      proc print data=EMWS1.Boost_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMRANK label noobs;
38184      var
38185      decile N _targetMean_ _meanP_;
MPRINT(EM_DIAGRAM):   var decile N _targetMean_ _meanP_;
38186      by
38187      notsorted DATAROLE
38188      notsorted TARGET
38189      notsorted TARGETLABEL
38190      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
38191      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
38192      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
38193      run;
 
NOTE: There were 39 observations read from the data set EMWS1.BOOST_EMRANK.
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
38194      title10;
MPRINT(EM_DIAGRAM):   title10;
38195      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
38196      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS1 nolist;
38197      modify Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Boost_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
38198      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
38199      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
38200      run;
 
NOTE: MODIFY was successful for EMWS1.BOOST_EMSCOREDIST.DATA.
38201      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS1.Boost_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label _targetMean_ _meanp_ n score;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "Sum_Labor_Force_Pop" );
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
